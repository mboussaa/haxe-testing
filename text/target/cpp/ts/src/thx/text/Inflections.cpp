// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Lambda
#include <Lambda.h>
#endif
#ifndef INCLUDED_thx_text_Inflections
#include <thx/text/Inflections.h>
#endif

namespace thx{
namespace text{

void Inflections_obj::__construct() { }

Dynamic Inflections_obj::__CreateEmpty() { return new Inflections_obj; }

hx::ObjectPtr< Inflections_obj > Inflections_obj::__new()
{
	hx::ObjectPtr< Inflections_obj > _hx_result = new Inflections_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Inflections_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Inflections_obj > _hx_result = new Inflections_obj();
	_hx_result->__construct();
	return _hx_result;
}

::String Inflections_obj::pluralize(::String singular){
            	HX_STACK_FRAME("thx.text.Inflections","pluralize",0x7118fbe1,"thx.text.Inflections.pluralize","thx/text/Inflections.hx",37,0xef48e0bf)
            	HX_STACK_ARG(singular,"singular")
HXLINE(  37)		return ::thx::text::Inflections_obj::process(singular,::thx::text::Inflections_obj::plural_rules);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Inflections_obj,pluralize,return )

::String Inflections_obj::singularize(::String plural){
            	HX_STACK_FRAME("thx.text.Inflections","singularize",0x4d61ebae,"thx.text.Inflections.singularize","thx/text/Inflections.hx",40,0xef48e0bf)
            	HX_STACK_ARG(plural,"plural")
HXLINE(  40)		return ::thx::text::Inflections_obj::process(plural,::thx::text::Inflections_obj::singular_rules);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Inflections_obj,singularize,return )

::String Inflections_obj::process(::String word,::Array< ::Dynamic> rules){
            	HX_STACK_FRAME("thx.text.Inflections","process",0x9d0842c0,"thx.text.Inflections.process","thx/text/Inflections.hx",42,0xef48e0bf)
            	HX_STACK_ARG(word,"word")
            	HX_STACK_ARG(rules,"rules")
HXLINE(  43)		Bool _hx_tmp = ::Lambda_obj::has(::thx::text::Inflections_obj::uncountable_words,word);
HXDLIN(  43)		if (_hx_tmp) {
HXLINE(  44)			return word;
            		}
HXLINE(  45)		{
HXLINE(  45)			HX_VARI( Int,_g) = (int)0;
HXDLIN(  45)			while((_g < rules->length)){
HXLINE(  45)				HX_VARI(  ::Dynamic,rule) = rules->__get(_g);
HXDLIN(  45)				++_g;
HXLINE(  46)				Bool _hx_tmp1 = ( ( ::EReg)(rule->__Field(HX_("pattern",50,06,77,11),hx::paccDynamic)) )->match(word);
HXDLIN(  46)				if (_hx_tmp1) {
HXLINE(  47)					return ( ( ::EReg)(rule->__Field(HX_("pattern",50,06,77,11),hx::paccDynamic)) )->replace(word, ::Dynamic(rule->__Field(HX_("replace",34,48,28,ab),hx::paccDynamic)));
            				}
            			}
            		}
HXLINE(  48)		return word;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Inflections_obj,process,return )

::Array< ::String > Inflections_obj::uncountable_words;

::Array< ::Dynamic> Inflections_obj::plural_rules;

::Array< ::Dynamic> Inflections_obj::singular_rules;


Inflections_obj::Inflections_obj()
{
}

bool Inflections_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"process") ) { outValue = process_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"pluralize") ) { outValue = pluralize_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"singularize") ) { outValue = singularize_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"plural_rules") ) { outValue = plural_rules; return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"singular_rules") ) { outValue = singular_rules; return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"uncountable_words") ) { outValue = uncountable_words; return true; }
	}
	return false;
}

bool Inflections_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"plural_rules") ) { plural_rules=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"singular_rules") ) { singular_rules=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"uncountable_words") ) { uncountable_words=ioValue.Cast< ::Array< ::String > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Inflections_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Inflections_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Inflections_obj::uncountable_words,HX_HCSTRING("uncountable_words","\x1a","\x17","\xc7","\xec")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Inflections_obj::plural_rules,HX_HCSTRING("plural_rules","\xbc","\xc2","\x87","\x17")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Inflections_obj::singular_rules,HX_HCSTRING("singular_rules","\x4f","\x0f","\x59","\x27")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Inflections_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Inflections_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Inflections_obj::uncountable_words,"uncountable_words");
	HX_MARK_MEMBER_NAME(Inflections_obj::plural_rules,"plural_rules");
	HX_MARK_MEMBER_NAME(Inflections_obj::singular_rules,"singular_rules");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Inflections_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Inflections_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Inflections_obj::uncountable_words,"uncountable_words");
	HX_VISIT_MEMBER_NAME(Inflections_obj::plural_rules,"plural_rules");
	HX_VISIT_MEMBER_NAME(Inflections_obj::singular_rules,"singular_rules");
};

#endif

hx::Class Inflections_obj::__mClass;

static ::String Inflections_obj_sStaticFields[] = {
	HX_HCSTRING("pluralize","\x50","\xe5","\x75","\x22"),
	HX_HCSTRING("singularize","\xdd","\x4e","\xdf","\xbe"),
	HX_HCSTRING("process","\x6f","\xa2","\x4a","\xf1"),
	HX_HCSTRING("uncountable_words","\x1a","\x17","\xc7","\xec"),
	HX_HCSTRING("plural_rules","\xbc","\xc2","\x87","\x17"),
	HX_HCSTRING("singular_rules","\x4f","\x0f","\x59","\x27"),
	::String(null())
};

void Inflections_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.text.Inflections","\xbf","\xc7","\xf0","\xe9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Inflections_obj::__GetStatic;
	__mClass->mSetStaticField = &Inflections_obj::__SetStatic;
	__mClass->mMarkFunc = Inflections_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Inflections_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Inflections_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Inflections_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Inflections_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Inflections_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Inflections_obj::__boot()
{
{
            	HX_STACK_FRAME("thx.text.Inflections","boot",0x3091f741,"thx.text.Inflections.boot","thx/text/Inflections.hx",51,0xef48e0bf)
HXLINE(  51)		uncountable_words = ::Array_obj< ::String >::__new(11)->init(0,HX_("equipment",4e,34,85,3a))->init(1,HX_("information",6c,1a,99,94))->init(2,HX_("rice",19,56,aa,4b))->init(3,HX_("money",40,ba,5f,0c))->init(4,HX_("species",bc,7d,55,df))->init(5,HX_("series",77,6d,2d,6e))->init(6,HX_("fish",98,d4,bb,43))->init(7,HX_("sheep",9b,e2,1f,7c))->init(8,HX_("moose",9f,88,60,0c))->init(9,HX_("deer",2e,52,66,42))->init(10,HX_("news",13,84,02,49));
            	}
{
            	HX_STACK_FRAME("thx.text.Inflections","boot",0x3091f741,"thx.text.Inflections.boot","thx/text/Inflections.hx",53,0xef48e0bf)
HXLINE(  54)		 ::Dynamic _hx_tmp =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1en",36,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(m)an$",d3,63,57,dc),HX_("gi",22,5a,00,00))));
HXLINE(  55)		 ::Dynamic _hx_tmp1 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ople",e7,73,2f,e5))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(pe)rson$",18,40,6a,b8),HX_("gi",22,5a,00,00))));
HXLINE(  56)		 ::Dynamic _hx_tmp2 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ren",ee,2f,27,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(child)$",4f,41,8e,56),HX_("gi",22,5a,00,00))));
HXLINE(  57)		 ::Dynamic _hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1es",3b,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(ax|test)is$",40,fb,c9,9d),HX_("gi",22,5a,00,00))));
HXLINE(  58)		 ::Dynamic _hx_tmp4 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1i",3c,7c,1b,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(octop|vir)us$",b9,4d,31,bf),HX_("gi",22,5a,00,00))));
HXLINE(  59)		 ::Dynamic _hx_tmp5 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1es",3b,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(alias|status)$",a1,8a,89,3c),HX_("gi",22,5a,00,00))));
HXLINE(  60)		 ::Dynamic _hx_tmp6 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ses",34,f2,27,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(bu)s$",9f,bf,00,b9),HX_("gi",22,5a,00,00))));
HXLINE(  61)		 ::Dynamic _hx_tmp7 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1oes",30,e9,24,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(buffal|tomat)o$",6f,7a,e3,ec),HX_("gi",22,5a,00,00))));
HXLINE(  62)		 ::Dynamic _hx_tmp8 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1a",34,7c,1b,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([ti])um$",b8,84,90,c5),HX_("gi",22,5a,00,00))));
HXLINE(  63)		 ::Dynamic _hx_tmp9 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("ses",a1,9b,57,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("sis$",67,9a,53,4c),HX_("gi",22,5a,00,00))));
HXLINE(  64)		 ::Dynamic _hx_tmp10 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1$2ves",e9,d0,54,4c))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(?:([^f])fe|([lr])f)$",a9,b9,af,2b),HX_("gi",22,5a,00,00))));
HXLINE(  65)		 ::Dynamic _hx_tmp11 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1s",46,7c,1b,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(hive)$",73,f2,d6,d7),HX_("gi",22,5a,00,00))));
HXLINE(  66)		 ::Dynamic _hx_tmp12 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ies",aa,5b,20,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([^aeiouy]|qu)y$",18,72,0d,a9),HX_("gi",22,5a,00,00))));
HXLINE(  67)		 ::Dynamic _hx_tmp13 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1es",3b,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(x|ch|ss|sh)$",61,9a,0a,42),HX_("gi",22,5a,00,00))));
HXLINE(  68)		 ::Dynamic _hx_tmp14 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ices",d5,48,2e,e1))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(matr|vert|ind)ix|ex$",17,62,12,10),HX_("gi",22,5a,00,00))));
HXLINE(  69)		 ::Dynamic _hx_tmp15 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ice",de,59,20,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([m|l])ouse$",b6,31,fb,f9),HX_("gi",22,5a,00,00))));
HXLINE(  70)		 ::Dynamic _hx_tmp16 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1en",36,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("^(ox)$",4e,00,4d,e7),HX_("gi",22,5a,00,00))));
HXLINE(  71)		 ::Dynamic _hx_tmp17 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1zes",fb,41,2d,db))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(quiz)$",18,51,54,51),HX_("gi",22,5a,00,00))));
HXLINE(  72)		 ::Dynamic _hx_tmp18 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("s",73,00,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("s$",51,64,00,00),HX_("gi",22,5a,00,00))));
HXLINE(  53)		plural_rules = ::Array_obj< ::Dynamic>::__new(20)->init(0,_hx_tmp)->init(1,_hx_tmp1)->init(2,_hx_tmp2)->init(3,_hx_tmp3)->init(4,_hx_tmp4)->init(5,_hx_tmp5)->init(6,_hx_tmp6)->init(7,_hx_tmp7)->init(8,_hx_tmp8)->init(9,_hx_tmp9)->init(10,_hx_tmp10)->init(11,_hx_tmp11)->init(12,_hx_tmp12)->init(13,_hx_tmp13)->init(14,_hx_tmp14)->init(15,_hx_tmp15)->init(16,_hx_tmp16)->init(17,_hx_tmp17)->init(18,_hx_tmp18)->init(19, ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("s",73,00,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("$",24,00,00,00),HX_("gi",22,5a,00,00)))));
            	}
{
            	HX_STACK_FRAME("thx.text.Inflections","boot",0x3091f741,"thx.text.Inflections.boot","thx/text/Inflections.hx",76,0xef48e0bf)
HXLINE(  77)		 ::Dynamic _hx_tmp =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1an",ba,31,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(m)en$",d7,6c,5a,dc),HX_("gi",22,5a,00,00))));
HXLINE(  78)		 ::Dynamic _hx_tmp1 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1rson",2d,61,2d,e7))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(pe)ople$",1e,90,38,fc),HX_("gi",22,5a,00,00))));
HXLINE(  79)		 ::Dynamic _hx_tmp2 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(child)ren$",1e,e2,23,15),HX_("gi",22,5a,00,00))));
HXLINE(  80)		 ::Dynamic _hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1um",25,43,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([ti])a$",37,18,14,cc),HX_("gi",22,5a,00,00))));
HXLINE(  81)		 ::Dynamic _hx_tmp4 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1$2sis",a2,8d,52,4c))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$",49,7c,9e,66),HX_("gi",22,5a,00,00))));
HXLINE(  82)		 ::Dynamic _hx_tmp5 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(hive)s$",22,77,3d,04),HX_("gi",22,5a,00,00))));
HXLINE(  83)		 ::Dynamic _hx_tmp6 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(tive)s$",2e,08,3f,f7),HX_("gi",22,5a,00,00))));
HXLINE(  84)		 ::Dynamic _hx_tmp7 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1f",39,7c,1b,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([lr])ves$",a5,a1,34,c6),HX_("gi",22,5a,00,00))));
HXLINE(  85)		 ::Dynamic _hx_tmp8 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1fe",0c,36,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([^fo])ves$",40,6f,b0,dc),HX_("gi",22,5a,00,00))));
HXLINE(  86)		 ::Dynamic _hx_tmp9 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1y",4c,7c,1b,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([^aeiouy]|qu)ies$",fa,74,7e,12),HX_("gi",22,5a,00,00))));
HXLINE(  87)		 ::Dynamic _hx_tmp10 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1eries",1d,50,a4,e3))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(s)eries$",18,b3,bf,9b),HX_("gi",22,5a,00,00))));
HXLINE(  88)		 ::Dynamic _hx_tmp11 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ovie",d0,fe,33,e5))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(m)ovies$",18,f4,bc,91),HX_("gi",22,5a,00,00))));
HXLINE(  89)		 ::Dynamic _hx_tmp12 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(x|ch|ss|sh)es$",73,6b,e0,cd),HX_("gi",22,5a,00,00))));
HXLINE(  90)		 ::Dynamic _hx_tmp13 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ouse",45,45,33,e5))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("([m|l])ice$",ef,a9,d1,9d),HX_("gi",22,5a,00,00))));
HXLINE(  91)		 ::Dynamic _hx_tmp14 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(bus)es$",85,ff,55,f5),HX_("gi",22,5a,00,00))));
HXLINE(  92)		 ::Dynamic _hx_tmp15 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(o)es$",34,9a,27,03),HX_("gi",22,5a,00,00))));
HXLINE(  93)		 ::Dynamic _hx_tmp16 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(shoe)s$",87,25,80,5f),HX_("gi",22,5a,00,00))));
HXLINE(  94)		 ::Dynamic _hx_tmp17 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1is",b7,38,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(cris|ax|test)es$",69,58,ec,34),HX_("gi",22,5a,00,00))));
HXLINE(  95)		 ::Dynamic _hx_tmp18 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1us",2b,43,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(octop|vir)i$",48,31,a3,ef),HX_("gi",22,5a,00,00))));
HXLINE(  96)		 ::Dynamic _hx_tmp19 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(alias|status)es$",b3,eb,2b,9a),HX_("gi",22,5a,00,00))));
HXLINE(  97)		 ::Dynamic _hx_tmp20 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("^(ox)en",ff,7c,13,7c),HX_("gi",22,5a,00,00))));
HXLINE(  98)		 ::Dynamic _hx_tmp21 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ex",40,35,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(vert|ind)ices$",cf,bb,c5,ca),HX_("gi",22,5a,00,00))));
HXLINE(  99)		 ::Dynamic _hx_tmp22 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1ix",bc,38,f1,17))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(matr)ices$",0d,09,cb,7a),HX_("gi",22,5a,00,00))));
HXLINE( 100)		 ::Dynamic _hx_tmp23 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("$1",8d,1f,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("(quiz)zes$",48,cf,76,0e),HX_("gi",22,5a,00,00))));
HXLINE(  76)		singular_rules = ::Array_obj< ::Dynamic>::__new(25)->init(0,_hx_tmp)->init(1,_hx_tmp1)->init(2,_hx_tmp2)->init(3,_hx_tmp3)->init(4,_hx_tmp4)->init(5,_hx_tmp5)->init(6,_hx_tmp6)->init(7,_hx_tmp7)->init(8,_hx_tmp8)->init(9,_hx_tmp9)->init(10,_hx_tmp10)->init(11,_hx_tmp11)->init(12,_hx_tmp12)->init(13,_hx_tmp13)->init(14,_hx_tmp14)->init(15,_hx_tmp15)->init(16,_hx_tmp16)->init(17,_hx_tmp17)->init(18,_hx_tmp18)->init(19,_hx_tmp19)->init(20,_hx_tmp20)->init(21,_hx_tmp21)->init(22,_hx_tmp22)->init(23,_hx_tmp23)->init(24, ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("replace",34,48,28,ab),HX_("",00,00,00,00))
            			->setFixed(1,HX_("pattern",50,06,77,11), ::EReg_obj::__new(HX_("s$",51,64,00,00),HX_("gi",22,5a,00,00)))));
            	}
}

} // end namespace thx
} // end namespace text
