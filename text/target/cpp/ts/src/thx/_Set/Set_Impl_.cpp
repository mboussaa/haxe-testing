// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_thx__Set_Set_Impl_
#include <thx/_Set/Set_Impl_.h>
#endif

namespace thx{
namespace _Set{

void Set_Impl__obj::__construct() { }

Dynamic Set_Impl__obj::__CreateEmpty() { return new Set_Impl__obj; }

hx::ObjectPtr< Set_Impl__obj > Set_Impl__obj::__new()
{
	hx::ObjectPtr< Set_Impl__obj > _hx_result = new Set_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Set_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Set_Impl__obj > _hx_result = new Set_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::haxe::ds::StringMap Set_Impl__obj::createString( ::Dynamic it){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","createString",0xf8e17ada,"thx._Set.Set_Impl_.createString","thx/Set.hx",12,0xe9ced1e7)
            	HX_STACK_ARG(it,"it")
HXLINE(  13)		HX_VARI(  ::haxe::ds::StringMap,map) =  ::haxe::ds::StringMap_obj::__new();
HXLINE(  14)		HX_VARI(  ::haxe::ds::StringMap,set) = map;
HXLINE(  15)		if (hx::IsNotNull( it )) {
HXLINE(  16)			::thx::_Set::Set_Impl__obj::pushMany(set,it);
            		}
HXLINE(  17)		return set;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,createString,return )

 ::haxe::ds::IntMap Set_Impl__obj::createInt( ::Dynamic it){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","createInt",0x2b930b46,"thx._Set.Set_Impl_.createInt","thx/Set.hx",23,0xe9ced1e7)
            	HX_STACK_ARG(it,"it")
HXLINE(  24)		HX_VARI(  ::haxe::ds::IntMap,map) =  ::haxe::ds::IntMap_obj::__new();
HXLINE(  25)		HX_VARI(  ::haxe::ds::IntMap,set) = map;
HXLINE(  26)		if (hx::IsNotNull( it )) {
HXLINE(  27)			::thx::_Set::Set_Impl__obj::pushMany(set,it);
            		}
HXLINE(  28)		return set;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,createInt,return )

 ::haxe::ds::ObjectMap Set_Impl__obj::createObject( ::Dynamic it){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","createObject",0xfcf0d0c8,"thx._Set.Set_Impl_.createObject","thx/Set.hx",34,0xe9ced1e7)
            	HX_STACK_ARG(it,"it")
HXLINE(  35)		HX_VARI(  ::haxe::ds::ObjectMap,map) =  ::haxe::ds::ObjectMap_obj::__new();
HXLINE(  36)		HX_VARI(  ::haxe::ds::ObjectMap,set) = map;
HXLINE(  37)		if (hx::IsNotNull( it )) {
HXLINE(  38)			::thx::_Set::Set_Impl__obj::pushMany(set,it);
            		}
HXLINE(  39)		return set;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,createObject,return )

 ::haxe::ds::EnumValueMap Set_Impl__obj::createEnum( ::Dynamic arr){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","createEnum",0xf271f8ca,"thx._Set.Set_Impl_.createEnum","thx/Set.hx",45,0xe9ced1e7)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  46)		HX_VARI(  ::haxe::ds::EnumValueMap,map) =  ::haxe::ds::EnumValueMap_obj::__new();
HXLINE(  47)		HX_VARI(  ::haxe::ds::EnumValueMap,set) = map;
HXLINE(  48)		if (hx::IsNotNull( arr )) {
HXLINE(  49)			::thx::_Set::Set_Impl__obj::pushMany(set,arr);
            		}
HXLINE(  50)		return set;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,createEnum,return )

::Dynamic Set_Impl__obj::_new(::Dynamic map){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","_new",0x3bc0f24e,"thx._Set.Set_Impl_._new","thx/Set.hx",55,0xe9ced1e7)
            	HX_STACK_ARG(map,"map")
HXLINE(  55)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,_new,return )

Bool Set_Impl__obj::add(::Dynamic this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","add",0x654bd1d4,"thx._Set.Set_Impl_.add","thx/Set.hx",64,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE(  64)		Bool _hx_tmp = ::haxe::IMap_obj::exists(this1,v);
HXDLIN(  64)		if (_hx_tmp) {
HXLINE(  64)			return false;
            		}
            		else {
HXLINE(  67)			::haxe::IMap_obj::set(this1,v,true);
HXLINE(  64)			return true;
            		}
HXDLIN(  64)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,add,return )

::Dynamic Set_Impl__obj::copy(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","copy",0x3e6698a2,"thx._Set.Set_Impl_.copy","thx/Set.hx",74,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  75)		HX_VARI( ::Dynamic,inst) = ::thx::_Set::Set_Impl__obj::empty(this1);
HXLINE(  76)		{
HXLINE(  76)			HX_VARI(  ::Dynamic,tmp) = ::haxe::IMap_obj::keys(this1);
HXDLIN(  76)			while(true){
HXLINE(  76)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  76)				if (_hx_tmp) {
HXLINE(  76)					goto _hx_goto_0;
            				}
HXDLIN(  76)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE(  77)				::haxe::IMap_obj::set(inst,k,true);
            			}
            			_hx_goto_0:;
            		}
HXLINE(  78)		return inst;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,copy,return )

::Dynamic Set_Impl__obj::empty(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","empty",0x80d9ad00,"thx._Set.Set_Impl_.empty","thx/Set.hx",84,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  85)		hx::Class _hx_tmp = ::Type_obj::getClass(this1);
HXDLIN(  85)		HX_VARI( ::Dynamic,inst) = ::Type_obj::createInstance(_hx_tmp,::cpp::VirtualArray_obj::__new(0));
HXLINE(  86)		return inst;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,empty,return )

::Dynamic Set_Impl__obj::difference(::Dynamic this1,::Dynamic set){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","difference",0xe35f68aa,"thx._Set.Set_Impl_.difference","thx/Set.hx",93,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE(  94)		HX_VARI( ::Dynamic,result) = ::thx::_Set::Set_Impl__obj::copy(this1);
HXLINE(  95)		{
HXLINE(  95)			HX_VARI(  ::Dynamic,tmp) = ::thx::_Set::Set_Impl__obj::iterator(set);
HXDLIN(  95)			while(true){
HXLINE(  95)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  95)				if (_hx_tmp) {
HXLINE(  95)					goto _hx_goto_1;
            				}
HXDLIN(  95)				HX_VARI(  ::Dynamic,item) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE(  96)				::haxe::IMap_obj::remove(result,item);
            			}
            			_hx_goto_1:;
            		}
HXLINE(  97)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,difference,return )

::Dynamic Set_Impl__obj::filter(::Dynamic this1, ::Dynamic predicate){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,predicate) HXARGC(2)
            		::Dynamic _hx_run(::Dynamic acc, ::Dynamic v){
            			HX_STACK_FRAME("thx._Set.Set_Impl_","filter",0x53b9d1e5,"thx._Set.Set_Impl_.filter","thx/Set.hx",101,0xe9ced1e7)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(v,"v")
HXLINE( 102)			Bool _hx_tmp1 = ( (Bool)(predicate(v)) );
HXDLIN( 102)			if (_hx_tmp1) {
HXLINE( 103)				::thx::_Set::Set_Impl__obj::add(acc,v);
            			}
HXLINE( 104)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._Set.Set_Impl_","filter",0x53b9d1e5,"thx._Set.Set_Impl_.filter","thx/Set.hx",101,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 105)		::Dynamic _hx_tmp = ::thx::_Set::Set_Impl__obj::empty(this1);
HXLINE( 101)		return ::thx::_Set::Set_Impl__obj::reduce(this1, ::Dynamic(new _hx_Closure_0(predicate)),_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,filter,return )

::cpp::VirtualArray Set_Impl__obj::map(::Dynamic this1, ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc, ::Dynamic v){
            			HX_STACK_FRAME("thx._Set.Set_Impl_","map",0x6554ea4f,"thx._Set.Set_Impl_.map","thx/Set.hx",108,0xe9ced1e7)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(v,"v")
HXLINE( 109)			 ::Dynamic _hx_tmp = f(v);
HXDLIN( 109)			acc->push(_hx_tmp);
HXLINE( 110)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._Set.Set_Impl_","map",0x6554ea4f,"thx._Set.Set_Impl_.map","thx/Set.hx",108,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE( 108)		return ( (::cpp::VirtualArray)(::thx::_Set::Set_Impl__obj::reduce(this1, ::Dynamic(new _hx_Closure_0(f)),::cpp::VirtualArray_obj::__new(0))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,map,return )

Bool Set_Impl__obj::exists(::Dynamic this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","exists",0x8e64d009,"thx._Set.Set_Impl_.exists","thx/Set.hx",117,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE( 117)		return ::haxe::IMap_obj::exists(this1,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,exists,return )

Bool Set_Impl__obj::remove(::Dynamic this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","remove",0xd30d4e71,"thx._Set.Set_Impl_.remove","thx/Set.hx",120,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE( 120)		return ::haxe::IMap_obj::remove(this1,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,remove,return )

::Dynamic Set_Impl__obj::intersection(::Dynamic this1,::Dynamic set){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","intersection",0x4dbdb436,"thx._Set.Set_Impl_.intersection","thx/Set.hx",125,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE( 126)		HX_VARI( ::Dynamic,result) = ::thx::_Set::Set_Impl__obj::empty(this1);
HXLINE( 127)		{
HXLINE( 127)			HX_VARI(  ::Dynamic,tmp) = ::thx::_Set::Set_Impl__obj::iterator(this1);
HXDLIN( 127)			while(true){
HXLINE( 127)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 127)				if (_hx_tmp) {
HXLINE( 127)					goto _hx_goto_2;
            				}
HXDLIN( 127)				HX_VARI(  ::Dynamic,item) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 128)				Bool _hx_tmp1 = ::haxe::IMap_obj::exists(set,item);
HXDLIN( 128)				if (_hx_tmp1) {
HXLINE( 129)					::haxe::IMap_obj::set(result,item,true);
            				}
            			}
            			_hx_goto_2:;
            		}
HXLINE( 130)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,intersection,return )

void Set_Impl__obj::push(::Dynamic this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","push",0x4702eec7,"thx._Set.Set_Impl_.push","thx/Set.hx",137,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE( 137)		::haxe::IMap_obj::set(this1,v,true);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,push,(void))

void Set_Impl__obj::pushMany(::Dynamic this1, ::Dynamic values){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","pushMany",0x15fec706,"thx._Set.Set_Impl_.pushMany","thx/Set.hx",143,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(values,"values")
HXLINE( 143)		HX_VARI(  ::Dynamic,tmp) =  ::Dynamic(values->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic))();
HXDLIN( 143)		while(true){
HXLINE( 143)			Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 143)			if (_hx_tmp) {
HXLINE( 143)				goto _hx_goto_3;
            			}
HXDLIN( 143)			HX_VARI(  ::Dynamic,value) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 144)			::haxe::IMap_obj::set(this1,value,true);
            		}
            		_hx_goto_3:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,pushMany,(void))

 ::Dynamic Set_Impl__obj::reduce(::Dynamic this1, ::Dynamic handler, ::Dynamic acc){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","reduce",0xcd1edfd3,"thx._Set.Set_Impl_.reduce","thx/Set.hx",146,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(handler,"handler")
            	HX_STACK_ARG(acc,"acc")
HXLINE( 147)		{
HXLINE( 147)			HX_VARI(  ::Dynamic,tmp) = ::thx::_Set::Set_Impl__obj::iterator(this1);
HXDLIN( 147)			while(true){
HXLINE( 147)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 147)				if (_hx_tmp) {
HXLINE( 147)					goto _hx_goto_4;
            				}
HXDLIN( 147)				HX_VARI(  ::Dynamic,v) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 148)				acc = handler(acc,v);
            			}
            			_hx_goto_4:;
            		}
HXLINE( 150)		return acc;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,reduce,return )

 ::Dynamic Set_Impl__obj::iterator(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","iterator",0x9251a15b,"thx._Set.Set_Impl_.iterator","thx/Set.hx",157,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 157)		return ::haxe::IMap_obj::keys(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,iterator,return )

::Dynamic Set_Impl__obj::_hx_union(::Dynamic this1,::Dynamic set){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","union",0xb7e6d782,"thx._Set.Set_Impl_.union","thx/Set.hx",162,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE( 163)		HX_VARI( ::Dynamic,newset) = ::thx::_Set::Set_Impl__obj::copy(this1);
HXLINE( 164)		::thx::_Set::Set_Impl__obj::pushMany(newset,::thx::_Set::Set_Impl__obj::toArray(set));
HXLINE( 165)		return newset;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,_hx_union,return )

::cpp::VirtualArray Set_Impl__obj::toArray(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","toArray",0xd7aaef51,"thx._Set.Set_Impl_.toArray","thx/Set.hx",173,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 174)		HX_VARI( ::cpp::VirtualArray,arr) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 175)		{
HXLINE( 175)			HX_VARI(  ::Dynamic,tmp) = ::haxe::IMap_obj::keys(this1);
HXDLIN( 175)			while(true){
HXLINE( 175)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 175)				if (_hx_tmp) {
HXLINE( 175)					goto _hx_goto_5;
            				}
HXDLIN( 175)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 176)				arr->push(k);
            			}
            			_hx_goto_5:;
            		}
HXLINE( 177)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,toArray,return )

::String Set_Impl__obj::toString(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","toString",0x37262819,"thx._Set.Set_Impl_.toString","thx/Set.hx",185,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 185)		::String _hx_tmp = ::thx::_Set::Set_Impl__obj::toArray(this1)->join(HX_(", ",74,26,00,00));
HXDLIN( 185)		return ((HX_("{",7b,00,00,00) + _hx_tmp) + HX_("}",7d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,toString,return )

Int Set_Impl__obj::get_length(::Dynamic this1){
            	HX_STACK_FRAME("thx._Set.Set_Impl_","get_length",0x2c5cd15c,"thx._Set.Set_Impl_.get_length","thx/Set.hx",187,0xe9ced1e7)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 188)		HX_VARI( Int,l) = (int)0;
HXLINE( 189)		{
HXLINE( 189)			HX_VARI(  ::Dynamic,tmp) = ::haxe::IMap_obj::iterator(this1);
HXDLIN( 189)			while(true){
HXLINE( 189)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 189)				if (_hx_tmp) {
HXLINE( 189)					goto _hx_goto_6;
            				}
HXDLIN( 189)				 ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 190)				++l;
            			}
            			_hx_goto_6:;
            		}
HXLINE( 191)		return l;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,get_length,return )


Set_Impl__obj::Set_Impl__obj()
{
}

bool Set_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"push") ) { outValue = push_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"union") ) { outValue = _hx_union_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"filter") ) { outValue = filter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reduce") ) { outValue = reduce_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"pushMany") ) { outValue = pushMany_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"createInt") ) { outValue = createInt_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"createEnum") ) { outValue = createEnum_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"difference") ) { outValue = difference_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createString") ) { outValue = createString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createObject") ) { outValue = createObject_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intersection") ) { outValue = intersection_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Set_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Set_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Set_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Set_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Set_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Set_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Set_Impl__obj::__mClass;

static ::String Set_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("createString","\xed","\x68","\x85","\x33"),
	HX_HCSTRING("createInt","\x53","\xe3","\xdd","\x49"),
	HX_HCSTRING("createObject","\xdb","\xbe","\x94","\x37"),
	HX_HCSTRING("createEnum","\x1d","\x2c","\xa4","\x55"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("difference","\xfd","\x9b","\x91","\x46"),
	HX_HCSTRING("filter","\xb8","\x1f","\x35","\x85"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("intersection","\x49","\xa2","\x61","\x88"),
	HX_HCSTRING("push","\xda","\x11","\x61","\x4a"),
	HX_HCSTRING("pushMany","\x99","\x6f","\x47","\x17"),
	HX_HCSTRING("reduce","\xa6","\x2d","\x9a","\xfe"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("union","\x0f","\x65","\xe7","\xa6"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	::String(null())
};

void Set_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._Set.Set_Impl_","\xa1","\xaa","\xf9","\x83");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Set_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Set_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Set_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Set_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Set_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Set_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Set_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _Set
