// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_Table
#define INCLUDED_thx_text_Table

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,text,Table)
HX_DECLARE_CLASS3(thx,text,table,Cell)
HX_DECLARE_CLASS3(thx,text,table,CellSet)
HX_DECLARE_CLASS3(thx,text,table,CellValueImpl)
HX_DECLARE_CLASS3(thx,text,table,Col)
HX_DECLARE_CLASS3(thx,text,table,IStyle)
HX_DECLARE_CLASS3(thx,text,table,Row)
HX_DECLARE_CLASS3(thx,text,table,Span)

namespace thx{
namespace text{


class HXCPP_CLASS_ATTRIBUTES Table_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Table_obj OBJ_;
		Table_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.Table")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.Table"); }
		static hx::ObjectPtr< Table_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Table_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Table","\xee","\x27","\x11","\x9e"); }

		static  ::thx::text::Table fromData(::Array< ::Dynamic> data, ::Dynamic hasHeader,::String title);
		static ::Dynamic fromData_dyn();

		static  ::thx::text::Table fromObjects(::Array< ::Dynamic> data,::String title);
		static ::Dynamic fromObjects_dyn();

		::Dynamic style;
		::Array< ::Dynamic> _rows;
		::Array< ::Dynamic> _cols;
		 ::thx::text::table::Cell set(::hx::EnumBase value,Int row,Int col,::hx::EnumBase span);
		::Dynamic set_dyn();

		 ::thx::text::table::Cell get(Int row,Int col);
		::Dynamic get_dyn();

		 ::thx::text::table::Col ensureCol(Int index);
		::Dynamic ensureCol_dyn();

		 ::thx::text::table::Row ensureRow(Int index);
		::Dynamic ensureRow_dyn();

		 ::thx::text::table::Col getCol(Int index);
		::Dynamic getCol_dyn();

		 ::thx::text::table::Row getRow(Int index);
		::Dynamic getRow_dyn();

		::Array< ::Dynamic> toArray();
		::Dynamic toArray_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

		Int get_rows();
		::Dynamic get_rows_dyn();

		Int get_cols();
		::Dynamic get_cols_dyn();

		Int set_rows(Int value);
		::Dynamic set_rows_dyn();

		Int set_cols(Int value);
		::Dynamic set_cols_dyn();

};

} // end namespace thx
} // end namespace text

#endif /* INCLUDED_thx_text_Table */ 
