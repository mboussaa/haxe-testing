// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_CompositeStyle
#define INCLUDED_thx_text_table_CompositeStyle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_text_table_Style
#include <thx/text/table/Style.h>
#endif
HX_DECLARE_CLASS3(thx,text,table,CellType)
HX_DECLARE_CLASS3(thx,text,table,CellValueImpl)
HX_DECLARE_CLASS3(thx,text,table,CompositeStyle)
HX_DECLARE_CLASS3(thx,text,table,HAlign)
HX_DECLARE_CLASS3(thx,text,table,IStyle)
HX_DECLARE_CLASS3(thx,text,table,StringBlock)
HX_DECLARE_CLASS3(thx,text,table,Style)

namespace thx{
namespace text{
namespace table{


class HXCPP_CLASS_ATTRIBUTES CompositeStyle_obj : public  ::thx::text::table::Style_obj
{
	public:
		typedef  ::thx::text::table::Style_obj super;
		typedef CompositeStyle_obj OBJ_;
		CompositeStyle_obj();

	public:
		void __construct(::Array< ::Dynamic> parents);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.table.CompositeStyle")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.table.CompositeStyle"); }
		static hx::ObjectPtr< CompositeStyle_obj > __new(::Array< ::Dynamic> parents);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CompositeStyle_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("CompositeStyle","\xca","\x1f","\x21","\x7b"); }

		::Array< ::Dynamic> parents;
		::hx::EnumBase get_type();

		::hx::EnumBase set_type(::hx::EnumBase value);

		 ::Dynamic get_maxHeight();

		 ::Dynamic set_maxHeight( ::Dynamic value);

		Int get_minHeight();

		Int set_minHeight(Int value);

		 ::Dynamic get_maxWidth();

		 ::Dynamic set_maxWidth( ::Dynamic value);

		Int get_minWidth();

		Int set_minWidth(Int value);

		 ::Dynamic get_formatter();

		 ::Dynamic set_formatter( ::Dynamic value);

		 ::Dynamic get_aligner();

		 ::Dynamic set_aligner( ::Dynamic value);

		 ::Dynamic getProperty(::String name);
		::Dynamic getProperty_dyn();

};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_CompositeStyle */ 
