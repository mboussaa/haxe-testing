// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Span
#define INCLUDED_thx_text_table_Span

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,text,table,Span)
namespace thx{
namespace text{
namespace table{


class Span_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Span_obj OBJ_;

	public:
		Span_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.text.table.Span","\x81","\x25","\x0f","\x7a"); }
		::String __ToString() const { return HX_HCSTRING("Span.","\x04","\x06","\x94","\x14") + _hx_tag; }

		static ::thx::text::table::Span FillBoth;
		static inline ::thx::text::table::Span FillBoth_dyn() { return FillBoth; }
		static ::thx::text::table::Span FillDown;
		static inline ::thx::text::table::Span FillDown_dyn() { return FillDown; }
		static ::thx::text::table::Span FillRight;
		static inline ::thx::text::table::Span FillRight_dyn() { return FillRight; }
		static ::thx::text::table::Span NoSpan;
		static inline ::thx::text::table::Span NoSpan_dyn() { return NoSpan; }
		static ::thx::text::table::Span SpanBoth(Int rows,Int cols);
		static ::Dynamic SpanBoth_dyn();
		static ::thx::text::table::Span SpanDown(Int rows);
		static ::Dynamic SpanDown_dyn();
		static ::thx::text::table::Span SpanRight(Int cols);
		static ::Dynamic SpanRight_dyn();
};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Span */ 
