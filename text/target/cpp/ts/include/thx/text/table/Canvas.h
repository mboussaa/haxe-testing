// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Canvas
#define INCLUDED_thx_text_table_Canvas

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,text,table,BorderStyle)
HX_DECLARE_CLASS3(thx,text,table,Canvas)
HX_DECLARE_CLASS3(thx,text,table,CellType)
HX_DECLARE_CLASS3(thx,text,table,HAlign)
HX_DECLARE_CLASS3(thx,text,table,StringBlock)
HX_DECLARE_CLASS3(thx,text,table,SymbolImpl)

namespace thx{
namespace text{
namespace table{


class HXCPP_CLASS_ATTRIBUTES Canvas_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Canvas_obj OBJ_;
		Canvas_obj();

	public:
		void __construct(Int width,Int height);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.table.Canvas")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.table.Canvas"); }
		static hx::ObjectPtr< Canvas_obj > __new(Int width,Int height);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Canvas_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Canvas","\xf8","\xc8","\xd6","\xec"); }

		Int width;
		Int height;
		::Array< ::Dynamic> values;
		void expand(Int width,Int height);
		::Dynamic expand_dyn();

		::hx::EnumBase get(Int x,Int y);
		::Dynamic get_dyn();

		void set(Int x,Int y,::hx::EnumBase symbol);
		::Dynamic set_dyn();

		void setChar(Int x,Int y,::String _hx_char);
		::Dynamic setChar_dyn();

		void combine(Int x,Int y,::hx::EnumBase symbol);
		::Dynamic combine_dyn();

		void combineChar(Int x,Int y,::String _hx_char);
		::Dynamic combineChar_dyn();

		void paintBlock( ::thx::text::table::StringBlock block,Int x,Int y,Int width,Int height,::hx::EnumBase halign,Int symbolPos);
		::Dynamic paintBlock_dyn();

		void paintBorder(::hx::EnumBase type,Int x,Int y,Int w,Int h);
		::Dynamic paintBorder_dyn();

		void paintBottomLine(::hx::EnumBase type,Int x,Int y,Int w);
		::Dynamic paintBottomLine_dyn();

		::hx::EnumBase typeToBorder(::hx::EnumBase type);
		::Dynamic typeToBorder_dyn();

		::hx::EnumBase pickTopLeft(::hx::EnumBase type);
		::Dynamic pickTopLeft_dyn();

		::hx::EnumBase pickTopRight(::hx::EnumBase type);
		::Dynamic pickTopRight_dyn();

		::hx::EnumBase pickBottomLeft(::hx::EnumBase type);
		::Dynamic pickBottomLeft_dyn();

		::hx::EnumBase pickBottomRight(::hx::EnumBase type);
		::Dynamic pickBottomRight_dyn();

		::hx::EnumBase pickTop(::hx::EnumBase type);
		::Dynamic pickTop_dyn();

		::hx::EnumBase pickBottom(::hx::EnumBase type);
		::Dynamic pickBottom_dyn();

		::hx::EnumBase pickLeft(::hx::EnumBase type);
		::Dynamic pickLeft_dyn();

		::hx::EnumBase pickRight(::hx::EnumBase type);
		::Dynamic pickRight_dyn();

		::String render(::hx::EnumBase symbol);
		::Dynamic render_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Canvas */ 
