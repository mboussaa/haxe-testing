// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Renderer
#define INCLUDED_thx_text_table_Renderer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,text,Table)
HX_DECLARE_CLASS3(thx,text,table,Canvas)
HX_DECLARE_CLASS3(thx,text,table,Renderer)

namespace thx{
namespace text{
namespace table{


class HXCPP_CLASS_ATTRIBUTES Renderer_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Renderer_obj OBJ_;
		Renderer_obj();

	public:
		void __construct( ::Dynamic __o_padding);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.table.Renderer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.table.Renderer"); }
		static hx::ObjectPtr< Renderer_obj > __new( ::Dynamic __o_padding);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Renderer_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Renderer","\x63","\x81","\x8d","\x8c"); }

		Int padding;
		 ::thx::text::table::Canvas canvas;
		::Array< Int > colWidths;
		::Array< Int > rowHeights;
		::Array< Int > symbolPos;
		 ::thx::text::Table table;
		::String render( ::thx::text::Table table);
		::Dynamic render_dyn();

		void processContents();
		::Dynamic processContents_dyn();

		Int reduceWidth(Int acc,Int width);
		::Dynamic reduceWidth_dyn();

		Int reduceHeight(Int acc,Int height);
		::Dynamic reduceHeight_dyn();

};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Renderer */ 
