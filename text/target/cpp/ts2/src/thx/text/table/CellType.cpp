// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_text_table_CellType
#include <thx/text/table/CellType.h>
#endif
namespace thx{
namespace text{
namespace table{

::thx::text::table::CellType CellType_obj::Body;

::thx::text::table::CellType CellType_obj::BodyCompact;

::thx::text::table::CellType CellType_obj::Header;

::thx::text::table::CellType CellType_obj::HeaderCompact;

bool CellType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) { outValue = CellType_obj::Body; return true; }
	if (inName==HX_("BodyCompact",01,c9,80,59)) { outValue = CellType_obj::BodyCompact; return true; }
	if (inName==HX_("Header",ad,7d,94,31)) { outValue = CellType_obj::Header; return true; }
	if (inName==HX_("HeaderCompact",76,75,76,82)) { outValue = CellType_obj::HeaderCompact; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(CellType_obj)

int CellType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return 2;
	if (inName==HX_("BodyCompact",01,c9,80,59)) return 3;
	if (inName==HX_("Header",ad,7d,94,31)) return 0;
	if (inName==HX_("HeaderCompact",76,75,76,82)) return 1;
	return super::__FindIndex(inName);
}

int CellType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return 0;
	if (inName==HX_("BodyCompact",01,c9,80,59)) return 0;
	if (inName==HX_("Header",ad,7d,94,31)) return 0;
	if (inName==HX_("HeaderCompact",76,75,76,82)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val CellType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return Body;
	if (inName==HX_("BodyCompact",01,c9,80,59)) return BodyCompact;
	if (inName==HX_("Header",ad,7d,94,31)) return Header;
	if (inName==HX_("HeaderCompact",76,75,76,82)) return HeaderCompact;
	return super::__Field(inName,inCallProp);
}

static ::String CellType_obj_sStaticFields[] = {
	HX_("Header",ad,7d,94,31),
	HX_("HeaderCompact",76,75,76,82),
	HX_("Body",c2,a6,f4,2b),
	HX_("BodyCompact",01,c9,80,59),
	::String(null())
};

static void CellType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CellType_obj::Body,"Body");
	HX_MARK_MEMBER_NAME(CellType_obj::BodyCompact,"BodyCompact");
	HX_MARK_MEMBER_NAME(CellType_obj::Header,"Header");
	HX_MARK_MEMBER_NAME(CellType_obj::HeaderCompact,"HeaderCompact");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CellType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CellType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CellType_obj::Body,"Body");
	HX_VISIT_MEMBER_NAME(CellType_obj::BodyCompact,"BodyCompact");
	HX_VISIT_MEMBER_NAME(CellType_obj::Header,"Header");
	HX_VISIT_MEMBER_NAME(CellType_obj::HeaderCompact,"HeaderCompact");
};
#endif

hx::Class CellType_obj::__mClass;

Dynamic __Create_CellType_obj() { return new CellType_obj; }

void CellType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.text.table.CellType","\xb3","\x2b","\x25","\x62"), hx::TCanCast< CellType_obj >,CellType_obj_sStaticFields,0,
	&__Create_CellType_obj, &__Create,
	&super::__SGetClass(), &CreateCellType_obj, CellType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , CellType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &CellType_obj::__GetStatic;
}

void CellType_obj::__boot()
{
Body = hx::CreateEnum< CellType_obj >(HX_HCSTRING("Body","\xc2","\xa6","\xf4","\x2b"),2,0);
BodyCompact = hx::CreateEnum< CellType_obj >(HX_HCSTRING("BodyCompact","\x01","\xc9","\x80","\x59"),3,0);
Header = hx::CreateEnum< CellType_obj >(HX_HCSTRING("Header","\xad","\x7d","\x94","\x31"),0,0);
HeaderCompact = hx::CreateEnum< CellType_obj >(HX_HCSTRING("HeaderCompact","\x76","\x75","\x76","\x82"),1,0);
}


} // end namespace thx
} // end namespace text
} // end namespace table
