// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_text_table_CellType
#include <thx/text/table/CellType.h>
#endif
#ifndef INCLUDED_thx_text_table_CellValueImpl
#include <thx/text/table/CellValueImpl.h>
#endif
#ifndef INCLUDED_thx_text_table_HAlign
#include <thx/text/table/HAlign.h>
#endif
#ifndef INCLUDED_thx_text_table_IStyle
#include <thx/text/table/IStyle.h>
#endif
#ifndef INCLUDED_thx_text_table_StringBlock
#include <thx/text/table/StringBlock.h>
#endif
#ifndef INCLUDED_thx_text_table_Style
#include <thx/text/table/Style.h>
#endif

namespace thx{
namespace text{
namespace table{

void Style_obj::__construct(){
            	HX_STACK_FRAME("thx.text.table.Style","new",0xbc3eb08c,"thx.text.table.Style.new","thx/text/table/Style.hx",19,0x710751c5)
            	HX_STACK_THIS(this)
            	}

Dynamic Style_obj::__CreateEmpty() { return new Style_obj; }

hx::ObjectPtr< Style_obj > Style_obj::__new()
{
	hx::ObjectPtr< Style_obj > _hx_result = new Style_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Style_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Style_obj > _hx_result = new Style_obj();
	_hx_result->__construct();
	return _hx_result;
}

static ::thx::text::table::IStyle_obj _hx_thx_text_table_Style__hx_thx_text_table_IStyle= {
	( ::hx::EnumBase (hx::Object::*)())&::thx::text::table::Style_obj::get_type,
	( ::hx::EnumBase (hx::Object::*)(::hx::EnumBase))&::thx::text::table::Style_obj::set_type,
	( Int (hx::Object::*)())&::thx::text::table::Style_obj::get_minWidth,
	( Int (hx::Object::*)(Int))&::thx::text::table::Style_obj::set_minWidth,
	(  ::Dynamic (hx::Object::*)())&::thx::text::table::Style_obj::get_maxWidth,
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::text::table::Style_obj::set_maxWidth,
	( Int (hx::Object::*)())&::thx::text::table::Style_obj::get_minHeight,
	( Int (hx::Object::*)(Int))&::thx::text::table::Style_obj::set_minHeight,
	(  ::Dynamic (hx::Object::*)())&::thx::text::table::Style_obj::get_maxHeight,
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::text::table::Style_obj::set_maxHeight,
	(  ::Dynamic (hx::Object::*)())&::thx::text::table::Style_obj::get_formatter,
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::text::table::Style_obj::set_formatter,
	(  ::Dynamic (hx::Object::*)())&::thx::text::table::Style_obj::get_aligner,
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::text::table::Style_obj::set_aligner,
	( void (hx::Object::*)(::hx::EnumBase))&::thx::text::table::Style_obj::setAlign,
};

void *Style_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x7f7db665: return &_hx_thx_text_table_Style__hx_thx_text_table_IStyle;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Style_obj::setAlign(::hx::EnumBase align){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::hx::EnumBase,align) HXARGC(2)
            		::hx::EnumBase _hx_run(::hx::EnumBase _,::hx::EnumBase _1){
            			HX_STACK_FRAME("thx.text.table.Style","setAlign",0x8c22c017,"thx.text.table.Style.setAlign","thx/text/table/Style.hx",22,0x710751c5)
            			HX_STACK_ARG(_,"_")
            			HX_STACK_ARG(_1,"_1")
HXLINE(  22)			return align;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.text.table.Style","setAlign",0x8c22c017,"thx.text.table.Style.setAlign","thx/text/table/Style.hx",22,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(align,"align")
HXLINE(  22)		this->set_aligner( ::Dynamic(new _hx_Closure_0(align)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,setAlign,(void))

::hx::EnumBase Style_obj::get_type(){
            	HX_STACK_FRAME("thx.text.table.Style","get_type",0x2920ae97,"thx.text.table.Style.get_type","thx/text/table/Style.hx",25,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  25)		return this->type;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_type,return )

::hx::EnumBase Style_obj::set_type(::hx::EnumBase value){
            	HX_STACK_FRAME("thx.text.table.Style","set_type",0xd77e080b,"thx.text.table.Style.set_type","thx/text/table/Style.hx",28,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  28)		return (this->type = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_type,return )

 ::Dynamic Style_obj::get_maxHeight(){
            	HX_STACK_FRAME("thx.text.table.Style","get_maxHeight",0x3bb83cae,"thx.text.table.Style.get_maxHeight","thx/text/table/Style.hx",31,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  31)		return this->maxHeight;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_maxHeight,return )

 ::Dynamic Style_obj::set_maxHeight( ::Dynamic value){
            	HX_STACK_FRAME("thx.text.table.Style","set_maxHeight",0x80be1eba,"thx.text.table.Style.set_maxHeight","thx/text/table/Style.hx",34,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  34)		return (this->maxHeight = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_maxHeight,return )

Int Style_obj::get_minHeight(){
            	HX_STACK_FRAME("thx.text.table.Style","get_minHeight",0x65752a1c,"thx.text.table.Style.get_minHeight","thx/text/table/Style.hx",37,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  37)		return this->minHeight;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_minHeight,return )

Int Style_obj::set_minHeight(Int value){
            	HX_STACK_FRAME("thx.text.table.Style","set_minHeight",0xaa7b0c28,"thx.text.table.Style.set_minHeight","thx/text/table/Style.hx",40,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  40)		return (this->minHeight = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_minHeight,return )

 ::Dynamic Style_obj::get_maxWidth(){
            	HX_STACK_FRAME("thx.text.table.Style","get_maxWidth",0xd61f771f,"thx.text.table.Style.get_maxWidth","thx/text/table/Style.hx",43,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  43)		return this->maxWidth;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_maxWidth,return )

 ::Dynamic Style_obj::set_maxWidth( ::Dynamic value){
            	HX_STACK_FRAME("thx.text.table.Style","set_maxWidth",0xeb189a93,"thx.text.table.Style.set_maxWidth","thx/text/table/Style.hx",46,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  46)		return (this->maxWidth = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_maxWidth,return )

Int Style_obj::get_minWidth(){
            	HX_STACK_FRAME("thx.text.table.Style","get_minWidth",0x23399171,"thx.text.table.Style.get_minWidth","thx/text/table/Style.hx",49,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  49)		return this->minWidth;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_minWidth,return )

Int Style_obj::set_minWidth(Int value){
            	HX_STACK_FRAME("thx.text.table.Style","set_minWidth",0x3832b4e5,"thx.text.table.Style.set_minWidth","thx/text/table/Style.hx",52,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  52)		return (this->minWidth = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_minWidth,return )

 ::Dynamic Style_obj::get_formatter(){
            	HX_STACK_FRAME("thx.text.table.Style","get_formatter",0x23490e0d,"thx.text.table.Style.get_formatter","thx/text/table/Style.hx",55,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  55)		return this->formatter;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_formatter,return )

 ::Dynamic Style_obj::set_formatter( ::Dynamic value){
            	HX_STACK_FRAME("thx.text.table.Style","set_formatter",0x684ef019,"thx.text.table.Style.set_formatter","thx/text/table/Style.hx",58,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  58)		return (this->formatter = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_formatter,return )

 ::Dynamic Style_obj::get_aligner(){
            	HX_STACK_FRAME("thx.text.table.Style","get_aligner",0x62ebf6b5,"thx.text.table.Style.get_aligner","thx/text/table/Style.hx",61,0x710751c5)
            	HX_STACK_THIS(this)
HXLINE(  61)		return this->aligner;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Style_obj,get_aligner,return )

 ::Dynamic Style_obj::set_aligner( ::Dynamic value){
            	HX_STACK_FRAME("thx.text.table.Style","set_aligner",0x6d58fdc1,"thx.text.table.Style.set_aligner","thx/text/table/Style.hx",64,0x710751c5)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  64)		return (this->aligner = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Style_obj,set_aligner,return )


Style_obj::Style_obj()
{
}

void Style_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Style);
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(maxHeight,"maxHeight");
	HX_MARK_MEMBER_NAME(minHeight,"minHeight");
	HX_MARK_MEMBER_NAME(maxWidth,"maxWidth");
	HX_MARK_MEMBER_NAME(minWidth,"minWidth");
	HX_MARK_MEMBER_NAME(formatter,"formatter");
	HX_MARK_MEMBER_NAME(aligner,"aligner");
	HX_MARK_END_CLASS();
}

void Style_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(maxHeight,"maxHeight");
	HX_VISIT_MEMBER_NAME(minHeight,"minHeight");
	HX_VISIT_MEMBER_NAME(maxWidth,"maxWidth");
	HX_VISIT_MEMBER_NAME(minWidth,"minWidth");
	HX_VISIT_MEMBER_NAME(formatter,"formatter");
	HX_VISIT_MEMBER_NAME(aligner,"aligner");
}

hx::Val Style_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return hx::Val( inCallProp == hx::paccAlways ? get_type() : type); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"aligner") ) { return hx::Val( inCallProp == hx::paccAlways ? get_aligner() : aligner); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"maxWidth") ) { return hx::Val( inCallProp == hx::paccAlways ? get_maxWidth() : maxWidth); }
		if (HX_FIELD_EQ(inName,"minWidth") ) { return hx::Val( inCallProp == hx::paccAlways ? get_minWidth() : minWidth); }
		if (HX_FIELD_EQ(inName,"setAlign") ) { return hx::Val( setAlign_dyn()); }
		if (HX_FIELD_EQ(inName,"get_type") ) { return hx::Val( get_type_dyn()); }
		if (HX_FIELD_EQ(inName,"set_type") ) { return hx::Val( set_type_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"maxHeight") ) { return hx::Val( inCallProp == hx::paccAlways ? get_maxHeight() : maxHeight); }
		if (HX_FIELD_EQ(inName,"minHeight") ) { return hx::Val( inCallProp == hx::paccAlways ? get_minHeight() : minHeight); }
		if (HX_FIELD_EQ(inName,"formatter") ) { return hx::Val( inCallProp == hx::paccAlways ? get_formatter() : formatter); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_aligner") ) { return hx::Val( get_aligner_dyn()); }
		if (HX_FIELD_EQ(inName,"set_aligner") ) { return hx::Val( set_aligner_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_maxWidth") ) { return hx::Val( get_maxWidth_dyn()); }
		if (HX_FIELD_EQ(inName,"set_maxWidth") ) { return hx::Val( set_maxWidth_dyn()); }
		if (HX_FIELD_EQ(inName,"get_minWidth") ) { return hx::Val( get_minWidth_dyn()); }
		if (HX_FIELD_EQ(inName,"set_minWidth") ) { return hx::Val( set_minWidth_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_maxHeight") ) { return hx::Val( get_maxHeight_dyn()); }
		if (HX_FIELD_EQ(inName,"set_maxHeight") ) { return hx::Val( set_maxHeight_dyn()); }
		if (HX_FIELD_EQ(inName,"get_minHeight") ) { return hx::Val( get_minHeight_dyn()); }
		if (HX_FIELD_EQ(inName,"set_minHeight") ) { return hx::Val( set_minHeight_dyn()); }
		if (HX_FIELD_EQ(inName,"get_formatter") ) { return hx::Val( get_formatter_dyn()); }
		if (HX_FIELD_EQ(inName,"set_formatter") ) { return hx::Val( set_formatter_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Style_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_type(inValue) );type=inValue.Cast< ::hx::EnumBase >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"aligner") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_aligner(inValue) );aligner=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"maxWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_maxWidth(inValue) );maxWidth=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"minWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_minWidth(inValue) );minWidth=inValue.Cast< Int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"maxHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_maxHeight(inValue) );maxHeight=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"minHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_minHeight(inValue) );minHeight=inValue.Cast< Int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"formatter") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_formatter(inValue) );formatter=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Style_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"));
	outFields->push(HX_HCSTRING("maxHeight","\xab","\x19","\xd7","\x31"));
	outFields->push(HX_HCSTRING("minHeight","\x19","\x07","\x94","\x5b"));
	outFields->push(HX_HCSTRING("maxWidth","\xc2","\x08","\x80","\x74"));
	outFields->push(HX_HCSTRING("minWidth","\x14","\x23","\x9a","\xc1"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Style_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::thx::text::table::CellType*/ ,(int)offsetof(Style_obj,type),HX_HCSTRING("type","\xba","\xf2","\x08","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Style_obj,maxHeight),HX_HCSTRING("maxHeight","\xab","\x19","\xd7","\x31")},
	{hx::fsInt,(int)offsetof(Style_obj,minHeight),HX_HCSTRING("minHeight","\x19","\x07","\x94","\x5b")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Style_obj,maxWidth),HX_HCSTRING("maxWidth","\xc2","\x08","\x80","\x74")},
	{hx::fsInt,(int)offsetof(Style_obj,minWidth),HX_HCSTRING("minWidth","\x14","\x23","\x9a","\xc1")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Style_obj,formatter),HX_HCSTRING("formatter","\x0a","\xeb","\x67","\x19")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Style_obj,aligner),HX_HCSTRING("aligner","\x72","\xaa","\xa8","\xa9")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Style_obj_sStaticStorageInfo = 0;
#endif

static ::String Style_obj_sMemberFields[] = {
	HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"),
	HX_HCSTRING("maxHeight","\xab","\x19","\xd7","\x31"),
	HX_HCSTRING("minHeight","\x19","\x07","\x94","\x5b"),
	HX_HCSTRING("maxWidth","\xc2","\x08","\x80","\x74"),
	HX_HCSTRING("minWidth","\x14","\x23","\x9a","\xc1"),
	HX_HCSTRING("formatter","\x0a","\xeb","\x67","\x19"),
	HX_HCSTRING("aligner","\x72","\xaa","\xa8","\xa9"),
	HX_HCSTRING("setAlign","\xc3","\xbf","\xc5","\x2f"),
	HX_HCSTRING("get_type","\x43","\xae","\xc3","\xcc"),
	HX_HCSTRING("set_type","\xb7","\x07","\x21","\x7b"),
	HX_HCSTRING("get_maxHeight","\x82","\xed","\x3a","\xf3"),
	HX_HCSTRING("set_maxHeight","\x8e","\xcf","\x40","\x38"),
	HX_HCSTRING("get_minHeight","\xf0","\xda","\xf7","\x1c"),
	HX_HCSTRING("set_minHeight","\xfc","\xbc","\xfd","\x61"),
	HX_HCSTRING("get_maxWidth","\xcb","\xbc","\x99","\x29"),
	HX_HCSTRING("set_maxWidth","\x3f","\xe0","\x92","\x3e"),
	HX_HCSTRING("get_minWidth","\x1d","\xd7","\xb3","\x76"),
	HX_HCSTRING("set_minWidth","\x91","\xfa","\xac","\x8b"),
	HX_HCSTRING("get_formatter","\xe1","\xbe","\xcb","\xda"),
	HX_HCSTRING("set_formatter","\xed","\xa0","\xd1","\x1f"),
	HX_HCSTRING("get_aligner","\x89","\x0a","\xa3","\x2f"),
	HX_HCSTRING("set_aligner","\x95","\x11","\x10","\x3a"),
	::String(null()) };

static void Style_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Style_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Style_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Style_obj::__mClass,"__mClass");
};

#endif

hx::Class Style_obj::__mClass;

void Style_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.text.table.Style","\x9a","\xba","\xe8","\x55");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Style_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Style_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Style_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Style_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Style_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Style_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace text
} // end namespace table
