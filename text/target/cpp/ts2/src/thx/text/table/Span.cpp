// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_text_table_Span
#include <thx/text/table/Span.h>
#endif
namespace thx{
namespace text{
namespace table{

::thx::text::table::Span Span_obj::FillBoth;

::thx::text::table::Span Span_obj::FillDown;

::thx::text::table::Span Span_obj::FillRight;

::thx::text::table::Span Span_obj::NoSpan;

::thx::text::table::Span Span_obj::SpanBoth(Int rows,Int cols)
{
	return hx::CreateEnum< Span_obj >(HX_("SpanBoth",8b,78,65,07),1,2)->_hx_init(0,rows)->_hx_init(1,cols);
}

::thx::text::table::Span Span_obj::SpanDown(Int rows)
{
	return hx::CreateEnum< Span_obj >(HX_("SpanDown",6c,e8,b7,08),3,1)->_hx_init(0,rows);
}

::thx::text::table::Span Span_obj::SpanRight(Int cols)
{
	return hx::CreateEnum< Span_obj >(HX_("SpanRight",92,24,cc,a3),2,1)->_hx_init(0,cols);
}

bool Span_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FillBoth",c4,3c,df,3b)) { outValue = Span_obj::FillBoth; return true; }
	if (inName==HX_("FillDown",a5,ac,31,3d)) { outValue = Span_obj::FillDown; return true; }
	if (inName==HX_("FillRight",39,12,de,59)) { outValue = Span_obj::FillRight; return true; }
	if (inName==HX_("NoSpan",cb,8f,82,50)) { outValue = Span_obj::NoSpan; return true; }
	if (inName==HX_("SpanBoth",8b,78,65,07)) { outValue = Span_obj::SpanBoth_dyn(); return true; }
	if (inName==HX_("SpanDown",6c,e8,b7,08)) { outValue = Span_obj::SpanDown_dyn(); return true; }
	if (inName==HX_("SpanRight",92,24,cc,a3)) { outValue = Span_obj::SpanRight_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Span_obj)

int Span_obj::__FindIndex(::String inName)
{
	if (inName==HX_("FillBoth",c4,3c,df,3b)) return 6;
	if (inName==HX_("FillDown",a5,ac,31,3d)) return 5;
	if (inName==HX_("FillRight",39,12,de,59)) return 4;
	if (inName==HX_("NoSpan",cb,8f,82,50)) return 0;
	if (inName==HX_("SpanBoth",8b,78,65,07)) return 1;
	if (inName==HX_("SpanDown",6c,e8,b7,08)) return 3;
	if (inName==HX_("SpanRight",92,24,cc,a3)) return 2;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(Span_obj,SpanBoth,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Span_obj,SpanDown,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Span_obj,SpanRight,return)

int Span_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("FillBoth",c4,3c,df,3b)) return 0;
	if (inName==HX_("FillDown",a5,ac,31,3d)) return 0;
	if (inName==HX_("FillRight",39,12,de,59)) return 0;
	if (inName==HX_("NoSpan",cb,8f,82,50)) return 0;
	if (inName==HX_("SpanBoth",8b,78,65,07)) return 2;
	if (inName==HX_("SpanDown",6c,e8,b7,08)) return 1;
	if (inName==HX_("SpanRight",92,24,cc,a3)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val Span_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FillBoth",c4,3c,df,3b)) return FillBoth;
	if (inName==HX_("FillDown",a5,ac,31,3d)) return FillDown;
	if (inName==HX_("FillRight",39,12,de,59)) return FillRight;
	if (inName==HX_("NoSpan",cb,8f,82,50)) return NoSpan;
	if (inName==HX_("SpanBoth",8b,78,65,07)) return SpanBoth_dyn();
	if (inName==HX_("SpanDown",6c,e8,b7,08)) return SpanDown_dyn();
	if (inName==HX_("SpanRight",92,24,cc,a3)) return SpanRight_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String Span_obj_sStaticFields[] = {
	HX_("NoSpan",cb,8f,82,50),
	HX_("SpanBoth",8b,78,65,07),
	HX_("SpanRight",92,24,cc,a3),
	HX_("SpanDown",6c,e8,b7,08),
	HX_("FillRight",39,12,de,59),
	HX_("FillDown",a5,ac,31,3d),
	HX_("FillBoth",c4,3c,df,3b),
	::String(null())
};

static void Span_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Span_obj::FillBoth,"FillBoth");
	HX_MARK_MEMBER_NAME(Span_obj::FillDown,"FillDown");
	HX_MARK_MEMBER_NAME(Span_obj::FillRight,"FillRight");
	HX_MARK_MEMBER_NAME(Span_obj::NoSpan,"NoSpan");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Span_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Span_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Span_obj::FillBoth,"FillBoth");
	HX_VISIT_MEMBER_NAME(Span_obj::FillDown,"FillDown");
	HX_VISIT_MEMBER_NAME(Span_obj::FillRight,"FillRight");
	HX_VISIT_MEMBER_NAME(Span_obj::NoSpan,"NoSpan");
};
#endif

hx::Class Span_obj::__mClass;

Dynamic __Create_Span_obj() { return new Span_obj; }

void Span_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.text.table.Span","\x81","\x25","\x0f","\x7a"), hx::TCanCast< Span_obj >,Span_obj_sStaticFields,0,
	&__Create_Span_obj, &__Create,
	&super::__SGetClass(), &CreateSpan_obj, Span_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Span_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Span_obj::__GetStatic;
}

void Span_obj::__boot()
{
FillBoth = hx::CreateEnum< Span_obj >(HX_HCSTRING("FillBoth","\xc4","\x3c","\xdf","\x3b"),6,0);
FillDown = hx::CreateEnum< Span_obj >(HX_HCSTRING("FillDown","\xa5","\xac","\x31","\x3d"),5,0);
FillRight = hx::CreateEnum< Span_obj >(HX_HCSTRING("FillRight","\x39","\x12","\xde","\x59"),4,0);
NoSpan = hx::CreateEnum< Span_obj >(HX_HCSTRING("NoSpan","\xcb","\x8f","\x82","\x50"),0,0);
}


} // end namespace thx
} // end namespace text
} // end namespace table
