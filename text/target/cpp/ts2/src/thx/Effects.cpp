// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_thx_Effects
#include <thx/Effects.h>
#endif

namespace thx{

void Effects_obj::__construct() { }

Dynamic Effects_obj::__CreateEmpty() { return new Effects_obj; }

hx::ObjectPtr< Effects_obj > Effects_obj::__new()
{
	hx::ObjectPtr< Effects_obj > _hx_result = new Effects_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Effects_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Effects_obj > _hx_result = new Effects_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Effects_obj::logger;

 ::Dynamic Effects_obj::tap( ::Dynamic input, ::Dynamic f){
            	HX_STACK_FRAME("thx.Effects","tap",0xddcbf9ad,"thx.Effects.tap","thx/Effects.hx",8,0xc5981e47)
            	HX_STACK_ARG(input,"input")
            	HX_STACK_ARG(f,"f")
HXLINE(   9)		f(input);
HXLINE(  10)		return input;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Effects_obj,tap,return )

 ::Dynamic Effects_obj::traced( ::Dynamic input, ::Dynamic f){
            	HX_STACK_FRAME("thx.Effects","traced",0x5bc0b135,"thx.Effects.traced","thx/Effects.hx",13,0xc5981e47)
            	HX_STACK_ARG(input,"input")
            	HX_STACK_ARG(f,"f")
HXLINE(  14)		::String _hx_tmp = ( (::String)(f(input)) );
HXDLIN(  14)		::haxe::Log_obj::trace(_hx_tmp,hx::SourceInfo(HX_("Effects.hx",5c,47,4a,be),14,HX_("thx.Effects",b8,12,e0,a6),HX_("traced",3f,26,7d,45)));
HXLINE(  15)		return input;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Effects_obj,traced,return )

 ::Dynamic Effects_obj::log( ::Dynamic input, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a2) HXARGC(1)
            		void _hx_run( ::Dynamic a1){
            			HX_STACK_FRAME("thx.Effects","log",0xddc5f3ce,"thx.Effects.log","thx/Effects.hx",19,0xc5981e47)
            			HX_STACK_ARG(a1,"a1")
HXLINE(  19)			::thx::Effects_obj::logger(a1,a2);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Effects","log",0xddc5f3ce,"thx.Effects.log","thx/Effects.hx",19,0xc5981e47)
            	HX_STACK_ARG(input,"input")
            	HX_STACK_ARG(pos,"pos")
HXLINE(  19)		HX_VARI(  ::Dynamic,a2) = pos;
HXDLIN(  19)		 ::Dynamic(new _hx_Closure_0(a2))(input);
HXDLIN(  19)		return input;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Effects_obj,log,return )


Effects_obj::Effects_obj()
{
}

bool Effects_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"tap") ) { outValue = tap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"log") ) { outValue = log_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"logger") ) { outValue = logger; return true; }
		if (HX_FIELD_EQ(inName,"traced") ) { outValue = traced_dyn(); return true; }
	}
	return false;
}

bool Effects_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"logger") ) { logger=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Effects_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Effects_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &Effects_obj::logger,HX_HCSTRING("logger","\x90","\xd6","\x68","\x5c")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Effects_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Effects_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Effects_obj::logger,"logger");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Effects_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Effects_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Effects_obj::logger,"logger");
};

#endif

hx::Class Effects_obj::__mClass;

static ::String Effects_obj_sStaticFields[] = {
	HX_HCSTRING("logger","\x90","\xd6","\x68","\x5c"),
	HX_HCSTRING("tap","\x63","\x5a","\x58","\x00"),
	HX_HCSTRING("traced","\x3f","\x26","\x7d","\x45"),
	HX_HCSTRING("log","\x84","\x54","\x52","\x00"),
	::String(null())
};

void Effects_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Effects","\xb8","\x12","\xe0","\xa6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Effects_obj::__GetStatic;
	__mClass->mSetStaticField = &Effects_obj::__SetStatic;
	__mClass->mMarkFunc = Effects_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Effects_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Effects_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Effects_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Effects_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Effects_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Effects_obj::__boot()
{
{
            	HX_STACK_FRAME("thx.Effects","boot",0x28d345a8,"thx.Effects.boot","thx/Effects.hx",6,0xc5981e47)
HXLINE(   6)		logger = ::haxe::Log_obj::trace;
            	}
}

} // end namespace thx
