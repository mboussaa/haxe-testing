// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Row
#define INCLUDED_thx_text_table_Row

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_text_table_CellSet
#include <thx/text/table/CellSet.h>
#endif
HX_DECLARE_CLASS2(thx,text,Table)
HX_DECLARE_CLASS3(thx,text,table,Cell)
HX_DECLARE_CLASS3(thx,text,table,CellSet)
HX_DECLARE_CLASS3(thx,text,table,CellValueImpl)
HX_DECLARE_CLASS3(thx,text,table,Row)
HX_DECLARE_CLASS3(thx,text,table,Span)

namespace thx{
namespace text{
namespace table{


class HXCPP_CLASS_ATTRIBUTES Row_obj : public  ::thx::text::table::CellSet_obj
{
	public:
		typedef  ::thx::text::table::CellSet_obj super;
		typedef Row_obj OBJ_;
		Row_obj();

	public:
		void __construct( ::thx::text::Table table,Int index);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.table.Row")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.table.Row"); }
		static hx::ObjectPtr< Row_obj > __new( ::thx::text::Table table,Int index);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Row_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Row","\xfa","\x99","\x3e","\x00"); }

		void setCell(Int colIndex, ::thx::text::table::Cell cell);
		::Dynamic setCell_dyn();

		 ::thx::text::table::Cell set(::hx::EnumBase value,Int col,::hx::EnumBase span);
		::Dynamic set_dyn();

};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Row */ 
