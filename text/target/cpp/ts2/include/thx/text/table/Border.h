// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Border
#define INCLUDED_thx_text_table_Border

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,text,table,Border)
HX_DECLARE_CLASS3(thx,text,table,BorderStyle)
namespace thx{
namespace text{
namespace table{


class Border_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Border_obj OBJ_;

	public:
		Border_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.text.table.Border","\x63","\xf3","\x01","\x24"); }
		::String __ToString() const { return HX_HCSTRING("Border.","\xa2","\x29","\x3a","\x00") + _hx_tag; }

		static ::thx::text::table::Border Cross(::hx::EnumBase top,::hx::EnumBase right,::hx::EnumBase bottom,::hx::EnumBase left);
		static ::Dynamic Cross_dyn();
		static ::thx::text::table::Border Removable;
		static inline ::thx::text::table::Border Removable_dyn() { return Removable; }
		static ::thx::text::table::Border RemovableCross(::hx::EnumBase top,::hx::EnumBase right,::hx::EnumBase bottom,::hx::EnumBase left);
		static ::Dynamic RemovableCross_dyn();
};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Border */ 
