// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_Style
#define INCLUDED_thx_text_table_Style

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_text_table_IStyle
#include <thx/text/table/IStyle.h>
#endif
HX_DECLARE_CLASS3(thx,text,table,CellType)
HX_DECLARE_CLASS3(thx,text,table,CellValueImpl)
HX_DECLARE_CLASS3(thx,text,table,HAlign)
HX_DECLARE_CLASS3(thx,text,table,IStyle)
HX_DECLARE_CLASS3(thx,text,table,StringBlock)
HX_DECLARE_CLASS3(thx,text,table,Style)

namespace thx{
namespace text{
namespace table{


class HXCPP_CLASS_ATTRIBUTES Style_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Style_obj OBJ_;
		Style_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.text.table.Style")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.text.table.Style"); }
		static hx::ObjectPtr< Style_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Style_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("Style","\x11","\x15","\x4b","\x17"); }

		::hx::EnumBase type;
		 ::Dynamic maxHeight;
		Int minHeight;
		 ::Dynamic maxWidth;
		Int minWidth;
		 ::Dynamic formatter;
		 ::Dynamic &formatter_dyn() { return formatter;}
		 ::Dynamic aligner;
		 ::Dynamic &aligner_dyn() { return aligner;}
		void setAlign(::hx::EnumBase align);
		::Dynamic setAlign_dyn();

		virtual ::hx::EnumBase get_type();
		::Dynamic get_type_dyn();

		virtual ::hx::EnumBase set_type(::hx::EnumBase value);
		::Dynamic set_type_dyn();

		virtual  ::Dynamic get_maxHeight();
		::Dynamic get_maxHeight_dyn();

		virtual  ::Dynamic set_maxHeight( ::Dynamic value);
		::Dynamic set_maxHeight_dyn();

		virtual Int get_minHeight();
		::Dynamic get_minHeight_dyn();

		virtual Int set_minHeight(Int value);
		::Dynamic set_minHeight_dyn();

		virtual  ::Dynamic get_maxWidth();
		::Dynamic get_maxWidth_dyn();

		virtual  ::Dynamic set_maxWidth( ::Dynamic value);
		::Dynamic set_maxWidth_dyn();

		virtual Int get_minWidth();
		::Dynamic get_minWidth_dyn();

		virtual Int set_minWidth(Int value);
		::Dynamic set_minWidth_dyn();

		virtual  ::Dynamic get_formatter();
		::Dynamic get_formatter_dyn();

		virtual  ::Dynamic set_formatter( ::Dynamic value);
		::Dynamic set_formatter_dyn();

		virtual  ::Dynamic get_aligner();
		::Dynamic get_aligner_dyn();

		virtual  ::Dynamic set_aligner( ::Dynamic value);
		::Dynamic set_aligner_dyn();

};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_Style */ 
