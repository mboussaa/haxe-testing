// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_text_table_HAlign
#define INCLUDED_thx_text_table_HAlign

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,text,table,HAlign)
namespace thx{
namespace text{
namespace table{


class HAlign_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef HAlign_obj OBJ_;

	public:
		HAlign_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.text.table.HAlign","\xb4","\xf3","\xc3","\x09"); }
		::String __ToString() const { return HX_HCSTRING("HAlign.","\x31","\x70","\x38","\x24") + _hx_tag; }

		static ::thx::text::table::HAlign Center;
		static inline ::thx::text::table::HAlign Center_dyn() { return Center; }
		static ::thx::text::table::HAlign Left;
		static inline ::thx::text::table::HAlign Left_dyn() { return Left; }
		static ::thx::text::table::HAlign OnSymbol(::String symbol);
		static ::Dynamic OnSymbol_dyn();
		static ::thx::text::table::HAlign Right;
		static inline ::thx::text::table::HAlign Right_dyn() { return Right; }
};

} // end namespace thx
} // end namespace text
} // end namespace table

#endif /* INCLUDED_thx_text_table_HAlign */ 
