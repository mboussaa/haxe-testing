// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_format_TimeFormat
#define INCLUDED_thx_format_TimeFormat

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#include <cpp/Int64.h>
HX_DECLARE_CLASS0(EReg)
HX_DECLARE_CLASS2(thx,culture,Culture)
HX_DECLARE_CLASS2(thx,format,TimeFormat)

namespace thx{
namespace format{


class HXCPP_CLASS_ATTRIBUTES TimeFormat_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TimeFormat_obj OBJ_;
		TimeFormat_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.format.TimeFormat")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.format.TimeFormat"); }
		static hx::ObjectPtr< TimeFormat_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TimeFormat_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TimeFormat","\x44","\xdb","\x08","\x92"); }

		static ::String customFormat( ::cpp::Int64Struct t,::String pattern, ::thx::culture::Culture culture);
		static ::Dynamic customFormat_dyn();

		static ::String format( ::cpp::Int64Struct t,::String pattern, ::thx::culture::Culture culture);
		static ::Dynamic format_dyn();

		static ::String formatTerm( ::cpp::Int64Struct t,::String pattern, ::thx::culture::Culture culture);
		static ::Dynamic formatTerm_dyn();

		static ::String timeLong( ::cpp::Int64Struct time, ::thx::culture::Culture culture);
		static ::Dynamic timeLong_dyn();

		static ::String timeShort( ::cpp::Int64Struct time, ::thx::culture::Culture culture);
		static ::Dynamic timeShort_dyn();

		static ::String invariantTimeLong( ::cpp::Int64Struct time);
		static ::Dynamic invariantTimeLong_dyn();

		static ::String offsetHoursShort( ::cpp::Int64Struct offset, ::thx::culture::Culture culture);
		static ::Dynamic offsetHoursShort_dyn();

		static ::String offsetHoursLong( ::cpp::Int64Struct offset, ::thx::culture::Culture culture);
		static ::Dynamic offsetHoursLong_dyn();

		static ::String offsetLong( ::cpp::Int64Struct offset, ::thx::culture::Culture culture);
		static ::Dynamic offsetLong_dyn();

		static ::String iso8601OffsetShort( ::cpp::Int64Struct offset);
		static ::Dynamic iso8601OffsetShort_dyn();

		static  ::EReg getPattern();
		static ::Dynamic getPattern_dyn();

};

} // end namespace thx
} // end namespace format

#endif /* INCLUDED_thx_format_TimeFormat */ 
