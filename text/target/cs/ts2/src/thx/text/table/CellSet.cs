// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class CellSet : global::haxe.lang.HxObject {
		
		public CellSet(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public CellSet(global::thx.text.Table table, int index) {
			global::thx.text.table.CellSet.__hx_ctor_thx_text_table_CellSet(this, table, index);
		}
		
		
		public static void __hx_ctor_thx_text_table_CellSet(global::thx.text.table.CellSet __temp_me174, global::thx.text.Table table, int index) {
			__temp_me174.index = index;
			__temp_me174.table = table;
			__temp_me174.values = new global::haxe.ds.IntMap<object>();
			__temp_me174.size = 0;
			__temp_me174.style = new global::thx.text.table.Style();
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.CellSet(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::thx.text.table.CellSet(((global::thx.text.Table) (arr[0]) ), ((int) (global::haxe.lang.Runtime.toInt(arr[1])) ));
			}
		}
		
		
		public global::haxe.ds.IntMap<object> values;
		
		public int size;
		
		public global::thx.text.Table table;
		
		public int index;
		
		public global::thx.text.table.IStyle style;
		
		public virtual global::thx.text.table.Cell @get(int index) {
			return ((global::thx.text.table.Cell) ((this.values.@get(index)).@value) );
		}
		
		
		public virtual object iterator() {
			return ((object) (new global::haxe.ds._IntMap.IntMapValueIterator<object>(((global::haxe.ds.IntMap<object>) (this.values) ))) );
		}
		
		
		public virtual void _set(int index, global::thx.text.table.Cell cell) {
			int b = this.size;
			this.size = ( (( index > b )) ? (index) : (b) );
			this.values.@set(index, cell);
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1041537810:
					{
						this.index = ((int) (@value) );
						return @value;
					}
					
					
					case 1280549057:
					{
						this.size = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 69051697:
					{
						this.style = ((global::thx.text.table.IStyle) (@value) );
						return @value;
					}
					
					
					case 1041537810:
					{
						this.index = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 182695950:
					{
						this.table = ((global::thx.text.Table) (@value) );
						return @value;
					}
					
					
					case 1280549057:
					{
						this.size = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1337394146:
					{
						this.values = ((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1059250339:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "_set", 1059250339)) );
					}
					
					
					case 328878574:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "iterator", 328878574)) );
					}
					
					
					case 5144726:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get", 5144726)) );
					}
					
					
					case 69051697:
					{
						return this.style;
					}
					
					
					case 1041537810:
					{
						return this.index;
					}
					
					
					case 182695950:
					{
						return this.table;
					}
					
					
					case 1280549057:
					{
						return this.size;
					}
					
					
					case 1337394146:
					{
						return this.values;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1041537810:
					{
						return ((double) (this.index) );
					}
					
					
					case 1280549057:
					{
						return ((double) (this.size) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1059250339:
					{
						this._set(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((global::thx.text.table.Cell) (dynargs[1]) ));
						break;
					}
					
					
					case 328878574:
					{
						return this.iterator();
					}
					
					
					case 5144726:
					{
						return this.@get(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("style");
			baseArr.push("index");
			baseArr.push("table");
			baseArr.push("size");
			baseArr.push("values");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


