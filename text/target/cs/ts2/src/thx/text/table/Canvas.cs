// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Canvas : global::haxe.lang.HxObject {
		
		public Canvas(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Canvas(int width, int height) {
			global::thx.text.table.Canvas.__hx_ctor_thx_text_table_Canvas(this, width, height);
		}
		
		
		public static void __hx_ctor_thx_text_table_Canvas(global::thx.text.table.Canvas __temp_me172, int width, int height) {
			__temp_me172.values = new global::Array<object>(new object[]{});
			__temp_me172.expand(width, height);
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.Canvas(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::thx.text.table.Canvas(((int) (global::haxe.lang.Runtime.toInt(arr[0])) ), ((int) (global::haxe.lang.Runtime.toInt(arr[1])) ));
			}
		}
		
		
		public int width;
		
		public int height;
		
		public global::Array<object> values;
		
		public virtual void expand(int width, int height) {
			{
				int _g1 = this.height;
				while (( _g1 < height )) {
					 ++ _g1;
					global::Array<object> _g2 = new global::Array<object>(new object[]{});
					{
						int _g4 = 0;
						while (( _g4 < width )) {
							 ++ _g4;
							_g2.push(global::thx.text.table.SymbolImpl.Empty);
						}
						
					}
					
					this.values.push(_g2);
				}
				
			}
			
			if (( width > this.width )) {
				int _g11 = 0;
				int _g = this.height;
				while (( _g11 < _g )) {
					global::Array<object> row = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (this.values[_g11++]) ))) );
					{
						int _g3 = this.width;
						while (( _g3 < width )) {
							 ++ _g3;
							row.push(global::thx.text.table.SymbolImpl.Empty);
						}
						
					}
					
				}
				
			}
			
			int a = this.width;
			this.width = ( (( a > width )) ? (a) : (width) );
			int a1 = this.height;
			this.height = ( (( a1 > height )) ? (a1) : (height) );
		}
		
		
		public virtual global::thx.text.table.SymbolImpl @get(int x, int y) {
			global::Array<object> row = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (this.values[y]) ))) );
			if (( null == row )) {
				return null;
			}
			
			return ((global::thx.text.table.SymbolImpl) (row[x]) );
		}
		
		
		public virtual void @set(int x, int y, global::thx.text.table.SymbolImpl symbol) {
			((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (this.values[y]) ))) )[x] = symbol;
		}
		
		
		public virtual void setChar(int x, int y, string @char) {
			this.@set(x, y, global::thx.text.table.SymbolImpl.Char(@char));
		}
		
		
		public virtual void combine(int x, int y, global::thx.text.table.SymbolImpl symbol) {
			((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (this.values[y]) ))) )[x] = global::thx.text.table._Canvas.Symbol_Impl_.combine(((global::thx.text.table.SymbolImpl) (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (this.values[y]) ))) )[x]) ), symbol);
		}
		
		
		public virtual void combineChar(int x, int y, string @char) {
			this.combine(x, y, global::thx.text.table.SymbolImpl.Char(@char));
		}
		
		
		public virtual void paintBlock(global::thx.text.table.StringBlock block, int x, int y, int width, int height, global::thx.text.table.HAlign halign, int symbolPos) {
			unchecked {
				int _g1 = 0;
				int _g = block.height;
				while (( _g1 < _g )) {
					int i = _g1++;
					global::Array<object> line = block.getLine(i);
					int len = line.length;
					int hoffset = default(int);
					switch (halign.index) {
						case 0:
						{
							hoffset = 0;
							break;
						}
						
						
						case 1:
						{
							hoffset = ( width - len );
							break;
						}
						
						
						case 2:
						{
							hoffset = ((int) (global::System.Math.Floor(((double) (( ((double) ((( width - len ))) ) / 2 )) ))) );
							break;
						}
						
						
						case 3:
						{
							int pos = line.lastIndexOf(global::haxe.lang.Runtime.toString(halign.@params[0]), default(global::haxe.lang.Null<int>));
							if (( pos < 0 )) {
								hoffset = ( width - (( len + symbolPos )) );
							}
							else if (( ( len - pos ) < symbolPos )) {
								hoffset = ( ( width - len ) - (( symbolPos - (( len - pos )) )) );
							}
							else {
								hoffset = ( width - len );
							}
							
							break;
						}
						
						
					}
					
					{
						int _g3 = 0;
						while (( _g3 < len )) {
							int j = _g3++;
							this.setChar(( ( x + hoffset ) + j ), ( y + i ), global::haxe.lang.Runtime.toString(line[j]));
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual void paintBorder(global::thx.text.table.CellType type, int x, int y, int w, int h) {
			unchecked {
				this.combine(x, y, this.pickTopLeft(type));
				this.combine(( ( x + w ) - 1 ), y, this.pickTopRight(type));
				this.combine(x, ( ( y + h ) - 1 ), this.pickBottomLeft(type));
				this.combine(( ( x + w ) - 1 ), ( ( y + h ) - 1 ), this.pickBottomRight(type));
				{
					int _g1 = 1;
					int _g = ( w - 1 );
					while (( _g1 < _g )) {
						int i = _g1++;
						this.combine(( x + i ), y, this.pickTop(type));
						this.combine(( x + i ), ( ( y + h ) - 1 ), this.pickBottom(type));
					}
					
				}
				
				{
					int _g11 = 1;
					int _g2 = ( h - 1 );
					while (( _g11 < _g2 )) {
						int i1 = _g11++;
						this.combine(x, ( y + i1 ), this.pickLeft(type));
						this.combine(( ( x + w ) - 1 ), ( y + i1 ), this.pickRight(type));
					}
					
				}
				
			}
		}
		
		
		public virtual void paintBottomLine(global::thx.text.table.CellType type, int x, int y, int w) {
			unchecked {
				this.combine(x, y, this.pickBottomLeft(type));
				this.combine(( ( x + w ) - 1 ), y, this.pickBottomRight(type));
				{
					int _g1 = 1;
					int _g = ( w - 1 );
					while (( _g1 < _g )) {
						this.combine(( x + _g1++ ), y, this.pickBottom(type));
					}
					
				}
				
			}
		}
		
		
		public virtual global::thx.text.table.BorderStyle typeToBorder(global::thx.text.table.CellType type) {
			unchecked {
				switch (type.index) {
					case 0:
					case 1:
					{
						return global::thx.text.table.BorderStyle.Double;
					}
					
					
					default:
					{
						return global::thx.text.table.BorderStyle.Normal;
					}
					
				}
				
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickTopLeft(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
					case 0:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, this.typeToBorder(type), this.typeToBorder(type), global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
					case 3:
					{
						tmp = global::thx.text.table.Border.RemovableCross(global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickTopRight(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
					case 0:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, this.typeToBorder(type), this.typeToBorder(type));
						break;
					}
					
					
					case 3:
					{
						tmp = global::thx.text.table.Border.RemovableCross(global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickBottomLeft(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
					case 0:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(this.typeToBorder(type), this.typeToBorder(type), global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
					case 3:
					{
						tmp = global::thx.text.table.Border.RemovableCross(this.typeToBorder(type), global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickBottomRight(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, this.typeToBorder(type));
						break;
					}
					
					
					case 0:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(this.typeToBorder(type), global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, this.typeToBorder(type));
						break;
					}
					
					
					case 3:
					{
						tmp = global::thx.text.table.Border.RemovableCross(this.typeToBorder(type), global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None, global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickTop(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					case 3:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
					case 0:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None, this.typeToBorder(type));
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickBottom(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 0:
					case 1:
					case 2:
					{
						tmp = global::thx.text.table.Border.Cross(global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None, this.typeToBorder(type));
						break;
					}
					
					
					case 3:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickLeft(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
					case 0:
					case 2:
					case 3:
					{
						tmp = global::thx.text.table.Border.Cross(this.typeToBorder(type), global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual global::thx.text.table.SymbolImpl pickRight(global::thx.text.table.CellType type) {
			unchecked {
				global::thx.text.table.Border tmp = null;
				switch (type.index) {
					case 1:
					{
						tmp = global::thx.text.table.Border.Removable;
						break;
					}
					
					
					case 0:
					case 2:
					case 3:
					{
						tmp = global::thx.text.table.Border.Cross(this.typeToBorder(type), global::thx.text.table.BorderStyle.None, this.typeToBorder(type), global::thx.text.table.BorderStyle.None);
						break;
					}
					
					
				}
				
				return global::thx.text.table.SymbolImpl.Border(tmp);
			}
		}
		
		
		public virtual string render(global::thx.text.table.SymbolImpl symbol) {
			unchecked {
				switch (symbol.index) {
					case 0:
					{
						return " ";
					}
					
					
					case 1:
					{
						return global::haxe.lang.Runtime.toString(((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]);
					}
					
					
					case 2:
					{
						switch (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).index) {
							case 0:
							{
								return " ";
							}
							
							
							case 1:
							{
								switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[0]) ).index) {
									case 0:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return " ";
															}
															
															
															case 1:
															{
																return "\u2574";
															}
															
															
															case 2:
															{
																return "\u2578";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2577";
															}
															
															
															case 1:
															{
																return "\u2510";
															}
															
															
															case 2:
															{
																return "\u2511";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257b";
															}
															
															
															case 1:
															{
																return "\u2512";
															}
															
															
															case 2:
															{
																return "\u2513";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2576";
															}
															
															
															case 1:
															{
																return "\u2500";
															}
															
															
															case 2:
															{
																return "\u257e";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250c";
															}
															
															
															case 1:
															{
																return "\u252c";
															}
															
															
															case 2:
															{
																return "\u252d";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250e";
															}
															
															
															case 1:
															{
																return "\u2530";
															}
															
															
															case 2:
															{
																return "\u2531";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257a";
															}
															
															
															case 1:
															{
																return "\u257c";
															}
															
															
															case 2:
															{
																return "\u2501";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250d";
															}
															
															
															case 1:
															{
																return "\u252e";
															}
															
															
															case 2:
															{
																return "\u252f";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250f";
															}
															
															
															case 1:
															{
																return "\u2532";
															}
															
															
															case 2:
															{
																return "\u2533";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
									case 1:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2575";
															}
															
															
															case 1:
															{
																return "\u2518";
															}
															
															
															case 2:
															{
																return "\u2519";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2502";
															}
															
															
															case 1:
															{
																return "\u2524";
															}
															
															
															case 2:
															{
																return "\u2525";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257d";
															}
															
															
															case 1:
															{
																return "\u2527";
															}
															
															
															case 2:
															{
																return "\u252a";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2514";
															}
															
															
															case 1:
															{
																return "\u2534";
															}
															
															
															case 2:
															{
																return "\u2535";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251c";
															}
															
															
															case 1:
															{
																return "\u253c";
															}
															
															
															case 2:
															{
																return "\u253d";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251f";
															}
															
															
															case 1:
															{
																return "\u2541";
															}
															
															
															case 2:
															{
																return "\u2545";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2515";
															}
															
															
															case 1:
															{
																return "\u2536";
															}
															
															
															case 2:
															{
																return "\u2537";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251d";
															}
															
															
															case 1:
															{
																return "\u253e";
															}
															
															
															case 2:
															{
																return "\u253f";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2522";
															}
															
															
															case 1:
															{
																return "\u2546";
															}
															
															
															case 2:
															{
																return "\u2548";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
									case 2:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2579";
															}
															
															
															case 1:
															{
																return "\u251a";
															}
															
															
															case 2:
															{
																return "\u251b";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257f";
															}
															
															
															case 1:
															{
																return "\u2526";
															}
															
															
															case 2:
															{
																return "\u2529";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2503";
															}
															
															
															case 1:
															{
																return "\u2528";
															}
															
															
															case 2:
															{
																return "\u252b";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2516";
															}
															
															
															case 1:
															{
																return "\u2538";
															}
															
															
															case 2:
															{
																return "\u2539";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251e";
															}
															
															
															case 1:
															{
																return "\u2540";
															}
															
															
															case 2:
															{
																return "\u2543";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2520";
															}
															
															
															case 1:
															{
																return "\u2542";
															}
															
															
															case 2:
															{
																return "\u2549";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2517";
															}
															
															
															case 1:
															{
																return "\u253a";
															}
															
															
															case 2:
															{
																return "\u253b";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2521";
															}
															
															
															case 1:
															{
																return "\u2544";
															}
															
															
															case 2:
															{
																return "\u2547";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2523";
															}
															
															
															case 1:
															{
																return "\u254a";
															}
															
															
															case 2:
															{
																return "\u254b";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
								}
								
								break;
							}
							
							
							case 2:
							{
								switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[0]) ).index) {
									case 0:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return " ";
															}
															
															
															case 1:
															{
																return "\u2574";
															}
															
															
															case 2:
															{
																return "\u2578";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2577";
															}
															
															
															case 1:
															{
																return "\u2510";
															}
															
															
															case 2:
															{
																return "\u2511";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257b";
															}
															
															
															case 1:
															{
																return "\u2512";
															}
															
															
															case 2:
															{
																return "\u2513";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2576";
															}
															
															
															case 1:
															{
																return "\u2500";
															}
															
															
															case 2:
															{
																return "\u257e";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250c";
															}
															
															
															case 1:
															{
																return "\u252c";
															}
															
															
															case 2:
															{
																return "\u252d";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250e";
															}
															
															
															case 1:
															{
																return "\u2530";
															}
															
															
															case 2:
															{
																return "\u2531";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257a";
															}
															
															
															case 1:
															{
																return "\u257c";
															}
															
															
															case 2:
															{
																return "\u2501";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250d";
															}
															
															
															case 1:
															{
																return "\u252e";
															}
															
															
															case 2:
															{
																return "\u252f";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u250f";
															}
															
															
															case 1:
															{
																return "\u2532";
															}
															
															
															case 2:
															{
																return "\u2533";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
									case 1:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2575";
															}
															
															
															case 1:
															{
																return "\u2518";
															}
															
															
															case 2:
															{
																return "\u2519";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2502";
															}
															
															
															case 1:
															{
																return "\u2524";
															}
															
															
															case 2:
															{
																return "\u2525";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257d";
															}
															
															
															case 1:
															{
																return "\u2527";
															}
															
															
															case 2:
															{
																return "\u252a";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2514";
															}
															
															
															case 1:
															{
																return "\u2534";
															}
															
															
															case 2:
															{
																return "\u2535";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251c";
															}
															
															
															case 1:
															{
																return "\u253c";
															}
															
															
															case 2:
															{
																return "\u253d";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251f";
															}
															
															
															case 1:
															{
																return "\u2541";
															}
															
															
															case 2:
															{
																return "\u2545";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2515";
															}
															
															
															case 1:
															{
																return "\u2536";
															}
															
															
															case 2:
															{
																return "\u2537";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251d";
															}
															
															
															case 1:
															{
																return "\u253e";
															}
															
															
															case 2:
															{
																return "\u253f";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2522";
															}
															
															
															case 1:
															{
																return "\u2546";
															}
															
															
															case 2:
															{
																return "\u2548";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
									case 2:
									{
										switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[1]) ).index) {
											case 0:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2579";
															}
															
															
															case 1:
															{
																return "\u251a";
															}
															
															
															case 2:
															{
																return "\u251b";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u257f";
															}
															
															
															case 1:
															{
																return "\u2526";
															}
															
															
															case 2:
															{
																return "\u2529";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2503";
															}
															
															
															case 1:
															{
																return "\u2528";
															}
															
															
															case 2:
															{
																return "\u252b";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 1:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2516";
															}
															
															
															case 1:
															{
																return "\u2538";
															}
															
															
															case 2:
															{
																return "\u2539";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u251e";
															}
															
															
															case 1:
															{
																return "\u2540";
															}
															
															
															case 2:
															{
																return "\u2543";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2520";
															}
															
															
															case 1:
															{
																return "\u2542";
															}
															
															
															case 2:
															{
																return "\u2549";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
											case 2:
											{
												switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[2]) ).index) {
													case 0:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2517";
															}
															
															
															case 1:
															{
																return "\u253a";
															}
															
															
															case 2:
															{
																return "\u253b";
															}
															
															
														}
														
														break;
													}
													
													
													case 1:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2521";
															}
															
															
															case 1:
															{
																return "\u2544";
															}
															
															
															case 2:
															{
																return "\u2547";
															}
															
															
														}
														
														break;
													}
													
													
													case 2:
													{
														switch (((global::thx.text.table.BorderStyle) (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).@params[3]) ).index) {
															case 0:
															{
																return "\u2523";
															}
															
															
															case 1:
															{
																return "\u254a";
															}
															
															
															case 2:
															{
																return "\u254b";
															}
															
															
														}
														
														break;
													}
													
													
												}
												
												break;
											}
											
											
										}
										
										break;
									}
									
									
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string toString() {
			global::thx.text.table.Canvas _gthis = this;
			return this.values.filter(( (( global::thx.text.table.Canvas_toString_358__Fun.__hx_current != null )) ? (global::thx.text.table.Canvas_toString_358__Fun.__hx_current) : (global::thx.text.table.Canvas_toString_358__Fun.__hx_current = ((global::thx.text.table.Canvas_toString_358__Fun) (new global::thx.text.table.Canvas_toString_358__Fun()) )) )).map<object>(((global::haxe.lang.Function) (new global::thx.text.table.Canvas_toString_366__Fun(_gthis)) )).@join("\n");
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 38537191:
					{
						this.height = ((int) (@value) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1337394146:
					{
						this.values = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 38537191:
					{
						this.height = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 86600534:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "render", 86600534)) );
					}
					
					
					case 417121083:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickRight", 417121083)) );
					}
					
					
					case 2015207816:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickLeft", 2015207816)) );
					}
					
					
					case 1067492012:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickBottom", 1067492012)) );
					}
					
					
					case 1954691124:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickTop", 1954691124)) );
					}
					
					
					case 784837008:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickBottomRight", 784837008)) );
					}
					
					
					case 890150099:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickBottomLeft", 890150099)) );
					}
					
					
					case 932382472:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickTopRight", 932382472)) );
					}
					
					
					case 1901958747:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "pickTopLeft", 1901958747)) );
					}
					
					
					case 1924918689:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "typeToBorder", 1924918689)) );
					}
					
					
					case 1443572157:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "paintBottomLine", 1443572157)) );
					}
					
					
					case 1184891690:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "paintBorder", 1184891690)) );
					}
					
					
					case 193384655:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "paintBlock", 193384655)) );
					}
					
					
					case 1241997557:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "combineChar", 1241997557)) );
					}
					
					
					case 2049845887:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "combine", 2049845887)) );
					}
					
					
					case 121872280:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setChar", 121872280)) );
					}
					
					
					case 5741474:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set", 5741474)) );
					}
					
					
					case 5144726:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get", 5144726)) );
					}
					
					
					case 1148382810:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "expand", 1148382810)) );
					}
					
					
					case 1337394146:
					{
						return this.values;
					}
					
					
					case 38537191:
					{
						return this.height;
					}
					
					
					case 1247983110:
					{
						return this.width;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 38537191:
					{
						return ((double) (this.height) );
					}
					
					
					case 1247983110:
					{
						return ((double) (this.width) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return this.toString();
					}
					
					
					case 86600534:
					{
						return this.render(((global::thx.text.table.SymbolImpl) (dynargs[0]) ));
					}
					
					
					case 417121083:
					{
						return this.pickRight(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 2015207816:
					{
						return this.pickLeft(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1067492012:
					{
						return this.pickBottom(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1954691124:
					{
						return this.pickTop(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 784837008:
					{
						return this.pickBottomRight(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 890150099:
					{
						return this.pickBottomLeft(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 932382472:
					{
						return this.pickTopRight(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1901958747:
					{
						return this.pickTopLeft(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1924918689:
					{
						return this.typeToBorder(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1443572157:
					{
						this.paintBottomLine(((global::thx.text.table.CellType) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[3])) ));
						break;
					}
					
					
					case 1184891690:
					{
						this.paintBorder(((global::thx.text.table.CellType) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[3])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[4])) ));
						break;
					}
					
					
					case 193384655:
					{
						this.paintBlock(((global::thx.text.table.StringBlock) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[3])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[4])) ), ((global::thx.text.table.HAlign) (dynargs[5]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[6])) ));
						break;
					}
					
					
					case 1241997557:
					{
						this.combineChar(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), global::haxe.lang.Runtime.toString(dynargs[2]));
						break;
					}
					
					
					case 2049845887:
					{
						this.combine(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((global::thx.text.table.SymbolImpl) (dynargs[2]) ));
						break;
					}
					
					
					case 121872280:
					{
						this.setChar(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), global::haxe.lang.Runtime.toString(dynargs[2]));
						break;
					}
					
					
					case 5741474:
					{
						this.@set(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((global::thx.text.table.SymbolImpl) (dynargs[2]) ));
						break;
					}
					
					
					case 5144726:
					{
						return this.@get(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 1148382810:
					{
						this.expand(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("values");
			baseArr.push("height");
			baseArr.push("width");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Canvas_toString_367__Fun : global::haxe.lang.Function {
		
		public Canvas_toString_367__Fun(global::thx.text.table.Canvas _gthis) : base(2, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::thx.text.table.SymbolImpl symbol1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.SymbolImpl) (((object) (__fn_float2) )) )) : (((global::thx.text.table.SymbolImpl) (__fn_dyn2) )) );
			string buff = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::haxe.lang.Runtime.concat(buff, this._gthis.render(symbol1));
		}
		
		
		public global::thx.text.table.Canvas _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Canvas_toString_366__Fun : global::haxe.lang.Function {
		
		public Canvas_toString_366__Fun(global::thx.text.table.Canvas _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<object> row1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (__fn_dyn1) ))) )) );
			return global::haxe.lang.Runtime.toString(global::thx.Arrays.reduce<object, object>(((global::Array<object>) (row1) ), ((global::haxe.lang.Function) (new global::thx.text.table.Canvas_toString_367__Fun(this._gthis)) ), ((object) ("") )));
		}
		
		
		public global::thx.text.table.Canvas _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Canvas_toString_359__Fun : global::haxe.lang.Function {
		
		public Canvas_toString_359__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.Canvas_toString_359__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.text.table.SymbolImpl symbol = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.SymbolImpl) (((object) (__fn_float1) )) )) : (((global::thx.text.table.SymbolImpl) (__fn_dyn1) )) );
				if (( symbol.index == 2 )) {
					switch (((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (symbol) ).@params[0]) ).index) {
						case 0:
						case 1:
						{
							return true;
						}
						
						
						default:
						{
							return false;
						}
						
					}
					
				}
				else {
					return false;
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Canvas_toString_358__Fun : global::haxe.lang.Function {
		
		public Canvas_toString_358__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.Canvas_toString_358__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<object> row = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (__fn_dyn1) ))) )) );
			return  ! (global::thx.Arrays.all<object>(((global::Array<object>) (row) ), ((global::haxe.lang.Function) (( (( global::thx.text.table.Canvas_toString_359__Fun.__hx_current != null )) ? (global::thx.text.table.Canvas_toString_359__Fun.__hx_current) : (global::thx.text.table.Canvas_toString_359__Fun.__hx_current = ((global::thx.text.table.Canvas_toString_359__Fun) (new global::thx.text.table.Canvas_toString_359__Fun()) )) )) ))) ;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table._Canvas {
	public sealed class Symbol_Impl_ {
		
		public static global::thx.text.table.SymbolImpl combine(global::thx.text.table.SymbolImpl this1, global::thx.text.table.SymbolImpl that) {
			unchecked {
				if (( null == this1 )) {
					return that;
				}
				
				if (( null == that )) {
					return this1;
				}
				
				switch (this1.index) {
					case 0:
					{
						return that;
					}
					
					
					case 2:
					{
						switch (that.index) {
							case 0:
							{
								return this1;
							}
							
							
							case 2:
							{
								return global::thx.text.table.SymbolImpl.Border(global::thx.text.table._Canvas.Symbol_Impl_.mergeBorders(((global::thx.text.table.Border) (this1.@params[0]) ), ((global::thx.text.table.Border) (((global::thx.text.table.SymbolImpl) (that) ).@params[0]) )));
							}
							
							
							default:
							{
								return that;
							}
							
						}
						
					}
					
					
					default:
					{
						if (( that.index == 0 )) {
							return this1;
						}
						else {
							return that;
						}
						
					}
					
				}
				
			}
		}
		
		
		public static global::thx.text.table.Border mergeBorders(global::thx.text.table.Border b1, global::thx.text.table.Border b2) {
			unchecked {
				switch (b1.index) {
					case 0:
					{
						switch (b2.index) {
							case 0:
							{
								return b1;
							}
							
							
							case 1:
							{
								return b2;
							}
							
							
							case 2:
							{
								return b2;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						switch (b2.index) {
							case 0:
							{
								return b1;
							}
							
							
							case 1:
							{
								return global::thx.text.table.Border.RemovableCross(((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[0]) ), ((global::thx.text.table.BorderStyle) (b2.@params[0]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[1]) ), ((global::thx.text.table.BorderStyle) (b2.@params[1]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[2]) ), ((global::thx.text.table.BorderStyle) (b2.@params[2]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[3]) ), ((global::thx.text.table.BorderStyle) (b2.@params[3]) ))) ));
							}
							
							
							case 2:
							{
								return global::thx.text.table.Border.Cross(((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[0]) ), ((global::thx.text.table.BorderStyle) (b2.@params[0]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[1]) ), ((global::thx.text.table.BorderStyle) (b2.@params[1]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[2]) ), ((global::thx.text.table.BorderStyle) (b2.@params[2]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[3]) ), ((global::thx.text.table.BorderStyle) (b2.@params[3]) ))) ));
							}
							
							
						}
						
						break;
					}
					
					
					case 2:
					{
						switch (b2.index) {
							case 0:
							{
								return b1;
							}
							
							
							case 1:
							{
								return global::thx.text.table.Border.Cross(((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[0]) ), ((global::thx.text.table.BorderStyle) (b2.@params[0]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[1]) ), ((global::thx.text.table.BorderStyle) (b2.@params[1]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[2]) ), ((global::thx.text.table.BorderStyle) (b2.@params[2]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[3]) ), ((global::thx.text.table.BorderStyle) (b2.@params[3]) ))) ));
							}
							
							
							case 2:
							{
								return global::thx.text.table.Border.Cross(((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[0]) ), ((global::thx.text.table.BorderStyle) (b2.@params[0]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[1]) ), ((global::thx.text.table.BorderStyle) (b2.@params[1]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[2]) ), ((global::thx.text.table.BorderStyle) (b2.@params[2]) ))) ), ((global::thx.text.table.BorderStyle) (global::thx.Enums.max<object>(((global::thx.text.table.BorderStyle) (b1.@params[3]) ), ((global::thx.text.table.BorderStyle) (b2.@params[3]) ))) ));
							}
							
							
						}
						
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class SymbolImpl : global::haxe.lang.ParamEnum {
		
		public SymbolImpl(int index, object[] @params) : base(index, @params) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Empty", "Char", "Border"};
		
		public static readonly global::thx.text.table.SymbolImpl Empty = new global::thx.text.table.SymbolImpl(0, null);
		
		public static global::thx.text.table.SymbolImpl Char(string s) {
			unchecked {
				return new global::thx.text.table.SymbolImpl(1, new object[]{s});
			}
		}
		
		
		public static global::thx.text.table.SymbolImpl Border(global::thx.text.table.Border b) {
			unchecked {
				return new global::thx.text.table.SymbolImpl(2, new object[]{b});
			}
		}
		
		
		public override string getTag() {
			return global::thx.text.table.SymbolImpl.__hx_constructs[this.index];
		}
		
		
	}
}


