// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text {
	public class TestInflections : global::haxe.lang.HxObject {
		
		public TestInflections(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestInflections() {
			global::thx.text.TestInflections.__hx_ctor_thx_text_TestInflections(this);
		}
		
		
		public static void __hx_ctor_thx_text_TestInflections(global::thx.text.TestInflections __temp_me172) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.TestInflections(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.text.TestInflections();
		}
		
		
		public virtual void testUncountable() {
			unchecked {
				global::utest.Assert.@equals("information", global::thx.text.Inflections.pluralize("information"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testUncountable", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (10) )}));
				global::utest.Assert.@equals("news", global::thx.text.Inflections.pluralize("news"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testUncountable", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
			}
		}
		
		
		public virtual void testPluralize() {
			unchecked {
				global::utest.Assert.@equals("days", global::thx.text.Inflections.pluralize("day"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPluralize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
				global::utest.Assert.@equals("women", global::thx.text.Inflections.pluralize("woman"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPluralize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				global::utest.Assert.@equals("autobuses", global::thx.text.Inflections.pluralize("autobus"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPluralize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
				global::utest.Assert.@equals("quizzes", global::thx.text.Inflections.pluralize("quiz"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPluralize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
			}
		}
		
		
		public virtual void testSingularize() {
			unchecked {
				global::utest.Assert.@equals("day", global::thx.text.Inflections.singularize("days"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSingularize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
				global::utest.Assert.@equals("woman", global::thx.text.Inflections.singularize("women"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSingularize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
				global::utest.Assert.@equals("autobus", global::thx.text.Inflections.singularize("autobuses"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSingularize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
				global::utest.Assert.@equals("quiz", global::thx.text.Inflections.singularize("quizzes"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSingularize", "thx.text.TestInflections", "TestInflections.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 330185643:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testSingularize", 330185643)) );
					}
					
					
					case 1437622942:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testPluralize", 1437622942)) );
					}
					
					
					case 1109735742:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testUncountable", 1109735742)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 330185643:
					{
						this.testSingularize();
						break;
					}
					
					
					case 1437622942:
					{
						this.testPluralize();
						break;
					}
					
					
					case 1109735742:
					{
						this.testUncountable();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


