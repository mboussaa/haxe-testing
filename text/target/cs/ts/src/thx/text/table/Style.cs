// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public interface IStyle : global::haxe.lang.IHxObject {
		
		global::thx.text.table.CellType get_type();
		
		global::thx.text.table.CellType set_type(global::thx.text.table.CellType @value);
		
		int get_minWidth();
		
		int set_minWidth(int @value);
		
		global::haxe.lang.Null<int> get_maxWidth();
		
		global::haxe.lang.Null<int> set_maxWidth(global::haxe.lang.Null<int> @value);
		
		int get_minHeight();
		
		int set_minHeight(int @value);
		
		global::haxe.lang.Null<int> get_maxHeight();
		
		global::haxe.lang.Null<int> set_maxHeight(global::haxe.lang.Null<int> @value);
		
		global::haxe.lang.Function get_formatter();
		
		global::haxe.lang.Function set_formatter(global::haxe.lang.Function @value);
		
		global::haxe.lang.Function get_aligner();
		
		global::haxe.lang.Function set_aligner(global::haxe.lang.Function @value);
		
		void setAlign(global::thx.text.table.HAlign align);
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Style : global::haxe.lang.HxObject, global::thx.text.table.IStyle {
		
		public Style(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Style() {
			global::thx.text.table.Style.__hx_ctor_thx_text_table_Style(this);
		}
		
		
		public static void __hx_ctor_thx_text_table_Style(global::thx.text.table.Style __temp_me182) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.Style(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.text.table.Style();
		}
		
		
		public global::thx.text.table.CellType type;
		
		public global::haxe.lang.Null<int> maxHeight;
		
		public int minHeight;
		
		public global::haxe.lang.Null<int> maxWidth;
		
		public int minWidth;
		
		public global::haxe.lang.Function formatter;
		
		public global::haxe.lang.Function aligner;
		
		public virtual void setAlign(global::thx.text.table.HAlign align) {
			this.set_aligner(new global::thx.text.table.Style_setAlign_22__Fun(align));
		}
		
		
		public virtual global::thx.text.table.CellType get_type() {
			return this.type;
		}
		
		
		public virtual global::thx.text.table.CellType set_type(global::thx.text.table.CellType @value) {
			return this.type = @value;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_maxHeight() {
			return this.maxHeight;
		}
		
		
		public virtual global::haxe.lang.Null<int> set_maxHeight(global::haxe.lang.Null<int> @value) {
			return this.maxHeight = @value;
		}
		
		
		public virtual int get_minHeight() {
			return this.minHeight;
		}
		
		
		public virtual int set_minHeight(int @value) {
			return this.minHeight = @value;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_maxWidth() {
			return this.maxWidth;
		}
		
		
		public virtual global::haxe.lang.Null<int> set_maxWidth(global::haxe.lang.Null<int> @value) {
			return this.maxWidth = @value;
		}
		
		
		public virtual int get_minWidth() {
			return this.minWidth;
		}
		
		
		public virtual int set_minWidth(int @value) {
			return this.minWidth = @value;
		}
		
		
		public virtual global::haxe.lang.Function get_formatter() {
			return this.formatter;
		}
		
		
		public virtual global::haxe.lang.Function set_formatter(global::haxe.lang.Function @value) {
			return this.formatter = @value;
		}
		
		
		public virtual global::haxe.lang.Function get_aligner() {
			return this.aligner;
		}
		
		
		public virtual global::haxe.lang.Function set_aligner(global::haxe.lang.Function @value) {
			return this.aligner = @value;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1100620564:
					{
						if (handleProperties) {
							this.set_minWidth(((int) (@value) ));
							return @value;
						}
						else {
							this.minWidth = ((int) (@value) );
							return @value;
						}
						
					}
					
					
					case 1536427801:
					{
						if (handleProperties) {
							this.set_minHeight(((int) (@value) ));
							return @value;
						}
						else {
							this.minHeight = ((int) (@value) );
							return @value;
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 698919538:
					{
						if (handleProperties) {
							this.set_aligner(((global::haxe.lang.Function) (@value) ));
							return @value;
						}
						else {
							this.aligner = ((global::haxe.lang.Function) (@value) );
							return @value;
						}
						
					}
					
					
					case 426240778:
					{
						if (handleProperties) {
							this.set_formatter(((global::haxe.lang.Function) (@value) ));
							return @value;
						}
						else {
							this.formatter = ((global::haxe.lang.Function) (@value) );
							return @value;
						}
						
					}
					
					
					case 1100620564:
					{
						if (handleProperties) {
							this.set_minWidth(((int) (global::haxe.lang.Runtime.toInt(@value)) ));
							return @value;
						}
						else {
							this.minWidth = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
							return @value;
						}
						
					}
					
					
					case 1954547906:
					{
						if (handleProperties) {
							this.set_maxWidth(global::haxe.lang.Null<object>.ofDynamic<int>(@value));
							return @value;
						}
						else {
							this.maxWidth = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
							return @value;
						}
						
					}
					
					
					case 1536427801:
					{
						if (handleProperties) {
							this.set_minHeight(((int) (global::haxe.lang.Runtime.toInt(@value)) ));
							return @value;
						}
						else {
							this.minHeight = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
							return @value;
						}
						
					}
					
					
					case 836180395:
					{
						if (handleProperties) {
							this.set_maxHeight(global::haxe.lang.Null<object>.ofDynamic<int>(@value));
							return @value;
						}
						else {
							this.maxHeight = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
							return @value;
						}
						
					}
					
					
					case 1292432058:
					{
						if (handleProperties) {
							this.set_type(((global::thx.text.table.CellType) (@value) ));
							return @value;
						}
						else {
							this.type = ((global::thx.text.table.CellType) (@value) );
							return @value;
						}
						
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 974131605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_aligner", 974131605)) );
					}
					
					
					case 799214217:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_aligner", 799214217)) );
					}
					
					
					case 533831917:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_formatter", 533831917)) );
					}
					
					
					case 1523302113:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_formatter", 1523302113)) );
					}
					
					
					case 195885713:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minWidth", 195885713)) );
					}
					
					
					case 1991497501:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minWidth", 1991497501)) );
					}
					
					
					case 1049813055:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxWidth", 1049813055)) );
					}
					
					
					case 697941195:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxWidth", 697941195)) );
					}
					
					
					case 1644018940:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minHeight", 1644018940)) );
					}
					
					
					case 486005488:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minHeight", 486005488)) );
					}
					
					
					case 943771534:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxHeight", 943771534)) );
					}
					
					
					case 1933241730:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxHeight", 1933241730)) );
					}
					
					
					case 2065762231:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_type", 2065762231)) );
					}
					
					
					case 1287892547:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_type", 1287892547)) );
					}
					
					
					case 801488835:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setAlign", 801488835)) );
					}
					
					
					case 698919538:
					{
						if (handleProperties) {
							return this.get_aligner();
						}
						else {
							return this.aligner;
						}
						
					}
					
					
					case 426240778:
					{
						if (handleProperties) {
							return this.get_formatter();
						}
						else {
							return this.formatter;
						}
						
					}
					
					
					case 1100620564:
					{
						if (handleProperties) {
							return this.get_minWidth();
						}
						else {
							return this.minWidth;
						}
						
					}
					
					
					case 1954547906:
					{
						if (handleProperties) {
							return (this.get_maxWidth()).toDynamic();
						}
						else {
							return (this.maxWidth).toDynamic();
						}
						
					}
					
					
					case 1536427801:
					{
						if (handleProperties) {
							return this.get_minHeight();
						}
						else {
							return this.minHeight;
						}
						
					}
					
					
					case 836180395:
					{
						if (handleProperties) {
							return (this.get_maxHeight()).toDynamic();
						}
						else {
							return (this.maxHeight).toDynamic();
						}
						
					}
					
					
					case 1292432058:
					{
						if (handleProperties) {
							return this.get_type();
						}
						else {
							return this.type;
						}
						
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1100620564:
					{
						if (handleProperties) {
							return ((double) (this.get_minWidth()) );
						}
						else {
							return ((double) (this.minWidth) );
						}
						
					}
					
					
					case 1536427801:
					{
						if (handleProperties) {
							return ((double) (this.get_minHeight()) );
						}
						else {
							return ((double) (this.minHeight) );
						}
						
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 974131605:
					{
						return this.set_aligner(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 799214217:
					{
						return this.get_aligner();
					}
					
					
					case 533831917:
					{
						return this.set_formatter(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1523302113:
					{
						return this.get_formatter();
					}
					
					
					case 195885713:
					{
						return this.set_minWidth(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1991497501:
					{
						return this.get_minWidth();
					}
					
					
					case 1049813055:
					{
						return (this.set_maxWidth(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]))).toDynamic();
					}
					
					
					case 697941195:
					{
						return (this.get_maxWidth()).toDynamic();
					}
					
					
					case 1644018940:
					{
						return this.set_minHeight(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 486005488:
					{
						return this.get_minHeight();
					}
					
					
					case 943771534:
					{
						return (this.set_maxHeight(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]))).toDynamic();
					}
					
					
					case 1933241730:
					{
						return (this.get_maxHeight()).toDynamic();
					}
					
					
					case 2065762231:
					{
						return this.set_type(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1287892547:
					{
						return this.get_type();
					}
					
					
					case 801488835:
					{
						this.setAlign(((global::thx.text.table.HAlign) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("aligner");
			baseArr.push("formatter");
			baseArr.push("minWidth");
			baseArr.push("maxWidth");
			baseArr.push("minHeight");
			baseArr.push("maxHeight");
			baseArr.push("type");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Style_setAlign_22__Fun : global::haxe.lang.Function {
		
		public Style_setAlign_22__Fun(global::thx.text.table.HAlign align) : base(2, 0) {
			this.align = align;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::thx.text.table.CellType _1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellType) (((object) (__fn_float2) )) )) : (((global::thx.text.table.CellType) (__fn_dyn2) )) );
			global::thx.text.table.CellValueImpl _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellValueImpl) (((object) (__fn_float1) )) )) : (((global::thx.text.table.CellValueImpl) (__fn_dyn1) )) );
			return this.align;
		}
		
		
		public global::thx.text.table.HAlign align;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class CompositeStyle : global::thx.text.table.Style {
		
		public CompositeStyle(global::haxe.lang.EmptyObject empty) : base(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) )) {
		}
		
		
		public CompositeStyle(global::Array<object> parents) : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::thx.text.table.CompositeStyle.__hx_ctor_thx_text_table_CompositeStyle(this, parents);
		}
		
		
		public static void __hx_ctor_thx_text_table_CompositeStyle(global::thx.text.table.CompositeStyle __temp_me183, global::Array<object> parents) {
			global::thx.text.table.Style.__hx_ctor_thx_text_table_Style(__temp_me183);
			__temp_me183.parents = parents;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.CompositeStyle(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.text.table.CompositeStyle(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (arr[0]) ))) ));
		}
		
		
		public global::Array<object> parents;
		
		public override global::thx.text.table.CellType get_type() {
			return ((global::thx.text.table.CellType) ((this.getProperty<object>(((string) ("type") ))).@value) );
		}
		
		
		public override global::thx.text.table.CellType set_type(global::thx.text.table.CellType @value) {
			return this.type = @value;
		}
		
		
		public override global::haxe.lang.Null<int> get_maxHeight() {
			return this.getProperty<int>(((string) ("maxHeight") ));
		}
		
		
		public override global::haxe.lang.Null<int> set_maxHeight(global::haxe.lang.Null<int> @value) {
			return this.maxHeight = @value;
		}
		
		
		public override int get_minHeight() {
			return (this.getProperty<int>(((string) ("minHeight") ))).@value;
		}
		
		
		public override int set_minHeight(int @value) {
			return this.minHeight = @value;
		}
		
		
		public override global::haxe.lang.Null<int> get_maxWidth() {
			return this.getProperty<int>(((string) ("maxWidth") ));
		}
		
		
		public override global::haxe.lang.Null<int> set_maxWidth(global::haxe.lang.Null<int> @value) {
			return this.maxWidth = @value;
		}
		
		
		public override int get_minWidth() {
			return (this.getProperty<int>(((string) ("minWidth") ))).@value;
		}
		
		
		public override int set_minWidth(int @value) {
			return this.minWidth = @value;
		}
		
		
		public override global::haxe.lang.Function get_formatter() {
			return ((global::haxe.lang.Function) ((this.getProperty<object>(((string) ("formatter") ))).@value) );
		}
		
		
		public override global::haxe.lang.Function set_formatter(global::haxe.lang.Function @value) {
			return this.formatter = @value;
		}
		
		
		public override global::haxe.lang.Function get_aligner() {
			return ((global::haxe.lang.Function) ((this.getProperty<object>(((string) ("aligner") ))).@value) );
		}
		
		
		public override global::haxe.lang.Function set_aligner(global::haxe.lang.Function @value) {
			return this.aligner = @value;
		}
		
		
		public virtual global::haxe.lang.Null<T> getProperty<T>(string name) {
			global::haxe.lang.Null<T> @value = global::haxe.lang.Null<object>.ofDynamic<T>(global::Reflect.field(this, name));
			if (@value.hasValue) {
				return @value;
			}
			
			{
				int _g = 0;
				global::Array<object> _g1 = this.parents;
				while (( _g < _g1.length )) {
					global::thx.text.table.IStyle parent = ((global::thx.text.table.IStyle) (_g1[_g]) );
					 ++ _g;
					@value = global::haxe.lang.Null<object>.ofDynamic<T>(global::Reflect.getProperty(parent, name));
					if (@value.hasValue) {
						return @value;
					}
					
				}
				
			}
			
			return default(global::haxe.lang.Null<T>);
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1623621641:
					{
						this.parents = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1378618123:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getProperty", 1378618123)) );
					}
					
					
					case 974131605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_aligner", 974131605)) );
					}
					
					
					case 799214217:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_aligner", 799214217)) );
					}
					
					
					case 533831917:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_formatter", 533831917)) );
					}
					
					
					case 1523302113:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_formatter", 1523302113)) );
					}
					
					
					case 195885713:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minWidth", 195885713)) );
					}
					
					
					case 1991497501:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minWidth", 1991497501)) );
					}
					
					
					case 1049813055:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxWidth", 1049813055)) );
					}
					
					
					case 697941195:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxWidth", 697941195)) );
					}
					
					
					case 1644018940:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minHeight", 1644018940)) );
					}
					
					
					case 486005488:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minHeight", 486005488)) );
					}
					
					
					case 943771534:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxHeight", 943771534)) );
					}
					
					
					case 1933241730:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxHeight", 1933241730)) );
					}
					
					
					case 2065762231:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_type", 2065762231)) );
					}
					
					
					case 1287892547:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_type", 1287892547)) );
					}
					
					
					case 1623621641:
					{
						return this.parents;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1287892547:
					case 2065762231:
					case 1933241730:
					case 943771534:
					case 486005488:
					case 1644018940:
					case 697941195:
					case 1049813055:
					case 1991497501:
					case 195885713:
					case 1523302113:
					case 533831917:
					case 799214217:
					case 974131605:
					{
						return global::haxe.lang.Runtime.slowCallField(this, field, dynargs);
					}
					
					
					case 1378618123:
					{
						return (this.getProperty<object>(global::haxe.lang.Runtime.toString(dynargs[0]))).@value;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("parents");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class CellType : global::haxe.lang.Enum {
		
		public CellType(int index) : base(index) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Header", "HeaderCompact", "Body", "BodyCompact"};
		
		public static readonly global::thx.text.table.CellType Header = new global::thx.text.table.CellType(0);
		
		public static readonly global::thx.text.table.CellType HeaderCompact = new global::thx.text.table.CellType(1);
		
		public static readonly global::thx.text.table.CellType Body = new global::thx.text.table.CellType(2);
		
		public static readonly global::thx.text.table.CellType BodyCompact = new global::thx.text.table.CellType(3);
		
		public override string getTag() {
			return global::thx.text.table.CellType.__hx_constructs[this.index];
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle : global::haxe.lang.HxObject, global::thx.text.table.IStyle {
		
		static DefaultStyle() {
			unchecked {
				global::thx.text.table.DefaultStyle.instance = new global::thx.text.table.DefaultStyle();
				global::thx.text.table.DefaultStyle.defaultType = global::thx.text.table.CellType.BodyCompact;
				global::thx.text.table.DefaultStyle.defaultMaxHeight = default(global::haxe.lang.Null<int>);
				global::thx.text.table.DefaultStyle.defaultMinHeight = 1;
				global::thx.text.table.DefaultStyle.defaultMaxWidth = default(global::haxe.lang.Null<int>);
				global::thx.text.table.DefaultStyle.defaultMinWidth = 1;
				object __temp_stmt3 = null;
				{
					object o = null;
					{
						object __temp_odecl1 = new global::haxe.lang.DynamicObject(new int[]{41050500, 114759225, 177600534, 193568515, 214711673, 282949586, 311921353, 1112096333, 1293712380, 1484698101, 1543554379, 1610611779, 1660995221, 1798631236, 2037785099, 2058605085, 2062500402}, new object[]{"\u2030", "Infinity", "+", ",", ".", "-", "$", "%", new global::Array<int>(new int[]{3}), "-Infinity", ",", "NaN", ".", new global::Array<int>(new int[]{3}), ",", ".", new global::Array<int>(new int[]{3})}, new int[]{45312342, 253833312, 652148892, 822857114, 1437940672, 1531979784, 1747840398, 2013154798}, new double[]{((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (2) ), ((double) (2) ), ((double) (1) ), ((double) (2) )});
						object __temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{106319913, 354602035, 453240570, 529765024, 554059097, 584411450, 602680035, 635699692, 665670594, 667371489, 694450483, 699988920, 726839840, 726843185, 742587063, 816375999, 872279826, 908638873, 980455379, 990364012, 1055554178, 1079146715, 1273872862, 1528104702, 1700034528}, new object[]{"Gregorian", "yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'", "dddd, MMMM dd, yyyy h:mm:ss tt", "Gregorian Calendar", "FirstDay", "dddd, MMMM dd, yyyy", "yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss", new global::Array<object>(new object[]{"Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"}), "Sunday", new global::Array<object>(new object[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""}), "/", new global::Array<object>(new object[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""}), "AM", "PM", new global::Array<object>(new object[]{"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"}), "h:mm tt", ":", "h:mm:ss tt", "MMMM, yyyy", "MMMM dd", new global::Array<object>(new object[]{"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}), new global::Array<object>(new object[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""}), new global::Array<object>(new object[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""}), "M/d/yyyy", "ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'"}, new int[]{931922363, 1812362308}, new double[]{((double) (0) ), ((double) (0) )});
						o = new global::haxe.lang.DynamicObject(new int[]{106319913, 561678025, 647756354, 783564643, 1050456214, 1103409453, 1169453134, 1170148173, 1170148174, 1285332817, 1324904599, 1510669659, 1677577253, 1864919677, 1880264788}, new object[]{"Gregorian", __temp_odecl1, "English", ",", "United States", "en-US", "en-US", "en", "eng", "United States", "ENU", __temp_odecl2, "English", false, false}, new int[]{1202619922}, new double[]{((double) (1033) )});
					}
					
					object tmp = global::haxe.lang.Runtime.getField(o, "code", 1103409453, true);
					global::thx.culture.DateFormatInfo tmp1 = null;
					if (( null == global::haxe.lang.Runtime.getField(o, "dateTime", 1510669659, true) )) {
						tmp1 = null;
					}
					else {
						object o1 = global::haxe.lang.Runtime.getField(o, "dateTime", 1510669659, true);
						tmp1 = new global::thx.culture.DateFormatInfo(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o1, "calendarWeekRuleIndex", 1812362308, true))) ), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "calendarWeekRuleName", 554059097, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "designatorAm", 726839840, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "designatorPm", 726843185, true)), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o1, "firstDayOfWeekIndex", 931922363, true))) ), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "firstDayOfWeekName", 665670594, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "nameCalendar", 106319913, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "nameCalendarNative", 529765024, true)), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameDays", 1055554178, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameDaysAbbreviated", 742587063, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameDaysShortest", 635699692, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameMonths", 1273872862, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameMonthsAbbreviated", 1079146715, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameMonthGenitives", 667371489, true)) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(o1, "nameMonthGenitivesAbbreviated", 699988920, true)) ))) ), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternDateLong", 584411450, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternDateShort", 1528104702, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternDateTimeFull", 453240570, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternDateTimeSortable", 602680035, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternMonthDay", 990364012, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternRfc1123", 1700034528, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternTimeLong", 908638873, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternTimeShort", 816375999, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternUniversalSortable", 354602035, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "patternYearMonth", 980455379, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "separatorDate", 694450483, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o1, "separatorTime", 872279826, true)));
					}
					
					object tmp2 = global::haxe.lang.Runtime.getField(o, "ietf", 1169453134, true);
					object tmp3 = global::haxe.lang.Runtime.getField(o, "isNeutral", 1864919677, true);
					object tmp4 = global::haxe.lang.Runtime.getField(o, "iso2", 1170148173, true);
					object tmp5 = global::haxe.lang.Runtime.getField(o, "iso3", 1170148174, true);
					object tmp6 = global::haxe.lang.Runtime.getField(o, "isRightToLeft", 1880264788, true);
					object tmp7 = global::haxe.lang.Runtime.getField(o, "lcid", 1202619922, true);
					object tmp8 = global::haxe.lang.Runtime.getField(o, "nameCalendar", 106319913, true);
					object tmp9 = global::haxe.lang.Runtime.getField(o, "nameEnglish", 1677577253, true);
					object tmp10 = global::haxe.lang.Runtime.getField(o, "nameNative", 647756354, true);
					object tmp11 = global::haxe.lang.Runtime.getField(o, "nameRegionEnglish", 1285332817, true);
					object tmp12 = global::haxe.lang.Runtime.getField(o, "nameRegionNative", 1050456214, true);
					global::thx.culture.NumberFormatInfo tmp13 = null;
					if (( null == global::haxe.lang.Runtime.getField(o, "number", 561678025, true) )) {
						tmp13 = null;
					}
					else {
						object o2 = global::haxe.lang.Runtime.getField(o, "number", 561678025, true);
						tmp13 = new global::thx.culture.NumberFormatInfo(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "decimalDigitsCurrency", 1531979784, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "decimalDigitsNumber", 1437940672, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "decimalDigitsPercent", 2013154798, true))) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::haxe.lang.Runtime.getField(o2, "groupSizesCurrency", 1798631236, true)) ))) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::haxe.lang.Runtime.getField(o2, "groupSizesNumber", 1293712380, true)) ))) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::haxe.lang.Runtime.getField(o2, "groupSizesPercent", 2062500402, true)) ))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "patternNegativeCurrency", 45312342, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "patternNegativeNumber", 1747840398, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "patternNegativePercent", 253833312, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "patternPositiveCurrency", 822857114, true))) ), ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(o2, "patternPositivePercent", 652148892, true))) ), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorDecimalCurrency", 2058605085, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorDecimalNumber", 1660995221, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorDecimalPercent", 214711673, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorGroupCurrency", 2037785099, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorGroupNumber", 193568515, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "separatorGroupPercent", 1543554379, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "signNegative", 282949586, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "signPositive", 177600534, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolCurrency", 311921353, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolNaN", 1610611779, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolNegativeInfinity", 1484698101, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolPercent", 1112096333, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolPermille", 41050500, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o2, "symbolPositiveInfinity", 114759225, true)));
					}
					
					__temp_stmt3 = global::thx.culture.Culture.register(new global::thx.culture.Culture(global::haxe.lang.Runtime.toString(tmp), tmp1, global::haxe.lang.Runtime.toString(tmp2), global::haxe.lang.Runtime.toBool(tmp3), global::haxe.lang.Runtime.toString(tmp4), global::haxe.lang.Runtime.toString(tmp5), global::haxe.lang.Runtime.toBool(tmp6), ((int) (global::haxe.lang.Runtime.toInt(tmp7)) ), global::haxe.lang.Runtime.toString(tmp8), global::haxe.lang.Runtime.toString(tmp9), global::haxe.lang.Runtime.toString(tmp10), global::haxe.lang.Runtime.toString(tmp11), global::haxe.lang.Runtime.toString(tmp12), tmp13, global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o, "separatorList", 783564643, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o, "win3", 1324904599, true))));
				}
				
				global::thx.text.table.DefaultStyle.defaultCulture = ((global::thx.culture.Culture) (__temp_stmt3) );
				global::thx.text.table.DefaultStyle.defaultIntFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_138__Fun) (new global::thx.text.table.DefaultStyle_Anon_138__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultFloatFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_139__Fun) (new global::thx.text.table.DefaultStyle_Anon_139__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultStringFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_140__Fun) (new global::thx.text.table.DefaultStyle_Anon_140__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultBoolFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_141__Fun) (new global::thx.text.table.DefaultStyle_Anon_141__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultDateTimeFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_142__Fun) (new global::thx.text.table.DefaultStyle_Anon_142__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultTimeFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_143__Fun) (new global::thx.text.table.DefaultStyle_Anon_143__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultNAFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_144__Fun) (new global::thx.text.table.DefaultStyle_Anon_144__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultEmptyFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_145__Fun) (new global::thx.text.table.DefaultStyle_Anon_145__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultFormatter = ( (( global::thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_146__Fun) (new global::thx.text.table.DefaultStyle_Anon_146__Fun()) )) );
				global::thx.text.table.DefaultStyle.defaultAligner = ( (( global::thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current != null )) ? (global::thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current) : (global::thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current = ((global::thx.text.table.DefaultStyle_Anon_169__Fun) (new global::thx.text.table.DefaultStyle_Anon_169__Fun()) )) );
			}
		}
		
		
		public DefaultStyle(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public DefaultStyle() {
			global::thx.text.table.DefaultStyle.__hx_ctor_thx_text_table_DefaultStyle(this);
		}
		
		
		public static void __hx_ctor_thx_text_table_DefaultStyle(global::thx.text.table.DefaultStyle __temp_me184) {
		}
		
		
		public static global::thx.text.table.DefaultStyle instance;
		
		public static global::thx.text.table.CellType defaultType;
		
		public static global::haxe.lang.Null<int> defaultMaxHeight;
		
		public static int defaultMinHeight;
		
		public static global::haxe.lang.Null<int> defaultMaxWidth;
		
		public static int defaultMinWidth;
		
		public static global::thx.culture.Culture defaultCulture;
		
		public static global::haxe.lang.Function defaultIntFormatter;
		
		public static global::haxe.lang.Function defaultFloatFormatter;
		
		public static global::haxe.lang.Function defaultStringFormatter;
		
		public static global::haxe.lang.Function defaultBoolFormatter;
		
		public static global::haxe.lang.Function defaultDateTimeFormatter;
		
		public static global::haxe.lang.Function defaultTimeFormatter;
		
		public static global::haxe.lang.Function defaultNAFormatter;
		
		public static global::haxe.lang.Function defaultEmptyFormatter;
		
		public static global::haxe.lang.Function defaultFormatter;
		
		public static global::haxe.lang.Function defaultAligner;
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.DefaultStyle(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.text.table.DefaultStyle();
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		public virtual void setAlign(global::thx.text.table.HAlign align) {
			this.set_aligner(new global::thx.text.table.DefaultStyle_setAlign_194__Fun(align));
		}
		
		
		public virtual global::thx.text.table.CellType get_type() {
			return global::thx.text.table.DefaultStyle.defaultType;
		}
		
		
		public virtual global::thx.text.table.CellType set_type(global::thx.text.table.CellType @value) {
			return global::thx.text.table.DefaultStyle.defaultType = @value;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_maxHeight() {
			return global::thx.text.table.DefaultStyle.defaultMaxHeight;
		}
		
		
		public virtual global::haxe.lang.Null<int> set_maxHeight(global::haxe.lang.Null<int> @value) {
			return global::thx.text.table.DefaultStyle.defaultMaxHeight = @value;
		}
		
		
		public virtual int get_minHeight() {
			return global::thx.text.table.DefaultStyle.defaultMinHeight;
		}
		
		
		public virtual int set_minHeight(int @value) {
			return global::thx.text.table.DefaultStyle.defaultMinHeight = @value;
		}
		
		
		public virtual global::haxe.lang.Null<int> get_maxWidth() {
			return global::thx.text.table.DefaultStyle.defaultMaxWidth;
		}
		
		
		public virtual global::haxe.lang.Null<int> set_maxWidth(global::haxe.lang.Null<int> @value) {
			return global::thx.text.table.DefaultStyle.defaultMaxWidth = @value;
		}
		
		
		public virtual int get_minWidth() {
			return global::thx.text.table.DefaultStyle.defaultMinWidth;
		}
		
		
		public virtual int set_minWidth(int @value) {
			return global::thx.text.table.DefaultStyle.defaultMinWidth = @value;
		}
		
		
		public virtual global::haxe.lang.Function get_formatter() {
			return global::thx.text.table.DefaultStyle.defaultFormatter;
		}
		
		
		public virtual global::haxe.lang.Function set_formatter(global::haxe.lang.Function @value) {
			return global::thx.text.table.DefaultStyle.defaultFormatter = @value;
		}
		
		
		public virtual global::haxe.lang.Function get_aligner() {
			return global::thx.text.table.DefaultStyle.defaultAligner;
		}
		
		
		public virtual global::haxe.lang.Function set_aligner(global::haxe.lang.Function @value) {
			return global::thx.text.table.DefaultStyle.defaultAligner = @value;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1100620564:
					{
						this.set_minWidth(((int) (@value) ));
						return @value;
					}
					
					
					case 1536427801:
					{
						this.set_minHeight(((int) (@value) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 698919538:
					{
						this.set_aligner(((global::haxe.lang.Function) (@value) ));
						return @value;
					}
					
					
					case 426240778:
					{
						this.set_formatter(((global::haxe.lang.Function) (@value) ));
						return @value;
					}
					
					
					case 1100620564:
					{
						this.set_minWidth(((int) (global::haxe.lang.Runtime.toInt(@value)) ));
						return @value;
					}
					
					
					case 1954547906:
					{
						this.set_maxWidth(global::haxe.lang.Null<object>.ofDynamic<int>(@value));
						return @value;
					}
					
					
					case 1536427801:
					{
						this.set_minHeight(((int) (global::haxe.lang.Runtime.toInt(@value)) ));
						return @value;
					}
					
					
					case 836180395:
					{
						this.set_maxHeight(global::haxe.lang.Null<object>.ofDynamic<int>(@value));
						return @value;
					}
					
					
					case 1292432058:
					{
						this.set_type(((global::thx.text.table.CellType) (@value) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 974131605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_aligner", 974131605)) );
					}
					
					
					case 799214217:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_aligner", 799214217)) );
					}
					
					
					case 533831917:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_formatter", 533831917)) );
					}
					
					
					case 1523302113:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_formatter", 1523302113)) );
					}
					
					
					case 195885713:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minWidth", 195885713)) );
					}
					
					
					case 1991497501:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minWidth", 1991497501)) );
					}
					
					
					case 1049813055:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxWidth", 1049813055)) );
					}
					
					
					case 697941195:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxWidth", 697941195)) );
					}
					
					
					case 1644018940:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_minHeight", 1644018940)) );
					}
					
					
					case 486005488:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_minHeight", 486005488)) );
					}
					
					
					case 943771534:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_maxHeight", 943771534)) );
					}
					
					
					case 1933241730:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_maxHeight", 1933241730)) );
					}
					
					
					case 2065762231:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_type", 2065762231)) );
					}
					
					
					case 1287892547:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_type", 1287892547)) );
					}
					
					
					case 801488835:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setAlign", 801488835)) );
					}
					
					
					case 698919538:
					{
						return this.get_aligner();
					}
					
					
					case 426240778:
					{
						return this.get_formatter();
					}
					
					
					case 1100620564:
					{
						return this.get_minWidth();
					}
					
					
					case 1954547906:
					{
						return (this.get_maxWidth()).toDynamic();
					}
					
					
					case 1536427801:
					{
						return this.get_minHeight();
					}
					
					
					case 836180395:
					{
						return (this.get_maxHeight()).toDynamic();
					}
					
					
					case 1292432058:
					{
						return this.get_type();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1100620564:
					{
						return ((double) (this.get_minWidth()) );
					}
					
					
					case 1536427801:
					{
						return ((double) (this.get_minHeight()) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 974131605:
					{
						return this.set_aligner(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 799214217:
					{
						return this.get_aligner();
					}
					
					
					case 533831917:
					{
						return this.set_formatter(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1523302113:
					{
						return this.get_formatter();
					}
					
					
					case 195885713:
					{
						return this.set_minWidth(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1991497501:
					{
						return this.get_minWidth();
					}
					
					
					case 1049813055:
					{
						return (this.set_maxWidth(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]))).toDynamic();
					}
					
					
					case 697941195:
					{
						return (this.get_maxWidth()).toDynamic();
					}
					
					
					case 1644018940:
					{
						return this.set_minHeight(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 486005488:
					{
						return this.get_minHeight();
					}
					
					
					case 943771534:
					{
						return (this.set_maxHeight(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]))).toDynamic();
					}
					
					
					case 1933241730:
					{
						return (this.get_maxHeight()).toDynamic();
					}
					
					
					case 2065762231:
					{
						return this.set_type(((global::thx.text.table.CellType) (dynargs[0]) ));
					}
					
					
					case 1287892547:
					{
						return this.get_type();
					}
					
					
					case 801488835:
					{
						this.setAlign(((global::thx.text.table.HAlign) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("aligner");
			baseArr.push("formatter");
			baseArr.push("minWidth");
			baseArr.push("maxWidth");
			baseArr.push("minHeight");
			baseArr.push("maxHeight");
			baseArr.push("type");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_setAlign_194__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_setAlign_194__Fun(global::thx.text.table.HAlign align) : base(2, 0) {
			this.align = align;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::thx.text.table.CellType _1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellType) (((object) (__fn_float2) )) )) : (((global::thx.text.table.CellType) (__fn_dyn2) )) );
			global::thx.text.table.CellValueImpl _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellValueImpl) (((object) (__fn_float1) )) )) : (((global::thx.text.table.CellValueImpl) (__fn_dyn1) )) );
			return this.align;
		}
		
		
		public global::thx.text.table.HAlign align;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_138__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_138__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_138__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return global::thx.format.NumberFormat.integer(((double) (v) ), global::thx.text.table.DefaultStyle.defaultCulture);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_139__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_139__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_139__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			double v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((double) (__fn_float1) )) : (((double) (global::haxe.lang.Runtime.toDouble(__fn_dyn1)) )) );
			return global::thx.format.NumberFormat.format(v, "#,#.#####", global::thx.text.table.DefaultStyle.defaultCulture);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_140__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_140__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_140__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return v;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_141__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_141__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_141__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			bool v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toBool(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.toBool(__fn_dyn1)) );
			if (v) {
				return "\u2713";
			}
			else {
				return "\u2715";
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_142__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_142__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_142__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<long> v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (__fn_dyn1) ))) )) );
			return global::thx.format.DateFormat.dateShort(v, global::thx.text.table.DefaultStyle.defaultCulture);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_143__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_143__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_143__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			long v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((long) (__fn_float1) )) : (((long) (__fn_dyn1) )) );
			return global::thx.format.TimeFormat.timeLong(v, global::thx.text.table.DefaultStyle.defaultCulture);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_144__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_144__Fun() : base(0, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_144__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			return "NA";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_145__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_145__Fun() : base(0, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_145__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			return "";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_146__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_146__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_146__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::haxe.lang.Null<int> maxWidth = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (new global::haxe.lang.Null<int>(((int) (__fn_float2) ), true)) : (global::haxe.lang.Null<object>.ofDynamic<int>(__fn_dyn2)) );
				global::thx.text.table.CellValueImpl @value = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellValueImpl) (((object) (__fn_float1) )) )) : (((global::thx.text.table.CellValueImpl) (__fn_dyn1) )) );
				if (( @value.index == 2 )) {
					string v = global::haxe.lang.Runtime.toString(((global::thx.text.table.CellValueImpl) (@value) ).@params[0]);
					if (( maxWidth.hasValue && ( (maxWidth).@value > 0 ) )) {
						v = global::thx.Strings.wrapColumns(v, maxWidth, null, null);
					}
					
					return global::thx.text.table.StringBlock.fromString(v);
				}
				
				string s = null;
				switch (@value.index) {
					case 0:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultIntFormatter.__hx_invoke1_o(((double) (((int) (global::haxe.lang.Runtime.toInt(((global::thx.text.table.CellValueImpl) (@value) ).@params[0])) )) ), global::haxe.lang.Runtime.undefined));
						break;
					}
					
					
					case 1:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultFloatFormatter.__hx_invoke1_o(((double) (global::haxe.lang.Runtime.toDouble(((global::thx.text.table.CellValueImpl) (@value) ).@params[0])) ), global::haxe.lang.Runtime.undefined));
						break;
					}
					
					
					case 2:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultStringFormatter.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.toString(((global::thx.text.table.CellValueImpl) (@value) ).@params[0])));
						break;
					}
					
					
					case 3:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultBoolFormatter.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.toBool(((global::thx.text.table.CellValueImpl) (@value) ).@params[0])));
						break;
					}
					
					
					case 4:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultDateTimeFormatter.__hx_invoke1_o(default(double), ((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (((global::thx.text.table.CellValueImpl) (@value) ).@params[0]) ))) )));
						break;
					}
					
					
					case 5:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultTimeFormatter.__hx_invoke1_o(default(double), ((long) (((global::thx.text.table.CellValueImpl) (@value) ).@params[0]) )));
						break;
					}
					
					
					case 6:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultEmptyFormatter.__hx_invoke0_o());
						break;
					}
					
					
					case 7:
					{
						s = global::haxe.lang.Runtime.toString(global::thx.text.table.DefaultStyle.defaultNAFormatter.__hx_invoke0_o());
						break;
					}
					
					
				}
				
				if (( maxWidth.hasValue && ( (maxWidth).@value > 0 ) )) {
					s = global::thx.Strings.ellipsisMiddle(s, default(global::haxe.lang.Null<int>), null);
				}
				
				return new global::thx.text.table.StringBlock(((global::Array<object>) (new global::Array<object>(new object[]{s})) ));
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class DefaultStyle_Anon_169__Fun : global::haxe.lang.Function {
		
		public DefaultStyle_Anon_169__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.text.table.DefaultStyle_Anon_169__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::thx.text.table.CellType type = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellType) (((object) (__fn_float2) )) )) : (((global::thx.text.table.CellType) (__fn_dyn2) )) );
				global::thx.text.table.CellValueImpl @value = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.text.table.CellValueImpl) (((object) (__fn_float1) )) )) : (((global::thx.text.table.CellValueImpl) (__fn_dyn1) )) );
				switch (type.index) {
					case 0:
					{
						switch (@value.index) {
							case 0:
							case 1:
							case 2:
							case 4:
							case 5:
							case 6:
							case 7:
							{
								return global::thx.text.table.HAlign.Left;
							}
							
							
							case 3:
							{
								return global::thx.text.table.HAlign.Center;
							}
							
							
						}
						
						break;
					}
					
					
					case 1:
					{
						return global::thx.text.table.HAlign.Center;
					}
					
					
					default:
					{
						switch (@value.index) {
							case 0:
							case 1:
							{
								return global::thx.text.table.HAlign.OnSymbol(global::thx.text.table.DefaultStyle.defaultCulture.number.separatorDecimalNumber);
							}
							
							
							case 2:
							case 6:
							{
								return global::thx.text.table.HAlign.Left;
							}
							
							
							case 3:
							{
								return global::thx.text.table.HAlign.Center;
							}
							
							
							case 4:
							case 5:
							case 7:
							{
								return global::thx.text.table.HAlign.Right;
							}
							
							
						}
						
						break;
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class BorderStyle : global::haxe.lang.Enum {
		
		public BorderStyle(int index) : base(index) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"None", "Normal", "Double"};
		
		public static readonly global::thx.text.table.BorderStyle None = new global::thx.text.table.BorderStyle(0);
		
		public static readonly global::thx.text.table.BorderStyle Normal = new global::thx.text.table.BorderStyle(1);
		
		public static readonly global::thx.text.table.BorderStyle Double = new global::thx.text.table.BorderStyle(2);
		
		public override string getTag() {
			return global::thx.text.table.BorderStyle.__hx_constructs[this.index];
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Border : global::haxe.lang.ParamEnum {
		
		public Border(int index, object[] @params) : base(index, @params) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Removable", "RemovableCross", "Cross"};
		
		public static readonly global::thx.text.table.Border Removable = new global::thx.text.table.Border(0, null);
		
		public static global::thx.text.table.Border RemovableCross(global::thx.text.table.BorderStyle top, global::thx.text.table.BorderStyle right, global::thx.text.table.BorderStyle bottom, global::thx.text.table.BorderStyle left) {
			unchecked {
				return new global::thx.text.table.Border(1, new object[]{top, right, bottom, left});
			}
		}
		
		
		public static global::thx.text.table.Border Cross(global::thx.text.table.BorderStyle top, global::thx.text.table.BorderStyle right, global::thx.text.table.BorderStyle bottom, global::thx.text.table.BorderStyle left) {
			unchecked {
				return new global::thx.text.table.Border(2, new object[]{top, right, bottom, left});
			}
		}
		
		
		public override string getTag() {
			return global::thx.text.table.Border.__hx_constructs[this.index];
		}
		
		
	}
}


