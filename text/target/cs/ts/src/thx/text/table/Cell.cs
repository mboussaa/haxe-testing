// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Cell : global::haxe.lang.HxObject {
		
		public Cell(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Cell(global::thx.text.table.CellValueImpl @value, global::thx.text.table.Row row, global::thx.text.table.Col col, global::thx.text.table.Span span) {
			global::thx.text.table.Cell.__hx_ctor_thx_text_table_Cell(this, @value, row, col, span);
		}
		
		
		public static void __hx_ctor_thx_text_table_Cell(global::thx.text.table.Cell __temp_me175, global::thx.text.table.CellValueImpl @value, global::thx.text.table.Row row, global::thx.text.table.Col col, global::thx.text.table.Span span) {
			__temp_me175.@value = @value;
			__temp_me175.row = row;
			__temp_me175.col = col;
			__temp_me175.span = span;
			__temp_me175.table = col.table;
			__temp_me175.style = new global::thx.text.table.CompositeStyle(((global::Array<object>) (new global::Array<object>(new object[]{col.style, row.style, __temp_me175.table.style, global::thx.text.table.DefaultStyle.instance})) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.Cell(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::thx.text.table.Cell(((global::thx.text.table.CellValueImpl) (arr[0]) ), ((global::thx.text.table.Row) (arr[1]) ), ((global::thx.text.table.Col) (arr[2]) ), ((global::thx.text.table.Span) (arr[3]) ));
			}
		}
		
		
		public global::thx.text.table.CellValueImpl @value;
		
		public global::thx.text.table.Row row;
		
		public global::thx.text.table.Col col;
		
		public int rowIndex;
		
		public int colIndex;
		
		public global::thx.text.table.Span span;
		
		public global::thx.text.Table table;
		
		public global::thx.text.table.IStyle style;
		
		public virtual string toString() {
			global::haxe.lang.Null<int> maxWidth = this.style.get_maxWidth();
			return ((global::thx.text.table.StringBlock) (this.style.get_formatter().__hx_invoke2_o(default(double), this.@value, default(double), (maxWidth).toDynamic())) ).toString();
		}
		
		
		public virtual int get_rowIndex() {
			return this.row.index;
		}
		
		
		public virtual int get_colIndex() {
			return this.col.index;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 639476402:
					{
						this.colIndex = ((int) (@value) );
						return @value;
					}
					
					
					case 1711229592:
					{
						this.rowIndex = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 69051697:
					{
						this.style = ((global::thx.text.table.IStyle) (@value) );
						return @value;
					}
					
					
					case 182695950:
					{
						this.table = ((global::thx.text.Table) (@value) );
						return @value;
					}
					
					
					case 1280891594:
					{
						this.span = ((global::thx.text.table.Span) (@value) );
						return @value;
					}
					
					
					case 639476402:
					{
						this.colIndex = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1711229592:
					{
						this.rowIndex = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 4948032:
					{
						this.col = ((global::thx.text.table.Col) (@value) );
						return @value;
					}
					
					
					case 5693978:
					{
						this.row = ((global::thx.text.table.Row) (@value) );
						return @value;
					}
					
					
					case 834174833:
					{
						this.@value = ((global::thx.text.table.CellValueImpl) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1530353339:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_colIndex", 1530353339)) );
					}
					
					
					case 454622881:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_rowIndex", 454622881)) );
					}
					
					
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 69051697:
					{
						return this.style;
					}
					
					
					case 182695950:
					{
						return this.table;
					}
					
					
					case 1280891594:
					{
						return this.span;
					}
					
					
					case 639476402:
					{
						if (handleProperties) {
							return this.get_colIndex();
						}
						else {
							return this.colIndex;
						}
						
					}
					
					
					case 1711229592:
					{
						if (handleProperties) {
							return this.get_rowIndex();
						}
						else {
							return this.rowIndex;
						}
						
					}
					
					
					case 4948032:
					{
						return this.col;
					}
					
					
					case 5693978:
					{
						return this.row;
					}
					
					
					case 834174833:
					{
						return this.@value;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 639476402:
					{
						if (handleProperties) {
							return ((double) (this.get_colIndex()) );
						}
						else {
							return ((double) (this.colIndex) );
						}
						
					}
					
					
					case 1711229592:
					{
						if (handleProperties) {
							return ((double) (this.get_rowIndex()) );
						}
						else {
							return ((double) (this.rowIndex) );
						}
						
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1530353339:
					{
						return this.get_colIndex();
					}
					
					
					case 454622881:
					{
						return this.get_rowIndex();
					}
					
					
					case 946786476:
					{
						return this.toString();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("style");
			baseArr.push("table");
			baseArr.push("span");
			baseArr.push("colIndex");
			baseArr.push("rowIndex");
			baseArr.push("col");
			baseArr.push("row");
			baseArr.push("value");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}


