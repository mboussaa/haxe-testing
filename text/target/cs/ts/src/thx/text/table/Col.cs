// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.text.table {
	public class Col : global::thx.text.table.CellSet {
		
		public Col(global::haxe.lang.EmptyObject empty) : base(global::haxe.lang.EmptyObject.EMPTY) {
		}
		
		
		public Col(global::thx.text.Table table, int index) : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::thx.text.table.Col.__hx_ctor_thx_text_table_Col(this, table, index);
		}
		
		
		public static void __hx_ctor_thx_text_table_Col(global::thx.text.table.Col __temp_me177, global::thx.text.Table table, int index) {
			global::thx.text.table.CellSet.__hx_ctor_thx_text_table_CellSet(__temp_me177, table, index);
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.text.table.Col(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::thx.text.table.Col(((global::thx.text.Table) (arr[0]) ), ((int) (global::haxe.lang.Runtime.toInt(arr[1])) ));
			}
		}
		
		
		public virtual void setCell(int rowIndex, global::thx.text.table.Cell cell) {
			base._set(rowIndex, cell);
			this.table.ensureRow(rowIndex)._set(this.index, cell);
		}
		
		
		public virtual global::thx.text.table.Cell @set(global::thx.text.table.CellValueImpl @value, int row, global::thx.text.table.Span span) {
			return this.table.@set(@value, row, this.index, span);
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5741474:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set", 5741474)) );
					}
					
					
					case 121725540:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setCell", 121725540)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 5741474:
					{
						return this.@set(((global::thx.text.table.CellValueImpl) (dynargs[0]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((global::thx.text.table.Span) (dynargs[2]) ));
					}
					
					
					case 121725540:
					{
						this.setCell(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((global::thx.text.table.Cell) (dynargs[1]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


