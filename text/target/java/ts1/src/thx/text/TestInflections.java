// Generated by Haxe 3.3.0
package thx.text;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestInflections extends haxe.lang.HxObject
{
	public TestInflections(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestInflections(int i)
	{
		//line 8 "/shared/text/test/thx/text/TestInflections.hx"
		thx.text.TestInflections.__hx_ctor_thx_text_TestInflections(this, i);
	}
	
	
	public static void __hx_ctor_thx_text_TestInflections(thx.text.TestInflections __temp_me33, int i)
	{
		//line 9 "/shared/text/test/thx/text/TestInflections.hx"
		__temp_me33.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		return new thx.text.TestInflections(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		return new thx.text.TestInflections(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testUncountable()
	{
		//line 13 "/shared/text/test/thx/text/TestInflections.hx"
		int _g1 = 0;
		//line 13 "/shared/text/test/thx/text/TestInflections.hx"
		int _g = this.x;
		//line 13 "/shared/text/test/thx/text/TestInflections.hx"
		while (( _g1 < _g ))
		{
			//line 13 "/shared/text/test/thx/text/TestInflections.hx"
			 ++ _g1;
			//line 14 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("information", thx.text.Inflections.pluralize("information"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testUncountable"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
			//line 15 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("news", thx.text.Inflections.pluralize("news"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testUncountable"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
		}
		
	}
	
	
	public void testPluralize()
	{
		//line 19 "/shared/text/test/thx/text/TestInflections.hx"
		int _g1 = 0;
		//line 19 "/shared/text/test/thx/text/TestInflections.hx"
		int _g = this.x;
		//line 19 "/shared/text/test/thx/text/TestInflections.hx"
		while (( _g1 < _g ))
		{
			//line 19 "/shared/text/test/thx/text/TestInflections.hx"
			 ++ _g1;
			//line 20 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("days", thx.text.Inflections.pluralize("day"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testPluralize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 21 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("women", thx.text.Inflections.pluralize("woman"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testPluralize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 22 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("autobuses", thx.text.Inflections.pluralize("autobus"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testPluralize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
			//line 23 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("quizzes", thx.text.Inflections.pluralize("quiz"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testPluralize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
		}
		
	}
	
	
	public void testSingularize()
	{
		//line 27 "/shared/text/test/thx/text/TestInflections.hx"
		int _g1 = 0;
		//line 27 "/shared/text/test/thx/text/TestInflections.hx"
		int _g = this.x;
		//line 27 "/shared/text/test/thx/text/TestInflections.hx"
		while (( _g1 < _g ))
		{
			//line 27 "/shared/text/test/thx/text/TestInflections.hx"
			 ++ _g1;
			//line 28 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("day", thx.text.Inflections.singularize("days"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testSingularize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
			//line 29 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("woman", thx.text.Inflections.singularize("women"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testSingularize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
			//line 30 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("autobus", thx.text.Inflections.singularize("autobuses"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testSingularize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
			//line 31 "/shared/text/test/thx/text/TestInflections.hx"
			utest.Assert.equals("quiz", thx.text.Inflections.singularize("quizzes"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.text.TestInflections", "TestInflections.hx", "testSingularize"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						this.x = ((int) (value) );
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return value;
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return value;
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			switch (field.hashCode())
			{
				case 1503556075:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testSingularize")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testSingularize")) );
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
				case 120:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return this.x;
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
				case -836402466:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testPluralize")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testPluralize")) );
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
				case 761088126:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testUncountable")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testUncountable")) );
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						return ((double) (this.x) );
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			switch (field.hashCode())
			{
				case 1503556075:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testSingularize")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						this.testSingularize();
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
				case 761088126:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testUncountable")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						this.testUncountable();
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
				case -836402466:
				{
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					if (field.equals("testPluralize")) 
					{
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/text/test/thx/text/TestInflections.hx"
						this.testPluralize();
					}
					
					//line 6 "/shared/text/test/thx/text/TestInflections.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/text/test/thx/text/TestInflections.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		baseArr.push("x");
		//line 6 "/shared/text/test/thx/text/TestInflections.hx"
		{
			//line 6 "/shared/text/test/thx/text/TestInflections.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


