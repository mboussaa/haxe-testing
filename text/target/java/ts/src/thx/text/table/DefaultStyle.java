// Generated by Haxe 3.3.0
package thx.text.table;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DefaultStyle extends haxe.lang.HxObject implements thx.text.table.IStyle
{
	static
	{
		//line 131 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.instance = new thx.text.table.DefaultStyle();
		//line 132 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultType = thx.text.table.CellType.BodyCompact;
		//line 133 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultMaxHeight = null;
		//line 134 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultMinHeight = 1;
		//line 135 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultMaxWidth = null;
		//line 136 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultMinWidth = 1;
		//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
		java.lang.Object __temp_stmt3 = null;
		//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
		{
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object o = null;
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			{
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				java.lang.Object __temp_odecl1 = new haxe.lang.DynamicObject(new java.lang.String[]{"groupSizesCurrency", "groupSizesNumber", "groupSizesPercent", "separatorDecimalCurrency", "separatorDecimalNumber", "separatorDecimalPercent", "separatorGroupCurrency", "separatorGroupNumber", "separatorGroupPercent", "signNegative", "signPositive", "symbolCurrency", "symbolNaN", "symbolNegativeInfinity", "symbolPercent", "symbolPermille", "symbolPositiveInfinity"}, new java.lang.Object[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{3}), new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{3}), new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{3}), ".", ".", ".", ",", ",", ",", "-", "+", "$", "NaN", "-Infinity", "%", "\u2030", "Infinity"}, new java.lang.String[]{"decimalDigitsCurrency", "decimalDigitsNumber", "decimalDigitsPercent", "patternNegativeCurrency", "patternNegativeNumber", "patternNegativePercent", "patternPositiveCurrency", "patternPositivePercent"}, new double[]{((double) (((double) (2) )) ), ((double) (((double) (2) )) ), ((double) (((double) (2) )) ), ((double) (((double) (0) )) ), ((double) (((double) (1) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) )});
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				java.lang.Object __temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"calendarWeekRuleName", "designatorAm", "designatorPm", "firstDayOfWeekName", "nameCalendar", "nameCalendarNative", "nameDays", "nameDaysAbbreviated", "nameDaysShortest", "nameMonthGenitives", "nameMonthGenitivesAbbreviated", "nameMonths", "nameMonthsAbbreviated", "patternDateLong", "patternDateShort", "patternDateTimeFull", "patternDateTimeSortable", "patternMonthDay", "patternRfc1123", "patternTimeLong", "patternTimeShort", "patternUniversalSortable", "patternYearMonth", "separatorDate", "separatorTime"}, new java.lang.Object[]{"FirstDay", "AM", "PM", "Sunday", "Gregorian", "Gregorian Calendar", new haxe.root.Array<java.lang.String>(new java.lang.String[]{"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""}), "dddd, MMMM dd, yyyy", "M/d/yyyy", "dddd, MMMM dd, yyyy h:mm:ss tt", "yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss", "MMMM dd", "ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'", "h:mm:ss tt", "h:mm tt", "yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'", "MMMM, yyyy", "/", ":"}, new java.lang.String[]{"calendarWeekRuleIndex", "firstDayOfWeekIndex"}, new double[]{((double) (((double) (0) )) ), ((double) (((double) (0) )) )});
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				o = new haxe.lang.DynamicObject(new java.lang.String[]{"code", "dateTime", "ietf", "isNeutral", "isRightToLeft", "iso2", "iso3", "nameCalendar", "nameEnglish", "nameNative", "nameRegionEnglish", "nameRegionNative", "number", "separatorList", "win3"}, new java.lang.Object[]{"en-US", __temp_odecl2, "en-US", false, false, "en", "eng", "Gregorian", "English", "English", "United States", "United States", __temp_odecl1, ",", "ENU"}, new java.lang.String[]{"lcid"}, new double[]{((double) (((double) (1033) )) )});
			}
			
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp = haxe.lang.Runtime.getField(o, "code", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			thx.culture.DateFormatInfo tmp1 = null;
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			if (( null == haxe.lang.Runtime.getField(o, "dateTime", true) )) 
			{
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				tmp1 = null;
			}
			else
			{
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				java.lang.Object o1 = haxe.lang.Runtime.getField(o, "dateTime", true);
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				tmp1 = new thx.culture.DateFormatInfo(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o1, "calendarWeekRuleIndex", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "calendarWeekRuleName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "designatorAm", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "designatorPm", true)), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o1, "firstDayOfWeekIndex", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "firstDayOfWeekName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "nameCalendar", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "nameCalendarNative", true)), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDays", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDaysAbbreviated", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDaysShortest", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonths", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthsAbbreviated", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthGenitives", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthGenitivesAbbreviated", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateLong", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateShort", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateTimeFull", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateTimeSortable", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternMonthDay", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternRfc1123", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternTimeLong", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternTimeShort", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternUniversalSortable", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternYearMonth", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "separatorDate", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "separatorTime", true)));
			}
			
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp2 = haxe.lang.Runtime.getField(o, "ietf", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp3 = haxe.lang.Runtime.getField(o, "isNeutral", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp4 = haxe.lang.Runtime.getField(o, "iso2", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp5 = haxe.lang.Runtime.getField(o, "iso3", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp6 = haxe.lang.Runtime.getField(o, "isRightToLeft", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp7 = haxe.lang.Runtime.getField(o, "lcid", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp8 = haxe.lang.Runtime.getField(o, "nameCalendar", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp9 = haxe.lang.Runtime.getField(o, "nameEnglish", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp10 = haxe.lang.Runtime.getField(o, "nameNative", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp11 = haxe.lang.Runtime.getField(o, "nameRegionEnglish", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			java.lang.Object tmp12 = haxe.lang.Runtime.getField(o, "nameRegionNative", true);
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			thx.culture.NumberFormatInfo tmp13 = null;
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			if (( null == haxe.lang.Runtime.getField(o, "number", true) )) 
			{
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				tmp13 = null;
			}
			else
			{
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				java.lang.Object o2 = haxe.lang.Runtime.getField(o, "number", true);
				//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
				tmp13 = new thx.culture.NumberFormatInfo(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsNumber", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsPercent", true))) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesCurrency", true)) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesNumber", true)) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesPercent", true)) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativeCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativeNumber", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativePercent", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternPositiveCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternPositivePercent", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalNumber", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupNumber", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "signNegative", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "signPositive", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolNaN", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolNegativeInfinity", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPermille", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPositiveInfinity", true)));
			}
			
			//line 36 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Embed.hx"
			__temp_stmt3 = thx.culture.Culture.register(new thx.culture.Culture(haxe.lang.Runtime.toString(tmp), tmp1, haxe.lang.Runtime.toString(tmp2), haxe.lang.Runtime.toBool(tmp3), haxe.lang.Runtime.toString(tmp4), haxe.lang.Runtime.toString(tmp5), haxe.lang.Runtime.toBool(tmp6), ((int) (haxe.lang.Runtime.toInt(tmp7)) ), haxe.lang.Runtime.toString(tmp8), haxe.lang.Runtime.toString(tmp9), haxe.lang.Runtime.toString(tmp10), haxe.lang.Runtime.toString(tmp11), haxe.lang.Runtime.toString(tmp12), tmp13, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o, "separatorList", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o, "win3", true))));
		}
		
		//line 137 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultCulture = ((thx.culture.Culture) (__temp_stmt3) );
		//line 138 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultIntFormatter = ( (( thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_138__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_138__Fun) (new thx.text.table.DefaultStyle_Anon_138__Fun()) )) );
		//line 139 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultFloatFormatter = ( (( thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_139__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_139__Fun) (new thx.text.table.DefaultStyle_Anon_139__Fun()) )) );
		//line 140 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultStringFormatter = ( (( thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_140__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_140__Fun) (new thx.text.table.DefaultStyle_Anon_140__Fun()) )) );
		//line 141 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultBoolFormatter = ( (( thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_141__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_141__Fun) (new thx.text.table.DefaultStyle_Anon_141__Fun()) )) );
		//line 142 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultDateTimeFormatter = ( (( thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_142__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_142__Fun) (new thx.text.table.DefaultStyle_Anon_142__Fun()) )) );
		//line 143 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultTimeFormatter = ( (( thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_143__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_143__Fun) (new thx.text.table.DefaultStyle_Anon_143__Fun()) )) );
		//line 144 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultNAFormatter = ( (( thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_144__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_144__Fun) (new thx.text.table.DefaultStyle_Anon_144__Fun()) )) );
		//line 145 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultEmptyFormatter = ( (( thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_145__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_145__Fun) (new thx.text.table.DefaultStyle_Anon_145__Fun()) )) );
		//line 146 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultFormatter = ( (( thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_146__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_146__Fun) (new thx.text.table.DefaultStyle_Anon_146__Fun()) )) );
		//line 169 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.defaultAligner = ( (( thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current != null )) ? (thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current) : (thx.text.table.DefaultStyle_Anon_169__Fun.__hx_current = ((thx.text.table.DefaultStyle_Anon_169__Fun) (new thx.text.table.DefaultStyle_Anon_169__Fun()) )) );
	}
	
	public DefaultStyle(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DefaultStyle()
	{
		//line 191 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.DefaultStyle.__hx_ctor_thx_text_table_DefaultStyle(this);
	}
	
	
	public static void __hx_ctor_thx_text_table_DefaultStyle(thx.text.table.DefaultStyle __temp_me164)
	{
	}
	
	
	public static thx.text.table.DefaultStyle instance;
	
	public static thx.text.table.CellType defaultType;
	
	public static java.lang.Object defaultMaxHeight;
	
	public static int defaultMinHeight;
	
	public static java.lang.Object defaultMaxWidth;
	
	public static int defaultMinWidth;
	
	public static thx.culture.Culture defaultCulture;
	
	public static haxe.lang.Function defaultIntFormatter;
	
	public static haxe.lang.Function defaultFloatFormatter;
	
	public static haxe.lang.Function defaultStringFormatter;
	
	public static haxe.lang.Function defaultBoolFormatter;
	
	public static haxe.lang.Function defaultDateTimeFormatter;
	
	public static haxe.lang.Function defaultTimeFormatter;
	
	public static haxe.lang.Function defaultNAFormatter;
	
	public static haxe.lang.Function defaultEmptyFormatter;
	
	public static haxe.lang.Function defaultFormatter;
	
	public static haxe.lang.Function defaultAligner;
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		return new thx.text.table.DefaultStyle(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		return new thx.text.table.DefaultStyle();
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public void setAlign(thx.text.table.HAlign align)
	{
		//line 194 "/shared/text/src/thx/text/table/Style.hx"
		this.set_aligner(new thx.text.table.DefaultStyle_setAlign_194__Fun(align));
	}
	
	
	public thx.text.table.CellType get_type()
	{
		//line 197 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultType;
	}
	
	
	public thx.text.table.CellType set_type(thx.text.table.CellType value)
	{
		//line 200 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultType = value;
	}
	
	
	public java.lang.Object get_maxHeight()
	{
		//line 203 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMaxHeight;
	}
	
	
	public java.lang.Object set_maxHeight(java.lang.Object value)
	{
		//line 206 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMaxHeight = value;
	}
	
	
	public int get_minHeight()
	{
		//line 209 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMinHeight;
	}
	
	
	public int set_minHeight(int value)
	{
		//line 212 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMinHeight = value;
	}
	
	
	public java.lang.Object get_maxWidth()
	{
		//line 215 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMaxWidth;
	}
	
	
	public java.lang.Object set_maxWidth(java.lang.Object value)
	{
		//line 218 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMaxWidth = value;
	}
	
	
	public int get_minWidth()
	{
		//line 221 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMinWidth;
	}
	
	
	public int set_minWidth(int value)
	{
		//line 224 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultMinWidth = value;
	}
	
	
	public haxe.lang.Function get_formatter()
	{
		//line 227 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultFormatter;
	}
	
	
	public haxe.lang.Function set_formatter(haxe.lang.Function value)
	{
		//line 230 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultFormatter = value;
	}
	
	
	public haxe.lang.Function get_aligner()
	{
		//line 233 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultAligner;
	}
	
	
	public haxe.lang.Function set_aligner(haxe.lang.Function value)
	{
		//line 236 "/shared/text/src/thx/text/table/Style.hx"
		return thx.text.table.DefaultStyle.defaultAligner = value;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			boolean __temp_executeDef1 = true;
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			switch (field.hashCode())
			{
				case -1375815020:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_minWidth(((int) (value) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -906066005:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_maxHeight(value);
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 400381634:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_maxWidth(value);
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -133587431:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_minHeight(((int) (value) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
			}
			
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			if (__temp_executeDef1) 
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			boolean __temp_executeDef1 = true;
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			switch (field.hashCode())
			{
				case -914360718:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_aligner(((haxe.lang.Function) (value) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 3575610:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_type(((thx.text.table.CellType) (value) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1811591370:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_formatter(((haxe.lang.Function) (value) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -906066005:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_maxHeight(value);
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1375815020:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_minWidth(((int) (haxe.lang.Runtime.toInt(value)) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -133587431:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_minHeight(((int) (haxe.lang.Runtime.toInt(value)) ));
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 400381634:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.set_maxWidth(value);
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return value;
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
			}
			
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			if (__temp_executeDef1) 
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			boolean __temp_executeDef1 = true;
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			switch (field.hashCode())
			{
				case -926427243:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_aligner")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 3575610:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_type();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -837847415:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_aligner")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -906066005:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_maxHeight();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1194404563:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_formatter")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -133587431:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_minHeight();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1968535775:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_formatter")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 400381634:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_maxWidth();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1749877295:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_minWidth")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1375815020:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_minWidth();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 996097373:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_minWidth")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1811591370:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_formatter();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 26319359:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_maxWidth")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -914360718:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_aligner();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1522673269:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_maxWidth")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1387616195:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("setAlign")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setAlign")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1155383932:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_minHeight")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1976688259:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_type")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 381252720:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_minHeight")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1415575799:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_type")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 382905358:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_maxHeight")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -391225854:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_maxHeight")) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
			}
			
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			if (__temp_executeDef1) 
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			boolean __temp_executeDef1 = true;
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			switch (field.hashCode())
			{
				case -1375815020:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((double) (this.get_minWidth()) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -906066005:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.get_maxHeight())) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 400381634:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.get_maxWidth())) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -133587431:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return ((double) (this.get_minHeight()) );
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
			}
			
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			if (__temp_executeDef1) 
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			boolean __temp_executeDef1 = true;
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			switch (field.hashCode())
			{
				case -926427243:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_aligner(((haxe.lang.Function) (dynargs.__get(0)) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1387616195:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("setAlign")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						this.setAlign(((thx.text.table.HAlign) (dynargs.__get(0)) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -837847415:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_aligner")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_aligner();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1976688259:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_type();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1194404563:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_formatter(((haxe.lang.Function) (dynargs.__get(0)) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1415575799:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_type")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_type(((thx.text.table.CellType) (dynargs.__get(0)) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1968535775:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_formatter")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_formatter();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -391225854:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_maxHeight();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1749877295:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_minWidth(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 382905358:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_maxHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_maxHeight(dynargs.__get(0));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 996097373:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_minWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_minWidth();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 381252720:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_minHeight();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 26319359:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_maxWidth(dynargs.__get(0));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case 1155383932:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("set_minHeight")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.set_minHeight(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
				case -1522673269:
				{
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					if (field.equals("get_maxWidth")) 
					{
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						__temp_executeDef1 = false;
						//line 130 "/shared/text/src/thx/text/table/Style.hx"
						return this.get_maxWidth();
					}
					
					//line 130 "/shared/text/src/thx/text/table/Style.hx"
					break;
				}
				
				
			}
			
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			if (__temp_executeDef1) 
			{
				//line 130 "/shared/text/src/thx/text/table/Style.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("aligner");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("formatter");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("minWidth");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("maxWidth");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("minHeight");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("maxHeight");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		baseArr.push("type");
		//line 130 "/shared/text/src/thx/text/table/Style.hx"
		{
			//line 130 "/shared/text/src/thx/text/table/Style.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


