// Generated by Haxe 3.3.0
package thx.text.table;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DefaultStyle_Anon_146__Fun extends haxe.lang.Function
{
	public DefaultStyle_Anon_146__Fun()
	{
		//line 146 "/shared/text/src/thx/text/table/Style.hx"
		super(2, 0);
	}
	
	
	public static thx.text.table.DefaultStyle_Anon_146__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 146 "/shared/text/src/thx/text/table/Style.hx"
		java.lang.Object maxWidth = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((java.lang.Object) (__fn_float2) )) : (((java.lang.Object) (__fn_dyn2) )) );
		//line 146 "/shared/text/src/thx/text/table/Style.hx"
		thx.text.table.CellValueImpl value = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((thx.text.table.CellValueImpl) (((java.lang.Object) (__fn_float1) )) )) : (((thx.text.table.CellValueImpl) (__fn_dyn1) )) );
		//line 147 "/shared/text/src/thx/text/table/Style.hx"
		switch (value.index)
		{
			case 2:
			{
				//line 148 "/shared/text/src/thx/text/table/Style.hx"
				java.lang.String v = haxe.lang.Runtime.toString(((thx.text.table.CellValueImpl) (value) ).params[0]);
				//line 149 "/shared/text/src/thx/text/table/Style.hx"
				if (( ( ! (( null == maxWidth )) ) && ( haxe.lang.Runtime.compare(maxWidth, 0) > 0 ) )) 
				{
					//line 150 "/shared/text/src/thx/text/table/Style.hx"
					v = thx.Strings.wrapColumns(v, maxWidth, null, null);
				}
				
				//line 151 "/shared/text/src/thx/text/table/Style.hx"
				return thx.text.table.StringBlock.fromString(v);
			}
			
			
			default:
			{
				//line 152 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
		}
		
		//line 154 "/shared/text/src/thx/text/table/Style.hx"
		java.lang.String s = null;
		//line 154 "/shared/text/src/thx/text/table/Style.hx"
		switch (value.index)
		{
			case 0:
			{
				//line 155 "/shared/text/src/thx/text/table/Style.hx"
				int v1 = ((int) (haxe.lang.Runtime.toInt(((thx.text.table.CellValueImpl) (value) ).params[0])) );
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultIntFormatter.__hx_invoke1_o(((double) (v1) ), haxe.lang.Runtime.undefined));
				//line 155 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 1:
			{
				//line 156 "/shared/text/src/thx/text/table/Style.hx"
				double v2 = ((double) (haxe.lang.Runtime.toDouble(((thx.text.table.CellValueImpl) (value) ).params[0])) );
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultFloatFormatter.__hx_invoke1_o(v2, haxe.lang.Runtime.undefined));
				//line 156 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 2:
			{
				//line 157 "/shared/text/src/thx/text/table/Style.hx"
				java.lang.String v3 = haxe.lang.Runtime.toString(((thx.text.table.CellValueImpl) (value) ).params[0]);
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultStringFormatter.__hx_invoke1_o(0.0, v3));
				//line 157 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 3:
			{
				//line 158 "/shared/text/src/thx/text/table/Style.hx"
				boolean v4 = haxe.lang.Runtime.toBool(((thx.text.table.CellValueImpl) (value) ).params[0]);
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultBoolFormatter.__hx_invoke1_o(0.0, v4));
				//line 158 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 4:
			{
				//line 159 "/shared/text/src/thx/text/table/Style.hx"
				haxe.root.Array<java.lang.Object> v5 = ((haxe.root.Array<java.lang.Object>) (((thx.text.table.CellValueImpl) (value) ).params[0]) );
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultDateTimeFormatter.__hx_invoke1_o(0.0, v5));
				//line 159 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 5:
			{
				//line 160 "/shared/text/src/thx/text/table/Style.hx"
				long v6 = haxe.lang.Runtime.toLong(((thx.text.table.CellValueImpl) (value) ).params[0]);
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultTimeFormatter.__hx_invoke1_o(0.0, v6));
				//line 160 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 6:
			{
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultEmptyFormatter.__hx_invoke0_o());
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
			case 7:
			{
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				s = haxe.lang.Runtime.toString(thx.text.table.DefaultStyle.defaultNAFormatter.__hx_invoke0_o());
				//line 154 "/shared/text/src/thx/text/table/Style.hx"
				break;
			}
			
			
		}
		
		//line 164 "/shared/text/src/thx/text/table/Style.hx"
		if (( ( ! (( null == maxWidth )) ) && ( haxe.lang.Runtime.compare(maxWidth, 0) > 0 ) )) 
		{
			//line 165 "/shared/text/src/thx/text/table/Style.hx"
			s = thx.Strings.ellipsisMiddle(s, null, null);
		}
		
		//line 166 "/shared/text/src/thx/text/table/Style.hx"
		return new thx.text.table.StringBlock(((haxe.root.Array<java.lang.String>) (new haxe.root.Array<java.lang.String>(new java.lang.String[]{s})) ));
	}
	
	
}


