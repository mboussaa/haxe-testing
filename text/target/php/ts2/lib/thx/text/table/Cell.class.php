<?php

// Generated by Haxe 3.3.0
class thx_text_table_Cell {
	public function __construct($value, $row, $col, $span) {
		if(!php_Boot::$skip_constructor) {
		$this->value = $value;
		$this->row = $row;
		$this->col = $col;
		$this->span = $span;
		$this->table = $col->table;
		$this->style = new thx_text_table_CompositeStyle((new _hx_array(array($col->style, $row->style, $this->table->style, thx_text_table_DefaultStyle::$instance))));
	}}
	public $value;
	public $row;
	public $col;
	public $rowIndex;
	public $colIndex;
	public $span;
	public $table;
	public $style;
	public function toString() {
		$maxWidth = $this->style->get_maxWidth();
		$tmp = $this->style->get_formatter();
		return call_user_func_array($tmp, array($this->value, $maxWidth))->toString();
	}
	public function get_rowIndex() {
		return $this->row->index;
	}
	public function get_colIndex() {
		return $this->col->index;
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static $__properties__ = array("get_colIndex" => "get_colIndex","get_rowIndex" => "get_rowIndex");
	function __toString() { return $this->toString(); }
}
