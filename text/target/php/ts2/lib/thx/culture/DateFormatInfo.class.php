<?php

// Generated by Haxe 3.3.0
class thx_culture_DateFormatInfo {
	public function __construct($calendarWeekRuleIndex, $calendarWeekRuleName, $designatorAm, $designatorPm, $firstDayOfWeekIndex, $firstDayOfWeekName, $nameCalendar, $nameCalendarNative, $nameDays, $nameDaysAbbreviated, $nameDaysShortest, $nameMonths, $nameMonthsAbbreviated, $nameMonthGenitives, $nameMonthGenitivesAbbreviated, $patternDateLong, $patternDateShort, $patternDateTimeFull, $patternDateTimeSortable, $patternMonthDay, $patternRfc1123, $patternTimeLong, $patternTimeShort, $patternUniversalSortable, $patternYearMonth, $separatorDate, $separatorTime) {
		if(!php_Boot::$skip_constructor) {
		$this->calendarWeekRuleIndex = $calendarWeekRuleIndex;
		$this->calendarWeekRuleName = $calendarWeekRuleName;
		$this->designatorAm = $designatorAm;
		$this->designatorPm = $designatorPm;
		$this->firstDayOfWeekIndex = $firstDayOfWeekIndex;
		$this->firstDayOfWeekName = $firstDayOfWeekName;
		$this->nameCalendar = $nameCalendar;
		$this->nameCalendarNative = $nameCalendarNative;
		$this->nameDays = $nameDays;
		$this->nameDaysAbbreviated = $nameDaysAbbreviated;
		$this->nameDaysShortest = $nameDaysShortest;
		$this->nameMonths = $nameMonths;
		$this->nameMonthsAbbreviated = $nameMonthsAbbreviated;
		$this->nameMonthGenitives = $nameMonthGenitives;
		$this->nameMonthGenitivesAbbreviated = $nameMonthGenitivesAbbreviated;
		$this->patternDateLong = $patternDateLong;
		$this->patternDateShort = $patternDateShort;
		$this->patternDateTimeFull = $patternDateTimeFull;
		$this->patternDateTimeSortable = $patternDateTimeSortable;
		$this->patternMonthDay = $patternMonthDay;
		$this->patternRfc1123 = $patternRfc1123;
		$this->patternTimeLong = $patternTimeLong;
		$this->patternTimeShort = $patternTimeShort;
		$this->patternUniversalSortable = $patternUniversalSortable;
		$this->patternYearMonth = $patternYearMonth;
		$this->separatorDate = $separatorDate;
		$this->separatorTime = $separatorTime;
	}}
	public $calendarWeekRuleIndex;
	public $calendarWeekRuleName;
	public $designatorAm;
	public $designatorPm;
	public $firstDayOfWeekIndex;
	public $firstDayOfWeekName;
	public $nameCalendar;
	public $nameCalendarNative;
	public $nameDays;
	public $nameDaysAbbreviated;
	public $nameDaysShortest;
	public $nameMonths;
	public $nameMonthsAbbreviated;
	public $nameMonthGenitives;
	public $nameMonthGenitivesAbbreviated;
	public $patternDateLong;
	public $patternDateShort;
	public $patternDateTimeFull;
	public $patternDateTimeSortable;
	public $patternMonthDay;
	public $patternRfc1123;
	public $patternTimeLong;
	public $patternTimeShort;
	public $patternUniversalSortable;
	public $patternYearMonth;
	public $separatorDate;
	public $separatorTime;
	public function toObject() {
		return _hx_anonymous(array("calendarWeekRuleIndex" => $this->calendarWeekRuleIndex, "calendarWeekRuleName" => $this->calendarWeekRuleName, "designatorAm" => $this->designatorAm, "designatorPm" => $this->designatorPm, "firstDayOfWeekIndex" => $this->firstDayOfWeekIndex, "firstDayOfWeekName" => $this->firstDayOfWeekName, "nameCalendar" => $this->nameCalendar, "nameCalendarNative" => $this->nameCalendarNative, "nameDays" => $this->nameDays, "nameDaysAbbreviated" => $this->nameDaysAbbreviated, "nameDaysShortest" => $this->nameDaysShortest, "nameMonths" => $this->nameMonths, "nameMonthsAbbreviated" => $this->nameMonthsAbbreviated, "nameMonthGenitives" => $this->nameMonthGenitives, "nameMonthGenitivesAbbreviated" => $this->nameMonthGenitivesAbbreviated, "patternDateLong" => $this->patternDateLong, "patternDateShort" => $this->patternDateShort, "patternDateTimeFull" => $this->patternDateTimeFull, "patternDateTimeSortable" => $this->patternDateTimeSortable, "patternMonthDay" => $this->patternMonthDay, "patternRfc1123" => $this->patternRfc1123, "patternTimeLong" => $this->patternTimeLong, "patternTimeShort" => $this->patternTimeShort, "patternUniversalSortable" => $this->patternUniversalSortable, "patternYearMonth" => $this->patternYearMonth, "separatorDate" => $this->separatorDate, "separatorTime" => $this->separatorTime));
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static $invariant;
	static function fromObject($o) {
		return new thx_culture_DateFormatInfo($o->calendarWeekRuleIndex, $o->calendarWeekRuleName, $o->designatorAm, $o->designatorPm, $o->firstDayOfWeekIndex, $o->firstDayOfWeekName, $o->nameCalendar, $o->nameCalendarNative, $o->nameDays, $o->nameDaysAbbreviated, $o->nameDaysShortest, $o->nameMonths, $o->nameMonthsAbbreviated, $o->nameMonthGenitives, $o->nameMonthGenitivesAbbreviated, $o->patternDateLong, $o->patternDateShort, $o->patternDateTimeFull, $o->patternDateTimeSortable, $o->patternMonthDay, $o->patternRfc1123, $o->patternTimeLong, $o->patternTimeShort, $o->patternUniversalSortable, $o->patternYearMonth, $o->separatorDate, $o->separatorTime);
	}
	function __toString() { return 'thx.culture.DateFormatInfo'; }
}
thx_culture_DateFormatInfo::$invariant = new thx_culture_DateFormatInfo(0, "FirstDay", "AM", "PM", 0, "Sunday", "Gregorian", null, (new _hx_array(array("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))), (new _hx_array(array("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))), (new _hx_array(array("Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"))), (new _hx_array(array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""))), (new _hx_array(array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""))), (new _hx_array(array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""))), (new _hx_array(array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""))), "dddd, dd MMMM yyyy", "MM/dd/yyyy", "dddd, dd MMMM yyyy HH:mm:ss", "yyyy'-'MM'-'dd'T'HH':'mm':'ss", "MMMM dd", "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'", "HH:mm:ss", "HH:mm", "yyyy'-'MM'-'dd HH':'mm':'ss'Z'", "yyyy MMMM", "/", ":");
