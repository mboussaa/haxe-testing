<?php

// Generated by Haxe 3.3.0
class thx_math_random__Random_Random_Impl_ {
	public function __construct(){}
	static function lessThan($this1, $max) {
		$tmp = $this1->float();
		return Std::int($max * $tmp);
	}
	static function between($this1, $min, $max) {
		$tmp = $this1->float();
		$tmp1 = Math::floor($tmp * (1 + $max - $min));
		return $tmp1 + $min;
	}
	static function int($this1) {
		return Std::random(2147483647);
	}
	static function bool($this1) {
		$tmp = thx_math_random__Random_Random_Impl_::int($this1);
		return _hx_mod($tmp, 2) === 0;
	}
	static function shuffle($this1, $arr) {
		$t = thx_Ints::range($arr->length, null, null);
		$array = (new _hx_array(array()));
		while($t->length > 0) {
			$pos = thx_math_random__Random_Random_Impl_::lessThan($this1, $t->length);
			$index = $t[$pos];
			$t->splice($pos, 1);
			$array->push($arr[$index]);
			unset($pos,$index);
		}
		return $array;
	}
	function __toString() { return 'thx.math.random._Random.Random_Impl_'; }
}
