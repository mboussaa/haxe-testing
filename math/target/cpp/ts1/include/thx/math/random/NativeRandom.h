// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_math_random_NativeRandom
#define INCLUDED_thx_math_random_NativeRandom

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,math,random,NativeRandom)

namespace thx{
namespace math{
namespace random{


class HXCPP_CLASS_ATTRIBUTES NativeRandom_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NativeRandom_obj OBJ_;
		NativeRandom_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.math.random.NativeRandom")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.math.random.NativeRandom"); }
		static hx::ObjectPtr< NativeRandom_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NativeRandom_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("NativeRandom","\x1a","\x77","\xb8","\x34"); }

		Int _hx_int();
		::Dynamic _hx_int_dyn();

		Float _hx_float();
		::Dynamic _hx_float_dyn();

};

} // end namespace thx
} // end namespace math
} // end namespace random

#endif /* INCLUDED_thx_math_random_NativeRandom */ 
