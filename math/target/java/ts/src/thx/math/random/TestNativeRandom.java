// Generated by Haxe 3.3.0
package thx.math.random;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestNativeRandom extends haxe.lang.HxObject
{
	public TestNativeRandom(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestNativeRandom()
	{
		//line 6 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		thx.math.random.TestNativeRandom.__hx_ctor_thx_math_random_TestNativeRandom(this);
	}
	
	
	public static void __hx_ctor_thx_math_random_TestNativeRandom(thx.math.random.TestNativeRandom __temp_me117)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		return new thx.math.random.TestNativeRandom(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		return new thx.math.random.TestNativeRandom();
	}
	
	
	public void testIntBoundaries()
	{
		//line 9 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		thx.math.random.NativeRandom random = new thx.math.random.NativeRandom();
		//line 11 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		{
			//line 11 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			int _g = 0;
			//line 11 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			while (( _g < 1000 ))
			{
				//line 11 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				int i = _g++;
				//line 12 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				int v = random._int();
				//line 13 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				utest.Assert.isTrue(( ( v >= 0 ) && ( v <= 2147483647 ) ), ( "expected value to be between 0 and 0x7FFFFFFF, but is " + i ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.math.random.TestNativeRandom", "TestNativeRandom.hx", "testIntBoundaries"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
			}
			
		}
		
	}
	
	
	public void testFloatBoundaries()
	{
		//line 18 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		thx.math.random.NativeRandom random = new thx.math.random.NativeRandom();
		//line 20 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		{
			//line 20 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			int _g = 0;
			//line 20 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			while (( _g < 1000 ))
			{
				//line 20 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				int i = _g++;
				//line 21 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				double v = random._float();
				//line 22 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				utest.Assert.isTrue(( ( v >= 0 ) && ( v <= 1.0 ) ), ( "expected value to be between 0 and 1, but is " + i ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.math.random.TestNativeRandom", "TestNativeRandom.hx", "testFloatBoundaries"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		{
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			switch (field.hashCode())
			{
				case 52268754:
				{
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					if (field.equals("testFloatBoundaries")) 
					{
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFloatBoundaries")) );
					}
					
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					break;
				}
				
				
				case 881546277:
				{
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					if (field.equals("testIntBoundaries")) 
					{
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIntBoundaries")) );
					}
					
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		{
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			switch (field.hashCode())
			{
				case 52268754:
				{
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					if (field.equals("testFloatBoundaries")) 
					{
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						this.testFloatBoundaries();
					}
					
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					break;
				}
				
				
				case 881546277:
				{
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					if (field.equals("testIntBoundaries")) 
					{
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
						this.testIntBoundaries();
					}
					
					//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/shared/math/test/thx/math/random/TestNativeRandom.hx"
		return null;
	}
	
	
}


