// Generated by Haxe 3.3.0
package thx.math.random;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRandomAbstract extends haxe.lang.HxObject
{
	public TestRandomAbstract(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRandomAbstract()
	{
		//line 7 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		thx.math.random.TestRandomAbstract.__hx_ctor_thx_math_random_TestRandomAbstract(this);
	}
	
	
	public static void __hx_ctor_thx_math_random_TestRandomAbstract(thx.math.random.TestRandomAbstract __temp_me119)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		return new thx.math.random.TestRandomAbstract(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		return new thx.math.random.TestRandomAbstract();
	}
	
	
	public void testLessThan()
	{
		//line 10 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		java.lang.Object random = new thx.math.random.PseudoRandom(((java.lang.Object) (null) ));
		//line 11 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		{
			//line 11 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			int _g = 0;
			//line 11 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			while (( _g < 100 ))
			{
				//line 11 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				 ++ _g;
				//line 12 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				int r = thx.math.random._Random.Random_Impl_.lessThan(random, 10);
				//line 13 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				utest.Assert.isTrue(( r >= 0 ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.math.random.TestRandomAbstract", "TestRandomAbstract.hx", "testLessThan"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
				//line 14 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				utest.Assert.isTrue(( r < 10 ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.math.random.TestRandomAbstract", "TestRandomAbstract.hx", "testLessThan"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		{
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			switch (field.hashCode())
			{
				case -1490950772:
				{
					//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
					if (field.equals("testLessThan")) 
					{
						//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testLessThan")) );
					}
					
					//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		{
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			switch (field.hashCode())
			{
				case -1490950772:
				{
					//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
					if (field.equals("testLessThan")) 
					{
						//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
						this.testLessThan();
					}
					
					//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/math/test/thx/math/random/TestRandomAbstract.hx"
		return null;
	}
	
	
}


