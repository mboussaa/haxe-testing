// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class AnonymousMap<V> : global::haxe.lang.HxObject, global::thx.AnonymousMap, global::haxe.IMap<object, V> {
		
		public AnonymousMap(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public AnonymousMap(object o) {
			global::thx.AnonymousMap<object>.__hx_ctor_thx_AnonymousMap<V>(((global::thx.AnonymousMap<V>) (this) ), ((object) (o) ));
		}
		
		
		public static void __hx_ctor_thx_AnonymousMap<V_c>(global::thx.AnonymousMap<V_c> __temp_me65, object o) {
			__temp_me65.o = o;
		}
		
		
		public static object __hx_cast<V_c_c>(global::thx.AnonymousMap me) {
			return ( (( me != null )) ? (me.thx_AnonymousMap_cast<V_c_c>()) : (null) );
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.AnonymousMap<object>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.AnonymousMap<object>(((object) (arr[0]) ));
		}
		
		
		public virtual object thx_AnonymousMap_cast<V_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(V), typeof(V_c))) {
				return this;
			}
			
			global::thx.AnonymousMap<V_c> new_me = new global::thx.AnonymousMap<V_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object haxe_IMap_cast<K_c, V_c>() {
			return this.thx_AnonymousMap_cast<V_c>();
		}
		
		
		public object o;
		
		public virtual global::haxe.lang.Null<V> @get(object k) {
			return this.@get(global::haxe.lang.Runtime.toString(k));
		}
		
		
		public virtual global::haxe.lang.Null<V> @get(string k) {
			return global::haxe.lang.Null<object>.ofDynamic<V>(global::Reflect.field(this.o, k));
		}
		
		
		public virtual global::haxe.ds.Option getOption(string k) {
			global::haxe.lang.Null<V> @value = this.@get(((string) (k) ));
			if ( ! (@value.hasValue) ) {
				return global::haxe.ds.Option.None;
			}
			else {
				return global::haxe.ds.Option.Some((@value).toDynamic());
			}
			
		}
		
		
		public object getObject() {
			return this.o;
		}
		
		
		public virtual void @set(object k, V v) {
			this.@set(global::haxe.lang.Runtime.toString(k), global::haxe.lang.Runtime.genericCast<V>(v));
		}
		
		
		public virtual void @set(string k, V v) {
			global::Reflect.setField(this.o, k, v);
		}
		
		
		public virtual bool exists(object k) {
			return ((bool) (this.exists(global::haxe.lang.Runtime.toString(k))) );
		}
		
		
		public virtual bool exists(string k) {
			return global::Reflect.hasField(this.o, k);
		}
		
		
		public virtual bool @remove(object k) {
			return ((bool) (this.@remove(global::haxe.lang.Runtime.toString(k))) );
		}
		
		
		public virtual bool @remove(string k) {
			return global::Reflect.deleteField(this.o, k);
		}
		
		
		public virtual object keys() {
			return new global::_Array.ArrayIterator<object>(((global::Array<object>) (global::Reflect.fields(this.o)) ));
		}
		
		
		public virtual object iterator() {
			object tmp = this.keys();
			object o = this.o;
			return global::thx.Iterators.fmap<object, object>(((object) (tmp) ), ((global::haxe.lang.Function) (new global::thx.AnonymousMap_iterator_80__Fun(o)) ));
		}
		
		
		public virtual string toString() {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{ ", global::thx.Maps.tuples<object, V>(((global::haxe.IMap<object, V>) (global::haxe.IMap__Statics_.__hx_cast<object, V>(((global::haxe.IMap) (this) ))) )).map<object>(((global::haxe.lang.Function) (new global::thx.AnonymousMap_toString_86__Fun<V>()) )).@join(", ")), " }");
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 111:
					{
						this.o = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 111:
					{
						this.o = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 328878574:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "iterator", 328878574)) );
					}
					
					
					case 1191633396:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "keys", 1191633396)) );
					}
					
					
					case 76061764:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "remove", 76061764)) );
					}
					
					
					case 1071652316:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "exists", 1071652316)) );
					}
					
					
					case 5741474:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set", 5741474)) );
					}
					
					
					case 295045109:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getObject", 295045109)) );
					}
					
					
					case 668032171:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getOption", 668032171)) );
					}
					
					
					case 5144726:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get", 5144726)) );
					}
					
					
					case 111:
					{
						return this.o;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 111:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.o)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return this.toString();
					}
					
					
					case 328878574:
					{
						return this.iterator();
					}
					
					
					case 1191633396:
					{
						return this.keys();
					}
					
					
					case 76061764:
					{
						return this.@remove(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1071652316:
					{
						return this.exists(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 5741474:
					{
						this.@set(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.genericCast<V>(dynargs[1]));
						break;
					}
					
					
					case 295045109:
					{
						return this.getObject();
					}
					
					
					case 668032171:
					{
						return this.getOption(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 5144726:
					{
						return (this.@get(global::haxe.lang.Runtime.toString(dynargs[0]))).toDynamic();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("o");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class AnonymousMap_iterator_80__Fun : global::haxe.lang.Function {
		
		public AnonymousMap_iterator_80__Fun(object o) : base(1, 0) {
			this.o = o;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string a1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::Reflect.field(this.o, a1);
		}
		
		
		public object o;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class AnonymousMap_toString_86__Fun<V> : global::haxe.lang.Function {
		
		public AnonymousMap_toString_86__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), " => "), global::Std.@string(global::haxe.lang.Runtime.genericCast<V>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true))));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	[global::haxe.lang.GenericInterface(typeof(global::thx.AnonymousMap<object>))]
	public interface AnonymousMap : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object thx_AnonymousMap_cast<V_c>();
		
		object haxe_IMap_cast<K_c, V_c>();
		
		object getObject();
		
		bool exists(string k);
		
		bool @remove(string k);
		
		object keys();
		
		object iterator();
		
		string toString();
		
	}
}


