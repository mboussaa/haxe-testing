// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public sealed class List_Impl_ {
		
		public static global::thx.fp.ListImpl empty<A>() {
			return global::thx.fp.ListImpl.Nil;
		}
		
		
		public static global::thx.fp.ListImpl bin<A>(A x, global::thx.fp.ListImpl xs) {
			return global::thx.fp.ListImpl.Cons(x, xs);
		}
		
		
		public static global::thx.fp.ListImpl singleton<A>(A x) {
			return global::thx.fp.ListImpl.Cons(x, global::thx.fp.ListImpl.Nil);
		}
		
		
		public static global::thx.fp.ListImpl fromArray<A>(global::Array<A> arr) {
			global::Array<A> _e = arr;
			return ((global::thx.fp.ListImpl) ((new global::thx.fp._List.List_Impl__fromArray_19__Fun<A>(_e)).__hx_invoke2_o(default(double), new global::thx.fp._List.List_Impl__fromArray_19__Fun_0<A>(), default(double), global::thx.fp._List.List_Impl_.empty<A>())) );
		}
		
		
		public static B foldLeft<B, A>(global::thx.fp.ListImpl this1, B b, global::haxe.lang.Function f) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return b;
					}
					
					
					case 1:
					{
						return global::haxe.lang.Runtime.genericCast<B>(global::thx.fp._List.List_Impl_.foldLeft<object, A>(((global::thx.fp.ListImpl) (this1.@params[1]) ), global::haxe.lang.Runtime.genericCast<B>(f.__hx_invoke2_o(default(double), b, default(double), global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]))), ((global::haxe.lang.Function) (f) )));
					}
					
					
				}
				
				return default(B);
			}
		}
		
		
		public static B foldMap<B, A>(global::thx.fp.ListImpl this1, global::haxe.lang.Function f, object m) {
			global::thx.fp.ListImpl tmp = global::thx.fp._List.List_Impl_.map<object, A>(((global::thx.fp.ListImpl) (this1) ), ((global::haxe.lang.Function) (f) ));
			B tmp1 = global::thx._Monoid.Monoid_Impl_.get_zero<B>(((object) (m) ));
			object _e = m;
			return global::haxe.lang.Runtime.genericCast<B>(global::thx.fp._List.List_Impl_.foldLeft<object, B>(((global::thx.fp.ListImpl) (tmp) ), ((object) (tmp1) ), ((global::haxe.lang.Function) (new global::thx.fp._List.List_Impl__foldMap_28__Fun<B>(_e)) )));
		}
		
		
		public static global::thx.fp.ListImpl flatMap<B, A>(global::thx.fp.ListImpl this1, global::haxe.lang.Function f) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.ListImpl.Nil;
					}
					
					
					case 1:
					{
						return global::thx.fp._List.List_Impl_.concat<B>(((global::thx.fp.ListImpl) (f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]))) ), ((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.flatMap<object, A>(((global::thx.fp.ListImpl) (this1.@params[1]) ), ((global::haxe.lang.Function) (f) ))) ));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.ListImpl concat<A>(global::thx.fp.ListImpl this1, global::thx.fp.ListImpl that) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						if (( that.index == 0 )) {
							return global::thx.fp.ListImpl.Nil;
						}
						else {
							return that;
						}
						
					}
					
					
					case 1:
					{
						if (( that.index == 0 )) {
							global::thx.fp.ListImpl l = this1;
							return l;
						}
						else if (( ((global::thx.fp.ListImpl) (this1.@params[1]) ).index == 0 )) {
							return global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]), that);
						}
						else {
							return global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]), global::thx.fp._List.List_Impl_.concat<A>(((global::thx.fp.ListImpl) (this1.@params[1]) ), ((global::thx.fp.ListImpl) (that) )));
						}
						
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.ListImpl prepend<A>(global::thx.fp.ListImpl this1, A x) {
			return global::thx.fp.ListImpl.Cons(x, this1);
		}
		
		
		public static global::Array<A> toArray<A>(global::thx.fp.ListImpl this1) {
			return ((global::Array<A>) (global::Array<object>.__hx_cast<A>(((global::Array) (global::thx.fp._List.List_Impl_.foldLeft<object, A>(((global::thx.fp.ListImpl) (this1) ), ((object) (new global::Array<A>(new A[]{})) ), ((global::haxe.lang.Function) (new global::thx.fp._List.List_Impl__toArray_52__Fun<A>()) ))) ))) );
		}
		
		
		public static global::thx.fp.ListImpl intersperse<A>(global::thx.fp.ListImpl this1, A a) {
			unchecked {
				global::haxe.lang.Function[] go = new global::haxe.lang.Function[]{null};
				go[0] = new global::thx.fp._List.List_Impl__intersperse_58__Fun<A>(go, a);
				global::haxe.lang.Function go1 = go[0];
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.ListImpl.Nil;
					}
					
					
					case 1:
					{
						return global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]), ((global::thx.fp.ListImpl) (go1.__hx_invoke1_o(default(double), ((global::thx.fp.ListImpl) (this1.@params[1]) ))) ));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.ListImpl map<B, A>(global::thx.fp.ListImpl this1, global::haxe.lang.Function f) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.ListImpl.Nil;
					}
					
					
					case 1:
					{
						return global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<B>(f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]))), global::thx.fp._List.List_Impl_.map<object, A>(((global::thx.fp.ListImpl) (this1.@params[1]) ), ((global::haxe.lang.Function) (f) )));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.ListImpl zipAp<B, A>(global::thx.fp.ListImpl this1, global::thx.fp.ListImpl other) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.ListImpl.Nil;
					}
					
					
					case 1:
					{
						global::thx.fp.ListImpl xs = ((global::thx.fp.ListImpl) (this1.@params[1]) );
						A x = global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]);
						switch (other.index) {
							case 0:
							{
								return global::thx.fp.ListImpl.Nil;
							}
							
							
							case 1:
							{
								global::thx.fp.ListImpl ys = ((global::thx.fp.ListImpl) (((global::thx.fp.ListImpl) (other) ).@params[1]) );
								global::haxe.lang.Function y = ((global::haxe.lang.Function) (((global::thx.fp.ListImpl) (other) ).@params[0]) );
								return global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<B>(y.__hx_invoke1_o(default(double), x)), global::thx.fp._List.List_Impl_.zipAp<object, A>(((global::thx.fp.ListImpl) (xs) ), ((global::thx.fp.ListImpl) (ys) )));
							}
							
							
						}
						
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.ListImpl zip2Ap<A, B, C>(global::haxe.lang.Function f, global::thx.fp.ListImpl ax, global::thx.fp.ListImpl bx) {
			return global::thx.fp._List.List_Impl_.zipAp<object, B>(((global::thx.fp.ListImpl) (bx) ), ((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.map<object, A>(((global::thx.fp.ListImpl) (ax) ), ((global::haxe.lang.Function) (global::thx.Functions2.curry<A, B, C>(((global::haxe.lang.Function) (f) ))) ))) ));
		}
		
		
		public static global::thx.fp.ListImpl zip3Ap<A, B, C, D>(global::haxe.lang.Function f, global::thx.fp.ListImpl ax, global::thx.fp.ListImpl bx, global::thx.fp.ListImpl cx) {
			global::haxe.lang.Function f1 = f;
			return global::thx.fp._List.List_Impl_.zipAp<object, C>(((global::thx.fp.ListImpl) (cx) ), ((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.zip2Ap<A, B, object>(((global::haxe.lang.Function) (new global::thx.fp._List.List_Impl__zip3Ap_97__Fun<C, D, B, A>(f1)) ), ((global::thx.fp.ListImpl) (ax) ), ((global::thx.fp.ListImpl) (bx) ))) ));
		}
		
		
		public static global::thx.fp.ListImpl zip4Ap<A, B, C, D, E>(global::haxe.lang.Function f, global::thx.fp.ListImpl ax, global::thx.fp.ListImpl bx, global::thx.fp.ListImpl cx, global::thx.fp.ListImpl dx) {
			global::haxe.lang.Function f1 = f;
			return global::thx.fp._List.List_Impl_.zipAp<object, D>(((global::thx.fp.ListImpl) (dx) ), ((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.zip3Ap<A, B, C, object>(((global::haxe.lang.Function) (new global::thx.fp._List.List_Impl__zip4Ap_103__Fun<D, E, C, B, A>(f1)) ), ((global::thx.fp.ListImpl) (ax) ), ((global::thx.fp.ListImpl) (bx) ), ((global::thx.fp.ListImpl) (cx) ))) ));
		}
		
		
		public static global::thx.fp.ListImpl zip5Ap<A, B, C, D, E, F>(global::haxe.lang.Function f, global::thx.fp.ListImpl ax, global::thx.fp.ListImpl bx, global::thx.fp.ListImpl cx, global::thx.fp.ListImpl dx, global::thx.fp.ListImpl ex) {
			global::haxe.lang.Function f1 = f;
			return global::thx.fp._List.List_Impl_.zipAp<object, E>(((global::thx.fp.ListImpl) (ex) ), ((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.zip4Ap<A, B, C, D, object>(((global::haxe.lang.Function) (new global::thx.fp._List.List_Impl__zip5Ap_109__Fun<E, F, D, C, B, A>(f1)) ), ((global::thx.fp.ListImpl) (ax) ), ((global::thx.fp.ListImpl) (bx) ), ((global::thx.fp.ListImpl) (cx) ), ((global::thx.fp.ListImpl) (dx) ))) ));
		}
		
		
		public static string toStringWithShow<A>(global::thx.fp.ListImpl this1, global::haxe.lang.Function show) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("[", global::haxe.lang.Runtime.toString(global::thx.fp._List.List_Impl_.foldLeft<object, object>(((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.intersperse<object>(((global::thx.fp.ListImpl) (global::thx.fp._List.List_Impl_.map<object, A>(((global::thx.fp.ListImpl) (this1) ), ((global::haxe.lang.Function) (show) ))) ), ((object) (",") ))) ), ((object) ("") ), ((global::haxe.lang.Function) (( (( global::thx.fp._List.List_Impl__toStringWithShow_112__Fun.__hx_current != null )) ? (global::thx.fp._List.List_Impl__toStringWithShow_112__Fun.__hx_current) : (global::thx.fp._List.List_Impl__toStringWithShow_112__Fun.__hx_current = ((global::thx.fp._List.List_Impl__toStringWithShow_112__Fun) (new global::thx.fp._List.List_Impl__toStringWithShow_112__Fun()) )) )) )))), "]");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__fromArray_19__Fun_0<A> : global::haxe.lang.Function {
		
		public List_Impl__fromArray_19__Fun_0() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Null<A> _1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (new global::haxe.lang.Null<A>(global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float2) )), true)) : (( (( __fn_dyn2 == null )) ? (default(global::haxe.lang.Null<A>)) : (global::haxe.lang.Null<object>.ofDynamic<A>(__fn_dyn2)) )) );
			global::thx.fp.ListImpl _0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.ListImpl) (((object) (__fn_float1) )) )) : (( (( __fn_dyn1 == null )) ? (null) : (((global::thx.fp.ListImpl) (__fn_dyn1) )) )) );
			return ((global::thx.fp.ListImpl) (global::thx.fp.ListImpl.Cons((_1).toDynamic(), _0)) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__fromArray_19__Fun<A> : global::haxe.lang.Function {
		
		public List_Impl__fromArray_19__Fun(global::Array<A> _e) : base(2, 0) {
			this._e = _e;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::thx.fp.ListImpl initial = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.ListImpl) (((object) (__fn_float2) )) )) : (((global::thx.fp.ListImpl) (__fn_dyn2) )) );
			global::haxe.lang.Function f = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.fp.ListImpl initial1 = initial;
			int i = this._e.length;
			while ((  -- i >= 0 )) {
				initial1 = ((global::thx.fp.ListImpl) (f.__hx_invoke2_o(default(double), initial1, default(double), global::haxe.lang.Runtime.genericCast<A>(((global::Array<A>) (this._e) )[i]))) );
			}
			
			return initial1;
		}
		
		
		public global::Array<A> _e;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__foldMap_28__Fun<B> : global::haxe.lang.Function {
		
		public List_Impl__foldMap_28__Fun(object _e) : base(2, 0) {
			this._e = _e;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			B a1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			B a0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn1)) );
			return global::thx._Monoid.Monoid_Impl_.append<B>(((object) (this._e) ), global::haxe.lang.Runtime.genericCast<B>(a0), global::haxe.lang.Runtime.genericCast<B>(a1));
		}
		
		
		public object _e;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__toArray_52__Fun<A> : global::haxe.lang.Function {
		
		public List_Impl__toArray_52__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A a = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn2)) );
			global::Array<A> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<A>) (global::Array<object>.__hx_cast<A>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<A>) (global::Array<object>.__hx_cast<A>(((global::Array) (__fn_dyn1) ))) )) );
			acc.push(a);
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__intersperse_58__Fun<A> : global::haxe.lang.Function {
		
		public List_Impl__intersperse_58__Fun(global::haxe.lang.Function[] go, A a) : base(1, 0) {
			this.go = go;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.fp.ListImpl ls = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.ListImpl) (((object) (__fn_float1) )) )) : (((global::thx.fp.ListImpl) (__fn_dyn1) )) );
				switch (ls.index) {
					case 0:
					{
						return global::thx.fp.ListImpl.Nil;
					}
					
					
					case 1:
					{
						return global::thx.fp.ListImpl.Cons(this.a, global::thx.fp.ListImpl.Cons(global::haxe.lang.Runtime.genericCast<A>(ls.@params[0]), ((global::thx.fp.ListImpl) (this.go[0].__hx_invoke1_o(default(double), ((global::thx.fp.ListImpl) (ls.@params[1]) ))) )));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function[] go;
		
		public A a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip3Ap_97__Fun_0<B, A, D, C> : global::haxe.lang.Function {
		
		public List_Impl__zip3Ap_97__Fun_0(global::haxe.lang.Function f1, B b, A a) : base(1, 0) {
			this.f1 = f1;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			C c = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<C>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<C>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<D>(this.f1.__hx_invoke3_o(default(double), this.a, default(double), this.b, default(double), c));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public B b;
		
		public A a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip3Ap_97__Fun<C, D, B, A> : global::haxe.lang.Function {
		
		public List_Impl__zip3Ap_97__Fun(global::haxe.lang.Function f1) : base(2, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			B b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return new global::thx.fp._List.List_Impl__zip3Ap_97__Fun_0<B, A, D, C>(this.f1, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip4Ap_103__Fun_0<C, B, A, E, D> : global::haxe.lang.Function {
		
		public List_Impl__zip4Ap_103__Fun_0(global::haxe.lang.Function f1, C c, B b, A a) : base(1, 0) {
			this.f1 = f1;
			this.c = c;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			D d = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<D>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<D>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<E>(this.f1.__hx_invoke4_o(default(double), this.a, default(double), this.b, default(double), this.c, default(double), d));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public C c;
		
		public B b;
		
		public A a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip4Ap_103__Fun<D, E, C, B, A> : global::haxe.lang.Function {
		
		public List_Impl__zip4Ap_103__Fun(global::haxe.lang.Function f1) : base(3, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			C c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<C>(((object) (__fn_float3) ))) : (global::haxe.lang.Runtime.genericCast<C>(__fn_dyn3)) );
			B b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return new global::thx.fp._List.List_Impl__zip4Ap_103__Fun_0<C, B, A, E, D>(this.f1, c, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip5Ap_109__Fun_0<D, C, B, A, F, E> : global::haxe.lang.Function {
		
		public List_Impl__zip5Ap_109__Fun_0(global::haxe.lang.Function f1, D d, C c, B b, A a) : base(1, 0) {
			this.f1 = f1;
			this.d = d;
			this.c = c;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			E e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<E>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<E>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<F>(this.f1.__hx_invoke5_o(default(double), this.a, default(double), this.b, default(double), this.c, default(double), this.d, default(double), e));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public D d;
		
		public C c;
		
		public B b;
		
		public A a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__zip5Ap_109__Fun<E, F, D, C, B, A> : global::haxe.lang.Function {
		
		public List_Impl__zip5Ap_109__Fun(global::haxe.lang.Function f1) : base(4, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke4_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3, double __fn_float4, object __fn_dyn4) {
			D d = ( (( __fn_dyn4 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<D>(((object) (__fn_float4) ))) : (global::haxe.lang.Runtime.genericCast<D>(__fn_dyn4)) );
			C c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<C>(((object) (__fn_float3) ))) : (global::haxe.lang.Runtime.genericCast<C>(__fn_dyn3)) );
			B b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return new global::thx.fp._List.List_Impl__zip5Ap_109__Fun_0<D, C, B, A, F, E>(this.f1, d, c, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._List {
	public class List_Impl__toStringWithShow_112__Fun : global::haxe.lang.Function {
		
		public List_Impl__toStringWithShow_112__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.fp._List.List_Impl__toStringWithShow_112__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			string _1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (( (( __fn_dyn2 == null )) ? (null) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) )) );
			string _0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (( (( __fn_dyn1 == null )) ? (null) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) )) );
			return ( ((string) (_0) ) + ((string) (_1) ) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class ListImpl : global::haxe.lang.ParamEnum {
		
		public ListImpl(int index, object[] @params) : base(index, @params) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Nil", "Cons"};
		
		public static readonly global::thx.fp.ListImpl Nil = new global::thx.fp.ListImpl(0, null);
		
		public static global::thx.fp.ListImpl Cons(object x, global::thx.fp.ListImpl xs) {
			unchecked {
				return new global::thx.fp.ListImpl(1, new object[]{x, xs});
			}
		}
		
		
		public override string getTag() {
			return global::thx.fp.ListImpl.__hx_constructs[this.index];
		}
		
		
	}
}


