// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TreeBagImpl : global::haxe.lang.ParamEnum {
		
		public TreeBagImpl(int index, object[] @params) : base(index, @params) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Empty", "Cons", "Branch"};
		
		public static readonly global::thx.fp.TreeBagImpl Empty = new global::thx.fp.TreeBagImpl(0, null);
		
		public static global::thx.fp.TreeBagImpl Cons(object x, global::thx.fp.TreeBagImpl xs) {
			unchecked {
				return new global::thx.fp.TreeBagImpl(1, new object[]{x, xs});
			}
		}
		
		
		public static global::thx.fp.TreeBagImpl Branch(global::thx.fp.TreeBagImpl left, global::thx.fp.TreeBagImpl right) {
			unchecked {
				return new global::thx.fp.TreeBagImpl(2, new object[]{left, right});
			}
		}
		
		
		public override string getTag() {
			return global::thx.fp.TreeBagImpl.__hx_constructs[this.index];
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public sealed class TreeBag_Impl_ {
		
		public static global::thx.fp.TreeBagImpl empty<A>() {
			return global::thx.fp.TreeBagImpl.Empty;
		}
		
		
		public static global::thx.fp.TreeBagImpl singleton<A>(A a) {
			return global::thx.fp.TreeBagImpl.Cons(a, global::thx.fp.TreeBagImpl.Empty);
		}
		
		
		public static global::thx.fp.TreeBagImpl cons<A>(A x, global::thx.fp.TreeBagImpl xs) {
			return global::thx.fp.TreeBagImpl.Cons(x, xs);
		}
		
		
		public static global::thx.fp.TreeBagImpl fromArray<A>(global::Array<A> xs) {
			return ((global::thx.fp.TreeBagImpl) (global::thx.Arrays.reduce<A, object>(((global::Array<A>) (xs) ), ((global::haxe.lang.Function) (new global::thx.fp._TreeBag.TreeBag_Impl__fromArray_23__Fun<A>()) ), ((object) (global::thx.fp.TreeBagImpl.Empty) ))) );
		}
		
		
		public static global::thx.fp.TreeBagImpl flatten<A>(global::thx.fp.TreeBagImpl xs) {
			return global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (xs) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx.Functions), "identity", 959399230)) ));
		}
		
		
		public static global::thx.fp.TreeBagImpl prepend<A1>(global::thx.fp.TreeBagImpl this1, A1 x) {
			return global::thx.fp.TreeBagImpl.Cons(x, this1);
		}
		
		
		public static global::thx.fp.TreeBagImpl append<A1>(global::thx.fp.TreeBagImpl this1, global::thx.fp.TreeBagImpl other) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						if (( other.index == 0 )) {
							return global::thx.fp.TreeBagImpl.Empty;
						}
						else {
							return other;
						}
						
					}
					
					
					case 1:
					{
						if (( other.index == 0 )) {
							return this1;
						}
						else if (( ((global::thx.fp.TreeBagImpl) (this1.@params[1]) ).index == 0 )) {
							return global::thx.fp.TreeBagImpl.Cons(global::haxe.lang.Runtime.genericCast<A1>(this1.@params[0]), other);
						}
						else {
							return global::thx.fp.TreeBagImpl.Branch(this1, other);
						}
						
					}
					
					
					default:
					{
						if (( other.index == 0 )) {
							return this1;
						}
						else {
							return global::thx.fp.TreeBagImpl.Branch(this1, other);
						}
						
					}
					
				}
				
			}
		}
		
		
		public static global::thx.fp.TreeBagImpl prependAll<A1>(global::thx.fp.TreeBagImpl this1, global::Array<A1> xs) {
			return ((global::thx.fp.TreeBagImpl) (global::thx.Arrays.reduce<A1, object>(((global::Array<A1>) (xs) ), ((global::haxe.lang.Function) (new global::thx.fp._TreeBag.TreeBag_Impl__prependAll_43__Fun<A1>()) ), ((object) (this1) ))) );
		}
		
		
		public static global::thx.fp.TreeBagImpl map<A, B, A1>(global::thx.fp.TreeBagImpl this1, global::haxe.lang.Function f) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.TreeBagImpl.Empty;
					}
					
					
					case 1:
					{
						return global::thx.fp.TreeBagImpl.Cons(global::haxe.lang.Runtime.genericCast<B>(f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]))), global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (this1.@params[1]) ), ((global::haxe.lang.Function) (f) )));
					}
					
					
					case 2:
					{
						return global::thx.fp.TreeBagImpl.Branch(global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (this1.@params[0]) ), ((global::haxe.lang.Function) (f) )), global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (this1.@params[1]) ), ((global::haxe.lang.Function) (f) )));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static global::thx.fp.TreeBagImpl flatMap<A, B, A1>(global::thx.fp.TreeBagImpl this1, global::haxe.lang.Function f) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return global::thx.fp.TreeBagImpl.Empty;
					}
					
					
					case 1:
					{
						global::thx.fp.TreeBagImpl xs = ((global::thx.fp.TreeBagImpl) (this1.@params[1]) );
						global::thx.fp.TreeBagImpl this2 = ((global::thx.fp.TreeBagImpl) (f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<A>(this1.@params[0]))) );
						global::thx.fp.TreeBagImpl other = global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (xs) ), ((global::haxe.lang.Function) (f) ));
						switch (((global::thx.fp.TreeBagImpl) (this2) ).index) {
							case 0:
							{
								if (( other.index == 0 )) {
									return global::thx.fp.TreeBagImpl.Empty;
								}
								else {
									return other;
								}
								
							}
							
							
							case 1:
							{
								if (( other.index == 0 )) {
									return ((global::thx.fp.TreeBagImpl) (this2) );
								}
								else if (( ((global::thx.fp.TreeBagImpl) (((global::thx.fp.TreeBagImpl) (this2) ).@params[1]) ).index == 0 )) {
									return global::thx.fp.TreeBagImpl.Cons(global::haxe.lang.Runtime.genericCast<B>(((global::thx.fp.TreeBagImpl) (this2) ).@params[0]), other);
								}
								else {
									return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this2) ), other);
								}
								
							}
							
							
							default:
							{
								if (( other.index == 0 )) {
									return ((global::thx.fp.TreeBagImpl) (this2) );
								}
								else {
									return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this2) ), other);
								}
								
							}
							
						}
						
					}
					
					
					case 2:
					{
						global::thx.fp.TreeBagImpl r = ((global::thx.fp.TreeBagImpl) (this1.@params[1]) );
						global::thx.fp.TreeBagImpl this3 = global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (this1.@params[0]) ), ((global::haxe.lang.Function) (f) ));
						global::thx.fp.TreeBagImpl other1 = global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (r) ), ((global::haxe.lang.Function) (f) ));
						switch (((global::thx.fp.TreeBagImpl) (this3) ).index) {
							case 0:
							{
								if (( other1.index == 0 )) {
									return global::thx.fp.TreeBagImpl.Empty;
								}
								else {
									return other1;
								}
								
							}
							
							
							case 1:
							{
								if (( other1.index == 0 )) {
									return ((global::thx.fp.TreeBagImpl) (this3) );
								}
								else if (( ((global::thx.fp.TreeBagImpl) (((global::thx.fp.TreeBagImpl) (this3) ).@params[1]) ).index == 0 )) {
									return global::thx.fp.TreeBagImpl.Cons(global::haxe.lang.Runtime.genericCast<B>(((global::thx.fp.TreeBagImpl) (this3) ).@params[0]), other1);
								}
								else {
									return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this3) ), other1);
								}
								
							}
							
							
							default:
							{
								if (( other1.index == 0 )) {
									return ((global::thx.fp.TreeBagImpl) (this3) );
								}
								else {
									return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this3) ), other1);
								}
								
							}
							
						}
						
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static B foldLeft<A, B, A1>(global::thx.fp.TreeBagImpl this1, B b, global::haxe.lang.Function f) {
			unchecked {
				B acc = b;
				global::thx.fp.ListImpl nodes = ((global::thx.fp.ListImpl) (global::thx.fp.ListImpl.Cons(this1, global::thx.fp.ListImpl.Nil)) );
				while (true) {
					switch (nodes.index) {
						case 0:
						{
							return acc;
						}
						
						
						case 1:
						{
							global::thx.fp.ListImpl ys = ((global::thx.fp.ListImpl) (((global::thx.fp.ListImpl) (nodes) ).@params[1]) );
							global::thx.fp.TreeBagImpl y = ((global::thx.fp.TreeBagImpl) (((global::thx.fp.ListImpl) (nodes) ).@params[0]) );
							switch (y.index) {
								case 0:
								{
									nodes = ys;
									break;
								}
								
								
								case 1:
								{
									acc = global::haxe.lang.Runtime.genericCast<B>(f.__hx_invoke2_o(default(double), acc, default(double), global::haxe.lang.Runtime.genericCast<A>(y.@params[0])));
									nodes = ((global::thx.fp.ListImpl) (global::thx.fp.ListImpl.Cons(((global::thx.fp.TreeBagImpl) (y.@params[1]) ), ((global::thx.fp.ListImpl) (ys) ))) );
									break;
								}
								
								
								case 2:
								{
									nodes = global::thx.fp.ListImpl.Cons(((global::thx.fp.TreeBagImpl) (y.@params[0]) ), ((global::thx.fp.ListImpl) (global::thx.fp.ListImpl.Cons(((global::thx.fp.TreeBagImpl) (y.@params[1]) ), ((global::thx.fp.ListImpl) (ys) ))) ));
									break;
								}
								
								
							}
							
							break;
						}
						
						
					}
					
				}
				
				return default(B);
			}
		}
		
		
		public static int length<A1>(global::thx.fp.TreeBagImpl this1) {
			return ((int) (global::haxe.lang.Runtime.toInt(global::thx.fp._TreeBag.TreeBag_Impl_.foldLeft<object, object, object>(((global::thx.fp.TreeBagImpl) (this1) ), ((object) (0) ), ((global::haxe.lang.Function) (new global::thx.fp._TreeBag.TreeBag_Impl__length_83__Fun<A1>()) )))) );
		}
		
		
		public static global::Array<A1> toArray<A1>(global::thx.fp.TreeBagImpl this1) {
			return ((global::Array<A1>) (global::Array<object>.__hx_cast<A1>(((global::Array) (global::thx.fp._TreeBag.TreeBag_Impl_.foldLeft<object, object, object>(((global::thx.fp.TreeBagImpl) (this1) ), ((object) (new global::Array<A1>(new A1[]{})) ), ((global::haxe.lang.Function) (new global::thx.fp._TreeBag.TreeBag_Impl__toArray_86__Fun<A1>()) ))) ))) );
		}
		
		
		public static object monoid<A>() {
			{
				global::haxe.lang.Function __temp_odecl1 = new global::thx.fp._TreeBag.TreeBag_Impl__monoid_92__Fun<A>();
				return new global::haxe.lang.DynamicObject(new int[]{265544154, 1357975336}, new object[]{__temp_odecl1, ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Empty) )}, new int[]{}, new double[]{});
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public class TreeBag_Impl__fromArray_23__Fun<A> : global::haxe.lang.Function {
		
		public TreeBag_Impl__fromArray_23__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A x = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn2)) );
			global::thx.fp.TreeBagImpl acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.TreeBagImpl) (((object) (__fn_float1) )) )) : (((global::thx.fp.TreeBagImpl) (__fn_dyn1) )) );
			return ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(x, acc)) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public class TreeBag_Impl__prependAll_43__Fun<A1> : global::haxe.lang.Function {
		
		public TreeBag_Impl__prependAll_43__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A1 x = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A1>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A1>(__fn_dyn2)) );
			global::thx.fp.TreeBagImpl acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.TreeBagImpl) (((object) (__fn_float1) )) )) : (((global::thx.fp.TreeBagImpl) (__fn_dyn1) )) );
			return ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(x, acc)) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public class TreeBag_Impl__length_83__Fun<A1> : global::haxe.lang.Function {
		
		public TreeBag_Impl__length_83__Fun() : base(2, 1) {
		}
		
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				A1 a = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A1>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A1>(__fn_dyn2)) );
				int c = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (( c + 1 )) );
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public class TreeBag_Impl__toArray_86__Fun<A1> : global::haxe.lang.Function {
		
		public TreeBag_Impl__toArray_86__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A1 a = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A1>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A1>(__fn_dyn2)) );
			global::Array<A1> b = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<A1>) (global::Array<object>.__hx_cast<A1>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<A1>) (global::Array<object>.__hx_cast<A1>(((global::Array) (__fn_dyn1) ))) )) );
			b.push(a);
			return b;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp._TreeBag {
	public class TreeBag_Impl__monoid_92__Fun<A> : global::haxe.lang.Function {
		
		public TreeBag_Impl__monoid_92__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::thx.fp.TreeBagImpl r = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.TreeBagImpl) (((object) (__fn_float2) )) )) : (((global::thx.fp.TreeBagImpl) (__fn_dyn2) )) );
				global::thx.fp.TreeBagImpl l = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.fp.TreeBagImpl) (((object) (__fn_float1) )) )) : (((global::thx.fp.TreeBagImpl) (__fn_dyn1) )) );
				switch (((global::thx.fp.TreeBagImpl) (l) ).index) {
					case 0:
					{
						if (( r.index == 0 )) {
							return global::thx.fp.TreeBagImpl.Empty;
						}
						else {
							return r;
						}
						
					}
					
					
					case 1:
					{
						if (( r.index == 0 )) {
							return ((global::thx.fp.TreeBagImpl) (l) );
						}
						else if (( ((global::thx.fp.TreeBagImpl) (((global::thx.fp.TreeBagImpl) (l) ).@params[1]) ).index == 0 )) {
							return global::thx.fp.TreeBagImpl.Cons(global::haxe.lang.Runtime.genericCast<A>(((global::thx.fp.TreeBagImpl) (l) ).@params[0]), r);
						}
						else {
							return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (l) ), r);
						}
						
					}
					
					
					default:
					{
						if (( r.index == 0 )) {
							return ((global::thx.fp.TreeBagImpl) (l) );
						}
						else {
							return global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (l) ), r);
						}
						
					}
					
				}
				
			}
		}
		
		
	}
}


