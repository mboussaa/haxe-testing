// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestObjects : global::haxe.lang.HxObject {
		
		public TestObjects(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestObjects() {
			global::thx.TestObjects.__hx_ctor_thx_TestObjects(this);
		}
		
		
		public static void __hx_ctor_thx_TestObjects(global::thx.TestObjects __temp_me213) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestObjects(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestObjects();
		}
		
		
		public virtual void testIssue20151201() {
			unchecked {
				string s = global::thx.Objects.@string(new global::haxe.lang.DynamicObject(new int[]{422635611, 824807522}, new object[]{"2", "1"}, new int[]{}, new double[]{}));
				global::utest.Assert.stringContains("oldId : \"1\"", s, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIssue20151201", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
				global::utest.Assert.stringContains("newId : \"2\"", s, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIssue20151201", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (19) )}));
				global::utest.Assert.stringContains(", ", s, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIssue20151201", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				global::utest.Assert.isTrue(s.StartsWith("{"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIssue20151201", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
				global::utest.Assert.isTrue(s.EndsWith("}"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIssue20151201", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
			}
		}
		
		
		public virtual void testObjects() {
			unchecked {
				object ob = new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
				global::utest.Assert.isTrue(( global::Reflect.fields(ob).length == 0 ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (27) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{}), global::Reflect.fields(ob), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (28) )}));
				object ob1 = new global::haxe.lang.DynamicObject(new int[]{97, 98}, new object[]{"A", "B"}, new int[]{}, new double[]{});
				global::utest.Assert.isFalse(( global::Reflect.fields(ob1).length == 0 ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (31) )}));
				global::Array<object> fields = global::Reflect.fields(ob1);
				global::utest.Assert.isTrue(fields.@remove("a"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
				global::utest.Assert.isTrue(fields.@remove("b"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (35) )}));
				global::utest.Assert.@equals(0, fields.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (36) )}));
				object o = ob1;
				global::Array values = global::Reflect.fields(o).map<object>(((global::haxe.lang.Function) (new global::thx.TestObjects_testObjects_38__Fun(o)) ));
				global::utest.Assert.isTrue(global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(values, "remove", 76061764, new global::Array<object>(new object[]{"A"}))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (39) )}));
				global::utest.Assert.isTrue(global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(values, "remove", 76061764, new global::Array<object>(new object[]{"B"}))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (40) )}));
				global::utest.Assert.@equals(0, ((int) (global::haxe.lang.Runtime.getField_f(values, "length", 520590566, true)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (41) )}));
				global::Array<object> tuples = global::thx.Objects.tuples(ob1);
				tuples.sort(( (( global::thx.TestObjects_testObjects_45__Fun.__hx_current != null )) ? (global::thx.TestObjects_testObjects_45__Fun.__hx_current) : (global::thx.TestObjects_testObjects_45__Fun.__hx_current = ((global::thx.TestObjects_testObjects_45__Fun) (new global::thx.TestObjects_testObjects_45__Fun()) )) ));
				global::utest.Assert.same(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{21233, 21234}, new object[]{"a", "A"}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{21233, 21234}, new object[]{"b", "B"}, new int[]{}, new double[]{})}), tuples, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testObjects", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
			}
		}
		
		
		public virtual void testAssign() {
			unchecked {
				object o = new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{"Franco"}, new int[]{4846783}, new double[]{((double) (19) )});
				object @out = global::thx.Objects.assign(o, new global::haxe.lang.DynamicObject(new int[]{4846783, 5097222, 1224700491}, new object[]{"Two", "bar", "Michael"}, new int[]{}, new double[]{}), null);
				global::utest.Assert.same("Michael", global::haxe.lang.Runtime.getField(@out, "name", 1224700491, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAssign", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (53) )}));
				global::utest.Assert.same("Two", global::haxe.lang.Runtime.getField(@out, "age", 4846783, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAssign", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (54) )}));
				global::utest.Assert.same("bar", global::haxe.lang.Runtime.getField(@out, "foo", 5097222, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAssign", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (55) )}));
				{
					int _g = 0;
					global::Array<object> _g1 = global::Reflect.fields(@out);
					while (( _g < _g1.length )) {
						string field = global::haxe.lang.Runtime.toString(_g1[_g]);
						 ++ _g;
						global::utest.Assert.same(global::Reflect.field(@out, field), global::Reflect.field(o, field), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAssign", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (58) )}));
					}
					
				}
				
			}
		}
		
		
		public virtual void testCombine() {
			unchecked {
				object o = new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{"Franco"}, new int[]{4846783}, new double[]{((double) (19) )});
				object @out = global::thx.Objects.combine(o, new global::haxe.lang.DynamicObject(new int[]{4846783, 5097222, 1224700491}, new object[]{"Two", "bar", "Michael"}, new int[]{}, new double[]{}));
				global::utest.Assert.same("Michael", global::haxe.lang.Runtime.getField(@out, "name", 1224700491, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testCombine", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (66) )}));
				global::utest.Assert.same("Two", global::haxe.lang.Runtime.getField(@out, "age", 4846783, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testCombine", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (67) )}));
				global::utest.Assert.same("bar", global::haxe.lang.Runtime.getField(@out, "foo", 5097222, true), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testCombine", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (68) )}));
				global::utest.Assert.same("Franco", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(o, "name", 1224700491, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testCombine", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (69) )}));
			}
		}
		
		
		public virtual void testMergeWithNullable() {
			unchecked {
				global::utest.Assert.same("baz", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (global::thx.Objects.combine(new global::haxe.lang.DynamicObject(new int[]{4895187, 5097222}, new object[]{"qux", "baz"}, new int[]{}, new double[]{}), ((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ))) ), "foo", 5097222, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMergeWithNullable", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (81) )}));
			}
		}
		
		
		public virtual void testMergeWithTypedef() {
			unchecked {
				object to = new global::haxe.lang.DynamicObject(new int[]{4895187}, new object[]{"qux"}, new int[]{}, new double[]{});
				object @from = new global::haxe.lang.DynamicObject(new int[]{5097222, 1998756496}, new object[]{"baz", "field"}, new int[]{}, new double[]{});
				object merged = ((object) (global::thx.Objects.combine(to, @from)) );
				global::utest.Assert.same(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(merged, "foo", 5097222, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(@from, "foo", 5097222, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMergeWithTypedef", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (95) )}));
				global::utest.Assert.same(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(merged, "bar", 4895187, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(to, "bar", 4895187, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMergeWithTypedef", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (96) )}));
				global::utest.Assert.same(global::haxe.lang.Runtime.getField(merged, "extra", 1998756496, false), "field", default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMergeWithTypedef", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (97) )}));
			}
		}
		
		
		public virtual void testHasPath() {
			unchecked {
				object o = null;
				{
					object __temp_odecl2 = null;
					{
						global::Array<object> __temp_odecl1 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test1"}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test2"}, new int[]{}, new double[]{})});
						__temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{1191633332, 1191633333, 1191633334, 1191633335}, new object[]{"abc", new global::Array<object>(new object[]{"one", "two"}), __temp_odecl1, null}, new int[]{1191633331}, new double[]{((double) (123) )});
					}
					
					o = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.isTrue(global::thx.Objects.hasPath(o, "key1.key2"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (117) )}));
				global::utest.Assert.isTrue(global::thx.Objects.hasPath(o, "key1.key4.1"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (118) )}));
				global::utest.Assert.isTrue(global::thx.Objects.hasPath(o, "key1.key6"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (119) )}));
				global::utest.Assert.isFalse(global::thx.Objects.hasPath(o, "key1.key4.2"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (121) )}));
				global::utest.Assert.isFalse(global::thx.Objects.hasPath(o, "key1.key7"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (122) )}));
			}
		}
		
		
		public virtual void testHasPathValue() {
			unchecked {
				object o = null;
				{
					object __temp_odecl2 = null;
					{
						global::Array<object> __temp_odecl1 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test1"}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test2"}, new int[]{}, new double[]{})});
						__temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{1191633332, 1191633333, 1191633334, 1191633335}, new object[]{"abc", new global::Array<object>(new object[]{"one", "two", null}), __temp_odecl1, null}, new int[]{1191633331}, new double[]{((double) (123) )});
					}
					
					o = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.isFalse(global::thx.Objects.hasPathValue(o, "key1.key6"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPathValue", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (143) )}));
				global::utest.Assert.isFalse(global::thx.Objects.hasPathValue(o, "key1.key4.2"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPathValue", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (144) )}));
				global::utest.Assert.isFalse(global::thx.Objects.hasPathValue(o, "key1.key7"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHasPathValue", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (145) )}));
			}
		}
		
		
		public virtual void testGetPath() {
			unchecked {
				object o = null;
				{
					object __temp_odecl2 = null;
					{
						global::Array<object> __temp_odecl1 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test1"}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test2"}, new int[]{}, new double[]{})});
						__temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{1191633332, 1191633333, 1191633334}, new object[]{"abc", new global::Array<object>(new object[]{"one", "two"}), __temp_odecl1}, new int[]{1191633331}, new double[]{((double) (123) )});
					}
					
					o = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(123, global::thx.Objects.getPath(o, "key1.key2"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (163) )}));
				global::utest.Assert.same("abc", global::thx.Objects.getPath(o, "key1.key3"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (164) )}));
				global::utest.Assert.same("one", global::thx.Objects.getPath(o, "key1.key4.0"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (165) )}));
				global::utest.Assert.same("two", global::thx.Objects.getPath(o, "key1.key4.1"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (166) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test1"}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{1191633335}, new object[]{"test2"}, new int[]{}, new double[]{})}), global::thx.Objects.getPath(o, "key1.key5"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (167) )}));
				global::utest.Assert.same("test1", global::thx.Objects.getPath(o, "key1.key5.0.key6"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (168) )}));
				global::utest.Assert.same("test2", global::thx.Objects.getPath(o, "key1.key5.1.key6"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (169) )}));
				global::utest.Assert.isNull(global::thx.Objects.getPath(o, ""), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (171) )}));
				global::utest.Assert.isNull(global::thx.Objects.getPath(o, "bad"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (172) )}));
				global::utest.Assert.isNull(global::thx.Objects.getPath(o, "bad.key"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (173) )}));
			}
		}
		
		
		public virtual void testSetPath() {
			unchecked {
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{5343647}, new object[]{"val"}, new int[]{}, new double[]{}), global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (177) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{1191633330, 1191633331}, new object[]{"val1", "val2"}, new int[]{}, new double[]{}), global::thx.Objects.setPath<object>(((object) (global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key1") ), ((object) ("val1") ))) ), ((string) ("key2") ), ((object) ("val2") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (178) )}));
				object __temp_stmt8 = null;
				{
					object __temp_odecl1 = new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{"val"}, new int[]{}, new double[]{});
					__temp_stmt8 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt8, global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key1.key2") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (179) )}));
				object __temp_stmt9 = null;
				{
					global::Array<object> __temp_odecl2 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{"val"}, new int[]{}, new double[]{})});
					__temp_stmt9 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt9, global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key1.0.key2") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (180) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{new global::Array<object>(new object[]{new global::Array<object>(new object[]{new global::Array<object>(new object[]{(default(global::haxe.lang.Null<int>)).toDynamic(), 123})})})}, new int[]{}, new double[]{}), global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key1.0.0.1") ), ((object) (123) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (181) )}));
				object __temp_stmt10 = null;
				{
					global::Array<object> __temp_odecl3 = new global::Array<object>(new object[]{new global::Array<object>(new object[]{new global::Array<object>(new object[]{null, new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{"val"}, new int[]{}, new double[]{})})})});
					__temp_stmt10 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl3}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt10, global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("key1.0.0.1.key2") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (182) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{5343647}, new object[]{"val"}, new int[]{}, new double[]{}), global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{5343647}, new object[]{"before"}, new int[]{}, new double[]{})) ), ((string) ("key") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (184) )}));
				object __temp_stmt11 = null;
				{
					object __temp_odecl4 = new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{"val"}, new int[]{}, new double[]{});
					__temp_stmt11 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl4}, new int[]{}, new double[]{});
				}
				
				object __temp_stmt12 = null;
				{
					object __temp_odecl5 = new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{"before"}, new int[]{}, new double[]{});
					__temp_stmt12 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl5}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt11, global::thx.Objects.setPath<object>(((object) (__temp_stmt12) ), ((string) ("key1.key2") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (185) )}));
				object __temp_stmt13 = null;
				{
					object __temp_odecl6 = new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{new global::Array<int>(new int[]{1, 55, 3})}, new int[]{}, new double[]{});
					__temp_stmt13 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl6}, new int[]{}, new double[]{});
				}
				
				object __temp_stmt14 = null;
				{
					object __temp_odecl7 = new global::haxe.lang.DynamicObject(new int[]{1191633331}, new object[]{new global::Array<int>(new int[]{1, 2, 3})}, new int[]{}, new double[]{});
					__temp_stmt14 = new global::haxe.lang.DynamicObject(new int[]{1191633330}, new object[]{__temp_odecl7}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt13, global::thx.Objects.setPath<object>(((object) (__temp_stmt14) ), ((string) ("key1.key2.1") ), ((object) (55) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (186) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{1906044191}, new object[]{"val"}, new int[]{1191633330}, new double[]{((double) (123) )}), global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{1191633330}, new double[]{((double) (123) )})) ), ((string) ("newKey") ), ((object) ("val") )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (187) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{1, 2}), global::thx.Objects.setPath<object>(((object) (global::thx.Objects.setPath<object>(((object) (new global::Array<object>(new object[]{})) ), ((string) ("*") ), ((object) (1) ))) ), ((string) ("*") ), ((object) (2) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (189) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{1202920542}, new object[]{new global::Array<int>(new int[]{1, 2})}, new int[]{}, new double[]{}), global::thx.Objects.setPath<object>(((object) (global::thx.Objects.setPath<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ), ((string) ("list.*") ), ((object) (1) ))) ), ((string) ("list.*") ), ((object) (2) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (190) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{new global::Array<object>(new object[]{1, 2})}), global::thx.Objects.setPath<object>(((object) (global::thx.Objects.setPath<object>(((object) (new global::Array<object>(new object[]{})) ), ((string) ("0.*") ), ((object) (1) ))) ), ((string) ("0.*") ), ((object) (2) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (191) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{new global::Array<object>(new object[]{1}), new global::Array<object>(new object[]{2})}), global::thx.Objects.setPath<object>(((object) (global::thx.Objects.setPath<object>(((object) (new global::Array<object>(new object[]{})) ), ((string) ("0.*") ), ((object) (1) ))) ), ((string) ("*.*") ), ((object) (2) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testSetPath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (192) )}));
			}
		}
		
		
		public virtual void testRemovePath() {
			unchecked {
				object simple = new global::haxe.lang.DynamicObject(new int[]{5097222}, new object[]{"bar"}, new int[]{}, new double[]{});
				object nested = null;
				{
					object __temp_odecl2 = null;
					{
						object __temp_odecl1 = new global::haxe.lang.DynamicObject(new int[]{4895195, 913729232}, new object[]{"qux", "other"}, new int[]{}, new double[]{});
						__temp_odecl2 = new global::haxe.lang.DynamicObject(new int[]{4895187}, new object[]{__temp_odecl1}, new int[]{}, new double[]{});
					}
					
					nested = new global::haxe.lang.DynamicObject(new int[]{5097222}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				object arr = null;
				{
					global::Array<object> __temp_odecl3 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{4895187}, new object[]{"baz"}, new int[]{}, new double[]{})});
					arr = new global::haxe.lang.DynamicObject(new int[]{5097222}, new object[]{__temp_odecl3}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{}), global::thx.Objects.removePath(simple, "foo"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (211) )}));
				global::utest.Assert.same(new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{}), simple, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (212) )}));
				global::utest.Assert.same(simple, global::thx.Objects.removePath(simple, "a.b.c.d"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (213) )}));
				object __temp_stmt7 = null;
				{
					object __temp_odecl5 = null;
					{
						object __temp_odecl4 = new global::haxe.lang.DynamicObject(new int[]{4895195}, new object[]{"qux"}, new int[]{}, new double[]{});
						__temp_odecl5 = new global::haxe.lang.DynamicObject(new int[]{4895187}, new object[]{__temp_odecl4}, new int[]{}, new double[]{});
					}
					
					__temp_stmt7 = new global::haxe.lang.DynamicObject(new int[]{5097222}, new object[]{__temp_odecl5}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt7, global::thx.Objects.removePath(nested, "foo.bar.other"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (215) )}));
				global::utest.Assert.same(arr, global::thx.Objects.removePath(arr, "foo.0.bar"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (217) )}));
				object __temp_stmt8 = null;
				{
					global::Array<object> __temp_odecl6 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{}), new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})});
					__temp_stmt8 = new global::haxe.lang.DynamicObject(new int[]{5097222}, new object[]{__temp_odecl6}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.same(__temp_stmt8, global::thx.Objects.removePath(arr, "foo.1.bar"), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRemovePath", "thx.TestObjects", "TestObjects.hx"}, new int[]{1981972957}, new double[]{((double) (218) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1734625019:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testRemovePath", 1734625019)) );
					}
					
					
					case 1285493813:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testSetPath", 1285493813)) );
					}
					
					
					case 1503494953:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testGetPath", 1503494953)) );
					}
					
					
					case 353017924:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testHasPathValue", 353017924)) );
					}
					
					
					case 1449063405:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testHasPath", 1449063405)) );
					}
					
					
					case 574242431:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMergeWithTypedef", 574242431)) );
					}
					
					
					case 1067098605:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMergeWithNullable", 1067098605)) );
					}
					
					
					case 922163277:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testCombine", 922163277)) );
					}
					
					
					case 1694141473:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAssign", 1694141473)) );
					}
					
					
					case 1058559650:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testObjects", 1058559650)) );
					}
					
					
					case 809821035:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testIssue20151201", 809821035)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1734625019:
					{
						this.testRemovePath();
						break;
					}
					
					
					case 1285493813:
					{
						this.testSetPath();
						break;
					}
					
					
					case 1503494953:
					{
						this.testGetPath();
						break;
					}
					
					
					case 353017924:
					{
						this.testHasPathValue();
						break;
					}
					
					
					case 1449063405:
					{
						this.testHasPath();
						break;
					}
					
					
					case 574242431:
					{
						this.testMergeWithTypedef();
						break;
					}
					
					
					case 1067098605:
					{
						this.testMergeWithNullable();
						break;
					}
					
					
					case 922163277:
					{
						this.testCombine();
						break;
					}
					
					
					case 1694141473:
					{
						this.testAssign();
						break;
					}
					
					
					case 1058559650:
					{
						this.testObjects();
						break;
					}
					
					
					case 809821035:
					{
						this.testIssue20151201();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestObjects_testObjects_38__Fun : global::haxe.lang.Function {
		
		public TestObjects_testObjects_38__Fun(object o) : base(1, 0) {
			this.o = o;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string key = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::Reflect.field(this.o, key);
		}
		
		
		public object o;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestObjects_testObjects_45__Fun : global::haxe.lang.Function {
		
		public TestObjects_testObjects_45__Fun() : base(2, 1) {
		}
		
		
		public static global::thx.TestObjects_testObjects_45__Fun __hx_current;
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			object b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float2) )) : (((object) (__fn_dyn2) )) );
			object a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((double) (global::haxe.Utf8.compare(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(a, "_0", 21233, true)), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(b, "_0", 21233, true)))) );
		}
		
		
	}
}


