// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState : global::haxe.lang.HxObject {
		
		public TestState(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestState() {
			global::thx.fp.TestState.__hx_ctor_thx_fp_TestState(this);
		}
		
		
		public static void __hx_ctor_thx_fp_TestState(global::thx.fp.TestState __temp_me268) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.fp.TestState(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.fp.TestState();
		}
		
		
		public virtual void testMap() {
			unchecked {
				global::haxe.lang.Function this1 = global::thx.fp._State.State_Impl_.pure<object, int>(((int) (1) ));
				global::haxe.lang.Function f = ( (( global::thx.fp.TestState_testMap_12__Fun_0.__hx_current != null )) ? (global::thx.fp.TestState_testMap_12__Fun_0.__hx_current) : (global::thx.fp.TestState_testMap_12__Fun_0.__hx_current = ((global::thx.fp.TestState_testMap_12__Fun_0) (new global::thx.fp.TestState_testMap_12__Fun_0()) )) );
				global::haxe.lang.Function s = new global::thx.fp.TestState_testMap_12__Fun(this1, f);
				global::utest.Assert.same(((object) (new global::haxe.lang.DynamicObject(new int[]{21233}, new object[]{"a"}, new int[]{21234}, new double[]{((double) (2) )})) ), ((object) (s.__hx_invoke1_o(default(double), "a")) ), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMap", "thx.fp.TestState", "TestState.hx"}, new int[]{1981972957}, new double[]{((double) (13) )}));
			}
		}
		
		
		public virtual void testFlatMap() {
			unchecked {
				global::haxe.lang.Function s = global::thx.fp._State.State_Impl_.pure<object, int>(((int) (1) ));
				global::utest.Assert.same(((object) (new global::haxe.lang.DynamicObject(new int[]{21233}, new object[]{"ab"}, new int[]{21234}, new double[]{((double) (2) )})) ), ((object) (global::thx.fp._State.State_Impl_.flatMap<object, object, int>(((global::haxe.lang.Function) (s) ), ((global::haxe.lang.Function) (new global::thx.fp.TestState_testFlatMap_19__Fun(s)) )).__hx_invoke1_o(default(double), "a")) ), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.fp.TestState", "TestState.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 598146609:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFlatMap", 598146609)) );
					}
					
					
					case 1036089706:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMap", 1036089706)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 598146609:
					{
						this.testFlatMap();
						break;
					}
					
					
					case 1036089706:
					{
						this.testMap();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testMap_12__Fun_0 : global::haxe.lang.Function {
		
		public TestState_testMap_12__Fun_0() : base(1, 1) {
		}
		
		
		public static global::thx.fp.TestState_testMap_12__Fun_0 __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (( v + 1 )) );
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testMap_12__Fun : global::haxe.lang.Function {
		
		public TestState_testMap_12__Fun(global::haxe.lang.Function this1, global::haxe.lang.Function f) : base(1, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string s1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::thx._Tuple.Tuple2_Impl_.map<object, object, int>(((object) (((global::haxe.lang.Function) (this.this1) ).__hx_invoke1_o(default(double), s1)) ), ((global::haxe.lang.Function) (this.f) ));
		}
		
		
		public global::haxe.lang.Function this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testFlatMap_20__Fun_1 : global::haxe.lang.Function {
		
		public TestState_testFlatMap_20__Fun_1() : base(1, 0) {
		}
		
		
		public static global::thx.fp.TestState_testFlatMap_20__Fun_1 __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::haxe.lang.Runtime.concat(v, "b");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testFlatMap_20__Fun_0 : global::haxe.lang.Function {
		
		public TestState_testFlatMap_20__Fun_0(int i) : base(1, 1) {
			this.i = i;
		}
		
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			int v1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return ((double) (( v1 + this.i )) );
		}
		
		
		public int i;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testFlatMap_20__Fun : global::haxe.lang.Function {
		
		public TestState_testFlatMap_20__Fun(global::haxe.lang.Function this1, global::haxe.lang.Function f) : base(1, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string s1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::thx._Tuple.Tuple2_Impl_.map<object, object, int>(((object) (((global::haxe.lang.Function) (this.this1) ).__hx_invoke1_o(default(double), s1)) ), ((global::haxe.lang.Function) (this.f) ));
		}
		
		
		public global::haxe.lang.Function this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestState_testFlatMap_19__Fun : global::haxe.lang.Function {
		
		public TestState_testFlatMap_19__Fun(global::haxe.lang.Function s) : base(1, 0) {
			this.s = s;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int i = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			global::haxe.lang.Function this1 = global::thx.fp._State.State_Impl_.modify<object, int>(((global::haxe.lang.Function) (this.s) ), ((global::haxe.lang.Function) (( (( global::thx.fp.TestState_testFlatMap_20__Fun_1.__hx_current != null )) ? (global::thx.fp.TestState_testFlatMap_20__Fun_1.__hx_current) : (global::thx.fp.TestState_testFlatMap_20__Fun_1.__hx_current = ((global::thx.fp.TestState_testFlatMap_20__Fun_1) (new global::thx.fp.TestState_testFlatMap_20__Fun_1()) )) )) ));
			global::haxe.lang.Function f = new global::thx.fp.TestState_testFlatMap_20__Fun_0(i);
			return new global::thx.fp.TestState_testFlatMap_20__Fun(this1, f);
		}
		
		
		public global::haxe.lang.Function s;
		
	}
}


