// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestTreeBag : global::haxe.lang.HxObject {
		
		static TestTreeBag() {
			unchecked {
				global::thx.fp.TestTreeBag.t0 = ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Empty) );
				global::thx.fp.TestTreeBag.t1 = global::thx.fp.TreeBagImpl.Cons(1, ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(2, global::thx.fp.TestTreeBag.t0)) ));
				global::thx.fp.TestTreeBag.t2 = global::thx.fp.TreeBagImpl.Cons(2, ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(3, global::thx.fp.TestTreeBag.t0)) ));
			}
		}
		
		
		public TestTreeBag(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestTreeBag() {
			global::thx.fp.TestTreeBag.__hx_ctor_thx_fp_TestTreeBag(this);
		}
		
		
		public static void __hx_ctor_thx_fp_TestTreeBag(global::thx.fp.TestTreeBag __temp_me269) {
		}
		
		
		public static global::thx.fp.TreeBagImpl t0;
		
		public static global::thx.fp.TreeBagImpl t1;
		
		public static global::thx.fp.TreeBagImpl t2;
		
		public static new object __hx_createEmpty() {
			return new global::thx.fp.TestTreeBag(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.fp.TestTreeBag();
		}
		
		
		public virtual global::thx.fp.TreeBagImpl plusOneBag(int i) {
			unchecked {
				return ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(( i + 1 ), global::thx.fp.TestTreeBag.t0)) );
			}
		}
		
		
		public virtual global::thx.fp.TreeBagImpl plusTwoBags(int i) {
			return global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t1) ), ((global::haxe.lang.Function) (new global::thx.fp.TestTreeBag_plusTwoBags_20__Fun(i)) ));
		}
		
		
		public virtual void testMap() {
			unchecked {
				global::utest.Assert.same(global::thx.fp.TestTreeBag.t0, global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t0) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx.Functions), "identity", 959399230)) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMap", "thx.fp.TestTreeBag", "TestTreeBag.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
				global::utest.Assert.same(global::thx.fp.TestTreeBag.t2, global::thx.fp._TreeBag.TreeBag_Impl_.map<object, object, object>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t1) ), ((global::haxe.lang.Function) (( (( global::thx.fp.TestTreeBag_testMap_25__Fun.__hx_current != null )) ? (global::thx.fp.TestTreeBag_testMap_25__Fun.__hx_current) : (global::thx.fp.TestTreeBag_testMap_25__Fun.__hx_current = ((global::thx.fp.TestTreeBag_testMap_25__Fun) (new global::thx.fp.TestTreeBag_testMap_25__Fun()) )) )) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMap", "thx.fp.TestTreeBag", "TestTreeBag.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
			}
		}
		
		
		public virtual void testToArray() {
			unchecked {
				global::utest.Assert.same(new global::Array<object>(new object[]{1, 2}), global::thx.fp._TreeBag.TreeBag_Impl_.toArray<int>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t1) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToArray", "thx.fp.TestTreeBag", "TestTreeBag.hx"}, new int[]{1981972957}, new double[]{((double) (29) )}));
			}
		}
		
		
		public virtual void testFlatMap() {
			unchecked {
				global::utest.Assert.same(global::thx.fp._TreeBag.TreeBag_Impl_.toArray<int>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t2) )), global::thx.fp._TreeBag.TreeBag_Impl_.toArray<int>(((global::thx.fp.TreeBagImpl) (global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t1) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "plusOneBag", 534349308)) ))) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.fp.TestTreeBag", "TestTreeBag.hx"}, new int[]{1981972957}, new double[]{((double) (33) )}));
				global::thx.fp.TreeBagImpl this1 = global::thx.fp.TreeBagImpl.Cons(2, ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(3, global::thx.fp.TestTreeBag.t0)) ));
				global::thx.fp.TreeBagImpl this2 = global::thx.fp.TreeBagImpl.Cons(3, ((global::thx.fp.TreeBagImpl) (global::thx.fp.TreeBagImpl.Cons(4, global::thx.fp.TestTreeBag.t0)) ));
				global::thx.fp.TreeBagImpl other = global::thx.fp.TestTreeBag.t0;
				global::thx.fp.TreeBagImpl other1 = null;
				switch (((global::thx.fp.TreeBagImpl) (this2) ).index) {
					case 0:
					{
						if (( other.index == 0 )) {
							other1 = global::thx.fp.TreeBagImpl.Empty;
						}
						else {
							other1 = other;
						}
						
						break;
					}
					
					
					case 1:
					{
						if (( other.index == 0 )) {
							other1 = ((global::thx.fp.TreeBagImpl) (this2) );
						}
						else if (( ((global::thx.fp.TreeBagImpl) (((global::thx.fp.TreeBagImpl) (this2) ).@params[1]) ).index == 0 )) {
							other1 = global::thx.fp.TreeBagImpl.Cons(3, other);
						}
						else {
							other1 = global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this2) ), other);
						}
						
						break;
					}
					
					
					default:
					{
						if (( other.index == 0 )) {
							other1 = ((global::thx.fp.TreeBagImpl) (this2) );
						}
						else {
							other1 = global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this2) ), other);
						}
						
						break;
					}
					
				}
				
				global::thx.fp.TreeBagImpl tmp = null;
				switch (((global::thx.fp.TreeBagImpl) (this1) ).index) {
					case 0:
					{
						if (( other1.index == 0 )) {
							tmp = global::thx.fp.TreeBagImpl.Empty;
						}
						else {
							tmp = other1;
						}
						
						break;
					}
					
					
					case 1:
					{
						if (( other1.index == 0 )) {
							tmp = ((global::thx.fp.TreeBagImpl) (this1) );
						}
						else if (( ((global::thx.fp.TreeBagImpl) (((global::thx.fp.TreeBagImpl) (this1) ).@params[1]) ).index == 0 )) {
							tmp = global::thx.fp.TreeBagImpl.Cons(2, other1);
						}
						else {
							tmp = global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this1) ), other1);
						}
						
						break;
					}
					
					
					default:
					{
						if (( other1.index == 0 )) {
							tmp = ((global::thx.fp.TreeBagImpl) (this1) );
						}
						else {
							tmp = global::thx.fp.TreeBagImpl.Branch(((global::thx.fp.TreeBagImpl) (this1) ), other1);
						}
						
						break;
					}
					
				}
				
				global::utest.Assert.same(tmp, global::thx.fp._TreeBag.TreeBag_Impl_.flatMap<object, object, object>(((global::thx.fp.TreeBagImpl) (global::thx.fp.TestTreeBag.t1) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "plusTwoBags", 1772033309)) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.fp.TestTreeBag", "TestTreeBag.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 598146609:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFlatMap", 598146609)) );
					}
					
					
					case 786212844:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToArray", 786212844)) );
					}
					
					
					case 1036089706:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMap", 1036089706)) );
					}
					
					
					case 1772033309:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "plusTwoBags", 1772033309)) );
					}
					
					
					case 534349308:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "plusOneBag", 534349308)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 598146609:
					{
						this.testFlatMap();
						break;
					}
					
					
					case 786212844:
					{
						this.testToArray();
						break;
					}
					
					
					case 1036089706:
					{
						this.testMap();
						break;
					}
					
					
					case 1772033309:
					{
						return this.plusTwoBags(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 534349308:
					{
						return this.plusOneBag(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestTreeBag_plusTwoBags_20__Fun : global::haxe.lang.Function {
		
		public TestTreeBag_plusTwoBags_20__Fun(int i) : base(1, 1) {
			this.i = i;
		}
		
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			int i0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return ((double) (( this.i + i0 )) );
		}
		
		
		public int i;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.fp {
	public class TestTreeBag_testMap_25__Fun : global::haxe.lang.Function {
		
		public TestTreeBag_testMap_25__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.fp.TestTreeBag_testMap_25__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int i = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (( i + 1 )) );
			}
		}
		
		
	}
}


