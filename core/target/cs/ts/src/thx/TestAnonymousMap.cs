// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestAnonymousMap : global::haxe.lang.HxObject {
		
		public TestAnonymousMap(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestAnonymousMap() {
			global::thx.TestAnonymousMap.__hx_ctor_thx_TestAnonymousMap(this);
		}
		
		
		public static void __hx_ctor_thx_TestAnonymousMap(global::thx.TestAnonymousMap __temp_me177) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestAnonymousMap(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestAnonymousMap();
		}
		
		
		public virtual void testFeatures() {
			unchecked {
				global::thx.AnonymousMap map = new global::thx.AnonymousMap<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{1224700491, 1292432058}, new object[]{"thx", "library"}, new int[]{}, new double[]{})) ));
				global::utest.Assert.@equals("thx", ((object) (global::haxe.lang.Runtime.callField(map, "get", 5144726, new global::Array<object>(new object[]{"name"}))) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFeatures", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (19) )}));
				global::utest.Assert.isTrue(map.exists("type"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFeatures", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				map.@remove("type");
				global::utest.Assert.isFalse(map.exists("type"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFeatures", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{"name"}), global::thx.Iterators.toArray<object>(((object) (map.keys()) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFeatures", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{"thx"}), global::thx.Iterators.toArray<object>(((object) (map.iterator()) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFeatures", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
			}
		}
		
		
		public virtual void testGetOption() {
			unchecked {
				global::thx.AnonymousMap map = new global::thx.AnonymousMap<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{1191633330}, new double[]{((double) (1) )})) ));
				global::utest.Assert.same((global::thx.Options.@get<object>(((global::haxe.ds.Option) (global::haxe.lang.Runtime.callField(map, "getOption", 668032171, new global::Array<object>(new object[]{"key1"}))) ))).@value, 1, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetOption", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
				global::utest.Assert.same(global::thx.Options.toBool<object>(((global::haxe.ds.Option) (global::haxe.lang.Runtime.callField(map, "getOption", 668032171, new global::Array<object>(new object[]{"key2"}))) )), false, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetOption", "thx.TestAnonymousMap", "TestAnonymousMap.hx"}, new int[]{1981972957}, new double[]{((double) (31) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1527503353:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testGetOption", 1527503353)) );
					}
					
					
					case 98472815:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFeatures", 98472815)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1527503353:
					{
						this.testGetOption();
						break;
					}
					
					
					case 98472815:
					{
						this.testFeatures();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


