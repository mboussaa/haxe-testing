// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestRational : global::haxe.lang.HxObject {
		
		public TestRational(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestRational() {
			global::thx.TestRational.__hx_ctor_thx_TestRational(this);
		}
		
		
		public static void __hx_ctor_thx_TestRational(global::thx.TestRational __temp_me218) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestRational(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestRational();
		}
		
		
		public virtual void testOperations() {
			unchecked {
				object x = null;
				object y = null;
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(2)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(3)) ));
				global::utest.Assert.@equals("5/6", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.@add(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(8)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(9)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(9)) ));
				global::utest.Assert.@equals("1", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.@add(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(200000000)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(300000000)) ));
				global::utest.Assert.@equals("1/120000000", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.@add(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (26) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1073741789)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(20)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1073741789)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(30)) ));
				global::utest.Assert.@equals("1073741789/12", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.@add(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (31) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(4)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(17)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(17)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(4)) ));
				global::utest.Assert.@equals("1", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.multiply(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (36) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(3037141)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(3247033)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(3037547)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(3246599)) ));
				global::utest.Assert.@equals("841/961", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.multiply(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (41) )}));
				global::utest.Assert.floatEquals(0.87513007284079, global::thx._Rational.Rational_Impl_.toFloat(global::thx._Rational.Rational_Impl_.multiply(x, y)), default(global::haxe.lang.Null<double>), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (42) )}));
				x = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(1)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(6)) ));
				y = global::thx._Rational.Rational_Impl_.create(((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(-4)) ), ((global::thx.bigint.BigIntImpl) (global::thx.bigint.Bigs.fromInt(-8)) ));
				global::utest.Assert.@equals("-1/3", global::thx._Rational.Rational_Impl_.toString(global::thx._Rational.Rational_Impl_.subtract(x, y)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOperations", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
			}
		}
		
		
		public virtual void testFromInt() {
			unchecked {
				object r = global::thx._Rational.Rational_Impl_.fromInt(3);
				global::utest.Assert.@equals("3", global::thx._Rational.Rational_Impl_.toString(r), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromInt", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (52) )}));
				r = global::thx._Rational.Rational_Impl_.divide(r, global::thx._Rational.Rational_Impl_.fromInt(2));
				global::utest.Assert.@equals("3/2", global::thx._Rational.Rational_Impl_.toString(r), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromInt", "thx.TestRational", "TestRational.hx"}, new int[]{1981972957}, new double[]{((double) (54) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 348375923:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFromInt", 348375923)) );
					}
					
					
					case 942032222:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testOperations", 942032222)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 348375923:
					{
						this.testFromInt();
						break;
					}
					
					
					case 942032222:
					{
						this.testOperations();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


