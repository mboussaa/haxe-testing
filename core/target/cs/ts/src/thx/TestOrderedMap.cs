// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestOrderedMap : global::haxe.lang.HxObject {
		
		public TestOrderedMap(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestOrderedMap() {
			global::thx.TestOrderedMap.__hx_ctor_thx_TestOrderedMap(this);
		}
		
		
		public static void __hx_ctor_thx_TestOrderedMap(global::thx.TestOrderedMap __temp_me214) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestOrderedMap(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestOrderedMap();
		}
		
		
		public virtual void testBasics() {
			unchecked {
				global::thx.OrderedMapImpl<object, object> ml = ((global::thx.OrderedMapImpl<object, object>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, object>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<object>()) ))) );
				global::utest.Assert.@equals(0, ml.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
				global::utest.Assert.@equals("[]", ml.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				ml.@set("z", "Z");
				ml.@set("y", "Y");
				ml.@set("y", "Y");
				ml.@set("x", "X");
				global::utest.Assert.@equals(3, ml.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
				global::utest.Assert.@equals("[z => Z, y => Y, x => X]", ml.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
				global::utest.Assert.isTrue(ml.@remove("y"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (26) )}));
				global::utest.Assert.isFalse(ml.@remove("y"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (27) )}));
				global::utest.Assert.@equals(2, ml.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (29) )}));
				global::utest.Assert.@equals("[z => Z, x => X]", ml.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
				ml.insert(1, "y", "Y");
				global::utest.Assert.@equals(3, ml.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
				global::utest.Assert.@equals("[z => Z, y => Y, x => X]", ml.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (35) )}));
				global::utest.Assert.@equals("y", global::haxe.lang.Runtime.toString((ml.keyAt(1)).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (37) )}));
				global::utest.Assert.@equals("Y", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).at(1)).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (38) )}));
				global::utest.Assert.@equals(1, ml.keyIndex("y"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (40) )}));
				global::utest.Assert.@equals(1, ml.valueIndex("Y"), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (41) )}));
				ml.removeAt(1);
				global::utest.Assert.@equals(2, ml.length, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (45) )}));
				global::utest.Assert.@equals("[z => Z, x => X]", ml.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{"Z", "X"}), ml.toArray(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (48) )}));
				global::utest.Assert.same(new global::Array<object>(new object[]{"z", "x"}), global::thx.Iterators.toArray<object>(((object) (ml.keys()) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (49) )}));
			}
		}
		
		
		public virtual void testGetOption() {
			unchecked {
				global::thx.OrderedMapImpl<object, int> m = ((global::thx.OrderedMapImpl<object, int>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, int>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<int>()) ))) );
				m.@set("key1", 1);
				global::haxe.lang.Null<int> @value = ((global::haxe.lang.Null<int>) (((global::thx.OrderedMapImpl<object, int>) (m) ).@get("key1")) );
				global::utest.Assert.same((global::thx.Options.@get<int>(((global::haxe.ds.Option) (( ( ! (@value.hasValue) ) ? (global::haxe.ds.Option.None) : (global::haxe.ds.Option.Some((@value).toDynamic())) )) ))).toDynamic(), 1, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetOption", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (56) )}));
				global::haxe.lang.Null<int> value1 = ((global::haxe.lang.Null<int>) (((global::thx.OrderedMapImpl<object, int>) (m) ).@get("key2")) );
				global::utest.Assert.same(global::thx.Options.toBool<int>(((global::haxe.ds.Option) (( ( ! (value1.hasValue) ) ? (global::haxe.ds.Option.None) : (global::haxe.ds.Option.Some((value1).toDynamic())) )) )), false, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testGetOption", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (57) )}));
			}
		}
		
		
		public virtual void testToTuples() {
			unchecked {
				global::thx.OrderedMapImpl<object, int> m = ((global::thx.OrderedMapImpl<object, int>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, int>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<int>()) ))) );
				m.@set("foo", 10);
				m.@set("bar", 20);
				m.insert(2, "baz", 30);
				global::Array<object> tuples = m.tuples();
				global::utest.Assert.same("foo", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (tuples[0]) ), "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToTuples", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (68) )}));
				global::utest.Assert.same(20, ((int) (global::haxe.lang.Runtime.getField_f(((object) (tuples[1]) ), "_1", 21234, true)) ), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToTuples", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (69) )}));
				global::utest.Assert.same("baz", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (tuples[2]) ), "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToTuples", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (70) )}));
				global::utest.Assert.same(30, ((int) (global::haxe.lang.Runtime.getField_f(((object) (tuples[2]) ), "_1", 21234, true)) ), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToTuples", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (71) )}));
			}
		}
		
		
		public virtual void testAbstract() {
			unchecked {
				global::thx.OrderedMapImpl<object, object> ml = ((global::thx.OrderedMapImpl<object, object>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, object>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<object>()) ))) );
				((global::thx.OrderedMapImpl<object, object>) (ml) ).setValue("k", "value");
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).@get("k")).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (77) )}));
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).at(0)).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (78) )}));
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).at(0)).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (79) )}));
				(( (( global::thx.TestOrderedMap_testAbstract_81__Fun.__hx_current != null )) ? (global::thx.TestOrderedMap_testAbstract_81__Fun.__hx_current) : (global::thx.TestOrderedMap_testAbstract_81__Fun.__hx_current = ((global::thx.TestOrderedMap_testAbstract_81__Fun) (new global::thx.TestOrderedMap_testAbstract_81__Fun()) )) )).__hx_invoke1_o(default(double), ml);
				global::utest.Assert.notNull(((global::thx.OrderedMapImpl) (new global::thx.IntOrderedMap<object>()) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (86) )}));
				global::utest.Assert.notNull(((global::thx.OrderedMapImpl) (new global::thx.EnumValueOrderedMap<object, object>()) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (87) )}));
				global::utest.Assert.notNull(((global::thx.OrderedMapImpl) (new global::thx.ObjectOrderedMap<object, object>()) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (88) )}));
			}
		}
		
		
		public virtual void testEmpty() {
			unchecked {
				global::thx.OrderedMapImpl<object, object> ml = ((global::thx.OrderedMapImpl<object, object>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, object>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<object>()) ))) );
				((global::thx.OrderedMapImpl<object, object>) (ml) ).setValue("k", "value");
				global::utest.Assert.isNull(global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (((global::thx.OrderedMapImpl<object, object>) (ml) ).empty()) ).@get("k")).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmpty", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (95) )}));
			}
		}
		
		
		public virtual void testCopyTo() {
			unchecked {
				global::thx.OrderedMapImpl<object, object> ml = ((global::thx.OrderedMapImpl<object, object>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, object>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<object>()) ))) );
				((global::thx.OrderedMapImpl<object, object>) (ml) ).setValue("k", "value");
				global::thx.OrderedMapImpl<object, object> e = ((global::thx.OrderedMapImpl<object, object>) (((global::thx.OrderedMapImpl<object, object>) (ml) ).empty()) );
				{
					object tmp = ((global::thx.OrderedMapImpl<object, object>) (ml) ).keys();
					while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
						string key = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null));
						e.@set(key, global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).@get(key)).toDynamic()));
					}
					
				}
				
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (e) ).@get("k")).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testCopyTo", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (103) )}));
			}
		}
		
		
		public virtual void testClone() {
			unchecked {
				global::thx.OrderedMapImpl<object, object> ml = ((global::thx.OrderedMapImpl<object, object>) (global::thx.OrderedMapImpl<object, object>.__hx_cast<object, object>(((global::thx.OrderedMapImpl) (new global::thx.StringOrderedMap<object>()) ))) );
				((global::thx.OrderedMapImpl<object, object>) (ml) ).setValue("k", "value");
				global::thx.OrderedMapImpl<object, object> that = ((global::thx.OrderedMapImpl<object, object>) (((global::thx.OrderedMapImpl<object, object>) (ml) ).empty()) );
				{
					object tmp = ((global::thx.OrderedMapImpl<object, object>) (ml) ).keys();
					while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
						string key = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null));
						that.@set(key, global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (ml) ).@get(key)).toDynamic()));
					}
					
				}
				
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((((global::thx.OrderedMapImpl<object, object>) (that) ).@get("k")).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testClone", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (110) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 291852715:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testClone", 291852715)) );
					}
					
					
					case 1646748290:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testCopyTo", 1646748290)) );
					}
					
					
					case 953972955:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEmpty", 953972955)) );
					}
					
					
					case 461760340:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAbstract", 461760340)) );
					}
					
					
					case 602388920:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToTuples", 602388920)) );
					}
					
					
					case 1527503353:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testGetOption", 1527503353)) );
					}
					
					
					case 1847555063:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBasics", 1847555063)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 291852715:
					{
						this.testClone();
						break;
					}
					
					
					case 1646748290:
					{
						this.testCopyTo();
						break;
					}
					
					
					case 953972955:
					{
						this.testEmpty();
						break;
					}
					
					
					case 461760340:
					{
						this.testAbstract();
						break;
					}
					
					
					case 602388920:
					{
						this.testToTuples();
						break;
					}
					
					
					case 1527503353:
					{
						this.testGetOption();
						break;
					}
					
					
					case 1847555063:
					{
						this.testBasics();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestOrderedMap_testAbstract_81__Fun : global::haxe.lang.Function {
		
		public TestOrderedMap_testAbstract_81__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestOrderedMap_testAbstract_81__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::haxe.IMap<object, object> m = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.IMap<object, object>) (global::haxe.IMap__Statics_.__hx_cast<object, object>(((global::haxe.IMap) (((object) (__fn_float1) )) ))) )) : (((global::haxe.IMap<object, object>) (global::haxe.IMap__Statics_.__hx_cast<object, object>(((global::haxe.IMap) (__fn_dyn1) ))) )) );
				global::utest.Assert.@equals("value", global::haxe.lang.Runtime.toString((m.@get("k")).toDynamic()), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestOrderedMap", "TestOrderedMap.hx"}, new int[]{1981972957}, new double[]{((double) (82) )}));
				return null;
			}
		}
		
		
	}
}


