// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestChars : global::haxe.lang.HxObject {
		
		public TestChars(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestChars() {
			global::thx.TestChars.__hx_ctor_thx_TestChars(this);
		}
		
		
		public static void __hx_ctor_thx_TestChars(global::thx.TestChars __temp_me187) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestChars(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestChars();
		}
		
		
		public virtual void testChars() {
			unchecked {
				global::Array<int> t = global::thx._Chars.Chars_Impl_.fromString("a\u263ab\u263a\u263ac\u263a\u263a\u263a");
				global::utest.Assert.same(new global::Array<int>(new int[]{97, 9786, 98, 9786, 9786, 99, 9786, 9786, 9786}), t, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testChars", "thx.TestChars", "TestChars.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				global::utest.Assert.@equals("a\u263ab\u263a\u263ac\u263a\u263a\u263a", global::thx._Chars.Chars_Impl_.toString(t), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testChars", "thx.TestChars", "TestChars.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
			}
		}
		
		
		public virtual void testArrayAccess() {
			unchecked {
				global::Array<int> chars = global::thx._Chars.Chars_Impl_.fromString("a\u263ab\u263a\u263ac\u263a\u263a\u263a");
				global::utest.Assert.@equals(9786, chars[1], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testArrayAccess", "thx.TestChars", "TestChars.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				global::utest.Assert.@equals(99, chars[5], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testArrayAccess", "thx.TestChars", "TestChars.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1293753579:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testArrayAccess", 1293753579)) );
					}
					
					
					case 246799147:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testChars", 246799147)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1293753579:
					{
						this.testArrayAccess();
						break;
					}
					
					
					case 246799147:
					{
						this.testChars();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


