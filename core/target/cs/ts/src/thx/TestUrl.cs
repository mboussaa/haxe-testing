// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestUrl : global::haxe.lang.HxObject {
		
		public TestUrl(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestUrl() {
			global::thx.TestUrl.__hx_ctor_thx_TestUrl(this);
		}
		
		
		public static void __hx_ctor_thx_TestUrl(global::thx.TestUrl __temp_me228) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestUrl(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestUrl();
		}
		
		
		public virtual void testBasics() {
			unchecked {
				object url = global::thx._Url.Url_Impl_.fromString("http://user:password@www.example.com:8888/some/path/name.ext?a=b&c=d#hashtag/is/here");
				global::utest.Assert.@equals("http", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "protocol", 6510168, true)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				global::utest.Assert.@equals("user:password", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "auth", 1081532264, true)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				global::utest.Assert.@equals("www.example.com:8888", global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), (( (global::haxe.lang.Null<object>.ofDynamic<int>(global::haxe.lang.Runtime.getField(((object) (url) ), "port", 1247576961, true)).hasValue) ? (global::haxe.lang.Runtime.concat(":", global::haxe.lang.Runtime.toString((global::haxe.lang.Null<object>.ofDynamic<int>(global::haxe.lang.Runtime.getField(((object) (url) ), "port", 1247576961, true))).toDynamic()))) : ("") ))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (13) )}));
				global::utest.Assert.@equals("www.example.com", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				global::utest.Assert.isTrue(( string.Equals("/some/path/name.ext?a=b&c=d", global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "pathName", 1050589840, true)), (( ((  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "search", 1660395368, true)), null))  || ( ( ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (global::haxe.lang.Runtime.getField(((object) (url) ), "queryString", 1666522617, true)) ))) ) != null ) &&  ! (( ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(((object) (new global::haxe.ds._StringMap.StringMapValueIterator<object>(((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (global::haxe.lang.Runtime.getField(((object) (url) ), "queryString", 1666522617, true)) ))) ))) ), "hasNext", 407283053, null))) ))  ) )) ? (global::haxe.lang.Runtime.concat("?", global::thx._Url.Url_Impl_.get_search(((object) (url) )))) : ("") )))) || string.Equals("/some/path/name.ext?c=d&a=b", global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "pathName", 1050589840, true)), (( ((  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "search", 1660395368, true)), null))  || ( ( ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (global::haxe.lang.Runtime.getField(((object) (url) ), "queryString", 1666522617, true)) ))) ) != null ) &&  ! (( ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(((object) (new global::haxe.ds._StringMap.StringMapValueIterator<object>(((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (global::haxe.lang.Runtime.getField(((object) (url) ), "queryString", 1666522617, true)) ))) ))) ), "hasNext", 407283053, null))) ))  ) )) ? (global::haxe.lang.Runtime.concat("?", global::thx._Url.Url_Impl_.get_search(((object) (url) )))) : ("") )))) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				global::utest.Assert.@equals("/some/path/name.ext", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "pathName", 1050589840, true)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				global::utest.Assert.@equals("hashtag/is/here", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hash", 1158164430, true)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
			}
		}
		
		
		public virtual void testToString() {
			unchecked {
				global::Array<object> urls = new global::Array<object>(new object[]{"http://user:password@www.example.com:8888/some/path/name.ext?a=b#hashtag/is/here", "http://example.com", "irc://irc.example.com/channel", "www.example.com/foo", "news:rec.gardens.roses", "ldap://[2001:db8::7]/c=GB?objectClass?one", "mailto:John.Doe@example.com", "telnet://192.0.2.16:80/", "ldap://ldap.example.com/dc=example,dc=com", "ldap://ldap.example.com/cn=Barbara%20Jensen,dc=example,dc=com?cn,mail,telephoneNumber"});
				{
					int _g = 0;
					while (( _g < urls.length )) {
						string url = global::haxe.lang.Runtime.toString(urls[_g]);
						 ++ _g;
						global::utest.Assert.@equals(url, global::thx._Url.Url_Impl_.toString(global::thx._Url.Url_Impl_.parse(url, false)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToString", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (38) )}));
					}
					
				}
				
			}
		}
		
		
		public virtual void testAbsolute() {
			unchecked {
				object url = global::thx._Url.Url_Impl_.fromString("http://example.com");
				global::utest.Assert.isTrue( ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null)) , null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (43) )}));
				global::utest.Assert.isFalse(string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (44) )}));
				url = global::thx._Url.Url_Impl_.fromString("example.com");
				global::utest.Assert.isTrue( ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null)) , null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
				global::utest.Assert.isFalse(string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (48) )}));
				url = global::thx._Url.Url_Impl_.fromString("/some/path");
				global::utest.Assert.isFalse( ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null)) , null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (51) )}));
				global::utest.Assert.isTrue(string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (url) ), "hostName", 1034633683, true)), null), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbsolute", "thx.TestUrl", "TestUrl.hx"}, new int[]{1981972957}, new double[]{((double) (52) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 916255977:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAbsolute", 916255977)) );
					}
					
					
					case 729151262:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToString", 729151262)) );
					}
					
					
					case 1847555063:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBasics", 1847555063)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 916255977:
					{
						this.testAbsolute();
						break;
					}
					
					
					case 729151262:
					{
						this.testToString();
						break;
					}
					
					
					case 1847555063:
					{
						this.testBasics();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


