// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers : global::haxe.lang.HxObject {
		
		public TestEithers(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestEithers() {
			global::thx.TestEithers.__hx_ctor_thx_TestEithers(this);
		}
		
		
		public static void __hx_ctor_thx_TestEithers(global::thx.TestEithers __temp_me197) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestEithers(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestEithers();
		}
		
		
		public virtual void testIsLeft() {
			unchecked {
				global::utest.Assert.isTrue(global::thx.Eithers.isLeft<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIsLeft", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				global::utest.Assert.isFalse(global::thx.Eithers.isLeft<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIsLeft", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
			}
		}
		
		
		public virtual void testIsRight() {
			unchecked {
				global::utest.Assert.isFalse(global::thx.Eithers.isRight<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIsRight", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				global::utest.Assert.isTrue(global::thx.Eithers.isRight<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testIsRight", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
			}
		}
		
		
		public virtual void testToLeft() {
			unchecked {
				global::haxe.ds.Option _g = global::thx.Eithers.toLeft<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) ));
				object tmp = null;
				switch (_g.index) {
					case 0:
					{
						tmp = ((int) (global::haxe.lang.Runtime.toInt(_g.@params[0])) );
						break;
					}
					
					
					case 1:
					{
						tmp = null;
						break;
					}
					
					
				}
				
				global::utest.Assert.same(123, tmp, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToLeft", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
				global::haxe.ds.Option _g1 = global::thx.Eithers.toLeft<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) ));
				object tmp1 = null;
				switch (_g1.index) {
					case 0:
					{
						tmp1 = _g1.@params[0];
						break;
					}
					
					
					case 1:
					{
						tmp1 = null;
						break;
					}
					
					
				}
				
				global::utest.Assert.isNull(tmp1, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToLeft", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (26) )}));
			}
		}
		
		
		public virtual void testToRight() {
			unchecked {
				global::haxe.ds.Option _g = global::thx.Eithers.toRight<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) ));
				object tmp = null;
				switch (_g.index) {
					case 0:
					{
						tmp = ((int) (global::haxe.lang.Runtime.toInt(_g.@params[0])) );
						break;
					}
					
					
					case 1:
					{
						tmp = null;
						break;
					}
					
					
				}
				
				global::utest.Assert.same(123, tmp, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToRight", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (33) )}));
				global::haxe.ds.Option _g1 = global::thx.Eithers.toRight<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) ));
				object tmp1 = null;
				switch (_g1.index) {
					case 0:
					{
						tmp1 = _g1.@params[0];
						break;
					}
					
					
					case 1:
					{
						tmp1 = null;
						break;
					}
					
					
				}
				
				global::utest.Assert.isNull(tmp1, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToRight", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (38) )}));
			}
		}
		
		
		public virtual void testToLeftUnsafe() {
			unchecked {
				global::utest.Assert.same(123, (global::thx.Eithers.toLeftUnsafe<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToLeftUnsafe", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (45) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toLeftUnsafe<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) ))).@value, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToLeftUnsafe", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
			}
		}
		
		
		public virtual void testToRightUnsafe() {
			unchecked {
				global::utest.Assert.same(123, (global::thx.Eithers.toRightUnsafe<object, int>(((global::thx.Either) (global::thx.Either.Right(123)) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToRightUnsafe", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (50) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toRightUnsafe<int, object>(((global::thx.Either) (global::thx.Either.Left(123)) ))).@value, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToRightUnsafe", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (51) )}));
			}
		}
		
		
		public virtual void testFlatMap() {
			unchecked {
				global::utest.Assert.same(5, (global::thx.Eithers.toLeftUnsafe<int, object>(((global::thx.Either) (global::thx.Eithers.flatMap<int, object, object>(((global::thx.Either) (global::thx.Either.Left(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_55__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_55__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_55__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_55__Fun) (new global::thx.TestEithers_testFlatMap_55__Fun()) )) )) ))) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (55) )}));
				global::utest.Assert.same(5, (global::thx.Eithers.toLeftUnsafe<int, int>(((global::thx.Either) (global::thx.Eithers.flatMap<int, object, object>(((global::thx.Either) (global::thx.Either.Left(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_59__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_59__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_59__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_59__Fun) (new global::thx.TestEithers_testFlatMap_59__Fun()) )) )) ))) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (59) )}));
				global::utest.Assert.same(10, (global::thx.Eithers.toLeftUnsafe<int, object>(((global::thx.Either) (global::thx.Eithers.flatMap<int, int, object>(((global::thx.Either) (global::thx.Either.Right(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_63__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_63__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_63__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_63__Fun) (new global::thx.TestEithers_testFlatMap_63__Fun()) )) )) ))) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (63) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toLeftUnsafe<object, int>(((global::thx.Either) (global::thx.Eithers.flatMap<object, int, object>(((global::thx.Either) (global::thx.Either.Right(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_67__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_67__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_67__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_67__Fun) (new global::thx.TestEithers_testFlatMap_67__Fun()) )) )) ))) ))).@value, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (67) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toRightUnsafe<int, object>(((global::thx.Either) (global::thx.Eithers.flatMap<int, object, object>(((global::thx.Either) (global::thx.Either.Left(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_71__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_71__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_71__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_71__Fun) (new global::thx.TestEithers_testFlatMap_71__Fun()) )) )) ))) ))).@value, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (71) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toRightUnsafe<int, int>(((global::thx.Either) (global::thx.Eithers.flatMap<int, object, object>(((global::thx.Either) (global::thx.Either.Left(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_75__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_75__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_75__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_75__Fun) (new global::thx.TestEithers_testFlatMap_75__Fun()) )) )) ))) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (75) )}));
				global::utest.Assert.same(null, (global::thx.Eithers.toRightUnsafe<int, object>(((global::thx.Either) (global::thx.Eithers.flatMap<int, int, object>(((global::thx.Either) (global::thx.Either.Right(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_79__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_79__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_79__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_79__Fun) (new global::thx.TestEithers_testFlatMap_79__Fun()) )) )) ))) ))).@value, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (79) )}));
				global::utest.Assert.same(10, (global::thx.Eithers.toRightUnsafe<object, int>(((global::thx.Either) (global::thx.Eithers.flatMap<object, int, object>(((global::thx.Either) (global::thx.Either.Right(5)) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testFlatMap_83__Fun.__hx_current != null )) ? (global::thx.TestEithers_testFlatMap_83__Fun.__hx_current) : (global::thx.TestEithers_testFlatMap_83__Fun.__hx_current = ((global::thx.TestEithers_testFlatMap_83__Fun) (new global::thx.TestEithers_testFlatMap_83__Fun()) )) )) ))) ))).toDynamic(), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFlatMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (83) )}));
			}
		}
		
		
		public virtual void testLeftMap() {
			unchecked {
				global::thx.Either l = global::thx.Either.Left(1);
				global::thx.Either rt = global::thx.Either.Right(true);
				global::utest.Assert.same(global::thx.Either.Left(2), global::thx.Eithers.leftMap<int, object, bool>(((global::thx.Either) (l) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testLeftMap_92__Fun.__hx_current != null )) ? (global::thx.TestEithers_testLeftMap_92__Fun.__hx_current) : (global::thx.TestEithers_testLeftMap_92__Fun.__hx_current = ((global::thx.TestEithers_testLeftMap_92__Fun) (new global::thx.TestEithers_testLeftMap_92__Fun()) )) )) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testLeftMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (92) )}));
				global::utest.Assert.same(rt, global::thx.Eithers.leftMap<int, object, bool>(((global::thx.Either) (rt) ), ((global::haxe.lang.Function) (( (( global::thx.TestEithers_testLeftMap_93__Fun.__hx_current != null )) ? (global::thx.TestEithers_testLeftMap_93__Fun.__hx_current) : (global::thx.TestEithers_testLeftMap_93__Fun.__hx_current = ((global::thx.TestEithers_testLeftMap_93__Fun) (new global::thx.TestEithers_testLeftMap_93__Fun()) )) )) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testLeftMap", "thx.TestEithers", "TestEithers.hx"}, new int[]{1981972957}, new double[]{((double) (93) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 833169059:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testLeftMap", 833169059)) );
					}
					
					
					case 598146609:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFlatMap", 598146609)) );
					}
					
					
					case 756124597:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToRightUnsafe", 756124597)) );
					}
					
					
					case 458405978:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToLeftUnsafe", 458405978)) );
					}
					
					
					case 1924220463:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToRight", 1924220463)) );
					}
					
					
					case 375240980:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToLeft", 375240980)) );
					}
					
					
					case 1119001952:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testIsRight", 1119001952)) );
					}
					
					
					case 2114654979:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testIsLeft", 2114654979)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 833169059:
					{
						this.testLeftMap();
						break;
					}
					
					
					case 598146609:
					{
						this.testFlatMap();
						break;
					}
					
					
					case 756124597:
					{
						this.testToRightUnsafe();
						break;
					}
					
					
					case 458405978:
					{
						this.testToLeftUnsafe();
						break;
					}
					
					
					case 1924220463:
					{
						this.testToRight();
						break;
					}
					
					
					case 375240980:
					{
						this.testToLeft();
						break;
					}
					
					
					case 1119001952:
					{
						this.testIsRight();
						break;
					}
					
					
					case 2114654979:
					{
						this.testIsLeft();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_55__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_55__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_55__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object r = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				return global::thx.Either.Left(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_59__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_59__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_59__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object r1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				return global::thx.Either.Right(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_63__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_63__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_63__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int r2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return global::thx.Either.Left(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_67__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_67__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_67__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int r3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return global::thx.Either.Right(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_71__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_71__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_71__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object r4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				return global::thx.Either.Left(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_75__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_75__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_75__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object r5 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				return global::thx.Either.Right(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_79__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_79__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_79__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int r6 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return global::thx.Either.Left(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testFlatMap_83__Fun : global::haxe.lang.Function {
		
		public TestEithers_testFlatMap_83__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.TestEithers_testFlatMap_83__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int r7 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return global::thx.Either.Right(10);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testLeftMap_92__Fun : global::haxe.lang.Function {
		
		public TestEithers_testLeftMap_92__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.TestEithers_testLeftMap_92__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int i = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (( i + 1 )) );
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestEithers_testLeftMap_93__Fun : global::haxe.lang.Function {
		
		public TestEithers_testLeftMap_93__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.TestEithers_testLeftMap_93__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int i1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (( i1 + 1 )) );
			}
		}
		
		
	}
}


