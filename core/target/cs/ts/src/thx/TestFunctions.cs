// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions : global::haxe.lang.HxObject {
		
		public TestFunctions(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestFunctions() {
			global::thx.TestFunctions.__hx_ctor_thx_TestFunctions(this);
		}
		
		
		public static void __hx_ctor_thx_TestFunctions(global::thx.TestFunctions __temp_me201) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestFunctions(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestFunctions();
		}
		
		
		public virtual void testAfter() {
			unchecked {
				int[] counter = new int[]{0};
				global::haxe.lang.Function callback = new global::thx.TestFunctions_testAfter_11__Fun(counter);
				int[] n = new int[]{3};
				global::haxe.lang.Function manage = new global::thx.TestFunctions_testAfter_12__Fun(n, callback);
				global::utest.Assert.@equals(0, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(0, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(0, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
			}
		}
		
		
		public virtual void testOnce() {
			unchecked {
				int[] counter = new int[]{0};
				global::haxe.lang.Function test = new global::thx.TestFunctions_testOnce_27__Fun(counter);
				global::haxe.lang.Function[] f = new global::haxe.lang.Function[]{test};
				global::haxe.lang.Function manage = new global::thx.TestFunctions_testOnce_28__Fun(f);
				global::utest.Assert.@equals(0, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOnce", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOnce", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (32) )}));
				manage.__hx_invoke0_o();
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOnce", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
			}
		}
		
		
		public virtual void testMemoize() {
			unchecked {
				int[] counter = new int[]{0};
				global::haxe.lang.Function manage = global::thx.Functions1.memoize<int, int>(((global::haxe.lang.Function) (new global::thx.TestFunctions_testMemoize_39__Fun(counter)) ), ((global::haxe.lang.Function) (null) ));
				global::utest.Assert.@equals(0, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (45) )}));
				global::utest.Assert.@equals(10, ((int) (manage.__hx_invoke1_f(((double) (1) ), global::haxe.lang.Runtime.undefined)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
				global::utest.Assert.@equals(10, ((int) (manage.__hx_invoke1_f(((double) (1) ), global::haxe.lang.Runtime.undefined)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (48) )}));
				global::utest.Assert.@equals(1, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (49) )}));
				global::utest.Assert.@equals(20, ((int) (manage.__hx_invoke1_f(((double) (2) ), global::haxe.lang.Runtime.undefined)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (50) )}));
				global::utest.Assert.@equals(2, counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMemoize", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (51) )}));
			}
		}
		
		
		public virtual void testNegate() {
			unchecked {
				global::utest.Assert.isFalse(false, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNegate", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (55) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 886708:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNegate", 886708)) );
					}
					
					
					case 1607725224:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMemoize", 1607725224)) );
					}
					
					
					case 1290076915:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testOnce", 1290076915)) );
					}
					
					
					case 1722066026:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAfter", 1722066026)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 886708:
					{
						this.testNegate();
						break;
					}
					
					
					case 1607725224:
					{
						this.testMemoize();
						break;
					}
					
					
					case 1290076915:
					{
						this.testOnce();
						break;
					}
					
					
					case 1722066026:
					{
						this.testAfter();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions_testAfter_11__Fun : global::haxe.lang.Function {
		
		public TestFunctions_testAfter_11__Fun(int[] counter) : base(0, 0) {
			this.counter = counter;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::utest.Assert.@equals(1,  ++ this.counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfter", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				return null;
			}
		}
		
		
		public int[] counter;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions_testAfter_12__Fun : global::haxe.lang.Function {
		
		public TestFunctions_testAfter_12__Fun(int[] n, global::haxe.lang.Function callback) : base(0, 0) {
			this.n = n;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke0_o() {
			if ((  -- this.n[0] == 0 )) {
				this.callback.__hx_invoke0_o();
			}
			
			return null;
		}
		
		
		public int[] n;
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions_testOnce_27__Fun : global::haxe.lang.Function {
		
		public TestFunctions_testOnce_27__Fun(int[] counter) : base(0, 0) {
			this.counter = counter;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::utest.Assert.@equals(1,  ++ this.counter[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOnce", "thx.TestFunctions", "TestFunctions.hx"}, new int[]{1981972957}, new double[]{((double) (27) )}));
				return null;
			}
		}
		
		
		public int[] counter;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions_testOnce_28__Fun : global::haxe.lang.Function {
		
		public TestFunctions_testOnce_28__Fun(global::haxe.lang.Function[] f) : base(0, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke0_o() {
			global::haxe.lang.Function t = this.f[0];
			this.f[0] = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx.Functions), "noop", 1225397154)) );
			t.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Function[] f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestFunctions_testMemoize_39__Fun : global::haxe.lang.Function {
		
		public TestFunctions_testMemoize_39__Fun(int[] counter) : base(1, 1) {
			this.counter = counter;
		}
		
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int x = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				 ++ this.counter[0];
				return ((double) (( x * 10 )) );
			}
		}
		
		
		public int[] counter;
		
	}
}


