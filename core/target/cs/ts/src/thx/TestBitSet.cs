// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet : global::haxe.lang.HxObject {
		
		public TestBitSet(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestBitSet() {
			global::thx.TestBitSet.__hx_ctor_thx_TestBitSet(this);
		}
		
		
		public static void __hx_ctor_thx_TestBitSet(global::thx.TestBitSet __temp_me185) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestBitSet(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestBitSet();
		}
		
		
		public virtual void testBitSet() {
			unchecked {
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> bits = ((global::Array<int>) (this1) );
				global::utest.Assert.same(0, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				global::utest.Assert.same("", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testBitSet_14__Fun(bits), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testBitSet_15__Fun(bits), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testBitSet_16__Fun(bits), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testBitSet_17__Fun(bits), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
				global::thx._BitSet.BitSet_Impl_.setAt(bits, 0, true);
				global::utest.Assert.same(1, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				global::utest.Assert.same("1", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
				global::thx._BitSet.BitSet_Impl_.setAt(bits, 1, true);
				global::utest.Assert.same(2, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
				global::utest.Assert.same("11", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
				global::thx._BitSet.BitSet_Impl_.setAt(bits, 2, true);
				global::utest.Assert.same(3, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (28) )}));
				global::utest.Assert.same("111", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (29) )}));
				global::thx._BitSet.BitSet_Impl_.setAt(bits, 1, false);
				global::utest.Assert.same(3, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (32) )}));
				global::utest.Assert.same("101", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (33) )}));
				global::thx._BitSet.BitSet_Impl_.setAt(bits, 32, true);
				global::utest.Assert.same(33, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (37) )}));
				global::utest.Assert.same("101000000000000000000000000000001", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (38) )}));
				{
					int _g1 = 0;
					int _g = ((int) (global::thx._BitSet.BitSet_Impl_.get_length(bits)) );
					while (( _g1 < _g )) {
						int i = _g1++;
						if (global::thx.Arrays.contains<int>(((global::Array<int>) (new global::Array<int>(new int[]{0, 2, 32})) ), ((int) (i) ), ((global::haxe.lang.Function) (null) ))) {
							global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.at(bits, i), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (42) )}));
						}
						else {
							global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.at(bits, i), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (44) )}));
						}
						
					}
					
				}
				
				global::utest.Assert.raises(new global::thx.TestBitSet_testBitSet_48__Fun(bits), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (48) )}));
				{
					int _g11 = 0;
					int _g2 = global::thx._BitSet.BitSet_Impl_.get_length(((global::Array<int>) (bits) ));
					while (( _g11 < _g2 )) {
						global::thx._BitSet.BitSet_Impl_.setAt(((global::Array<int>) (bits) ), _g11++, true);
					}
					
				}
				
				global::utest.Assert.same(33, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (51) )}));
				global::utest.Assert.same("111111111111111111111111111111111", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (52) )}));
				{
					int _g12 = 0;
					int _g3 = global::thx._BitSet.BitSet_Impl_.get_length(((global::Array<int>) (bits) ));
					while (( _g12 < _g3 )) {
						global::thx._BitSet.BitSet_Impl_.setAt(((global::Array<int>) (bits) ), _g12++, false);
					}
					
				}
				
				global::utest.Assert.same(33, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (55) )}));
				global::utest.Assert.same("000000000000000000000000000000000", global::thx._BitSet.BitSet_Impl_.toString(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBitSet", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (56) )}));
			}
		}
		
		
		public virtual void testFromBools() {
			unchecked {
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> bits = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<bool, object>(((global::Array<bool>) (new global::Array<bool>(new bool[]{true, false, true, true})) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testFromBools_60__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testFromBools_60__Fun.__hx_current) : (global::thx.TestBitSet_testFromBools_60__Fun.__hx_current = ((global::thx.TestBitSet_testFromBools_60__Fun) (new global::thx.TestBitSet_testFromBools_60__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::utest.Assert.same(4, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (61) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 0), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (62) )}));
				global::utest.Assert.same(false, global::thx._BitSet.BitSet_Impl_.at(bits, 1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (63) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (64) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 3), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (65) )}));
			}
		}
		
		
		public virtual void testToBools() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> this2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testToBools_69__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testToBools_69__Fun.__hx_current) : (global::thx.TestBitSet_testToBools_69__Fun.__hx_current = ((global::thx.TestBitSet_testToBools_69__Fun) (new global::thx.TestBitSet_testToBools_69__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::utest.Assert.same(new global::Array<object>(new object[]{true, false, true, false, true}), global::thx.Ints.range(global::thx._BitSet.BitSet_Impl_.get_length(((global::Array<int>) (this2) )), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>)).map<bool>(((global::haxe.lang.Function) (new global::thx.TestBitSet_testToBools_70__Fun(this2)) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToBools", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (70) )}));
			}
		}
		
		
		public virtual void testToInt32s() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.same(new global::Array<object>(new object[]{21}), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testToInt32s_74__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testToInt32s_74__Fun.__hx_current) : (global::thx.TestBitSet_testToInt32s_74__Fun.__hx_current = ((global::thx.TestBitSet_testToInt32s_74__Fun) (new global::thx.TestBitSet_testToInt32s_74__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) ).slice(1, default(global::haxe.lang.Null<int>)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testToInt32s", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (76) )}));
			}
		}
		
		
		public virtual void testFromString() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("1011", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> bits = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testFromString_80__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testFromString_80__Fun.__hx_current) : (global::thx.TestBitSet_testFromString_80__Fun.__hx_current = ((global::thx.TestBitSet_testFromString_80__Fun) (new global::thx.TestBitSet_testFromString_80__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::utest.Assert.same(4, global::thx._BitSet.BitSet_Impl_.get_length(bits), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (81) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 0), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (82) )}));
				global::utest.Assert.same(false, global::thx._BitSet.BitSet_Impl_.at(bits, 1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (83) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (84) )}));
				global::utest.Assert.same(true, global::thx._BitSet.BitSet_Impl_.at(bits, 3), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (85) )}));
			}
		}
		
		
		public virtual void testPresetLength() {
			unchecked {
				global::Array<int> this1 = new global::Array<int>(new int[]{35});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (1.09375) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> bits1 = ((global::Array<int>) (this1) );
				global::utest.Assert.same(35, global::thx._BitSet.BitSet_Impl_.get_length(bits1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (90) )}));
				{
					int _g = 0;
					while (( _g < 35 )) {
						global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.at(bits1, _g++), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (92) )}));
					}
					
				}
				
				global::utest.Assert.raises(new global::thx.TestBitSet_testPresetLength_94__Fun(bits1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (94) )}));
				global::Array<int> this2 = new global::Array<int>(new int[]{35});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (1.09375) ) + 1 ) + 1 )) ), ((int) (0) ));
				{
					int _g1 = 0;
					int _g2 = global::thx._BitSet.BitSet_Impl_.get_length(((global::Array<int>) (this2) ));
					while (( _g1 < _g2 )) {
						global::thx._BitSet.BitSet_Impl_.setAt(((global::Array<int>) (this2) ), _g1++, true);
					}
					
				}
				
				global::Array<int> bits2 = ((global::Array<int>) (this2) );
				global::utest.Assert.same(35, global::thx._BitSet.BitSet_Impl_.get_length(bits2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (97) )}));
				{
					int _g3 = 0;
					while (( _g3 < 35 )) {
						global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.at(bits2, _g3++), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (99) )}));
					}
					
				}
				
				global::utest.Assert.raises(new global::thx.TestBitSet_testPresetLength_101__Fun(bits2), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testPresetLength", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (101) )}));
			}
		}
		
		
		public virtual void testConcat() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testConcat_105__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testConcat_105__Fun.__hx_current) : (global::thx.TestBitSet_testConcat_105__Fun.__hx_current = ((global::thx.TestBitSet_testConcat_105__Fun) (new global::thx.TestBitSet_testConcat_105__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("111", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testConcat_106__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testConcat_106__Fun.__hx_current) : (global::thx.TestBitSet_testConcat_106__Fun.__hx_current = ((global::thx.TestBitSet_testConcat_106__Fun) (new global::thx.TestBitSet_testConcat_106__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				int length = ( ((int) (global::thx._BitSet.BitSet_Impl_.get_length(b1)) ) + ((int) (global::thx._BitSet.BitSet_Impl_.get_length(b2)) ) );
				global::Array<int> this3 = new global::Array<int>(new int[]{length});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (( length / 32 )) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> result = ((global::Array<int>) (this3) );
				int index = 0;
				{
					int _g1 = 0;
					int _g = ((int) (global::thx._BitSet.BitSet_Impl_.get_length(b1)) );
					while (( _g1 < _g )) {
						global::thx._BitSet.BitSet_Impl_.setAt(result, index++, global::thx._BitSet.BitSet_Impl_.at(b1, _g1++));
					}
					
				}
				
				{
					int _g11 = 0;
					int _g2 = ((int) (global::thx._BitSet.BitSet_Impl_.get_length(b2)) );
					while (( _g11 < _g2 )) {
						global::thx._BitSet.BitSet_Impl_.setAt(result, index++, global::thx._BitSet.BitSet_Impl_.at(b2, _g11++));
					}
					
				}
				
				global::utest.Assert.same("10101", global::thx._BitSet.BitSet_Impl_.toString(b1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (108) )}));
				global::utest.Assert.same("111", global::thx._BitSet.BitSet_Impl_.toString(b2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (109) )}));
				global::utest.Assert.same("10101111", global::thx._BitSet.BitSet_Impl_.toString(result), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (110) )}));
				global::utest.Assert.same(5, global::thx._BitSet.BitSet_Impl_.get_length(b1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (111) )}));
				global::utest.Assert.same(3, global::thx._BitSet.BitSet_Impl_.get_length(b2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (112) )}));
				global::utest.Assert.same(8, global::thx._BitSet.BitSet_Impl_.get_length(result), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testConcat", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (113) )}));
			}
		}
		
		
		public virtual void testExpand() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("1011", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testExpand_117__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testExpand_117__Fun.__hx_current) : (global::thx.TestBitSet_testExpand_117__Fun.__hx_current = ((global::thx.TestBitSet_testExpand_117__Fun) (new global::thx.TestBitSet_testExpand_117__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<int> b2 = global::thx._BitSet.BitSet_Impl_.expand(b1, 1);
				global::Array<int> b3 = global::thx._BitSet.BitSet_Impl_.expand(b1, 3);
				global::utest.Assert.same("1011", global::thx._BitSet.BitSet_Impl_.toString(b1), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testExpand", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (120) )}));
				global::utest.Assert.same("11001111", global::thx._BitSet.BitSet_Impl_.toString(b2), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testExpand", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (121) )}));
				global::utest.Assert.same("1111000011111111", global::thx._BitSet.BitSet_Impl_.toString(b3), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testExpand", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (122) )}));
			}
		}
		
		
		public virtual void testEquals() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testEquals_126__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testEquals_126__Fun.__hx_current) : (global::thx.TestBitSet_testEquals_126__Fun.__hx_current = ((global::thx.TestBitSet_testEquals_126__Fun) (new global::thx.TestBitSet_testEquals_126__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testEquals_127__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testEquals_127__Fun.__hx_current) : (global::thx.TestBitSet_testEquals_127__Fun.__hx_current = ((global::thx.TestBitSet_testEquals_127__Fun) (new global::thx.TestBitSet_testEquals_127__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("101011001", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b3 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testEquals_128__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testEquals_128__Fun.__hx_current) : (global::thx.TestBitSet_testEquals_128__Fun.__hx_current = ((global::thx.TestBitSet_testEquals_128__Fun) (new global::thx.TestBitSet_testEquals_128__Fun()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("10101101", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b4 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testEquals_129__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testEquals_129__Fun.__hx_current) : (global::thx.TestBitSet_testEquals_129__Fun.__hx_current = ((global::thx.TestBitSet_testEquals_129__Fun) (new global::thx.TestBitSet_testEquals_129__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) );
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("1010110", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b5 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testEquals_130__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testEquals_130__Fun.__hx_current) : (global::thx.TestBitSet_testEquals_130__Fun.__hx_current = ((global::thx.TestBitSet_testEquals_130__Fun) (new global::thx.TestBitSet_testEquals_130__Fun()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(b1, b2), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (131) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b3), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (132) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b4), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (133) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b5), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (134) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(b1, b2), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (135) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b3), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (136) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b4), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (137) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.@equals(b1, b5), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (138) )}));
			}
		}
		
		
		public virtual void testNotEquals() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNotEquals_142__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNotEquals_142__Fun.__hx_current) : (global::thx.TestBitSet_testNotEquals_142__Fun.__hx_current = ((global::thx.TestBitSet_testNotEquals_142__Fun) (new global::thx.TestBitSet_testNotEquals_142__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNotEquals_143__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNotEquals_143__Fun.__hx_current) : (global::thx.TestBitSet_testNotEquals_143__Fun.__hx_current = ((global::thx.TestBitSet_testNotEquals_143__Fun) (new global::thx.TestBitSet_testNotEquals_143__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("101011001", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b3 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNotEquals_144__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNotEquals_144__Fun.__hx_current) : (global::thx.TestBitSet_testNotEquals_144__Fun.__hx_current = ((global::thx.TestBitSet_testNotEquals_144__Fun) (new global::thx.TestBitSet_testNotEquals_144__Fun()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("10101101", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b4 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNotEquals_145__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNotEquals_145__Fun.__hx_current) : (global::thx.TestBitSet_testNotEquals_145__Fun.__hx_current = ((global::thx.TestBitSet_testNotEquals_145__Fun) (new global::thx.TestBitSet_testNotEquals_145__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) );
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("1010110", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b5 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNotEquals_146__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNotEquals_146__Fun.__hx_current) : (global::thx.TestBitSet_testNotEquals_146__Fun.__hx_current = ((global::thx.TestBitSet_testNotEquals_146__Fun) (new global::thx.TestBitSet_testNotEquals_146__Fun()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (147) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (148) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (149) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (150) )}));
				global::utest.Assert.isFalse(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (151) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (152) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (153) )}));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotEquals", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (154) )}));
			}
		}
		
		
		public virtual void testAnd() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_158__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_158__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_158__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_158__Fun) (new global::thx.TestBitSet_testAnd_158__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_159__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_159__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_159__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_159__Fun) (new global::thx.TestBitSet_testAnd_159__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b3 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_160__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_160__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_160__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_160__Fun) (new global::thx.TestBitSet_testAnd_160__Fun()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("111", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b4 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_161__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_161__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_161__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_161__Fun) (new global::thx.TestBitSet_testAnd_161__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) );
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("000", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b5 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_162__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_162__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_162__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_162__Fun) (new global::thx.TestBitSet_testAnd_162__Fun()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::Array<object> chars5 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this6 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this6) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars5) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_163__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_163__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_163__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_163__Fun) (new global::thx.TestBitSet_testAnd_163__Fun()) )) )) ), ((global::Array<int>) (this6) ))) ))) ), global::thx._BitSet.BitSet_Impl_.and(b1, b2)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAnd", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (163) )}));
				global::Array<object> chars6 = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this7 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this7) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars6) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testAnd_164__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testAnd_164__Fun.__hx_current) : (global::thx.TestBitSet_testAnd_164__Fun.__hx_current = ((global::thx.TestBitSet_testAnd_164__Fun) (new global::thx.TestBitSet_testAnd_164__Fun()) )) )) ), ((global::Array<int>) (this7) ))) ))) ), global::thx._BitSet.BitSet_Impl_.and(b1, b3)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAnd", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (164) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testAnd_165__Fun(b4, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAnd", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (165) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testAnd_166__Fun(b5, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAnd", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (166) )}));
			}
		}
		
		
		public virtual void testOr() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_170__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_170__Fun.__hx_current) : (global::thx.TestBitSet_testOr_170__Fun.__hx_current = ((global::thx.TestBitSet_testOr_170__Fun) (new global::thx.TestBitSet_testOr_170__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_171__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_171__Fun.__hx_current) : (global::thx.TestBitSet_testOr_171__Fun.__hx_current = ((global::thx.TestBitSet_testOr_171__Fun) (new global::thx.TestBitSet_testOr_171__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b3 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_172__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_172__Fun.__hx_current) : (global::thx.TestBitSet_testOr_172__Fun.__hx_current = ((global::thx.TestBitSet_testOr_172__Fun) (new global::thx.TestBitSet_testOr_172__Fun()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("111", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b4 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_173__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_173__Fun.__hx_current) : (global::thx.TestBitSet_testOr_173__Fun.__hx_current = ((global::thx.TestBitSet_testOr_173__Fun) (new global::thx.TestBitSet_testOr_173__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) );
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("000", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b5 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_174__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_174__Fun.__hx_current) : (global::thx.TestBitSet_testOr_174__Fun.__hx_current = ((global::thx.TestBitSet_testOr_174__Fun) (new global::thx.TestBitSet_testOr_174__Fun()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::Array<object> chars5 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this6 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this6) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars5) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_175__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_175__Fun.__hx_current) : (global::thx.TestBitSet_testOr_175__Fun.__hx_current = ((global::thx.TestBitSet_testOr_175__Fun) (new global::thx.TestBitSet_testOr_175__Fun()) )) )) ), ((global::Array<int>) (this6) ))) ))) ), global::thx._BitSet.BitSet_Impl_.or(b1, b2)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOr", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (175) )}));
				global::Array<object> chars6 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this7 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this7) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars6) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testOr_176__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testOr_176__Fun.__hx_current) : (global::thx.TestBitSet_testOr_176__Fun.__hx_current = ((global::thx.TestBitSet_testOr_176__Fun) (new global::thx.TestBitSet_testOr_176__Fun()) )) )) ), ((global::Array<int>) (this7) ))) ))) ), global::thx._BitSet.BitSet_Impl_.or(b1, b3)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOr", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (176) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testOr_177__Fun(b4, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOr", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (177) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testOr_178__Fun(b5, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testOr", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (178) )}));
			}
		}
		
		
		public virtual void testXor() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_182__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_182__Fun.__hx_current) : (global::thx.TestBitSet_testXor_182__Fun.__hx_current = ((global::thx.TestBitSet_testXor_182__Fun) (new global::thx.TestBitSet_testXor_182__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_183__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_183__Fun.__hx_current) : (global::thx.TestBitSet_testXor_183__Fun.__hx_current = ((global::thx.TestBitSet_testXor_183__Fun) (new global::thx.TestBitSet_testXor_183__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) );
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b3 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_184__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_184__Fun.__hx_current) : (global::thx.TestBitSet_testXor_184__Fun.__hx_current = ((global::thx.TestBitSet_testXor_184__Fun) (new global::thx.TestBitSet_testXor_184__Fun()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("111", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b4 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_185__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_185__Fun.__hx_current) : (global::thx.TestBitSet_testXor_185__Fun.__hx_current = ((global::thx.TestBitSet_testXor_185__Fun) (new global::thx.TestBitSet_testXor_185__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) );
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("000", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b5 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_186__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_186__Fun.__hx_current) : (global::thx.TestBitSet_testXor_186__Fun.__hx_current = ((global::thx.TestBitSet_testXor_186__Fun) (new global::thx.TestBitSet_testXor_186__Fun()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::Array<object> chars5 = global::haxe.lang.StringExt.split("01010011", "");
				global::Array<int> this6 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this6) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars5) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_187__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_187__Fun.__hx_current) : (global::thx.TestBitSet_testXor_187__Fun.__hx_current = ((global::thx.TestBitSet_testXor_187__Fun) (new global::thx.TestBitSet_testXor_187__Fun()) )) )) ), ((global::Array<int>) (this6) ))) ))) ), global::thx._BitSet.BitSet_Impl_.xor(b1, b2)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testXor", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (187) )}));
				global::Array<object> chars6 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this7 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this7) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars6) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testXor_188__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testXor_188__Fun.__hx_current) : (global::thx.TestBitSet_testXor_188__Fun.__hx_current = ((global::thx.TestBitSet_testXor_188__Fun) (new global::thx.TestBitSet_testXor_188__Fun()) )) )) ), ((global::Array<int>) (this7) ))) ))) ), global::thx._BitSet.BitSet_Impl_.xor(b1, b3)), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testXor", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (188) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testXor_189__Fun(b4, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testXor", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (189) )}));
				global::utest.Assert.raises(new global::thx.TestBitSet_testXor_190__Fun(b5, b1), null, null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testXor", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (190) )}));
			}
		}
		
		
		public virtual void testNegate() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> tmp = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_194__Fun_0.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_194__Fun_0.__hx_current) : (global::thx.TestBitSet_testNegate_194__Fun_0.__hx_current = ((global::thx.TestBitSet_testNegate_194__Fun_0) (new global::thx.TestBitSet_testNegate_194__Fun_0()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<object> chars1 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this2 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this2) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(tmp, global::thx._BitSet.BitSet_Impl_.negate(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars1) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_194__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_194__Fun.__hx_current) : (global::thx.TestBitSet_testNegate_194__Fun.__hx_current = ((global::thx.TestBitSet_testNegate_194__Fun) (new global::thx.TestBitSet_testNegate_194__Fun()) )) )) ), ((global::Array<int>) (this2) ))) ))) ))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNegate", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (194) )}));
				global::Array<object> chars2 = global::haxe.lang.StringExt.split("11111111", "");
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> tmp1 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars2) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_195__Fun_0.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_195__Fun_0.__hx_current) : (global::thx.TestBitSet_testNegate_195__Fun_0.__hx_current = ((global::thx.TestBitSet_testNegate_195__Fun_0) (new global::thx.TestBitSet_testNegate_195__Fun_0()) )) )) ), ((global::Array<int>) (this3) ))) ))) );
				global::Array<object> chars3 = global::haxe.lang.StringExt.split("00000000", "");
				global::Array<int> this4 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this4) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(tmp1, global::thx._BitSet.BitSet_Impl_.negate(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars3) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_195__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_195__Fun.__hx_current) : (global::thx.TestBitSet_testNegate_195__Fun.__hx_current = ((global::thx.TestBitSet_testNegate_195__Fun) (new global::thx.TestBitSet_testNegate_195__Fun()) )) )) ), ((global::Array<int>) (this4) ))) ))) ))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNegate", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (195) )}));
				global::Array<object> chars4 = global::haxe.lang.StringExt.split("01010011", "");
				global::Array<int> this5 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this5) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> tmp2 = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars4) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_196__Fun_0.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_196__Fun_0.__hx_current) : (global::thx.TestBitSet_testNegate_196__Fun_0.__hx_current = ((global::thx.TestBitSet_testNegate_196__Fun_0) (new global::thx.TestBitSet_testNegate_196__Fun_0()) )) )) ), ((global::Array<int>) (this5) ))) ))) );
				global::Array<object> chars5 = global::haxe.lang.StringExt.split("10101100", "");
				global::Array<int> this6 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this6) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::utest.Assert.isTrue(global::thx._BitSet.BitSet_Impl_.@equals(tmp2, global::thx._BitSet.BitSet_Impl_.negate(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars5) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testNegate_196__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testNegate_196__Fun.__hx_current) : (global::thx.TestBitSet_testNegate_196__Fun.__hx_current = ((global::thx.TestBitSet_testNegate_196__Fun) (new global::thx.TestBitSet_testNegate_196__Fun()) )) )) ), ((global::Array<int>) (this6) ))) ))) ))), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNegate", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (196) )}));
			}
		}
		
		
		public virtual void testClone() {
			unchecked {
				global::Array<object> chars = global::haxe.lang.StringExt.split("0101", "");
				global::Array<int> this1 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this1) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> a = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reducei<object, object>(((global::Array<object>) (chars) ), ((global::haxe.lang.Function) (( (( global::thx.TestBitSet_testClone_200__Fun.__hx_current != null )) ? (global::thx.TestBitSet_testClone_200__Fun.__hx_current) : (global::thx.TestBitSet_testClone_200__Fun.__hx_current = ((global::thx.TestBitSet_testClone_200__Fun) (new global::thx.TestBitSet_testClone_200__Fun()) )) )) ), ((global::Array<int>) (this1) ))) ))) );
				global::Array<int> this2 = a;
				global::Array<int> tmp = global::thx.Ints.range(global::thx._BitSet.BitSet_Impl_.get_length(((global::Array<int>) (this2) )), default(global::haxe.lang.Null<int>), default(global::haxe.lang.Null<int>));
				global::Array<int> this3 = new global::Array<int>(new int[]{0});
				global::thx.Arrays.resize<int>(((global::Array<int>) (this3) ), ((int) (( ( ((int) (0.0) ) + 1 ) + 1 )) ), ((int) (0) ));
				global::Array<int> b = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (global::thx.Arrays.reduce<int, object>(((global::Array<int>) (tmp) ), ((global::haxe.lang.Function) (new global::thx.TestBitSet_testClone_201__Fun(this2)) ), ((global::Array<int>) (this3) ))) ))) );
				global::thx._BitSet.BitSet_Impl_.setAt(b, 0, true);
				global::utest.Assert.same("0101", global::thx._BitSet.BitSet_Impl_.toString(a), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testClone", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (203) )}));
				global::utest.Assert.same("1101", global::thx._BitSet.BitSet_Impl_.toString(b), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testClone", "thx.TestBitSet", "TestBitSet.hx"}, new int[]{1981972957}, new double[]{((double) (204) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 291852715:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testClone", 291852715)) );
					}
					
					
					case 886708:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNegate", 886708)) );
					}
					
					
					case 1036639849:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testXor", 1036639849)) );
					}
					
					
					case 1429882389:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testOr", 1429882389)) );
					}
					
					
					case 1035495845:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAnd", 1035495845)) );
					}
					
					
					case 1880508672:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNotEquals", 1880508672)) );
					}
					
					
					case 1491547185:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEquals", 1491547185)) );
					}
					
					
					case 1567044684:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testExpand", 1567044684)) );
					}
					
					
					case 1623478022:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testConcat", 1623478022)) );
					}
					
					
					case 1662801175:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testPresetLength", 1662801175)) );
					}
					
					
					case 1952928973:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFromString", 1952928973)) );
					}
					
					
					case 950411186:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToInt32s", 950411186)) );
					}
					
					
					case 1078287196:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testToBools", 1078287196)) );
					}
					
					
					case 515606669:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFromBools", 515606669)) );
					}
					
					
					case 166502087:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBitSet", 166502087)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 291852715:
					{
						this.testClone();
						break;
					}
					
					
					case 886708:
					{
						this.testNegate();
						break;
					}
					
					
					case 1036639849:
					{
						this.testXor();
						break;
					}
					
					
					case 1429882389:
					{
						this.testOr();
						break;
					}
					
					
					case 1035495845:
					{
						this.testAnd();
						break;
					}
					
					
					case 1880508672:
					{
						this.testNotEquals();
						break;
					}
					
					
					case 1491547185:
					{
						this.testEquals();
						break;
					}
					
					
					case 1567044684:
					{
						this.testExpand();
						break;
					}
					
					
					case 1623478022:
					{
						this.testConcat();
						break;
					}
					
					
					case 1662801175:
					{
						this.testPresetLength();
						break;
					}
					
					
					case 1952928973:
					{
						this.testFromString();
						break;
					}
					
					
					case 950411186:
					{
						this.testToInt32s();
						break;
					}
					
					
					case 1078287196:
					{
						this.testToBools();
						break;
					}
					
					
					case 515606669:
					{
						this.testFromBools();
						break;
					}
					
					
					case 166502087:
					{
						this.testBitSet();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testBitSet_14__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testBitSet_14__Fun(global::Array<int> bits) : base(0, 0) {
			this.bits = bits;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.at(this.bits, 0);
			return null;
		}
		
		
		public global::Array<int> bits;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testBitSet_15__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testBitSet_15__Fun(global::Array<int> bits) : base(0, 0) {
			this.bits = bits;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits, -1);
				return null;
			}
		}
		
		
		public global::Array<int> bits;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testBitSet_16__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testBitSet_16__Fun(global::Array<int> bits) : base(0, 0) {
			this.bits = bits;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits, 1);
				return null;
			}
		}
		
		
		public global::Array<int> bits;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testBitSet_17__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testBitSet_17__Fun(global::Array<int> bits) : base(0, 0) {
			this.bits = bits;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits, 4);
				return null;
			}
		}
		
		
		public global::Array<int> bits;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testBitSet_48__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testBitSet_48__Fun(global::Array<int> bits) : base(0, 0) {
			this.bits = bits;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits, ( ((int) (global::thx._BitSet.BitSet_Impl_.get_length(this.bits)) ) + ((int) (1) ) ));
				return null;
			}
		}
		
		
		public global::Array<int> bits;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testFromBools_60__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testFromBools_60__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testFromBools_60__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			bool @value = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toBool(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.toBool(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, @value);
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testToBools_69__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testToBools_69__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testToBools_69__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testToBools_70__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testToBools_70__Fun(global::Array<int> this2) : base(1, 0) {
			this.this2 = this2;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int index = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return global::thx._BitSet.BitSet_Impl_.at(((global::Array<int>) (this.this2) ), index);
		}
		
		
		public global::Array<int> this2;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testToInt32s_74__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testToInt32s_74__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testToInt32s_74__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testFromString_80__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testFromString_80__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testFromString_80__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testPresetLength_94__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testPresetLength_94__Fun(global::Array<int> bits1) : base(0, 0) {
			this.bits1 = bits1;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits1, 35);
				return null;
			}
		}
		
		
		public global::Array<int> bits1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testPresetLength_101__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testPresetLength_101__Fun(global::Array<int> bits2) : base(0, 0) {
			this.bits2 = bits2;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				global::thx._BitSet.BitSet_Impl_.at(this.bits2, 35);
				return null;
			}
		}
		
		
		public global::Array<int> bits2;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testConcat_105__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testConcat_105__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testConcat_105__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testConcat_106__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testConcat_106__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testConcat_106__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testExpand_117__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testExpand_117__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testExpand_117__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testEquals_126__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testEquals_126__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testEquals_126__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testEquals_127__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testEquals_127__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testEquals_127__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testEquals_128__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testEquals_128__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testEquals_128__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testEquals_129__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testEquals_129__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testEquals_129__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testEquals_130__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testEquals_130__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testEquals_130__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNotEquals_142__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNotEquals_142__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNotEquals_142__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNotEquals_143__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNotEquals_143__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNotEquals_143__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNotEquals_144__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNotEquals_144__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNotEquals_144__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNotEquals_145__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNotEquals_145__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNotEquals_145__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNotEquals_146__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNotEquals_146__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNotEquals_146__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_158__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_158__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_158__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_159__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_159__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_159__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_160__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_160__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_160__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_161__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_161__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_161__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_162__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_162__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_162__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_163__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_163__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_163__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i5 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char5 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc5 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc5, i5, string.Equals(char5, "1"));
			return acc5;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_164__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_164__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testAnd_164__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i6 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char6 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc6 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc6, i6, string.Equals(char6, "1"));
			return acc6;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_165__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_165__Fun(global::Array<int> b4, global::Array<int> b1) : base(0, 0) {
			this.b4 = b4;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.and(this.b1, this.b4);
			return null;
		}
		
		
		public global::Array<int> b4;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testAnd_166__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testAnd_166__Fun(global::Array<int> b5, global::Array<int> b1) : base(0, 0) {
			this.b5 = b5;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.and(this.b1, this.b5);
			return null;
		}
		
		
		public global::Array<int> b5;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_170__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_170__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_170__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_171__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_171__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_171__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_172__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_172__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_172__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_173__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_173__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_173__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_174__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_174__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_174__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_175__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_175__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_175__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i5 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char5 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc5 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc5, i5, string.Equals(char5, "1"));
			return acc5;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_176__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_176__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testOr_176__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i6 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char6 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc6 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc6, i6, string.Equals(char6, "1"));
			return acc6;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_177__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_177__Fun(global::Array<int> b4, global::Array<int> b1) : base(0, 0) {
			this.b4 = b4;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.or(this.b1, this.b4);
			return null;
		}
		
		
		public global::Array<int> b4;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testOr_178__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testOr_178__Fun(global::Array<int> b5, global::Array<int> b1) : base(0, 0) {
			this.b5 = b5;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.or(this.b1, this.b5);
			return null;
		}
		
		
		public global::Array<int> b5;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_182__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_182__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_182__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_183__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_183__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_183__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_184__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_184__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_184__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_185__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_185__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_185__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_186__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_186__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_186__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_187__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_187__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_187__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i5 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char5 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc5 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc5, i5, string.Equals(char5, "1"));
			return acc5;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_188__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_188__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testXor_188__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i6 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char6 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc6 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc6, i6, string.Equals(char6, "1"));
			return acc6;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_189__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_189__Fun(global::Array<int> b4, global::Array<int> b1) : base(0, 0) {
			this.b4 = b4;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.xor(this.b1, this.b4);
			return null;
		}
		
		
		public global::Array<int> b4;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testXor_190__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testXor_190__Fun(global::Array<int> b5, global::Array<int> b1) : base(0, 0) {
			this.b5 = b5;
			this.b1 = b1;
		}
		
		
		public override object __hx_invoke0_o() {
			global::thx._BitSet.BitSet_Impl_.xor(this.b1, this.b5);
			return null;
		}
		
		
		public global::Array<int> b5;
		
		public global::Array<int> b1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_194__Fun_0 : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_194__Fun_0() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_194__Fun_0 __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_194__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_194__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_194__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i1 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, string.Equals(char1, "1"));
			return acc1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_195__Fun_0 : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_195__Fun_0() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_195__Fun_0 __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i2 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char2 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc2, i2, string.Equals(char2, "1"));
			return acc2;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_195__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_195__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_195__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i3 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char3 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc3, i3, string.Equals(char3, "1"));
			return acc3;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_196__Fun_0 : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_196__Fun_0() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_196__Fun_0 __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i4 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char4 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc4 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc4, i4, string.Equals(char4, "1"));
			return acc4;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testNegate_196__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testNegate_196__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testNegate_196__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i5 = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string char5 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc5 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc5, i5, string.Equals(char5, "1"));
			return acc5;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testClone_200__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testClone_200__Fun() : base(3, 0) {
		}
		
		
		public static global::thx.TestBitSet_testClone_200__Fun __hx_current;
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			int i = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float3) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn3)) )) );
			string @char = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
			global::Array<int> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc, i, string.Equals(@char, "1"));
			return acc;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestBitSet_testClone_201__Fun : global::haxe.lang.Function {
		
		public TestBitSet_testClone_201__Fun(global::Array<int> this2) : base(2, 0) {
			this.this2 = this2;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			int i1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
			global::Array<int> acc1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
			global::thx._BitSet.BitSet_Impl_.setAt(acc1, i1, global::thx._BitSet.BitSet_Impl_.at(((global::Array<int>) (this.this2) ), i1));
			return acc1;
		}
		
		
		public global::Array<int> this2;
		
	}
}


