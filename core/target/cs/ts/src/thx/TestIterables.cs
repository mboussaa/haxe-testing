// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestIterables : global::haxe.lang.HxObject {
		
		public TestIterables(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestIterables() {
			global::thx.TestIterables.__hx_ctor_thx_TestIterables(this);
		}
		
		
		public static void __hx_ctor_thx_TestIterables(global::thx.TestIterables __temp_me206) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestIterables(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestIterables();
		}
		
		
		public virtual void testMin() {
			unchecked {
				global::utest.Assert.same(global::haxe.ds.Option.Some(1), global::thx.Iterables.minBy<int, int>(((object) (new global::Array<int>(new int[]{3, 1, 2})) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx.Functions), "identity", 959399230)) ), ((global::haxe.lang.Function) (global::thx.Ints.order) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMin", "thx.TestIterables", "TestIterables.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				global::utest.Assert.same(global::haxe.ds.Option.None, global::thx.Iterables.minBy<int, int>(((object) (new global::Array<int>(new int[]{})) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx.Functions), "identity", 959399230)) ), ((global::haxe.lang.Function) (global::thx.Ints.order) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMin", "thx.TestIterables", "TestIterables.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
			}
		}
		
		
		public virtual void testMinBy() {
			unchecked {
				global::utest.Assert.same(global::haxe.ds.Option.Some(new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{97}, new double[]{((double) (1) )})), global::thx.Iterables.minBy<object, object>(((object) (new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{97}, new double[]{((double) (3) )}), new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{97}, new double[]{((double) (1) )}), new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{97}, new double[]{((double) (2) )})})) ), ((global::haxe.lang.Function) (( (( global::thx.TestIterables_testMinBy_21__Fun.__hx_current != null )) ? (global::thx.TestIterables_testMinBy_21__Fun.__hx_current) : (global::thx.TestIterables_testMinBy_21__Fun.__hx_current = ((global::thx.TestIterables_testMinBy_21__Fun) (new global::thx.TestIterables_testMinBy_21__Fun()) )) )) ), ((global::haxe.lang.Function) (global::thx.Ints.order) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMinBy", "thx.TestIterables", "TestIterables.hx"}, new int[]{1981972957}, new double[]{((double) (21) )}));
				global::utest.Assert.same(global::haxe.ds.Option.None, global::thx.Iterables.minBy<object, object>(((object) (new global::Array<object>(new object[]{})) ), ((global::haxe.lang.Function) (( (( global::thx.TestIterables_testMinBy_22__Fun.__hx_current != null )) ? (global::thx.TestIterables_testMinBy_22__Fun.__hx_current) : (global::thx.TestIterables_testMinBy_22__Fun.__hx_current = ((global::thx.TestIterables_testMinBy_22__Fun) (new global::thx.TestIterables_testMinBy_22__Fun()) )) )) ), ((global::haxe.lang.Function) (global::thx.Ints.order) )), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMinBy", "thx.TestIterables", "TestIterables.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1365938775:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMinBy", 1365938775)) );
					}
					
					
					case 1036091488:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMin", 1036091488)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1365938775:
					{
						this.testMinBy();
						break;
					}
					
					
					case 1036091488:
					{
						this.testMin();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestIterables_testMinBy_21__Fun : global::haxe.lang.Function {
		
		public TestIterables_testMinBy_21__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.TestIterables_testMinBy_21__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			object o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((double) (((int) (global::haxe.lang.Runtime.getField_f(o, "a", 97, true)) )) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestIterables_testMinBy_22__Fun : global::haxe.lang.Function {
		
		public TestIterables_testMinBy_22__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.TestIterables_testMinBy_22__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			object o1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((double) (((int) (global::haxe.lang.Runtime.getField_f(o1, "a", 97, true)) )) );
		}
		
		
	}
}


