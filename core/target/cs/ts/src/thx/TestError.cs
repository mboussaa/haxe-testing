// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError : global::haxe.lang.HxObject {
		
		public TestError(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestError() {
			global::thx.TestError.__hx_ctor_thx_TestError(this);
		}
		
		
		public static void __hx_ctor_thx_TestError(global::thx.TestError __temp_me199) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestError(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestError();
		}
		
		
		public virtual void testAbstract() {
			unchecked {
				global::thx.error.AbstractMethod error = new global::thx.error.AbstractMethod(((object) (new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (12) )})) ));
				global::utest.Assert.notNull(error, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				global::utest.Assert.stringContains("TestError", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
				global::utest.Assert.stringContains("testAbstract", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				global::utest.Assert.stringContains("is abstract", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAbstract", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
			}
		}
		
		
		public virtual void testNotImplemented() {
			unchecked {
				global::thx.error.NotImplemented error = new global::thx.error.NotImplemented(((object) (new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotImplemented", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (21) )})) ));
				global::utest.Assert.notNull(error, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotImplemented", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
				global::utest.Assert.stringContains("TestError", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotImplemented", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
				global::utest.Assert.stringContains("testNotImplemented", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotImplemented", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
				global::utest.Assert.stringContains("needs to be implemented", error.message, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNotImplemented", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (26) )}));
			}
		}
		
		
		public virtual void testNullArgument() {
			unchecked {
				global::thx.TestError _gthis = this;
				global::utest.Assert.raises(new global::thx.TestError_testNullArgument_30__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNullArgument", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
				this.nullInt(new global::haxe.lang.Null<int>(1, true));
			}
		}
		
		
		public virtual void testNullArgumentUsing() {
			unchecked {
				global::thx.TestError _gthis = this;
				global::utest.Assert.raises(new global::thx.TestError_testNullArgumentUsing_35__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testNullArgumentUsing", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (35) )}));
				this.nullUsingInt(new global::haxe.lang.Null<int>(1, true));
			}
		}
		
		
		public virtual void testEmptyArray() {
			unchecked {
				global::thx.TestError _gthis = this;
				global::utest.Assert.raises(new global::thx.TestError_testEmptyArray_40__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyArray", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (40) )}));
				global::utest.Assert.raises(new global::thx.TestError_testEmptyArray_41__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyArray", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (41) )}));
				this.emptyArray(new global::Array<int>(new int[]{1}));
			}
		}
		
		
		public virtual void testEmptyString() {
			unchecked {
				global::thx.TestError _gthis = this;
				global::utest.Assert.raises(new global::thx.TestError_testEmptyString_46__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyString", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
				global::utest.Assert.raises(new global::thx.TestError_testEmptyString_47__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyString", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
				this.emptyString("a");
			}
		}
		
		
		public virtual void testEmptyIterator() {
			unchecked {
				global::thx.TestError _gthis = this;
				global::IntIterator it = new global::IntIterator(0, 0);
				global::utest.Assert.raises(new global::thx.TestError_testEmptyIterator_53__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyIterator", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (53) )}));
				global::utest.Assert.raises(new global::thx.TestError_testEmptyIterator_54__Fun(it, _gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyIterator", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (54) )}));
				this.emptyIterator(new global::IntIterator(0, 4));
			}
		}
		
		
		public virtual void testEmptyIterable() {
			unchecked {
				global::thx.TestError _gthis = this;
				object it = null;
				{
					global::haxe.lang.Function __temp_odecl1 = ( (( global::thx.TestError_testEmptyIterable_60__Fun.__hx_current != null )) ? (global::thx.TestError_testEmptyIterable_60__Fun.__hx_current) : (global::thx.TestError_testEmptyIterable_60__Fun.__hx_current = ((global::thx.TestError_testEmptyIterable_60__Fun) (new global::thx.TestError_testEmptyIterable_60__Fun()) )) );
					it = new global::haxe.lang.DynamicObject(new int[]{328878574}, new object[]{__temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::utest.Assert.raises(new global::thx.TestError_testEmptyIterable_61__Fun(_gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyIterable", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (61) )}));
				global::utest.Assert.raises(new global::thx.TestError_testEmptyIterable_62__Fun(it, _gthis), typeof(global::thx.error.NullArgument), null, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testEmptyIterable", "thx.TestError", "TestError.hx"}, new int[]{1981972957}, new double[]{((double) (62) )}));
				object __temp_stmt3 = null;
				{
					global::haxe.lang.Function __temp_odecl2 = ( (( global::thx.TestError_testEmptyIterable_63__Fun.__hx_current != null )) ? (global::thx.TestError_testEmptyIterable_63__Fun.__hx_current) : (global::thx.TestError_testEmptyIterable_63__Fun.__hx_current = ((global::thx.TestError_testEmptyIterable_63__Fun) (new global::thx.TestError_testEmptyIterable_63__Fun()) )) );
					__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{328878574}, new object[]{__temp_odecl2}, new int[]{}, new double[]{});
				}
				
				this.emptyIterable(__temp_stmt3);
			}
		}
		
		
		public virtual void nullInt(global::haxe.lang.Null<int> i) {
			unchecked {
				if ( ! (i.hasValue) ) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("argument \"i\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"nullInt", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (32) )})));
				}
				
			}
		}
		
		
		public virtual void nullUsingInt(global::haxe.lang.Null<int> i) {
			unchecked {
				if ( ! (i.hasValue) ) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("argument \"this\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"nullUsingInt", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (32) )})));
				}
				
			}
		}
		
		
		public virtual void emptyArray(global::Array<int> arr) {
			unchecked {
				if (( null == arr )) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Array argument \"this\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyArray", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (52) )})));
				}
				else if (( arr.length == 0 )) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Array argument \"this\" cannot be empty", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyArray", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (54) )})));
				}
				
			}
		}
		
		
		public virtual void emptyString(string s) {
			unchecked {
				if (string.Equals(null, s)) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("String argument \"this\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyString", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (58) )})));
				}
				else if (string.Equals(s, "")) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("String argument \"this\" cannot be empty", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyString", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (60) )})));
				}
				
			}
		}
		
		
		public virtual void emptyIterator(object it) {
			unchecked {
				if (( null == it )) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Iterator argument \"this\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyIterator", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (65) )})));
				}
				else if ( ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(it, "hasNext", 407283053, null))) ) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Iterator argument \"this\" cannot be empty", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyIterator", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (67) )})));
				}
				
			}
		}
		
		
		public virtual void emptyIterable(object it) {
			unchecked {
				if (( null == it )) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Iterable argument \"this\" cannot be null", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyIterable", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (73) )})));
				}
				else if ( ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(((object) (global::haxe.lang.Runtime.callField(it, "iterator", 328878574, null)) ), "hasNext", 407283053, null))) ) {
					throw global::haxe.lang.HaxeException.wrap(new global::thx.error.NullArgument("Iterable argument \"this\" cannot be empty", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"emptyIterable", "thx.TestError", "NullArgument.hx"}, new int[]{1981972957}, new double[]{((double) (75) )})));
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 668559967:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "emptyIterable", 668559967)) );
					}
					
					
					case 669455771:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "emptyIterator", 669455771)) );
					}
					
					
					case 1498988350:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "emptyString", 1498988350)) );
					}
					
					
					case 635585484:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "emptyArray", 635585484)) );
					}
					
					
					case 82357170:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "nullUsingInt", 82357170)) );
					}
					
					
					case 484160680:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "nullInt", 484160680)) );
					}
					
					
					case 2144839341:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEmptyIterable", 2144839341)) );
					}
					
					
					case 2145735145:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEmptyIterator", 2145735145)) );
					}
					
					
					case 774351884:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEmptyString", 774351884)) );
					}
					
					
					case 1171614398:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testEmptyArray", 1171614398)) );
					}
					
					
					case 57816526:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNullArgumentUsing", 57816526)) );
					}
					
					
					case 46559126:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNullArgument", 46559126)) );
					}
					
					
					case 1301332577:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testNotImplemented", 1301332577)) );
					}
					
					
					case 461760340:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAbstract", 461760340)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 668559967:
					{
						this.emptyIterable(dynargs[0]);
						break;
					}
					
					
					case 669455771:
					{
						this.emptyIterator(dynargs[0]);
						break;
					}
					
					
					case 1498988350:
					{
						this.emptyString(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 635585484:
					{
						this.emptyArray(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (dynargs[0]) ))) ));
						break;
					}
					
					
					case 82357170:
					{
						this.nullUsingInt(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]));
						break;
					}
					
					
					case 484160680:
					{
						this.nullInt(global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[0]));
						break;
					}
					
					
					case 2144839341:
					{
						this.testEmptyIterable();
						break;
					}
					
					
					case 2145735145:
					{
						this.testEmptyIterator();
						break;
					}
					
					
					case 774351884:
					{
						this.testEmptyString();
						break;
					}
					
					
					case 1171614398:
					{
						this.testEmptyArray();
						break;
					}
					
					
					case 57816526:
					{
						this.testNullArgumentUsing();
						break;
					}
					
					
					case 46559126:
					{
						this.testNullArgument();
						break;
					}
					
					
					case 1301332577:
					{
						this.testNotImplemented();
						break;
					}
					
					
					case 461760340:
					{
						this.testAbstract();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testNullArgument_30__Fun : global::haxe.lang.Function {
		
		public TestError_testNullArgument_30__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.nullInt(default(global::haxe.lang.Null<int>));
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testNullArgumentUsing_35__Fun : global::haxe.lang.Function {
		
		public TestError_testNullArgumentUsing_35__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.nullUsingInt(default(global::haxe.lang.Null<int>));
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyArray_40__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyArray_40__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyArray(null);
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyArray_41__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyArray_41__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyArray(new global::Array<int>(new int[]{}));
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyString_46__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyString_46__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyString(null);
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyString_47__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyString_47__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyString("");
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterator_53__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterator_53__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyIterator(null);
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterator_54__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterator_54__Fun(global::IntIterator it, global::thx.TestError _gthis) : base(0, 0) {
			this.it = it;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyIterator(this.it);
			return null;
		}
		
		
		public global::IntIterator it;
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterable_60__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterable_60__Fun() : base(0, 0) {
		}
		
		
		public static global::thx.TestError_testEmptyIterable_60__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			return new global::IntIterator(0, 0);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterable_61__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterable_61__Fun(global::thx.TestError _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyIterable(null);
			return null;
		}
		
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterable_62__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterable_62__Fun(object it, global::thx.TestError _gthis) : base(0, 0) {
			this.it = it;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			this._gthis.emptyIterable(this.it);
			return null;
		}
		
		
		public object it;
		
		public global::thx.TestError _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestError_testEmptyIterable_63__Fun : global::haxe.lang.Function {
		
		public TestError_testEmptyIterable_63__Fun() : base(0, 0) {
		}
		
		
		public static global::thx.TestError_testEmptyIterable_63__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			unchecked {
				return new global::IntIterator(0, 4);
			}
		}
		
		
	}
}


