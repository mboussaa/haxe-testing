// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public sealed class QueryString_Impl_ {
		
		static QueryString_Impl_() {
			global::thx._QueryString.QueryString_Impl_.separator = "&";
			global::thx._QueryString.QueryString_Impl_.assignment = "=";
			global::thx._QueryString.QueryString_Impl_.encodeURIComponent = ( (( global::thx._QueryString.QueryString_Impl__Anon_16__Fun.__hx_current != null )) ? (global::thx._QueryString.QueryString_Impl__Anon_16__Fun.__hx_current) : (global::thx._QueryString.QueryString_Impl__Anon_16__Fun.__hx_current = ((global::thx._QueryString.QueryString_Impl__Anon_16__Fun) (new global::thx._QueryString.QueryString_Impl__Anon_16__Fun()) )) );
			global::thx._QueryString.QueryString_Impl_.decodeURIComponent = ( (( global::thx._QueryString.QueryString_Impl__Anon_17__Fun.__hx_current != null )) ? (global::thx._QueryString.QueryString_Impl__Anon_17__Fun.__hx_current) : (global::thx._QueryString.QueryString_Impl__Anon_17__Fun.__hx_current = ((global::thx._QueryString.QueryString_Impl__Anon_17__Fun) (new global::thx._QueryString.QueryString_Impl__Anon_17__Fun()) )) );
		}
		
		
		public static string separator;
		
		public static string assignment;
		
		public static global::haxe.lang.Function encodeURIComponent;
		
		public static global::haxe.lang.Function decodeURIComponent;
		
		public static global::haxe.ds.StringMap<object> empty() {
			return new global::haxe.ds.StringMap<object>();
		}
		
		
		public static global::haxe.ds.StringMap<object> parseWithSymbols(string s, string separator, string assignment, global::haxe.lang.Function decodeURIComponent) {
			unchecked {
				if (string.Equals(null, s)) {
					return new global::haxe.ds.StringMap<object>();
				}
				else {
					if (( null == decodeURIComponent )) {
						decodeURIComponent = global::thx._QueryString.QueryString_Impl_.decodeURIComponent;
					}
					
					if (( s.StartsWith("?") || s.StartsWith("#") )) {
						s = global::haxe.lang.StringExt.substring(s, 1, default(global::haxe.lang.Null<int>));
					}
					
					s = s.TrimStart();
					return ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (global::thx.Arrays.reduce<object, object>(((global::Array<object>) (global::haxe.lang.StringExt.split(s, separator)) ), ((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__parseWithSymbols_32__Fun(decodeURIComponent, assignment)) ), ((object) (new global::haxe.ds.StringMap<object>()) ))) ))) );
				}
				
			}
		}
		
		
		public static global::haxe.ds.StringMap<object> parse(string s) {
			return global::thx._QueryString.QueryString_Impl_.parseWithSymbols(s, global::thx._QueryString.QueryString_Impl_.separator, global::thx._QueryString.QueryString_Impl_.assignment, global::thx._QueryString.QueryString_Impl_.decodeURIComponent);
		}
		
		
		public static global::haxe.ds.StringMap<object> fromObject(object o) {
			global::haxe.ds.StringMap<object> qs = new global::haxe.ds.StringMap<object>();
			if ( ! (global::Reflect.isObject(o)) ) {
				throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("unable to convert ", global::Std.@string(o)), " to QueryString"));
			}
			
			global::thx.Objects.tuples(o).map<object>(((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__fromObject_47__Fun(qs)) ));
			return qs;
		}
		
		
		public static object toObject(global::haxe.ds.StringMap<object> this1) {
			return global::thx.Iterators.reduce<object, object>(((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) ), ((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__toObject_58__Fun(this1)) ), ((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{})) ));
		}
		
		
		public static bool isEmpty(global::haxe.ds.StringMap<object> this1) {
			return  ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(((object) (new global::haxe.ds._StringMap.StringMapValueIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) ), "hasNext", 407283053, null))) ;
		}
		
		
		public static bool isEmptyOrMono(global::haxe.ds.StringMap<object> this1) {
			unchecked {
				global::Array<object> arr = global::thx.Iterators.toArray<object>(((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) ));
				if (( arr.length == 0 )) {
					return true;
				}
				
				if (( arr.length != 1 )) {
					return false;
				}
				
				return ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(global::haxe.lang.Runtime.toString(arr[0]))).@value) ))) ).length == 0 );
			}
		}
		
		
		public static bool exist(global::haxe.ds.StringMap<object> this1, string name) {
			return this1.exists(((string) (name) ));
		}
		
		
		public static bool @remove(global::haxe.ds.StringMap<object> this1, string name) {
			return this1.@remove(((string) (name) ));
		}
		
		
		public static bool removeValue(global::haxe.ds.StringMap<object> this1, string name, string @value) {
			if ( ! (this1.exists(((string) (name) ))) ) {
				return false;
			}
			
			return ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(((string) (name) ))).@value) ))) ).@remove(@value);
		}
		
		
		public static global::Array<object> @get(global::haxe.ds.StringMap<object> this1, string name) {
			return ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(((string) (name) ))).@value) ))) );
		}
		
		
		public static global::haxe.ds.StringMap<object> @set(global::haxe.ds.StringMap<object> this1, string name, string @value) {
			this1.@set(((string) (name) ), ((object) (new global::Array<object>(new object[]{@value})) ));
			return this1;
		}
		
		
		public static global::haxe.ds.StringMap<object> @add(global::haxe.ds.StringMap<object> this1, string name, string @value) {
			global::Array<object> arr = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(((string) (name) ))).@value) ))) );
			if (( null == arr )) {
				if (string.Equals(@value, null)) {
					arr = new global::Array<object>(new object[]{});
				}
				else {
					arr = new global::Array<object>(new object[]{@value});
				}
				
				this1.@set(((string) (name) ), ((object) (arr) ));
			}
			else if ( ! (string.Equals(null, @value)) ) {
				arr.push(@value);
			}
			
			return this1;
		}
		
		
		public static global::haxe.ds.StringMap<object> clone(global::haxe.ds.StringMap<object> this1) {
			if (( null == this1 )) {
				return null;
			}
			
			global::haxe.ds.StringMap<object> map = new global::haxe.ds.StringMap<object>();
			{
				object tmp = ((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) );
				while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
					string key = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null));
					map.@set(((string) (key) ), ((global::Array<object>) (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(((string) (key) ))).@value) ))) ).copy()) ));
				}
				
			}
			
			return map;
		}
		
		
		public static global::haxe.ds.StringMap<object> setMany(global::haxe.ds.StringMap<object> this1, string name, global::Array<object> values) {
			this1.@set(((string) (name) ), ((object) (values) ));
			return this1;
		}
		
		
		public static string toStringWithSymbols(global::haxe.ds.StringMap<object> this1, string separator, string assignment, global::haxe.lang.Function encodeURIComponent) {
			if (( null == this1 )) {
				return null;
			}
			
			if (( null == encodeURIComponent )) {
				encodeURIComponent = global::thx._QueryString.QueryString_Impl_.encodeURIComponent;
			}
			
			return global::thx.Arrays.flatten<object>(((global::Array<object>) (global::thx.Iterators.map<object, object>(((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) ), ((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__toStringWithSymbols_131__Fun(this1, encodeURIComponent, assignment)) ))) )).@join(separator);
		}
		
		
		public static bool @equals(global::haxe.ds.StringMap<object> this1, global::haxe.ds.StringMap<object> other) {
			global::Array<object> tuples = global::thx.Maps.tuples<object, object>(((global::haxe.IMap<object, object>) (global::haxe.IMap__Statics_.__hx_cast<object, object>(((global::haxe.IMap) (((global::haxe.ds.StringMap<object>) (other) )) ))) ));
			{
				object tmp = ((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (this1) ))) );
				while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
					string key = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null));
					object t = (global::thx.Arrays.find<object>(((global::Array<object>) (tuples) ), ((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__equals_145__Fun(key)) ))).@value;
					if (( null == t )) {
						return false;
					}
					
					if ( ! (global::thx.Arrays.@equals<object>(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this1.@get(((string) (key) ))).@value) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(((object) (t) ), "_1", 21234, true)) ))) ), ((global::haxe.lang.Function) (null) ))) ) {
						return false;
					}
					
					tuples.@remove(t);
				}
				
			}
			
			return ( tuples.length == 0 );
		}
		
		
		public static string toString(global::haxe.ds.StringMap<object> this1) {
			return global::thx._QueryString.QueryString_Impl_.toStringWithSymbols(this1, global::thx._QueryString.QueryString_Impl_.separator, global::thx._QueryString.QueryString_Impl_.assignment, global::thx._QueryString.QueryString_Impl_.encodeURIComponent);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__parseWithSymbols_32__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__parseWithSymbols_32__Fun(global::haxe.lang.Function decodeURIComponent, string assignment) : base(2, 0) {
			this.decodeURIComponent = decodeURIComponent;
			this.assignment = assignment;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				string v = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
				global::haxe.ds.StringMap<object> qs = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (((object) (__fn_float1) )) ))) )) : (((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (__fn_dyn1) ))) )) );
				global::Array<object> parts = global::haxe.lang.StringExt.split(v, this.assignment);
				if ( ! (string.Equals(global::haxe.lang.Runtime.toString(parts[0]), "")) ) {
					global::thx._QueryString.QueryString_Impl_.@add(qs, global::haxe.lang.Runtime.toString(this.decodeURIComponent.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.toString(parts[0]))), ( (string.Equals(null, global::haxe.lang.Runtime.toString(parts[1]))) ? (null) : (global::haxe.lang.Runtime.toString(this.decodeURIComponent.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.toString(parts[1])))) ));
				}
				
				return qs;
			}
		}
		
		
		public global::haxe.lang.Function decodeURIComponent;
		
		public string assignment;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__fromObject_49__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__fromObject_49__Fun() : base(1, 0) {
		}
		
		
		public static global::thx._QueryString.QueryString_Impl__fromObject_49__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (( (( __fn_dyn1 == null )) ? (null) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) )) );
			return global::haxe.lang.Runtime.concat("", _);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__fromObject_47__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__fromObject_47__Fun(global::haxe.ds.StringMap<object> qs) : base(1, 0) {
			this.qs = qs;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			if (( ((object) (global::haxe.lang.Runtime.getField(((object) (t) ), "_1", 21234, true)) ) is global::Array )) {
				global::thx._QueryString.QueryString_Impl_.setMany(this.qs, global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (t) ), "_0", 21233, true)), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.callField(((global::Array) (((object) (global::haxe.lang.Runtime.getField(((object) (t) ), "_1", 21234, true)) )) ), "map", 5442204, new global::Array<object>(new object[]{( (( global::thx._QueryString.QueryString_Impl__fromObject_49__Fun.__hx_current != null )) ? (global::thx._QueryString.QueryString_Impl__fromObject_49__Fun.__hx_current) : (global::thx._QueryString.QueryString_Impl__fromObject_49__Fun.__hx_current = ((global::thx._QueryString.QueryString_Impl__fromObject_49__Fun) (new global::thx._QueryString.QueryString_Impl__fromObject_49__Fun()) )) )}))) ))) ));
			}
			else {
				global::thx._QueryString.QueryString_Impl_.@set(this.qs, global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (t) ), "_0", 21233, true)), global::haxe.lang.Runtime.concat("", global::Std.@string(((object) (global::haxe.lang.Runtime.getField(((object) (t) ), "_1", 21234, true)) ))));
			}
			
			return null;
		}
		
		
		public global::haxe.ds.StringMap<object> qs;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__toObject_58__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__toObject_58__Fun(global::haxe.ds.StringMap<object> this1) : base(2, 0) {
			this.this1 = this1;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				string key = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
				object o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::Array<object> v = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this.this1.@get(((string) (key) ))).@value) ))) );
				if (( v.length == 0 )) {
					global::Reflect.setField(o, key, null);
				}
				else if (( v.length == 1 )) {
					global::Reflect.setField(o, key, global::haxe.lang.Runtime.toString(v[0]));
				}
				else {
					global::Reflect.setField(o, key, v);
				}
				
				return o;
			}
		}
		
		
		public global::haxe.ds.StringMap<object> this1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__toStringWithSymbols_137__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__toStringWithSymbols_137__Fun(global::haxe.lang.Function encodeURIComponent, string ek, string assignment) : base(1, 0) {
			this.encodeURIComponent = encodeURIComponent;
			this.ek = ek;
			this.assignment = assignment;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (( (( __fn_dyn1 == null )) ? (null) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) )) );
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.ek), this.assignment), global::haxe.lang.Runtime.toString(this.encodeURIComponent.__hx_invoke1_o(default(double), _)));
		}
		
		
		public global::haxe.lang.Function encodeURIComponent;
		
		public string ek;
		
		public string assignment;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__toStringWithSymbols_131__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__toStringWithSymbols_131__Fun(global::haxe.ds.StringMap<object> this1, global::haxe.lang.Function encodeURIComponent, string assignment) : base(1, 0) {
			this.this1 = this1;
			this.encodeURIComponent = encodeURIComponent;
			this.assignment = assignment;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string k = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			global::Array<object> vs = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) ((this.this1.@get(((string) (k) ))).@value) ))) );
			string ek = global::haxe.lang.Runtime.toString(this.encodeURIComponent.__hx_invoke1_o(default(double), k));
			if (( vs.length == 0 )) {
				return new global::Array<object>(new object[]{ek});
			}
			else {
				return vs.map<object>(((global::haxe.lang.Function) (new global::thx._QueryString.QueryString_Impl__toStringWithSymbols_137__Fun(this.encodeURIComponent, ek, this.assignment)) ));
			}
			
		}
		
		
		public global::haxe.ds.StringMap<object> this1;
		
		public global::haxe.lang.Function encodeURIComponent;
		
		public string assignment;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__equals_145__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__equals_145__Fun(string key) : base(1, 0) {
			this.key = key;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object item = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(((object) (item) ), "_0", 21233, true)), this.key);
		}
		
		
		public string key;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__Anon_16__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__Anon_16__Fun() : base(1, 0) {
		}
		
		
		public static global::thx._QueryString.QueryString_Impl__Anon_16__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string s = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::StringTools.replace(global::System.Uri.EscapeDataString(((string) (s) )), "%20", "+");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public class QueryString_Impl__Anon_17__Fun : global::haxe.lang.Function {
		
		public QueryString_Impl__Anon_17__Fun() : base(1, 0) {
		}
		
		
		public static global::thx._QueryString.QueryString_Impl__Anon_17__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string s = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return global::StringTools.replace(global::System.Uri.UnescapeDataString(((string) (s) )), "+", " ");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._QueryString {
	public sealed class QueryStringValue_Impl_ {
		
		public static string toString(global::Array<object> this1) {
			if (( ( this1 == null ) || ( this1.length == 0 ) )) {
				return null;
			}
			else {
				return this1.@join(",");
			}
			
		}
		
		
	}
}


