// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
public class TS19 : global::haxe.lang.HxObject {
	
	public static void Main(){
		global::cs.Boot.init();
		main();
	}
	public TS19(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public TS19() {
		global::TS19.__hx_ctor__TS19(this);
	}
	
	
	public static void __hx_ctor__TS19(global::TS19 __temp_me19) {
	}
	
	
	public static void addTests(global::utest.Runner runner) {
		unchecked {
			string w = "";
			{
				int _g = 0;
				global::Array<object> _g1 = global::Sys.args();
				while (( _g < _g1.length )) {
					string arg = global::haxe.lang.Runtime.toString(_g1[_g]);
					 ++ _g;
					w = arg;
				}
				
			}
			
			global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat("The value of loop_wrapper is ", w), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"addTests", "TS19", "TS19.hx"}, new int[]{1981972957}, new double[]{((double) (10) )}));
			int x = (global::Std.parseInt(w)).@value;
			runner.addCase(new global::thx.TestError(((int) (x) )), null, null, null, null);
		}
	}
	
	
	public static void main() {
		global::utest.Runner runner = new global::utest.Runner();
		global::TS19.addTests(runner);
		global::utest.ui.Report.create(runner, null, null);
		runner.run();
	}
	
	
	public static new object __hx_createEmpty() {
		return new global::TS19(global::haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static new object __hx_create(global::Array arr) {
		return new global::TS19();
	}
	
	
}


