// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.bigint {
	public interface BigIntImpl : global::haxe.lang.IHxObject {
		
		global::thx.bigint.BigIntImpl abs();
		
		global::thx.bigint.BigIntImpl @add(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl subtract(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl divide(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl multiply(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl modulo(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl random();
		
		global::thx.bigint.BigIntImpl negate();
		
		global::thx.bigint.BigIntImpl next();
		
		global::thx.bigint.BigIntImpl prev();
		
		global::thx.bigint.BigIntImpl pow(global::thx.bigint.BigIntImpl exp);
		
		global::thx.bigint.BigIntImpl shiftLeft(int @value);
		
		global::thx.bigint.BigIntImpl shiftRight(int @value);
		
		global::thx.bigint.BigIntImpl square();
		
		bool isEven();
		
		bool isOdd();
		
		bool isUnit();
		
		bool isZero();
		
		int compareTo(global::thx.bigint.BigIntImpl that);
		
		int compareToAbs(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl not();
		
		global::thx.bigint.BigIntImpl and(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl or(global::thx.bigint.BigIntImpl that);
		
		global::thx.bigint.BigIntImpl xor(global::thx.bigint.BigIntImpl that);
		
		double toFloat();
		
		int toInt();
		
		string toString();
		
		string toStringWithBase(int @base);
		
		object divMod(global::thx.bigint.BigIntImpl that);
		
	}
}


