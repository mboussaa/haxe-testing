// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public sealed class Ord_Impl_ {
		
		public static global::thx.OrderingImpl order<A>(global::haxe.lang.Function this1, A a0, A a1) {
			return ((global::thx.OrderingImpl) (this1.__hx_invoke2_o(default(double), a0, default(double), a1)) );
		}
		
		
		public static A max<A>(global::haxe.lang.Function this1, A a0, A a1) {
			unchecked {
				switch (((global::thx.OrderingImpl) (this1.__hx_invoke2_o(default(double), a0, default(double), a1)) ).index) {
					case 1:
					{
						return a0;
					}
					
					
					case 0:
					case 2:
					{
						return a1;
					}
					
					
				}
				
				return default(A);
			}
		}
		
		
		public static A min<A>(global::haxe.lang.Function this1, A a0, A a1) {
			unchecked {
				switch (((global::thx.OrderingImpl) (this1.__hx_invoke2_o(default(double), a0, default(double), a1)) ).index) {
					case 1:
					{
						return a1;
					}
					
					
					case 0:
					case 2:
					{
						return a0;
					}
					
					
				}
				
				return default(A);
			}
		}
		
		
		public static bool equal<A>(global::haxe.lang.Function this1, A a0, A a1) {
			return ( ((global::thx.OrderingImpl) (this1.__hx_invoke2_o(default(double), a0, default(double), a1)) ) == global::thx.OrderingImpl.EQ );
		}
		
		
		public static global::haxe.lang.Function contramap<B, A>(global::haxe.lang.Function this1, global::haxe.lang.Function f) {
			return new global::thx._Ord.Ord_Impl__contramap_64__Fun<A, B>(this1, f);
		}
		
		
		public static global::haxe.lang.Function inverse<A>(global::haxe.lang.Function this1) {
			return new global::thx._Ord.Ord_Impl__inverse_67__Fun<A>(this1);
		}
		
		
		public static int intComparison<A>(global::haxe.lang.Function this1, A a0, A a1) {
			unchecked {
				switch (((global::thx.OrderingImpl) (this1.__hx_invoke2_o(default(double), a0, default(double), a1)) ).index) {
					case 0:
					{
						return -1;
					}
					
					
					case 1:
					{
						return 1;
					}
					
					
					case 2:
					{
						return 0;
					}
					
					
				}
				
				return default(int);
			}
		}
		
		
		public static global::haxe.lang.Function fromIntComparison<A>(global::haxe.lang.Function f) {
			return new global::thx._Ord.Ord_Impl__fromIntComparison_77__Fun<A>(f);
		}
		
		
		public static global::haxe.lang.Function forComparable<T>() {
			return new global::thx._Ord.Ord_Impl__forComparable_80__Fun<T>();
		}
		
		
		public static global::haxe.lang.Function forComparableOrd<T>() {
			return new global::thx._Ord.Ord_Impl__forComparableOrd_83__Fun<T>();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public class Ord_Impl__contramap_64__Fun<A, B> : global::haxe.lang.Function {
		
		public Ord_Impl__contramap_64__Fun(global::haxe.lang.Function this1, global::haxe.lang.Function f) : base(2, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			B b1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			B b0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn1)) );
			return ((global::thx.OrderingImpl) (this.this1.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<A>(this.f.__hx_invoke1_o(default(double), b0)), default(double), global::haxe.lang.Runtime.genericCast<A>(this.f.__hx_invoke1_o(default(double), b1)))) );
		}
		
		
		public global::haxe.lang.Function this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public class Ord_Impl__inverse_67__Fun<A> : global::haxe.lang.Function {
		
		public Ord_Impl__inverse_67__Fun(global::haxe.lang.Function this1) : base(2, 0) {
			this.this1 = this1;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A a1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn2)) );
			A a0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return ((global::thx.OrderingImpl) (this.this1.__hx_invoke2_o(default(double), a1, default(double), a0)) );
		}
		
		
		public global::haxe.lang.Function this1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public class Ord_Impl__fromIntComparison_77__Fun<A> : global::haxe.lang.Function {
		
		public Ord_Impl__fromIntComparison_77__Fun(global::haxe.lang.Function f) : base(2, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			A b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn2)) );
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return global::thx._Ord.Ordering_Impl_.fromInt(((int) (this.f.__hx_invoke2_f(default(double), a, default(double), b)) ));
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public class Ord_Impl__forComparable_80__Fun<T> : global::haxe.lang.Function {
		
		public Ord_Impl__forComparable_80__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn2)) );
			T a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx._Ord.Ordering_Impl_.fromInt(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(a, "compareTo", 39622016, new global::Array<object>(new object[]{b})))) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public class Ord_Impl__forComparableOrd_83__Fun<T> : global::haxe.lang.Function {
		
		public Ord_Impl__forComparableOrd_83__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn2)) );
			T a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return ((global::thx.OrderingImpl) (global::haxe.lang.Runtime.callField(a, "compareTo", 39622016, new global::Array<object>(new object[]{b}))) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Ord {
	public sealed class Ordering_Impl_ {
		
		public static global::thx.OrderingImpl fromInt(int @value) {
			if (( @value < 0 )) {
				return global::thx.OrderingImpl.LT;
			}
			else if (( @value > 0 )) {
				return global::thx.OrderingImpl.GT;
			}
			else {
				return global::thx.OrderingImpl.EQ;
			}
			
		}
		
		
		public static global::thx.OrderingImpl fromFloat(double @value) {
			if (( @value < 0 )) {
				return global::thx.OrderingImpl.LT;
			}
			else if (( @value > 0 )) {
				return global::thx.OrderingImpl.GT;
			}
			else {
				return global::thx.OrderingImpl.EQ;
			}
			
		}
		
		
		public static int toInt(global::thx.OrderingImpl this1) {
			unchecked {
				switch (this1.index) {
					case 0:
					{
						return -1;
					}
					
					
					case 1:
					{
						return 1;
					}
					
					
					case 2:
					{
						return 0;
					}
					
					
				}
				
				return default(int);
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class OrderingImpl : global::haxe.lang.Enum {
		
		public OrderingImpl(int index) : base(index) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"LT", "GT", "EQ"};
		
		public static readonly global::thx.OrderingImpl LT = new global::thx.OrderingImpl(0);
		
		public static readonly global::thx.OrderingImpl GT = new global::thx.OrderingImpl(1);
		
		public static readonly global::thx.OrderingImpl EQ = new global::thx.OrderingImpl(2);
		
		public override string getTag() {
			return global::thx.OrderingImpl.__hx_constructs[this.index];
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class Orderings : global::haxe.lang.HxObject {
		
		static Orderings() {
			object __temp_stmt2 = null;
			{
				global::haxe.lang.Function __temp_odecl1 = ( (( global::thx.Orderings_Anon_29__Fun.__hx_current != null )) ? (global::thx.Orderings_Anon_29__Fun.__hx_current) : (global::thx.Orderings_Anon_29__Fun.__hx_current = ((global::thx.Orderings_Anon_29__Fun) (new global::thx.Orderings_Anon_29__Fun()) )) );
				__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{265544154, 1357975336}, new object[]{__temp_odecl1, global::thx.OrderingImpl.EQ}, new int[]{}, new double[]{});
			}
			
			global::thx.Orderings.monoid = ((object) (__temp_stmt2) );
		}
		
		
		public Orderings(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Orderings() {
			global::thx.Orderings.__hx_ctor_thx_Orderings(this);
		}
		
		
		public static void __hx_ctor_thx_Orderings(global::thx.Orderings __temp_me135) {
		}
		
		
		public static object monoid;
		
		public static global::thx.OrderingImpl negate(global::thx.OrderingImpl o) {
			unchecked {
				switch (o.index) {
					case 0:
					{
						return global::thx.OrderingImpl.GT;
					}
					
					
					case 1:
					{
						return global::thx.OrderingImpl.LT;
					}
					
					
					case 2:
					{
						return global::thx.OrderingImpl.EQ;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.Orderings(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.Orderings();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class Orderings_Anon_29__Fun : global::haxe.lang.Function {
		
		public Orderings_Anon_29__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.Orderings_Anon_29__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::thx.OrderingImpl o1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.OrderingImpl) (((object) (__fn_float2) )) )) : (((global::thx.OrderingImpl) (__fn_dyn2) )) );
				global::thx.OrderingImpl o0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.OrderingImpl) (((object) (__fn_float1) )) )) : (((global::thx.OrderingImpl) (__fn_dyn1) )) );
				switch (o0.index) {
					case 0:
					{
						return global::thx.OrderingImpl.LT;
					}
					
					
					case 1:
					{
						return global::thx.OrderingImpl.GT;
					}
					
					
					case 2:
					{
						return o1;
					}
					
					
				}
				
				return null;
			}
		}
		
		
	}
}


