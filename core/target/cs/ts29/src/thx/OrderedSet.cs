// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._OrderedSet {
	public sealed class OrderedSet_Impl_ {
		
		public static global::Array<T> toOrderedSet<T>(global::Array<T> arr) {
			global::Array<T> @set = ((global::Array<T>) (new global::Array<T>(new T[]{})) );
			{
				int _g = 0;
				while (( _g < arr.length )) {
					T v = arr[_g];
					 ++ _g;
					global::thx._OrderedSet.OrderedSet_Impl_.push<T>(((global::Array<T>) (@set) ), global::haxe.lang.Runtime.genericCast<T>(v));
				}
				
			}
			
			return @set;
		}
		
		
		public static global::Array<T> arrayToOrderedSet<T>(global::Array<T> arr) {
			return global::thx._OrderedSet.OrderedSet_Impl_.toOrderedSet<T>(((global::Array<T>) (arr) ));
		}
		
		
		public static global::Array<T> create<T>(global::Array<T> arr) {
			if (( null == arr )) {
				return ((global::Array<T>) (new global::Array<T>(new T[]{})) );
			}
			else {
				return global::thx._OrderedSet.OrderedSet_Impl_.toOrderedSet<T>(((global::Array<T>) (arr) ));
			}
			
		}
		
		
		public static global::Array<T> _new<T>(global::Array<T> arr) {
			return ((global::Array<T>) (arr) );
		}
		
		
		public static bool @add<T>(global::Array<T> this1, T v) {
			if (global::thx._OrderedSet.OrderedSet_Impl_.exists<T>(((global::Array<T>) (this1) ), global::haxe.lang.Runtime.genericCast<T>(v))) {
				return false;
			}
			else {
				this1.push(v);
				return true;
			}
			
		}
		
		
		public static global::Array<T> copy<T>(global::Array<T> this1) {
			return ((global::Array<T>) (this1.copy()) );
		}
		
		
		public static global::Array<T> difference<T>(global::Array<T> this1, global::Array<T> @set) {
			global::Array<T> result = this1.copy();
			{
				object tmp = ((object) (new global::_Array.ArrayIterator<T>(((global::Array<T>) (@set) ))) );
				while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
					result.@remove(global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null)));
				}
				
			}
			
			return ((global::Array<T>) (result) );
		}
		
		
		public static bool exists<T>(global::Array<T> this1, T v) {
			{
				int _g = 0;
				while (( _g < this1.length )) {
					T t = this1[_g];
					 ++ _g;
					if (global::haxe.lang.Runtime.eq(t, v)) {
						return true;
					}
					
				}
				
			}
			
			return false;
		}
		
		
		public static global::haxe.lang.Null<T> @get<T>(global::Array<T> this1, int index) {
			return new global::haxe.lang.Null<T>(this1[index], true);
		}
		
		
		public static global::Array<T> intersection<T>(global::Array<T> this1, global::Array<T> @set) {
			global::Array<T> result = new global::Array<T>(new T[]{});
			{
				int _g = 0;
				while (( _g < this1.length )) {
					T item = this1[_g];
					 ++ _g;
					if (global::thx._OrderedSet.OrderedSet_Impl_.exists<T>(((global::Array<T>) (@set) ), global::haxe.lang.Runtime.genericCast<T>(item))) {
						result.push(item);
					}
					
				}
				
			}
			
			return ((global::Array<T>) (result) );
		}
		
		
		public static void push<T>(global::Array<T> this1, T v) {
			global::thx._OrderedSet.OrderedSet_Impl_.@add<T>(((global::Array<T>) (this1) ), global::haxe.lang.Runtime.genericCast<T>(v));
		}
		
		
		public static void pushMany<T>(global::Array<T> this1, object values) {
			object tmp = ((object) (global::haxe.lang.Runtime.callField(values, "iterator", 328878574, null)) );
			while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(tmp, "hasNext", 407283053, null))) {
				global::thx._OrderedSet.OrderedSet_Impl_.push<T>(((global::Array<T>) (this1) ), global::haxe.lang.Runtime.genericCast<T>(global::haxe.lang.Runtime.callField(tmp, "next", 1224901875, null)));
			}
			
		}
		
		
		public static global::Array<T> slice<T>(global::Array<T> this1, int pos, global::haxe.lang.Null<int> end) {
			return ((global::Array<T>) (this1.slice(pos, end)) );
		}
		
		
		public static global::Array<T> splice<T>(global::Array<T> this1, int pos, int len) {
			return ((global::Array<T>) (this1.splice(pos, len)) );
		}
		
		
		public static global::Array<T> union<T>(global::Array<T> this1, global::Array<T> @set) {
			return global::thx._OrderedSet.OrderedSet_Impl_.toOrderedSet<T>(((global::Array<T>) (this1.concat(global::thx._OrderedSet.OrderedSet_Impl_.toArray<T>(((global::Array<T>) (@set) )))) ));
		}
		
		
		public static global::Array<T> unionArray<T>(global::Array<T> this1, global::Array<T> @set) {
			return global::thx._OrderedSet.OrderedSet_Impl_.toOrderedSet<T>(((global::Array<T>) (this1.concat(@set)) ));
		}
		
		
		public static global::Array<T> toArray<T>(global::Array<T> this1) {
			return this1.copy();
		}
		
		
		public static global::Array<T> setToArray<T>(global::Array<T> this1) {
			return global::thx._OrderedSet.OrderedSet_Impl_.toArray<T>(((global::Array<T>) (this1) ));
		}
		
		
		public static string toString<T>(global::Array<T> this1) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{", this1.@join(", ")), "}");
		}
		
		
	}
}


