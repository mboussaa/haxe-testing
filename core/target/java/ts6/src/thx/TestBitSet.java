// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestBitSet extends haxe.lang.HxObject
{
	public TestBitSet(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestBitSet(int i)
	{
		//line 8 "/shared/core/test/thx/TestBitSet.hx"
		thx.TestBitSet.__hx_ctor_thx_TestBitSet(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestBitSet(thx.TestBitSet __temp_me113, int i)
	{
		//line 9 "/shared/core/test/thx/TestBitSet.hx"
		__temp_me113.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		return new thx.TestBitSet(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		return new thx.TestBitSet(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testBitSet()
	{
		//line 13 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 13 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 13 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 13 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 14 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 14 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 14 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 14 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (this1) );
			//line 15 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(0, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
			//line 16 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
			//line 18 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testBitSet_18__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
			//line 19 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testBitSet_19__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
			//line 20 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testBitSet_20__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 21 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testBitSet_21__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 23 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(bits, 0, true);
			//line 24 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(1, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("1", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
			//line 27 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(bits, 1, true);
			//line 28 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(2, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
			//line 29 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("11", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
			//line 31 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(bits, 2, true);
			//line 32 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
			//line 33 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("111", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
			//line 35 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(bits, 1, false);
			//line 36 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
			//line 37 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("101", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
			//line 40 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(bits, 32, true);
			//line 41 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
			//line 42 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("101000000000000000000000000000001", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
			//line 44 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 44 "/shared/core/test/thx/TestBitSet.hx"
				int _g3 = 0;
				//line 44 "/shared/core/test/thx/TestBitSet.hx"
				int _g2 = ((int) (thx._BitSet.BitSet_Impl_.get_length(bits)) );
				//line 44 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g3 < _g2 ))
				{
					//line 44 "/shared/core/test/thx/TestBitSet.hx"
					int i = _g3++;
					//line 45 "/shared/core/test/thx/TestBitSet.hx"
					if (((boolean) (thx.Arrays.contains(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 2, 32})) )) ), ((java.lang.Object) (i) ), ((haxe.lang.Function) (null) ))) )) 
					{
						//line 46 "/shared/core/test/thx/TestBitSet.hx"
						utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.at(bits, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
					}
					else
					{
						//line 48 "/shared/core/test/thx/TestBitSet.hx"
						utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.at(bits, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
					}
					
				}
				
			}
			
			//line 52 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testBitSet_52__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
			//line 54 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 54 "/shared/core/test/thx/TestBitSet.hx"
				int _g11 = 0;
				//line 54 "/shared/core/test/thx/TestBitSet.hx"
				int _g4 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (bits) ));
				//line 54 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g11 < _g4 ))
				{
					//line 54 "/shared/core/test/thx/TestBitSet.hx"
					int i1 = _g11++;
					//line 54 "/shared/core/test/thx/TestBitSet.hx"
					thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (bits) ), i1, true);
				}
				
			}
			
			//line 55 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
			//line 56 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("111111111111111111111111111111111", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (56) )) )}));
			//line 58 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 58 "/shared/core/test/thx/TestBitSet.hx"
				int _g12 = 0;
				//line 58 "/shared/core/test/thx/TestBitSet.hx"
				int _g5 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (bits) ));
				//line 58 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g12 < _g5 ))
				{
					//line 58 "/shared/core/test/thx/TestBitSet.hx"
					int i2 = _g12++;
					//line 58 "/shared/core/test/thx/TestBitSet.hx"
					thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (bits) ), i2, false);
				}
				
			}
			
			//line 59 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
			//line 60 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("000000000000000000000000000000000", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (60) )) )}));
		}
		
	}
	
	
	public void testFromBools()
	{
		//line 64 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 64 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 64 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 64 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 65 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 65 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 65 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 65 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{true, false, true, true})) )) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testFromBools_65__Fun.__hx_current != null )) ? (thx.TestBitSet_testFromBools_65__Fun.__hx_current) : (thx.TestBitSet_testFromBools_65__Fun.__hx_current = ((thx.TestBitSet_testFromBools_65__Fun) (new thx.TestBitSet_testFromBools_65__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 66 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(4, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (66) )) )}));
			//line 67 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 0), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
			//line 68 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(false, thx._BitSet.BitSet_Impl_.at(bits, 1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (68) )) )}));
			//line 69 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (69) )) )}));
			//line 70 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (70) )) )}));
		}
		
	}
	
	
	public void testToBools()
	{
		//line 74 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 74 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 74 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 74 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 75 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
			//line 75 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 75 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 75 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 75 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testToBools_75__Fun.__hx_current != null )) ? (thx.TestBitSet_testToBools_75__Fun.__hx_current) : (thx.TestBitSet_testToBools_75__Fun.__hx_current = ((thx.TestBitSet_testToBools_75__Fun) (new thx.TestBitSet_testToBools_75__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 76 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = bits;
			//line 76 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{true, false, true, false, true}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Ints.range(thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) )), null, null).map(((haxe.lang.Function) (new thx.TestBitSet_testToBools_76__Fun(this2)) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testToBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
		}
		
	}
	
	
	public void testToInt32s()
	{
		//line 80 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 80 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 80 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 80 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 81 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
			//line 81 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 81 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 81 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 81 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testToInt32s_81__Fun.__hx_current != null )) ? (thx.TestBitSet_testToInt32s_81__Fun.__hx_current) : (thx.TestBitSet_testToInt32s_81__Fun.__hx_current = ((thx.TestBitSet_testToInt32s_81__Fun) (new thx.TestBitSet_testToInt32s_81__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 82 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> parts = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (bits) ).slice(1, null)) )) );
			//line 83 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{21}), parts, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testToInt32s"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
		}
		
	}
	
	
	public void testFromString()
	{
		//line 87 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 87 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 87 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 87 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 88 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("1011", "");
			//line 88 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 88 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 88 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 88 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testFromString_88__Fun.__hx_current != null )) ? (thx.TestBitSet_testFromString_88__Fun.__hx_current) : (thx.TestBitSet_testFromString_88__Fun.__hx_current = ((thx.TestBitSet_testFromString_88__Fun) (new thx.TestBitSet_testFromString_88__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 89 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(4, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
			//line 90 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 0), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (90) )) )}));
			//line 91 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(false, thx._BitSet.BitSet_Impl_.at(bits, 1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (91) )) )}));
			//line 92 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (92) )) )}));
			//line 93 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (93) )) )}));
		}
		
	}
	
	
	public void testPresetLength()
	{
		//line 97 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 97 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 97 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 97 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 98 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{35});
			//line 98 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (1.09375) ) + 1 );
			//line 98 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 98 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits1 = ((haxe.root.Array<java.lang.Object>) (this1) );
			//line 99 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(35, thx._BitSet.BitSet_Impl_.get_length(bits1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (99) )) )}));
			//line 100 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 100 "/shared/core/test/thx/TestBitSet.hx"
				int _g2 = 0;
				//line 100 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g2 < 35 ))
				{
					//line 100 "/shared/core/test/thx/TestBitSet.hx"
					int i = _g2++;
					//line 101 "/shared/core/test/thx/TestBitSet.hx"
					utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.at(bits1, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (101) )) )}));
				}
				
			}
			
			//line 103 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testPresetLength_103__Fun(bits1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (103) )) )}));
			//line 105 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{35});
			//line 105 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (1.09375) ) + 1 );
			//line 105 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 105 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 105 "/shared/core/test/thx/TestBitSet.hx"
				int _g11 = 0;
				//line 105 "/shared/core/test/thx/TestBitSet.hx"
				int _g3 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) ));
				//line 105 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g11 < _g3 ))
				{
					//line 105 "/shared/core/test/thx/TestBitSet.hx"
					int i1 = _g11++;
					//line 105 "/shared/core/test/thx/TestBitSet.hx"
					thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (this2) ), i1, true);
				}
				
			}
			
			//line 105 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> bits2 = ((haxe.root.Array<java.lang.Object>) (this2) );
			//line 106 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(35, thx._BitSet.BitSet_Impl_.get_length(bits2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (106) )) )}));
			//line 107 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 107 "/shared/core/test/thx/TestBitSet.hx"
				int _g21 = 0;
				//line 107 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g21 < 35 ))
				{
					//line 107 "/shared/core/test/thx/TestBitSet.hx"
					int i2 = _g21++;
					//line 108 "/shared/core/test/thx/TestBitSet.hx"
					utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.at(bits2, i2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (108) )) )}));
				}
				
			}
			
			//line 110 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testPresetLength_110__Fun(bits2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (110) )) )}));
		}
		
	}
	
	
	public void testConcat()
	{
		//line 114 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 114 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 114 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 114 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 115 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
			//line 115 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 115 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 115 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 115 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testConcat_115__Fun.__hx_current != null )) ? (thx.TestBitSet_testConcat_115__Fun.__hx_current) : (thx.TestBitSet_testConcat_115__Fun.__hx_current = ((thx.TestBitSet_testConcat_115__Fun) (new thx.TestBitSet_testConcat_115__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 116 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("111", "");
			//line 116 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 116 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 116 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 116 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testConcat_116__Fun.__hx_current != null )) ? (thx.TestBitSet_testConcat_116__Fun.__hx_current) : (thx.TestBitSet_testConcat_116__Fun.__hx_current = ((thx.TestBitSet_testConcat_116__Fun) (new thx.TestBitSet_testConcat_116__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			int length = ( ((int) (thx._BitSet.BitSet_Impl_.get_length(b1)) ) + ((int) (thx._BitSet.BitSet_Impl_.get_length(b2)) ) );
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{length});
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (( length / 32 )) ) + 1 );
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> result = ((haxe.root.Array<java.lang.Object>) (this3) );
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			int index = 0;
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				int _g11 = 0;
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				int _g2 = ((int) (thx._BitSet.BitSet_Impl_.get_length(b1)) );
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g11 < _g2 ))
				{
					//line 117 "/shared/core/test/thx/TestBitSet.hx"
					int leftIndex = _g11++;
					//line 117 "/shared/core/test/thx/TestBitSet.hx"
					thx._BitSet.BitSet_Impl_.setAt(result, index++, thx._BitSet.BitSet_Impl_.at(b1, leftIndex));
				}
				
			}
			
			//line 117 "/shared/core/test/thx/TestBitSet.hx"
			{
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				int _g12 = 0;
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				int _g3 = ((int) (thx._BitSet.BitSet_Impl_.get_length(b2)) );
				//line 117 "/shared/core/test/thx/TestBitSet.hx"
				while (( _g12 < _g3 ))
				{
					//line 117 "/shared/core/test/thx/TestBitSet.hx"
					int rightIndex = _g12++;
					//line 117 "/shared/core/test/thx/TestBitSet.hx"
					thx._BitSet.BitSet_Impl_.setAt(result, index++, thx._BitSet.BitSet_Impl_.at(b2, rightIndex));
				}
				
			}
			
			//line 118 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("10101", thx._BitSet.BitSet_Impl_.toString(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (118) )) )}));
			//line 119 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("111", thx._BitSet.BitSet_Impl_.toString(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (119) )) )}));
			//line 120 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("10101111", thx._BitSet.BitSet_Impl_.toString(result), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (120) )) )}));
			//line 121 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(5, thx._BitSet.BitSet_Impl_.get_length(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (121) )) )}));
			//line 122 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (122) )) )}));
			//line 123 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same(8, thx._BitSet.BitSet_Impl_.get_length(result), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (123) )) )}));
		}
		
	}
	
	
	public void testExpand()
	{
		//line 127 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 127 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 127 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 127 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 128 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("1011", "");
			//line 128 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 128 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 128 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 128 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testExpand_128__Fun.__hx_current != null )) ? (thx.TestBitSet_testExpand_128__Fun.__hx_current) : (thx.TestBitSet_testExpand_128__Fun.__hx_current = ((thx.TestBitSet_testExpand_128__Fun) (new thx.TestBitSet_testExpand_128__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 129 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = thx._BitSet.BitSet_Impl_.expand(b1, 1);
			//line 130 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = thx._BitSet.BitSet_Impl_.expand(b1, 3);
			//line 131 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("1011", thx._BitSet.BitSet_Impl_.toString(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (131) )) )}));
			//line 132 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("11001111", thx._BitSet.BitSet_Impl_.toString(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (132) )) )}));
			//line 133 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("1111000011111111", thx._BitSet.BitSet_Impl_.toString(b3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (133) )) )}));
		}
		
	}
	
	
	public void testEquals()
	{
		//line 137 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 137 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 137 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 137 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 138 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
			//line 138 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 138 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 138 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 138 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_138__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_138__Fun.__hx_current) : (thx.TestBitSet_testEquals_138__Fun.__hx_current = ((thx.TestBitSet_testEquals_138__Fun) (new thx.TestBitSet_testEquals_138__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 139 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("10101100", "");
			//line 139 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 139 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 139 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 139 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_139__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_139__Fun.__hx_current) : (thx.TestBitSet_testEquals_139__Fun.__hx_current = ((thx.TestBitSet_testEquals_139__Fun) (new thx.TestBitSet_testEquals_139__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 140 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("101011001", "");
			//line 140 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 140 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 140 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 140 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_140__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_140__Fun.__hx_current) : (thx.TestBitSet_testEquals_140__Fun.__hx_current = ((thx.TestBitSet_testEquals_140__Fun) (new thx.TestBitSet_testEquals_140__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 141 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("10101101", "");
			//line 141 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 141 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 141 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 141 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_141__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_141__Fun.__hx_current) : (thx.TestBitSet_testEquals_141__Fun.__hx_current = ((thx.TestBitSet_testEquals_141__Fun) (new thx.TestBitSet_testEquals_141__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
			//line 142 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("1010110", "");
			//line 142 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 142 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 142 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 142 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_142__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_142__Fun.__hx_current) : (thx.TestBitSet_testEquals_142__Fun.__hx_current = ((thx.TestBitSet_testEquals_142__Fun) (new thx.TestBitSet_testEquals_142__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 143 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (143) )) )}));
			//line 144 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (144) )) )}));
			//line 145 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (145) )) )}));
			//line 146 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (146) )) )}));
			//line 147 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (147) )) )}));
			//line 148 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (148) )) )}));
			//line 149 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (149) )) )}));
			//line 150 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (150) )) )}));
		}
		
	}
	
	
	public void testNotEquals()
	{
		//line 154 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 154 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 154 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 154 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 155 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
			//line 155 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 155 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 155 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 155 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_155__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_155__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_155__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_155__Fun) (new thx.TestBitSet_testNotEquals_155__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 156 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("10101100", "");
			//line 156 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 156 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 156 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 156 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_156__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_156__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_156__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_156__Fun) (new thx.TestBitSet_testNotEquals_156__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 157 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("101011001", "");
			//line 157 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 157 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 157 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 157 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_157__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_157__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_157__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_157__Fun) (new thx.TestBitSet_testNotEquals_157__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 158 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("10101101", "");
			//line 158 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 158 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 158 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 158 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_158__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_158__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_158__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_158__Fun) (new thx.TestBitSet_testNotEquals_158__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
			//line 159 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("1010110", "");
			//line 159 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 159 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 159 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 159 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_159__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_159__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_159__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_159__Fun) (new thx.TestBitSet_testNotEquals_159__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 160 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (160) )) )}));
			//line 161 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (161) )) )}));
			//line 162 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (162) )) )}));
			//line 163 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (163) )) )}));
			//line 164 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (164) )) )}));
			//line 165 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (165) )) )}));
			//line 166 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (166) )) )}));
			//line 167 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (167) )) )}));
		}
		
	}
	
	
	public void testAnd()
	{
		//line 171 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 171 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 171 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 171 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 172 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
			//line 172 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 172 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 172 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 172 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_172__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_172__Fun.__hx_current) : (thx.TestBitSet_testAnd_172__Fun.__hx_current = ((thx.TestBitSet_testAnd_172__Fun) (new thx.TestBitSet_testAnd_172__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 173 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
			//line 173 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 173 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 173 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 173 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_173__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_173__Fun.__hx_current) : (thx.TestBitSet_testAnd_173__Fun.__hx_current = ((thx.TestBitSet_testAnd_173__Fun) (new thx.TestBitSet_testAnd_173__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 174 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
			//line 174 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 174 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 174 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 174 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_174__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_174__Fun.__hx_current) : (thx.TestBitSet_testAnd_174__Fun.__hx_current = ((thx.TestBitSet_testAnd_174__Fun) (new thx.TestBitSet_testAnd_174__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 175 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
			//line 175 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 175 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 175 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 175 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_175__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_175__Fun.__hx_current) : (thx.TestBitSet_testAnd_175__Fun.__hx_current = ((thx.TestBitSet_testAnd_175__Fun) (new thx.TestBitSet_testAnd_175__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
			//line 176 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
			//line 176 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 176 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 176 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 176 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_176__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_176__Fun.__hx_current) : (thx.TestBitSet_testAnd_176__Fun.__hx_current = ((thx.TestBitSet_testAnd_176__Fun) (new thx.TestBitSet_testAnd_176__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 177 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("10101100", "");
			//line 177 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 177 "/shared/core/test/thx/TestBitSet.hx"
			int size5 = ( ((int) (0.) ) + 1 );
			//line 177 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
			//line 177 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_177__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_177__Fun.__hx_current) : (thx.TestBitSet_testAnd_177__Fun.__hx_current = ((thx.TestBitSet_testAnd_177__Fun) (new thx.TestBitSet_testAnd_177__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.and(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (177) )) )}));
			//line 178 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("00000000", "");
			//line 178 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 178 "/shared/core/test/thx/TestBitSet.hx"
			int size6 = ( ((int) (0.) ) + 1 );
			//line 178 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
			//line 178 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_178__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_178__Fun.__hx_current) : (thx.TestBitSet_testAnd_178__Fun.__hx_current = ((thx.TestBitSet_testAnd_178__Fun) (new thx.TestBitSet_testAnd_178__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.and(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (178) )) )}));
			//line 179 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testAnd_179__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (179) )) )}));
			//line 180 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testAnd_180__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (180) )) )}));
		}
		
	}
	
	
	public void testOr()
	{
		//line 184 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 184 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 184 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 184 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 185 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
			//line 185 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 185 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 185 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 185 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_185__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_185__Fun.__hx_current) : (thx.TestBitSet_testOr_185__Fun.__hx_current = ((thx.TestBitSet_testOr_185__Fun) (new thx.TestBitSet_testOr_185__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 186 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
			//line 186 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 186 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 186 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 186 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_186__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_186__Fun.__hx_current) : (thx.TestBitSet_testOr_186__Fun.__hx_current = ((thx.TestBitSet_testOr_186__Fun) (new thx.TestBitSet_testOr_186__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 187 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
			//line 187 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 187 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 187 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 187 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_187__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_187__Fun.__hx_current) : (thx.TestBitSet_testOr_187__Fun.__hx_current = ((thx.TestBitSet_testOr_187__Fun) (new thx.TestBitSet_testOr_187__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 188 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
			//line 188 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 188 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 188 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 188 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_188__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_188__Fun.__hx_current) : (thx.TestBitSet_testOr_188__Fun.__hx_current = ((thx.TestBitSet_testOr_188__Fun) (new thx.TestBitSet_testOr_188__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
			//line 189 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
			//line 189 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 189 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 189 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 189 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_189__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_189__Fun.__hx_current) : (thx.TestBitSet_testOr_189__Fun.__hx_current = ((thx.TestBitSet_testOr_189__Fun) (new thx.TestBitSet_testOr_189__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 190 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("11111111", "");
			//line 190 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 190 "/shared/core/test/thx/TestBitSet.hx"
			int size5 = ( ((int) (0.) ) + 1 );
			//line 190 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
			//line 190 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_190__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_190__Fun.__hx_current) : (thx.TestBitSet_testOr_190__Fun.__hx_current = ((thx.TestBitSet_testOr_190__Fun) (new thx.TestBitSet_testOr_190__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.or(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (190) )) )}));
			//line 191 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("10101100", "");
			//line 191 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 191 "/shared/core/test/thx/TestBitSet.hx"
			int size6 = ( ((int) (0.) ) + 1 );
			//line 191 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
			//line 191 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_191__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_191__Fun.__hx_current) : (thx.TestBitSet_testOr_191__Fun.__hx_current = ((thx.TestBitSet_testOr_191__Fun) (new thx.TestBitSet_testOr_191__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.or(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (191) )) )}));
			//line 192 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testOr_192__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (192) )) )}));
			//line 193 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testOr_193__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (193) )) )}));
		}
		
	}
	
	
	public void testXor()
	{
		//line 197 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 197 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 197 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 197 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 198 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
			//line 198 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 198 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 198 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 198 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_198__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_198__Fun.__hx_current) : (thx.TestBitSet_testXor_198__Fun.__hx_current = ((thx.TestBitSet_testXor_198__Fun) (new thx.TestBitSet_testXor_198__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 199 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
			//line 199 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 199 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 199 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 199 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_199__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_199__Fun.__hx_current) : (thx.TestBitSet_testXor_199__Fun.__hx_current = ((thx.TestBitSet_testXor_199__Fun) (new thx.TestBitSet_testXor_199__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
			//line 200 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
			//line 200 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 200 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 200 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 200 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_200__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_200__Fun.__hx_current) : (thx.TestBitSet_testXor_200__Fun.__hx_current = ((thx.TestBitSet_testXor_200__Fun) (new thx.TestBitSet_testXor_200__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 201 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
			//line 201 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 201 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 201 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 201 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_201__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_201__Fun.__hx_current) : (thx.TestBitSet_testXor_201__Fun.__hx_current = ((thx.TestBitSet_testXor_201__Fun) (new thx.TestBitSet_testXor_201__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
			//line 202 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
			//line 202 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 202 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 202 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 202 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_202__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_202__Fun.__hx_current) : (thx.TestBitSet_testXor_202__Fun.__hx_current = ((thx.TestBitSet_testXor_202__Fun) (new thx.TestBitSet_testXor_202__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 203 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("01010011", "");
			//line 203 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 203 "/shared/core/test/thx/TestBitSet.hx"
			int size5 = ( ((int) (0.) ) + 1 );
			//line 203 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
			//line 203 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_203__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_203__Fun.__hx_current) : (thx.TestBitSet_testXor_203__Fun.__hx_current = ((thx.TestBitSet_testXor_203__Fun) (new thx.TestBitSet_testXor_203__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.xor(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (203) )) )}));
			//line 204 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("10101100", "");
			//line 204 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 204 "/shared/core/test/thx/TestBitSet.hx"
			int size6 = ( ((int) (0.) ) + 1 );
			//line 204 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
			//line 204 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_204__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_204__Fun.__hx_current) : (thx.TestBitSet_testXor_204__Fun.__hx_current = ((thx.TestBitSet_testXor_204__Fun) (new thx.TestBitSet_testXor_204__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.xor(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (204) )) )}));
			//line 205 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testXor_205__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (205) )) )}));
			//line 206 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.raises(new thx.TestBitSet_testXor_206__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (206) )) )}));
		}
		
	}
	
	
	public void testNegate()
	{
		//line 210 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 210 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 210 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 210 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("00000000", "");
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> tmp = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_211__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_211__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_211__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_211__Fun_0) (new thx.TestBitSet_testNegate_211__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 211 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_211__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_211__Fun.__hx_current) : (thx.TestBitSet_testNegate_211__Fun.__hx_current = ((thx.TestBitSet_testNegate_211__Fun) (new thx.TestBitSet_testNegate_211__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (211) )) )}));
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("11111111", "");
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			int size2 = ( ((int) (0.) ) + 1 );
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> tmp1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_212__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_212__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_212__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_212__Fun_0) (new thx.TestBitSet_testNegate_212__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("00000000", "");
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			int size3 = ( ((int) (0.) ) + 1 );
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
			//line 212 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp1, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_212__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_212__Fun.__hx_current) : (thx.TestBitSet_testNegate_212__Fun.__hx_current = ((thx.TestBitSet_testNegate_212__Fun) (new thx.TestBitSet_testNegate_212__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (212) )) )}));
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("01010011", "");
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			int size4 = ( ((int) (0.) ) + 1 );
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> tmp2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_213__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_213__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_213__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_213__Fun_0) (new thx.TestBitSet_testNegate_213__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("10101100", "");
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			int size5 = ( ((int) (0.) ) + 1 );
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
			//line 213 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp2, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_213__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_213__Fun.__hx_current) : (thx.TestBitSet_testNegate_213__Fun.__hx_current = ((thx.TestBitSet_testNegate_213__Fun) (new thx.TestBitSet_testNegate_213__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (213) )) )}));
		}
		
	}
	
	
	public void testClone()
	{
		//line 217 "/shared/core/test/thx/TestBitSet.hx"
		int _g1 = 0;
		//line 217 "/shared/core/test/thx/TestBitSet.hx"
		int _g = this.x;
		//line 217 "/shared/core/test/thx/TestBitSet.hx"
		while (( _g1 < _g ))
		{
			//line 217 "/shared/core/test/thx/TestBitSet.hx"
			 ++ _g1;
			//line 218 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("0101", "");
			//line 218 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 218 "/shared/core/test/thx/TestBitSet.hx"
			int size = ( ((int) (0.) ) + 1 );
			//line 218 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
			//line 218 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> a = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testClone_218__Fun.__hx_current != null )) ? (thx.TestBitSet_testClone_218__Fun.__hx_current) : (thx.TestBitSet_testClone_218__Fun.__hx_current = ((thx.TestBitSet_testClone_218__Fun) (new thx.TestBitSet_testClone_218__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this2 = a;
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> tmp = thx.Ints.range(thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) )), null, null);
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			int size1 = ( ((int) (0.) ) + 1 );
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
			//line 219 "/shared/core/test/thx/TestBitSet.hx"
			haxe.root.Array<java.lang.Object> b = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reduce(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (tmp) )) ), ((haxe.lang.Function) (new thx.TestBitSet_testClone_219__Fun(this2)) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
			//line 220 "/shared/core/test/thx/TestBitSet.hx"
			thx._BitSet.BitSet_Impl_.setAt(b, 0, true);
			//line 221 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("0101", thx._BitSet.BitSet_Impl_.toString(a), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (221) )) )}));
			//line 222 "/shared/core/test/thx/TestBitSet.hx"
			utest.Assert.same("1101", thx._BitSet.BitSet_Impl_.toString(b), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (222) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.x = ((int) (value) );
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case -1206209557:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testClone")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testClone")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return this.x;
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1570415156:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testNegate")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testNegate")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1230932807:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testBitSet")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBitSet")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422462359:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testXor")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testXor")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 723465421:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testFromBools")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromBools")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -877170155:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testOr")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOr")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1574149092:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testToBools")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToBools")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422484507:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testAnd")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAnd")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1354408782:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testToInt32s")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToInt32s")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1551191040:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testNotEquals")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testNotEquals")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testEquals")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEquals")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1616475223:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testPresetLength")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testPresetLength")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1330567628:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testExpand")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testExpand")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testConcat")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testConcat")) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						return ((double) (this.x) );
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case -1206209557:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testClone")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testClone();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1230932807:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testBitSet")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testBitSet();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1570415156:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testNegate")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testNegate();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 723465421:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testFromBools")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testFromBools();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422462359:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testXor")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testXor();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1574149092:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testToBools")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testToBools();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -877170155:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testOr")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testOr();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1354408782:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testToInt32s")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testToInt32s();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422484507:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testAnd")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testAnd();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testFromString();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1551191040:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testNotEquals")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testNotEquals();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1616475223:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testPresetLength")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testPresetLength();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testEquals")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testEquals();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testConcat")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testConcat();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1330567628:
				{
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					if (field.equals("testExpand")) 
					{
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestBitSet.hx"
						this.testExpand();
					}
					
					//line 6 "/shared/core/test/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestBitSet.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		baseArr.push("x");
		//line 6 "/shared/core/test/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/test/thx/TestBitSet.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


