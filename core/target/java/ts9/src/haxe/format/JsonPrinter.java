// Generated by Haxe 3.3.0
package haxe.format;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class JsonPrinter extends haxe.lang.HxObject
{
	public JsonPrinter(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public JsonPrinter(haxe.lang.Function replacer, java.lang.String space)
	{
		//line 56 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		haxe.format.JsonPrinter.__hx_ctor_haxe_format_JsonPrinter(this, replacer, space);
	}
	
	
	public static void __hx_ctor_haxe_format_JsonPrinter(haxe.format.JsonPrinter __temp_me33, haxe.lang.Function replacer, java.lang.String space)
	{
		//line 57 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		__temp_me33.replacer = replacer;
		//line 58 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		__temp_me33.indent = space;
		//line 59 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		__temp_me33.pretty = ( space != null );
		//line 60 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		__temp_me33.nind = 0;
		//line 67 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		__temp_me33.buf = new haxe.root.StringBuf();
	}
	
	
	public static java.lang.String print(java.lang.Object o, haxe.lang.Function replacer, java.lang.String space)
	{
		//line 45 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		haxe.format.JsonPrinter printer = new haxe.format.JsonPrinter(replacer, space);
		//line 46 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		printer.write("", o);
		//line 47 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		return printer.buf.toString();
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		return new haxe.format.JsonPrinter(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		return new haxe.format.JsonPrinter(((haxe.lang.Function) (arr.__get(0)) ), haxe.lang.Runtime.toString(arr.__get(1)));
	}
	
	
	public haxe.root.StringBuf buf;
	
	public haxe.lang.Function replacer;
	
	public java.lang.String indent;
	
	public boolean pretty;
	
	public int nind;
	
	public void write(java.lang.Object k, java.lang.Object v)
	{
		//line 80 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		if (( this.replacer != null )) 
		{
			//line 80 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			v = ((java.lang.Object) (this.replacer.__hx_invoke2_o(0.0, k, 0.0, v)) );
		}
		
		//line 81 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 81 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			haxe.root.ValueType _g = haxe.root.Type.typeof(v);
			//line 81 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (_g.index)
			{
				case 0:
				{
					//line 136 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("null"));
					//line 136 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 1:
				{
					//line 87 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString(v));
					//line 87 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 2:
				{
					//line 89 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString(( (haxe.lang.Runtime.isFinite(((double) (haxe.lang.Runtime.toDouble(v)) ))) ? (haxe.lang.Runtime.toString(v)) : ("null") )));
					//line 89 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 3:
				{
					//line 134 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString(v));
					//line 134 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 4:
				{
					//line 85 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.fieldsString(v, haxe.root.Reflect.fields(v));
					//line 85 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 5:
				{
					//line 91 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\"<fun>\""));
					//line 91 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 6:
				{
					//line 92 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					java.lang.Class c = ((java.lang.Class) (_g.params[0]) );
					//line 93 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (( ((java.lang.Object) (c) ) == ((java.lang.Object) (java.lang.String.class) ) )) 
					{
						//line 94 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.quote(haxe.lang.Runtime.toString(v));
					}
					else
					{
						//line 95 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						if (( ((java.lang.Object) (c) ) == ((java.lang.Object) (haxe.root.Array.class) ) )) 
						{
							//line 96 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							haxe.root.Array v1 = ((haxe.root.Array) (v) );
							//line 97 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							this.buf.addChar(91);
							//line 99 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							int len = v1.length;
							//line 100 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							int last = ( len - 1 );
							//line 101 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							{
								//line 101 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								int _g1 = 0;
								//line 101 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								while (( _g1 < len ))
								{
									//line 101 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									int i = _g1++;
									//line 103 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									if (( i > 0 )) 
									{
										//line 103 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										this.buf.addChar(44);
									}
									else
									{
										//line 103 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										this.nind++;
									}
									
									//line 104 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									if (this.pretty) 
									{
										//line 104 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										this.buf.addChar(10);
									}
									
									//line 105 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									if (this.pretty) 
									{
										//line 105 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										this.buf.add(haxe.lang.Runtime.toString(haxe.root.StringTools.lpad("", this.indent, ( this.nind * this.indent.length() ))));
									}
									
									//line 106 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									this.write(i, v1.__get(i));
									//line 107 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									if (( i == last )) 
									{
										//line 109 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										this.nind--;
										//line 110 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										if (this.pretty) 
										{
											//line 110 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
											this.buf.addChar(10);
										}
										
										//line 111 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										if (this.pretty) 
										{
											//line 111 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
											this.buf.add(haxe.lang.Runtime.toString(haxe.root.StringTools.lpad("", this.indent, ( this.nind * this.indent.length() ))));
										}
										
									}
									
								}
								
							}
							
							//line 114 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							this.buf.addChar(93);
						}
						else
						{
							//line 115 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
							if (( ((java.lang.Object) (c) ) == ((java.lang.Object) (haxe.ds.StringMap.class) ) )) 
							{
								//line 116 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								haxe.ds.StringMap v2 = ((haxe.ds.StringMap) (v) );
								//line 117 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{});
								//line 118 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								{
									//line 118 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									java.lang.Object tmp = v2.keys();
									//line 118 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
									{
										//line 118 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										java.lang.String k1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.callField(tmp, "next", null));
										//line 119 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
										haxe.root.Reflect.setField(o, k1, v2.get(k1));
									}
									
								}
								
								//line 120 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								this.fieldsString(o, haxe.root.Reflect.fields(o));
							}
							else
							{
								//line 121 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
								if (( ((java.lang.Object) (c) ) == ((java.lang.Object) (haxe.root.Date.class) ) )) 
								{
									//line 122 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									haxe.root.Date v3 = ((haxe.root.Date) (v) );
									//line 123 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									this.quote(v3.toString());
								}
								else
								{
									//line 128 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
									this.fieldsString(v, haxe.root.Reflect.fields(v));
								}
								
							}
							
						}
						
					}
					
					//line 92 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 7:
				{
					//line 131 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					java.lang.Object i1 = haxe.root.Type.enumIndex(v);
					//line 132 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString(i1));
					//line 130 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 8:
				{
					//line 83 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\"???\""));
					//line 83 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
		}
		
	}
	
	
	public void fieldsString(java.lang.Object v, haxe.root.Array<java.lang.String> fields)
	{
		//line 168 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		this.buf.addChar(123);
		//line 169 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		int len = fields.length;
		//line 170 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		int last = ( len - 1 );
		//line 171 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		boolean first = true;
		//line 172 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 172 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			int _g1 = 0;
			//line 172 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			while (( _g1 < len ))
			{
				//line 172 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				int i = _g1++;
				//line 173 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				java.lang.String f = fields.__get(i);
				//line 174 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				java.lang.Object value = haxe.root.Reflect.field(v, f);
				//line 175 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (haxe.root.Reflect.isFunction(value)) 
				{
					//line 175 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					continue;
				}
				
				//line 176 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (first) 
				{
					//line 176 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.nind++;
					//line 176 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					first = false;
				}
				else
				{
					//line 176 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.addChar(44);
				}
				
				//line 177 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (this.pretty) 
				{
					//line 177 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.addChar(10);
				}
				
				//line 178 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (this.pretty) 
				{
					//line 178 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString(haxe.root.StringTools.lpad("", this.indent, ( this.nind * this.indent.length() ))));
				}
				
				//line 179 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				this.quote(f);
				//line 180 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				this.buf.addChar(58);
				//line 181 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (this.pretty) 
				{
					//line 181 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.addChar(32);
				}
				
				//line 182 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				this.write(f, value);
				//line 183 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				if (( i == last )) 
				{
					//line 185 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.nind--;
					//line 186 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (this.pretty) 
					{
						//line 186 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.buf.addChar(10);
					}
					
					//line 187 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (this.pretty) 
					{
						//line 187 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.buf.add(haxe.lang.Runtime.toString(haxe.root.StringTools.lpad("", this.indent, ( this.nind * this.indent.length() ))));
					}
					
				}
				
			}
			
		}
		
		//line 190 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		this.buf.addChar(125);
	}
	
	
	public void quote(java.lang.String s)
	{
		//line 200 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		this.buf.addChar(34);
		//line 201 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		int i = 0;
		//line 202 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		while (true)
		{
			//line 203 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			int index = i++;
			//line 203 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			int c = ( (( index < s.length() )) ? (((int) (s.charAt(index)) )) : (-1) );
			//line 204 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (( c == -1 )) 
			{
				//line 204 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				break;
			}
			
			//line 205 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (c)
			{
				case 8:
				{
					//line 211 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\b"));
					//line 211 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 9:
				{
					//line 210 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\t"));
					//line 210 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 10:
				{
					//line 208 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\n"));
					//line 208 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 12:
				{
					//line 212 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\f"));
					//line 212 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 13:
				{
					//line 209 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\r"));
					//line 209 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 34:
				{
					//line 206 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\\""));
					//line 206 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 92:
				{
					//line 207 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.add(haxe.lang.Runtime.toString("\\\\"));
					//line 207 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				default:
				{
					//line 217 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					this.buf.addChar(c);
					//line 217 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
			}
			
		}
		
		//line 221 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		this.buf.addChar(34);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			boolean __temp_executeDef1 = true;
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (field.hashCode())
			{
				case 3381425:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("nind")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.nind = ((int) (value) );
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (__temp_executeDef1) 
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			boolean __temp_executeDef1 = true;
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (field.hashCode())
			{
				case 3381425:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("nind")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.nind = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 97907:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("buf")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.buf = ((haxe.root.StringBuf) (value) );
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -980096906:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("pretty")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.pretty = haxe.lang.Runtime.toBool(value);
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -430332866:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("replacer")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.replacer = ((haxe.lang.Function) (value) );
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -1184239444:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("indent")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.indent = haxe.lang.Runtime.toString(value);
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return value;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (__temp_executeDef1) 
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			boolean __temp_executeDef1 = true;
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (field.hashCode())
			{
				case 107953788:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("quote")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "quote")) );
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 97907:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("buf")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return this.buf;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -66446294:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("fieldsString")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fieldsString")) );
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -430332866:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("replacer")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return this.replacer;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 113399775:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("write")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "write")) );
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -1184239444:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("indent")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return this.indent;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 3381425:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("nind")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return this.nind;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -980096906:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("pretty")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return this.pretty;
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (__temp_executeDef1) 
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			boolean __temp_executeDef1 = true;
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (field.hashCode())
			{
				case 3381425:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("nind")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						return ((double) (this.nind) );
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (__temp_executeDef1) 
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			boolean __temp_executeDef1 = true;
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			switch (field.hashCode())
			{
				case 107953788:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("quote")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.quote(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case 113399775:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("write")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.write(dynargs.__get(0), dynargs.__get(1));
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
				case -66446294:
				{
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					if (field.equals("fieldsString")) 
					{
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						__temp_executeDef1 = false;
						//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
						this.fieldsString(dynargs.__get(0), ((haxe.root.Array<java.lang.String>) (dynargs.__get(1)) ));
					}
					
					//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
					break;
				}
				
				
			}
			
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			if (__temp_executeDef1) 
			{
				//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		baseArr.push("nind");
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		baseArr.push("pretty");
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		baseArr.push("indent");
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		baseArr.push("replacer");
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		baseArr.push("buf");
		//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
		{
			//line 32 "/usr/lib/haxe/std/haxe/format/JsonPrinter.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


