// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestConvert extends haxe.lang.HxObject
{
	public TestConvert(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestConvert(int i)
	{
		//line 7 "/shared/core/test/thx/TestConvert.hx"
		thx.TestConvert.__hx_ctor_thx_TestConvert(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestConvert(thx.TestConvert __temp_me125, int i)
	{
		//line 8 "/shared/core/test/thx/TestConvert.hx"
		__temp_me125.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		return new thx.TestConvert(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		return new thx.TestConvert(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testString()
	{
		//line 12 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 12 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 12 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 12 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 13 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals("1", thx.Convert.toString(1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
			//line 14 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals("1", thx.Convert.toStringOr(null, "1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		}
		
	}
	
	
	public void testInt()
	{
		//line 18 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 18 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 18 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 18 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 19 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toInt("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
			//line 20 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toInt(true), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 21 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(0, thx.Convert.toInt(false), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 22 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toInt(1.1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
			//line 24 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toIntOr("z", 1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
		}
		
	}
	
	
	public void testFloat()
	{
		//line 28 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 28 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 28 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 28 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 29 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toFloat("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
			//line 30 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1, thx.Convert.toFloat(true), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
			//line 31 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(0, thx.Convert.toFloat(false), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
			//line 32 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1.1, thx.Convert.toFloat(1.1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
			//line 34 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(1.1, thx.Convert.toFloatOr("z", 1.1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
		}
		
	}
	
	
	public void testBool()
	{
		//line 38 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 38 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 38 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 38 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 39 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(true, thx.Convert.toBool("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
			//line 40 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(true, thx.Convert.toBool(true), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 41 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(false, thx.Convert.toBool(false), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
			//line 42 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(true, thx.Convert.toBool(1.1), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
			//line 43 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(false, thx.Convert.toBool(0), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (43) )) )}));
			//line 45 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(true, thx.Convert.toBoolOr("z", true), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testBool"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
		}
		
	}
	
	
	public void testMap()
	{
		//line 49 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 49 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 49 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 49 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 50 "/shared/core/test/thx/TestConvert.hx"
			java.lang.Object objOfArrays = new haxe.lang.DynamicObject(new java.lang.String[]{"baz", "foo"}, new java.lang.Object[]{new haxe.root.Array<java.lang.String>(new java.lang.String[]{"qux"}), new haxe.root.Array<java.lang.String>(new java.lang.String[]{"bar"})}, new java.lang.String[]{}, new double[]{});
			//line 50 "/shared/core/test/thx/TestConvert.hx"
			java.lang.Object objOfNumbers = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"a", "b", "c"}, new double[]{((double) (((double) (1) )) ), ((double) (((double) (2) )) ), ((double) (((double) (3) )) )});
			//line 53 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals("bar", ((haxe.root.Array<java.lang.String>) (((haxe.IMap<java.lang.String, haxe.root.Array<java.lang.String>>) (((haxe.ds.StringMap) (thx.Convert.toMap(((java.lang.Object) (objOfArrays) ), ((haxe.lang.Function) (( (( thx.TestConvert_testMap_53__Fun.__hx_current != null )) ? (thx.TestConvert_testMap_53__Fun.__hx_current) : (thx.TestConvert_testMap_53__Fun.__hx_current = ((thx.TestConvert_testMap_53__Fun) (new thx.TestConvert_testMap_53__Fun()) )) )) ))) )) ).get("foo")) ).__get(0), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
			//line 57 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.equals(2, ((haxe.IMap<java.lang.String, java.lang.Object>) (((haxe.ds.StringMap) (thx.Convert.toMap(((java.lang.Object) (objOfNumbers) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Convert.class, "toInt")) ))) )) ).get("b"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (57) )) )}));
			//line 59 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.raises(( (( thx.TestConvert_testMap_59__Fun.__hx_current != null )) ? (thx.TestConvert_testMap_59__Fun.__hx_current) : (thx.TestConvert_testMap_59__Fun.__hx_current = ((thx.TestConvert_testMap_59__Fun) (new thx.TestConvert_testMap_59__Fun()) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
			//line 60 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.raises(new thx.TestConvert_testMap_60__Fun(objOfArrays), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (60) )) )}));
		}
		
	}
	
	
	public void testDateTimeUtc()
	{
		//line 64 "/shared/core/test/thx/TestConvert.hx"
		int _g1 = 0;
		//line 64 "/shared/core/test/thx/TestConvert.hx"
		int _g = this.x;
		//line 64 "/shared/core/test/thx/TestConvert.hx"
		while (( _g1 < _g ))
		{
			//line 64 "/shared/core/test/thx/TestConvert.hx"
			 ++ _g1;
			//line 65 "/shared/core/test/thx/TestConvert.hx"
			java.lang.Object value = null;
			//line 66 "/shared/core/test/thx/TestConvert.hx"
			thx.Convert.toDateTimeUtc(value);
			//line 67 "/shared/core/test/thx/TestConvert.hx"
			utest.Assert.isNull(value, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestConvert", "TestConvert.hx", "testDateTimeUtc"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("x")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.x = ((int) (value) );
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return value;
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("x")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return value;
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			switch (field.hashCode())
			{
				case -778344425:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testDateTimeUtc")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDateTimeUtc")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case 120:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("x")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return this.x;
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testMap")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMap")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case 1727748931:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testString")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testString")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1147315556:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testBool")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBool")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1422476803:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testInt")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testInt")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1203439382:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testFloat")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFloat")) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("x")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						return ((double) (this.x) );
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			switch (field.hashCode())
			{
				case -778344425:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testDateTimeUtc")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testDateTimeUtc();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case 1727748931:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testString")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testString();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testMap")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testMap();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1422476803:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testInt")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testInt();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1147315556:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testBool")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testBool();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
				case -1203439382:
				{
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					if (field.equals("testFloat")) 
					{
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/test/thx/TestConvert.hx"
						this.testFloat();
					}
					
					//line 5 "/shared/core/test/thx/TestConvert.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/test/thx/TestConvert.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		baseArr.push("x");
		//line 5 "/shared/core/test/thx/TestConvert.hx"
		{
			//line 5 "/shared/core/test/thx/TestConvert.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


