// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Arrays extends haxe.lang.HxObject
{
	public Arrays(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Arrays()
	{
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		thx.Arrays.__hx_ctor_thx_Arrays(this);
	}
	
	
	public static void __hx_ctor_thx_Arrays(thx.Arrays __temp_me49)
	{
	}
	
	
	public static <T> haxe.root.Array<T> append(haxe.root.Array<T> array, T element)
	{
		//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.push(element);
		//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T> haxe.root.Array<T> appendIf(haxe.root.Array<T> array, boolean cond, T element)
	{
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (cond) 
		{
			//line 39 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			array.push(element);
		}
		
		//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T> haxe.root.Array<T> applyIndexes(haxe.root.Array<T> array, haxe.root.Array<java.lang.Object> indexes, java.lang.Object incrementDuplicates)
	{
		//line 51 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object __temp_incrementDuplicates46 = ( (haxe.lang.Runtime.eq(incrementDuplicates, null)) ? (((java.lang.Object) (false) )) : (incrementDuplicates) );
		//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( indexes.length != array.length )) 
		{
			//line 53 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			throw haxe.lang.HaxeException.wrap(new thx.Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.Arrays", "Arrays.hx", "applyIndexes"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )})));
		}
		
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> result = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (haxe.lang.Runtime.toBool((__temp_incrementDuplicates46))) 
		{
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.ds.IntMap<java.lang.Object> usedIndexes = thx._Set.Set_Impl_.createInt(null);
			//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			{
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g1 = 0;
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g = array.length;
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				while (( _g1 < _g ))
				{
					//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int i = _g1++;
					//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int index = ((int) (haxe.lang.Runtime.toInt(indexes.__get(i))) );
					//line 59 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					while (((haxe.ds.IntMap<java.lang.Object>) (usedIndexes) ).exists(((int) (index) )))
					{
						//line 60 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						 ++ index;
					}
					
					//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					thx._Set.Set_Impl_.add(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (usedIndexes) )) ), ((java.lang.Object) (index) ));
					//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					result.__set(index, ((T) (((haxe.root.Array<T>) (array) ).__get(i)) ));
				}
				
			}
			
		}
		else
		{
			//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g11 = 0;
			//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g2 = array.length;
			//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g11 < _g2 ))
			{
				//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i1 = _g11++;
				//line 66 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				result.__set(((int) (haxe.lang.Runtime.toInt(indexes.__get(i1))) ), ((T) (((haxe.root.Array<T>) (array) ).__get(i1)) ));
			}
			
		}
		
		//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <A> java.lang.Object monoid()
	{
		//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 78 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.lang.Function __temp_odecl1 = new thx.Arrays_monoid_78__Fun<A>();
			//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"append", "zero"}, new java.lang.Object[]{__temp_odecl1, new haxe.root.Array<A>(( (A[]) (new java.lang.Object[] {}) ))}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> after(haxe.root.Array<T> array, T element)
	{
		//line 85 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(( ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (array) ), ((T) (element) ), ((haxe.lang.Function) (null) ))) ) + 1 ), null);
	}
	
	
	public static <T> haxe.ds.Option atIndex(haxe.root.Array<T> array, int i)
	{
		//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( ( i >= 0 ) && ( i < array.length ) )) 
		{
			//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.Some(((T) (((haxe.root.Array<T>) (array) ).__get(i)) ));
		}
		else
		{
			//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.None;
		}
		
	}
	
	
	public static <T> haxe.ds.Option getOption(haxe.root.Array<T> array, int i)
	{
		//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object value = ((T) (((haxe.root.Array<T>) (array) ).__get(i)) );
		//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == value )) 
		{
			//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.Some(value);
		}
		
	}
	
	
	public static <T> void each(haxe.root.Array<T> arr, haxe.lang.Function effect)
	{
		//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (arr) ))) );
		//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
		{
			//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
			//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			effect.__hx_invoke1_o(0.0, element);
		}
		
	}
	
	
	public static <T> void eachi(haxe.root.Array<T> arr, haxe.lang.Function effect)
	{
		//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int _g1 = 0;
		//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int _g = arr.length;
		//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( _g1 < _g ))
		{
			//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int i = _g1++;
			//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			effect.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (arr) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined);
		}
		
	}
	
	
	public static <T> boolean all(haxe.root.Array<T> arr, haxe.lang.Function predicate)
	{
		//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (arr) ))) );
			//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if ( ! (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, element))) ) 
				{
					//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return false;
				}
				
			}
			
		}
		
		//line 122 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return true;
	}
	
	
	public static <T> boolean any(haxe.root.Array<T> arr, haxe.lang.Function predicate)
	{
		//line 129 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 129 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (arr) ))) );
			//line 129 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 129 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 130 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, element))) 
				{
					//line 131 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return true;
				}
				
			}
			
		}
		
		//line 132 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return false;
	}
	
	
	public static <T> haxe.root.Array<T> at(haxe.root.Array<T> arr, haxe.root.Array<java.lang.Object> indexes)
	{
		//line 139 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array) (indexes.map(((haxe.lang.Function) (new thx.Arrays_at_139__Fun<T>(arr)) ))) )) );
	}
	
	
	public static <T> haxe.root.Array<T> before(haxe.root.Array<T> array, T element)
	{
		//line 145 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(0, ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (array) ), ((T) (element) ), ((haxe.lang.Function) (null) ))) ));
	}
	
	
	public static <T> haxe.root.Array<T> commonsFromStart(haxe.root.Array<T> self, haxe.root.Array<T> other, haxe.lang.Function equality)
	{
		//line 152 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == equality )) 
		{
			//line 152 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			equality = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 153 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int count = 0;
		//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = 0;
			//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.root.Array<java.lang.Object> _g1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.zip(((haxe.root.Array<T>) (self) ), ((haxe.root.Array<T>) (other) ))) );
			//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g < _g1.length ))
			{
				//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object pair = _g1.__get(_g);
				//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				 ++ _g;
				//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(equality.__hx_invoke2_o(0.0, ((T) (haxe.lang.Runtime.getField(pair, "_0", true)) ), 0.0, ((T) (haxe.lang.Runtime.getField(pair, "_1", true)) )))) 
				{
					//line 156 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					 ++ count;
				}
				else
				{
					//line 158 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					break;
				}
				
			}
			
		}
		
		//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return self.slice(0, count);
	}
	
	
	public static <T> haxe.root.Array<T> compact(haxe.root.Array<java.lang.Object> arr)
	{
		//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array) (arr.filter(new thx.Arrays_compact_174__Fun<T>())) )) );
	}
	
	
	public static <T> int compare(haxe.root.Array<T> a, haxe.root.Array<T> b)
	{
		//line 186 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int v = ( a.length - b.length );
		//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( v != 0 )) 
		{
			//line 188 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return v;
		}
		
		//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = a.length;
			//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 190 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				v = thx.Dynamics.compare(((T) (((haxe.root.Array<T>) (a) ).__get(i)) ), ((T) (((haxe.root.Array<T>) (b) ).__get(i)) ));
				//line 190 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (( v != 0 )) 
				{
					//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return v;
				}
				
			}
			
		}
		
		//line 193 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return 0;
	}
	
	
	public static <T> boolean contains(haxe.root.Array<T> array, T element, haxe.lang.Function eq)
	{
		//line 214 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == eq )) 
		{
			//line 215 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ( ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (array) ), ((T) (element) ), ((haxe.lang.Function) (null) ))) ) >= 0 );
		}
		else
		{
			//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			{
				//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g1 = 0;
				//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g = array.length;
				//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				while (( _g1 < _g ))
				{
					//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int i = _g1++;
					//line 218 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					if (haxe.lang.Runtime.toBool(eq.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (array) ).__get(i)) ), 0.0, element))) 
					{
						//line 219 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						return true;
					}
					
				}
				
			}
			
			//line 220 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return false;
		}
		
	}
	
	
	public static <T> boolean containsAll(haxe.root.Array<T> array, java.lang.Object elements, haxe.lang.Function eq)
	{
		//line 230 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 230 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (haxe.lang.Runtime.callField(elements, "iterator", null)) );
			//line 230 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 230 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T el = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 231 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if ( ! (((boolean) (thx.Arrays.contains(((haxe.root.Array<T>) (array) ), ((T) (el) ), ((haxe.lang.Function) (eq) ))) )) ) 
				{
					//line 231 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return false;
				}
				
			}
			
		}
		
		//line 233 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return true;
	}
	
	
	public static <T> boolean containsAny(haxe.root.Array<T> array, java.lang.Object elements, haxe.lang.Function eq)
	{
		//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (haxe.lang.Runtime.callField(elements, "iterator", null)) );
			//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T el = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 243 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (((boolean) (thx.Arrays.contains(((haxe.root.Array<T>) (array) ), ((T) (el) ), ((haxe.lang.Function) (eq) ))) )) 
				{
					//line 243 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return true;
				}
				
			}
			
		}
		
		//line 245 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return false;
	}
	
	
	public static <T> haxe.root.Array<T> create(int length, T fillWith)
	{
		//line 252 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> arr = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < length ))
			{
				//line 253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 254 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				arr.__set(i, fillWith);
			}
			
		}
		
		//line 255 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr;
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> cross(haxe.root.Array<T> a, haxe.root.Array<T> b)
	{
		//line 267 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> r = new haxe.root.Array<haxe.root.Array<T>>(( (haxe.root.Array<T>[]) (new haxe.root.Array[] {}) ));
		//line 268 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 268 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (a) ))) );
			//line 268 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 268 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T va = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 269 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 269 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					java.lang.Object tmp1 = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (b) ))) );
					//line 269 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp1, "hasNext", null)))
					{
						//line 269 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						T vb = ((T) (haxe.lang.Runtime.callField(tmp1, "next", null)) );
						//line 270 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						r.push(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {va, vb}) )));
					}
					
				}
				
			}
			
		}
		
		//line 271 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return r;
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> crossMulti(haxe.root.Array<haxe.root.Array<T>> array)
	{
		//line 283 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> acopy = array.copy();
		//line 283 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> result = ((haxe.root.Array<haxe.root.Array<T>>) (((haxe.root.Array) (((haxe.root.Array<T>) (acopy.shift()) ).map(((haxe.lang.Function) (new thx.Arrays_crossMulti_284__Fun<T>()) ))) )) );
		//line 285 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( acopy.length > 0 ))
		{
			//line 286 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.root.Array<T> array1 = ((haxe.root.Array<T>) (acopy.shift()) );
			//line 286 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.root.Array<haxe.root.Array<T>> tresult = result;
			//line 288 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			result = new haxe.root.Array<haxe.root.Array<T>>(( (haxe.root.Array<T>[]) (new haxe.root.Array[] {}) ));
			//line 289 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			{
				//line 289 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (array1) ))) );
				//line 289 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
				{
					//line 289 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T v1 = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
					//line 290 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int _g = 0;
					//line 290 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					while (( _g < tresult.length ))
					{
						//line 290 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						haxe.root.Array<T> ar = tresult.__get(_g);
						//line 290 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						 ++ _g;
						//line 291 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						haxe.root.Array<T> t = ar.copy();
						//line 292 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						t.push(v1);
						//line 293 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						result.push(t);
					}
					
				}
				
			}
			
		}
		
		//line 297 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <T> haxe.root.Array<T> distinct(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 307 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> result = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 309 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( array.length <= 1 )) 
		{
			//line 310 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ((haxe.root.Array<T>) (array) ).copy();
		}
		
		//line 312 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == predicate )) 
		{
			//line 313 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			predicate = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 315 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 315 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (array) ))) );
			//line 315 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 315 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T v = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 316 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				boolean keep =  ! (((boolean) (thx.Arrays.any(((haxe.root.Array<T>) (result) ), ((haxe.lang.Function) (new thx.Arrays_distinct_316__Fun<T>(v, predicate)) ))) )) ;
				//line 319 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (keep) 
				{
					//line 319 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					result.push(v);
				}
				
			}
			
		}
		
		//line 322 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <TIn, TOut> void eachPair(haxe.root.Array<TIn> array, haxe.lang.Function callback)
	{
		//line 331 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int _g1 = 0;
		//line 331 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int _g = array.length;
		//line 331 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( _g1 < _g ))
		{
			//line 331 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int i = _g1++;
			//line 332 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			{
				//line 332 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g3 = i;
				//line 332 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g2 = array.length;
				//line 332 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				while (( _g3 < _g2 ))
				{
					//line 332 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int j = _g3++;
					//line 333 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					if ( ! (haxe.lang.Runtime.toBool(callback.__hx_invoke2_o(0.0, ((TIn) (((haxe.root.Array<TIn>) (array) ).__get(i)) ), 0.0, ((TIn) (((haxe.root.Array<TIn>) (array) ).__get(j)) )))) ) 
					{
						//line 334 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						return ;
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public static <T> boolean equals(haxe.root.Array<T> a, haxe.root.Array<T> b, haxe.lang.Function equality)
	{
		//line 342 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( ( ( a == null ) || ( b == null ) ) || ( a.length != b.length ) )) 
		{
			//line 342 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return false;
		}
		
		//line 343 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == equality )) 
		{
			//line 343 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			equality = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 344 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 344 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 344 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = a.length;
			//line 344 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 344 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 345 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if ( ! (haxe.lang.Runtime.toBool(equality.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (a) ).__get(i)) ), 0.0, ((T) (((haxe.root.Array<T>) (b) ).__get(i)) )))) ) 
				{
					//line 346 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return false;
				}
				
			}
			
		}
		
		//line 347 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return true;
	}
	
	
	public static <T> T extract(haxe.root.Array<T> a, haxe.lang.Function predicate)
	{
		//line 357 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 357 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 357 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = a.length;
			//line 357 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 357 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 358 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, a.__get(i)))) 
				{
					//line 359 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return a.splice(i, 1).__get(0);
				}
				
			}
			
		}
		
		//line 360 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return null;
	}
	
	
	public static <T> haxe.root.Array<T> filterNull(haxe.root.Array<java.lang.Object> a)
	{
		//line 367 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> arr = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 368 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 368 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (a) ))) );
			//line 368 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 368 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object v = ((java.lang.Object) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 369 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (( ! (( null == v )) )) 
				{
					//line 369 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					arr.push(((T) (v) ));
				}
				
			}
			
		}
		
		//line 370 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr;
	}
	
	
	public static <T> haxe.root.Array<T> filterOption(haxe.root.Array<haxe.ds.Option> a)
	{
		//line 377 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (thx.Arrays.reduce(((haxe.root.Array<haxe.ds.Option>) (a) ), ((haxe.lang.Function) (new thx.Arrays_filterOption_377__Fun<T>()) ), ((haxe.root.Array<T>) (new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ))) ))) );
	}
	
	
	public static <T> java.lang.Object find(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 390 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 390 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (array) ))) );
			//line 390 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 390 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 391 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, element))) 
				{
					//line 392 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return element;
				}
				
			}
			
		}
		
		//line 393 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return null;
	}
	
	
	public static <T> java.lang.Object findi(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 400 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 400 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 400 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = array.length;
			//line 400 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 400 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 401 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (array) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined))) 
				{
					//line 402 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return ((T) (((haxe.root.Array<T>) (array) ).__get(i)) );
				}
				
			}
			
		}
		
		//line 403 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return null;
	}
	
	
	public static <T> haxe.ds.Option findiOption(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 410 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 410 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 410 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = array.length;
			//line 410 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 410 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 411 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (array) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined))) 
				{
					//line 412 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return haxe.ds.Option.Some(((T) (((haxe.root.Array<T>) (array) ).__get(i)) ));
				}
				
			}
			
		}
		
		//line 413 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return haxe.ds.Option.None;
	}
	
	
	public static <T> haxe.ds.Option findOption(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 422 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 422 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (array) ))) );
			//line 422 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 422 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 423 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, element))) 
				{
					//line 424 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return haxe.ds.Option.Some(element);
				}
				
			}
			
		}
		
		//line 425 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return haxe.ds.Option.None;
	}
	
	
	public static <T> int findIndex(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 433 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 433 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 433 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = array.length;
			//line 433 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 433 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 434 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, ((T) (((haxe.root.Array<T>) (array) ).__get(i)) )))) 
				{
					//line 435 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return i;
				}
				
			}
			
		}
		
		//line 436 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return -1;
	}
	
	
	public static <T> java.lang.Object findLast(haxe.root.Array<T> array, haxe.lang.Function predicate)
	{
		//line 444 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int len = array.length;
		//line 444 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int j = 0;
		//line 446 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 446 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 446 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < len ))
			{
				//line 446 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 447 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				j = ( ( len - i ) - 1 );
				//line 448 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.toBool(predicate.__hx_invoke1_o(0.0, ((T) (((haxe.root.Array<T>) (array) ).__get(j)) )))) 
				{
					//line 449 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					return ((T) (((haxe.root.Array<T>) (array) ).__get(j)) );
				}
				
			}
			
		}
		
		//line 451 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return null;
	}
	
	
	public static <T> java.lang.Object first(haxe.root.Array<T> array)
	{
		//line 458 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((T) (((haxe.root.Array<T>) (array) ).__get(0)) );
	}
	
	
	public static <TIn, TOut> haxe.root.Array<TOut> flatMap(haxe.root.Array<TIn> array, haxe.lang.Function callback)
	{
		//line 469 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<TOut>) (thx.Arrays.flatten(((haxe.root.Array<haxe.root.Array<TOut>>) (((haxe.root.Array) (array.map(((haxe.lang.Function) (callback) ))) )) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> flatten(haxe.root.Array<haxe.root.Array<T>> array)
	{
		//line 484 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (thx.Arrays.reduce(((haxe.root.Array<haxe.root.Array<T>>) (array) ), ((haxe.lang.Function) (new thx.Arrays_flatten_484__Fun<T>()) ), ((haxe.root.Array<T>) (new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ))) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> from(haxe.root.Array<T> array, T element)
	{
		//line 491 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (array) ), ((T) (element) ), ((haxe.lang.Function) (null) ))) ), null);
	}
	
	
	public static <TKey, TValue> haxe.IMap<TKey, haxe.root.Array<TValue>> groupByAppend(haxe.root.Array<TValue> arr, haxe.lang.Function resolver, haxe.IMap<TKey, haxe.root.Array<TValue>> map)
	{
		//line 526 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 526 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 526 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = arr.length;
			//line 526 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 526 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 527 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				TValue v = ((TValue) (((haxe.root.Array<TValue>) (arr) ).__get(i)) );
				//line 528 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				TKey key = ((TKey) (resolver.__hx_invoke1_o(0.0, v)) );
				//line 528 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				haxe.root.Array<TValue> acc = ((haxe.root.Array<TValue>) (map.get(key)) );
				//line 531 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (( null == acc )) 
				{
					//line 532 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					map.set(key, new haxe.root.Array<TValue>(( (TValue[]) (new java.lang.Object[] {v}) )));
				}
				else
				{
					//line 534 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					acc.push(v);
				}
				
			}
			
		}
		
		//line 538 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return map;
	}
	
	
	public static <A, K> haxe.root.Array<haxe.root.Array<A>> spanByIndex(haxe.root.Array<A> arr, haxe.lang.Function spanKey)
	{
		//line 562 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<A>> acc = new haxe.root.Array<haxe.root.Array<A>>(( (haxe.root.Array<A>[]) (new haxe.root.Array[] {}) ));
		//line 563 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		K cur = null;
		//line 564 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int j = -1;
		//line 565 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 565 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 565 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = arr.length;
			//line 565 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 565 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 566 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				K k = ((K) (spanKey.__hx_invoke1_o(((double) (i) ), haxe.lang.Runtime.undefined)) );
				//line 567 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (( k == null )) 
				{
					//line 567 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					throw haxe.lang.HaxeException.wrap(new thx.Error(( "spanKey function returned null for index " + i ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.Arrays", "Arrays.hx", "spanByIndex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (567) )) )})));
				}
				
				//line 568 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (haxe.lang.Runtime.eq(cur, k)) 
				{
					//line 569 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					acc.__get(j).push(((A) (((haxe.root.Array<A>) (arr) ).__get(i)) ));
				}
				else
				{
					//line 571 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					cur = k;
					//line 572 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					 ++ j;
					//line 573 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					acc.push(new haxe.root.Array<A>(( (A[]) (new java.lang.Object[] {((A) (((haxe.root.Array<A>) (arr) ).__get(i)) )}) )));
				}
				
			}
			
		}
		
		//line 576 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return acc;
	}
	
	
	public static <T> boolean hasElements(haxe.root.Array<T> array)
	{
		//line 583 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null != array )) 
		{
			//line 583 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ( array.length > 0 );
		}
		else
		{
			//line 583 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return false;
		}
		
	}
	
	
	public static <T> java.lang.Object head(haxe.root.Array<T> array)
	{
		//line 589 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((T) (((haxe.root.Array<T>) (array) ).__get(0)) );
	}
	
	
	public static <T> haxe.root.Array<T> ifEmpty(haxe.root.Array<T> array, haxe.root.Array<T> alt)
	{
		//line 595 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( ( null != array ) && ( 0 != array.length ) )) 
		{
			//line 595 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return array;
		}
		else
		{
			//line 595 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return alt;
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> initial(haxe.root.Array<T> array)
	{
		//line 601 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(0, ( array.length - 1 ));
	}
	
	
	public static <T> haxe.root.Array<T> intersperse(haxe.root.Array<T> array, T value)
	{
		//line 610 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> tmp = ((haxe.root.Array<T>) (thx.Arrays.create(((int) (( ( array.length * 2 ) - 1 )) ), ((T) (value) ))) );
		//line 607 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (thx.Arrays.reducei(((haxe.root.Array<T>) (array) ), ((haxe.lang.Function) (new thx.Arrays_intersperse_607__Fun<T>()) ), ((haxe.root.Array<T>) (tmp) ))) );
	}
	
	
	public static <T> boolean isEmpty(haxe.root.Array<T> array)
	{
		//line 616 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null != array )) 
		{
			//line 616 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ( array.length == 0 );
		}
		else
		{
			//line 616 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return true;
		}
		
	}
	
	
	public static <T> java.lang.Object last(haxe.root.Array<T> array)
	{
		//line 622 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (array) ).__get(( array.length - 1 ));
	}
	
	
	public static <TIn, TOut> haxe.root.Array<TOut> mapi(haxe.root.Array<TIn> array, haxe.lang.Function callback)
	{
		//line 632 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<TOut> r = new haxe.root.Array<TOut>(( (TOut[]) (new java.lang.Object[] {}) ));
		//line 633 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 633 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 633 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = array.length;
			//line 633 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 633 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 634 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				r.push(((TOut) (callback.__hx_invoke2_o(0.0, ((TIn) (((haxe.root.Array<TIn>) (array) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined)) ));
			}
			
		}
		
		//line 635 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return r;
	}
	
	
	public static <TIn, TOut> haxe.root.Array<TOut> mapRight(haxe.root.Array<TIn> array, haxe.lang.Function callback)
	{
		//line 643 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int i = array.length;
		//line 643 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<TOut> result = new haxe.root.Array<TOut>(( (TOut[]) (new java.lang.Object[] {}) ));
		//line 645 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while ((  -- i >= 0 ))
		{
			//line 646 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			result.push(((TOut) (callback.__hx_invoke1_o(0.0, ((TIn) (((haxe.root.Array<TIn>) (array) ).__get(i)) ))) ));
		}
		
		//line 647 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <T> haxe.root.Array<T> order(haxe.root.Array<T> array, haxe.lang.Function sort)
	{
		//line 654 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> n = array.copy();
		//line 655 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		n.sort(sort);
		//line 656 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return n;
	}
	
	
	public static <T> void pull(haxe.root.Array<T> array, haxe.root.Array<T> toRemove, haxe.lang.Function equality)
	{
		//line 664 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (toRemove) ))) );
		//line 664 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
		{
			//line 664 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			T element = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
			//line 665 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			thx.Arrays.removeAll(((haxe.root.Array<T>) (array) ), ((T) (element) ), ((haxe.lang.Function) (equality) ));
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> pushIf(haxe.root.Array<T> array, boolean condition, T value)
	{
		//line 671 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (condition) 
		{
			//line 672 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			array.push(value);
		}
		
		//line 673 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T> haxe.root.Array<java.lang.Object> rank(haxe.root.Array<T> array, haxe.lang.Function compare, java.lang.Object incrementDuplicates)
	{
		//line 687 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object __temp_incrementDuplicates47 = ( (haxe.lang.Runtime.eq(incrementDuplicates, null)) ? (((java.lang.Object) (true) )) : (incrementDuplicates) );
		//line 688 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> arr = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.mapi(((haxe.root.Array<T>) (array) ), ((haxe.lang.Function) (new thx.Arrays_rank_688__Fun<T>()) ))) );
		//line 689 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		arr.sort(new thx.Arrays_rank_689__Fun<T>(compare));
		//line 690 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (haxe.lang.Runtime.toBool((__temp_incrementDuplicates47))) 
		{
			//line 691 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.ds.IntMap<java.lang.Object> usedIndexes = thx._Set.Set_Impl_.createInt(null);
			//line 692 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.Object>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_rank_692__Fun<T>(usedIndexes, compare, arr)) ), ((haxe.root.Array<java.lang.Object>) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) ))) );
		}
		else
		{
			//line 702 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.Object>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_rank_702__Fun<T>(compare, arr)) ), ((haxe.root.Array<java.lang.Object>) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) ))) );
		}
		
	}
	
	
	public static <A, B> B reduce(haxe.root.Array<A> array, haxe.lang.Function f, B initial)
	{
		//line 713 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 713 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<A>(((haxe.root.Array<A>) (array) ))) );
			//line 713 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 713 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				A v = ((A) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 714 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				initial = ((B) (f.__hx_invoke2_o(0.0, initial, 0.0, v)) );
			}
			
		}
		
		//line 715 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return initial;
	}
	
	
	public static <A, B> B foldLeft(haxe.root.Array<A> array, B init, haxe.lang.Function f)
	{
		//line 722 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((B) (thx.Arrays.reduce(((haxe.root.Array<A>) (array) ), ((haxe.lang.Function) (f) ), ((B) (init) ))) );
	}
	
	
	public static <A, E, B> thx.Either foldLeftEither(haxe.root.Array<A> array, B init, haxe.lang.Function f)
	{
		//line 725 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		thx.Either acc = thx.Either.Right(init);
		//line 726 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 726 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<A>(((haxe.root.Array<A>) (array) ))) );
			//line 726 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 726 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				A a = ((A) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 727 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				switch (acc.index)
				{
					case 0:
					{
						//line 728 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						return acc;
					}
					
					
					case 1:
					{
						//line 729 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						B b = ((B) (acc.params[0]) );
						//line 729 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						acc = ((thx.Either) (f.__hx_invoke2_o(0.0, b, 0.0, a)) );
						//line 729 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 733 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return acc;
	}
	
	
	public static <A, B> B foldMap(haxe.root.Array<A> array, haxe.lang.Function f, java.lang.Object m)
	{
		//line 740 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<B> array1 = ((haxe.root.Array<B>) (((haxe.root.Array) (array.map(((haxe.lang.Function) (f) ))) )) );
		//line 740 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		B init = ((B) (thx._Monoid.Monoid_Impl_.get_zero(((java.lang.Object) (m) ))) );
		//line 740 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object _e = m;
		//line 740 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((B) (thx.Arrays.reduce(((haxe.root.Array<B>) (array1) ), ((haxe.lang.Function) (new thx.Arrays_foldMap_740__Fun<B>(_e)) ), ((B) (init) ))) );
	}
	
	
	public static <A> A fold(haxe.root.Array<A> array, java.lang.Object m)
	{
		//line 746 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((A) (thx.Arrays.foldMap(((haxe.root.Array<A>) (array) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "identity")) ), ((java.lang.Object) (m) ))) );
	}
	
	
	public static <A> haxe.ds.Option nel(haxe.root.Array<A> array)
	{
		//line 752 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.ds.Option) (thx._Nel.Nel_Impl_.fromArray(((haxe.root.Array<A>) (array) ))) );
	}
	
	
	public static <A> haxe.ds.Option foldS(haxe.root.Array<A> array, haxe.lang.Function s)
	{
		//line 758 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (thx.Arrays.nel(((haxe.root.Array<A>) (array) ))) ), ((haxe.lang.Function) (new thx.Arrays_foldS_758__Fun<A>(s)) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> resize(haxe.root.Array<T> array, int length, T fill)
	{
		//line 767 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( array.length < length ))
		{
			//line 768 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			array.push(fill);
		}
		
		//line 769 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.splice(length, ( array.length - length ));
		//line 770 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <A, B> B reducei(haxe.root.Array<A> array, haxe.lang.Function f, B initial)
	{
		//line 777 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 777 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 777 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = array.length;
			//line 777 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 777 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 778 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				initial = ((B) (f.__hx_invoke3_o(0.0, initial, 0.0, ((A) (((haxe.root.Array<A>) (array) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined)) );
			}
			
		}
		
		//line 779 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return initial;
	}
	
	
	public static <A, B> B reduceRight(haxe.root.Array<A> array, haxe.lang.Function f, B initial)
	{
		//line 786 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int i = array.length;
		//line 787 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while ((  -- i >= 0 ))
		{
			//line 788 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			initial = ((B) (f.__hx_invoke2_o(0.0, initial, 0.0, ((A) (((haxe.root.Array<A>) (array) ).__get(i)) ))) );
		}
		
		//line 789 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return initial;
	}
	
	
	public static <T> void removeAll(haxe.root.Array<T> array, T element, haxe.lang.Function equality)
	{
		//line 797 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( null == equality )) 
		{
			//line 798 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			equality = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 799 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int i = array.length;
		//line 800 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while ((  -- i >= 0 ))
		{
			//line 801 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			if (haxe.lang.Runtime.toBool(equality.__hx_invoke2_o(0.0, array.__get(i), 0.0, element))) 
			{
				//line 802 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				array.splice(i, 1);
			}
			
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> rest(haxe.root.Array<T> array)
	{
		//line 809 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(1, null);
	}
	
	
	public static <T> haxe.root.Array<T> reversed(haxe.root.Array<T> array)
	{
		//line 815 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> result = array.copy();
		//line 816 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		result.reverse();
		//line 817 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <T> haxe.root.Array<T> sample(haxe.root.Array<T> array, int n)
	{
		//line 825 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int b = array.length;
		//line 825 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( n < b )) 
		{
			//line 825 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			n = n;
		}
		else
		{
			//line 825 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			n = b;
		}
		
		//line 826 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> copy = array.copy();
		//line 826 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> result = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 828 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 828 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 828 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = n;
			//line 828 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 828 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				 ++ _g1;
				//line 829 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				result.push(copy.splice(haxe.root.Std.random(copy.length), 1).__get(0));
			}
			
		}
		
		//line 830 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <T> java.lang.Object sampleOne(haxe.root.Array<T> array)
	{
		//line 837 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (array) ).__get(haxe.root.Std.random(array.length));
	}
	
	
	public static <T> java.lang.String string(haxe.root.Array<T> arr)
	{
		//line 843 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.String> strings = ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (arr.map(((haxe.lang.Function) (new haxe.lang.Closure(thx.Dynamics.class, "string")) ))) )) );
		//line 844 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ( ( "[" + strings.join(", ") ) + "]" );
	}
	
	
	public static <T> haxe.root.Array<T> shuffle(haxe.root.Array<T> a)
	{
		//line 851 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> t = thx.Ints.range(a.length, null, null);
		//line 851 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> array = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 853 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( t.length > 0 ))
		{
			//line 854 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int pos = haxe.root.Std.random(t.length);
			//line 854 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int index = ((int) (haxe.lang.Runtime.toInt(t.__get(pos))) );
			//line 856 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			t.splice(pos, 1);
			//line 857 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			array.push(((T) (((haxe.root.Array<T>) (a) ).__get(index)) ));
		}
		
		//line 859 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> split(haxe.root.Array<T> array, int parts)
	{
		//line 866 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int len = ((int) (java.lang.Math.ceil(( ((double) (array.length) ) / parts ))) );
		//line 867 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<haxe.root.Array<T>>) (thx.Arrays.splitBy(((haxe.root.Array<T>) (array) ), ((int) (len) ))) );
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> splitBy(haxe.root.Array<T> array, int len)
	{
		//line 874 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> res = new haxe.root.Array<haxe.root.Array<T>>(( (haxe.root.Array<T>[]) (new haxe.root.Array[] {}) ));
		//line 875 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int b = array.length;
		//line 875 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( len < b )) 
		{
			//line 875 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			len = len;
		}
		else
		{
			//line 875 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			len = b;
		}
		
		//line 876 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 876 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 876 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ((int) (java.lang.Math.ceil(( ((double) (array.length) ) / len ))) );
			//line 876 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 876 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int p = _g1++;
				//line 877 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				res.push(array.slice(( p * len ), ( (( p + 1 )) * len )));
			}
			
		}
		
		//line 879 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return res;
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> splitByPad(haxe.root.Array<T> arr, int len, T pad)
	{
		//line 886 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> res = ((haxe.root.Array<haxe.root.Array<T>>) (thx.Arrays.splitBy(((haxe.root.Array<T>) (arr) ), ((int) (len) ))) );
		//line 887 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( ((haxe.root.Array<T>) (((haxe.root.Array<haxe.root.Array<T>>) (res) ).__get(( res.length - 1 ))) ).length < len ))
		{
			//line 888 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			((haxe.root.Array<T>) (((haxe.root.Array<haxe.root.Array<T>>) (res) ).__get(( res.length - 1 ))) ).push(pad);
		}
		
		//line 889 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return res;
	}
	
	
	public static <T> haxe.root.Array<T> tail(haxe.root.Array<T> array)
	{
		//line 896 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array.slice(1, null);
	}
	
	
	public static <T> haxe.root.Array<T> take(haxe.root.Array<T> arr, int n)
	{
		//line 902 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr.slice(0, n);
	}
	
	
	public static <T> haxe.root.Array<T> takeLast(haxe.root.Array<T> arr, int n)
	{
		//line 907 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr.slice(( arr.length - n ), null);
	}
	
	
	public static <T, U> haxe.ds.Option traverseOption(haxe.root.Array<T> arr, haxe.lang.Function f)
	{
		//line 917 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.ds.Option tmp = haxe.ds.Option.Some(new haxe.root.Array<U>(( (U[]) (new java.lang.Object[] {}) )));
		//line 915 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.ds.Option) (thx.Arrays.reduce(((haxe.root.Array<T>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_traverseOption_915__Fun<T, U>(f)) ), ((haxe.ds.Option) (tmp) ))) );
	}
	
	
	public static <E, T, U> thx.Either traverseValidation(haxe.root.Array<T> arr, haxe.lang.Function f, haxe.lang.Function s)
	{
		//line 925 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((thx.Either) (thx.Arrays.reduce(((haxe.root.Array<T>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_traverseValidation_925__Fun<T, U, E>(s, f)) ), ((thx.Either) (thx.Either.Right(new haxe.root.Array<U>(( (U[]) (new java.lang.Object[] {}) )))) ))) );
	}
	
	
	public static <E, T, U> thx.Either traverseValidationIndexed(haxe.root.Array<T> arr, haxe.lang.Function f, haxe.lang.Function s)
	{
		//line 935 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((thx.Either) (thx.Arrays.reducei(((haxe.root.Array<T>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_traverseValidationIndexed_935__Fun<T, U, E>(s, f)) ), ((thx.Either) (thx.Either.Right(new haxe.root.Array<U>(( (U[]) (new java.lang.Object[] {}) )))) ))) );
	}
	
	
	public static <T> haxe.root.Array<haxe.root.Array<T>> rotate(haxe.root.Array<haxe.root.Array<T>> arr)
	{
		//line 944 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<haxe.root.Array<T>> result = new haxe.root.Array<haxe.root.Array<T>>(( (haxe.root.Array<T>[]) (new haxe.root.Array[] {}) ));
		//line 945 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 945 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 945 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ((haxe.root.Array<T>) (((haxe.root.Array<haxe.root.Array<T>>) (arr) ).__get(0)) ).length;
			//line 945 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 945 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 946 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				haxe.root.Array<T> row = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
				//line 947 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				result.push(row);
				//line 948 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 948 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int _g3 = 0;
					//line 948 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int _g2 = arr.length;
					//line 948 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					while (( _g3 < _g2 ))
					{
						//line 948 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						int j = _g3++;
						//line 949 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
						row.push(((T) (((haxe.root.Array<T>) (((haxe.root.Array<haxe.root.Array<T>>) (arr) ).__get(j)) ).__get(i)) ));
					}
					
				}
				
			}
			
		}
		
		//line 952 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <T, U> haxe.root.Array<U> sliding2(haxe.root.Array<T> arr, haxe.lang.Function f)
	{
		//line 956 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( arr.length < 2 )) 
		{
			//line 957 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return new haxe.root.Array<U>(( (U[]) (new java.lang.Object[] {}) ));
		}
		else
		{
			//line 959 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.root.Array<U> result = new haxe.root.Array<U>(( (U[]) (new java.lang.Object[] {}) ));
			//line 960 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			{
				//line 960 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g1 = 0;
				//line 960 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int _g = ( arr.length - 1 );
				//line 960 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				while (( _g1 < _g ))
				{
					//line 960 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					int i = _g1++;
					//line 961 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					result.push(((U) (f.__hx_invoke2_o(0.0, ((T) (((haxe.root.Array<T>) (arr) ).__get(i)) ), 0.0, ((T) (((haxe.root.Array<T>) (arr) ).__get(( i + 1 ))) ))) ));
				}
				
			}
			
			//line 963 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return result;
		}
		
	}
	
	
	public static <T1, T2> java.lang.Object unzip(haxe.root.Array<java.lang.Object> array)
	{
		//line 971 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T1> a1 = new haxe.root.Array<T1>(( (T1[]) (new java.lang.Object[] {}) ));
		//line 971 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T2> a2 = new haxe.root.Array<T2>(( (T2[]) (new java.lang.Object[] {}) ));
		//line 972 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.map(((haxe.lang.Function) (new thx.Arrays_unzip_972__Fun<T2, T1>(a2, a1)) ));
		//line 976 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{a1, a2}, new java.lang.String[]{}, new double[]{});
		//line 976 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (this1) );
	}
	
	
	public static <T1, T2, T3> java.lang.Object unzip3(haxe.root.Array<java.lang.Object> array)
	{
		//line 983 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T1> a1 = new haxe.root.Array<T1>(( (T1[]) (new java.lang.Object[] {}) ));
		//line 983 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T2> a2 = new haxe.root.Array<T2>(( (T2[]) (new java.lang.Object[] {}) ));
		//line 983 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T3> a3 = new haxe.root.Array<T3>(( (T3[]) (new java.lang.Object[] {}) ));
		//line 984 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.map(((haxe.lang.Function) (new thx.Arrays_unzip3_984__Fun<T3, T2, T1>(a3, a2, a1)) ));
		//line 989 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2"}, new java.lang.Object[]{a1, a2, a3}, new java.lang.String[]{}, new double[]{});
		//line 989 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (this1) );
	}
	
	
	public static <T1, T2, T3, T4> java.lang.Object unzip4(haxe.root.Array<java.lang.Object> array)
	{
		//line 996 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T1> a1 = new haxe.root.Array<T1>(( (T1[]) (new java.lang.Object[] {}) ));
		//line 996 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T2> a2 = new haxe.root.Array<T2>(( (T2[]) (new java.lang.Object[] {}) ));
		//line 996 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T3> a3 = new haxe.root.Array<T3>(( (T3[]) (new java.lang.Object[] {}) ));
		//line 996 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T4> a4 = new haxe.root.Array<T4>(( (T4[]) (new java.lang.Object[] {}) ));
		//line 997 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.map(((haxe.lang.Function) (new thx.Arrays_unzip4_997__Fun<T4, T3, T2, T1>(a4, a3, a2, a1)) ));
		//line 1003 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2", "_3"}, new java.lang.Object[]{a1, a2, a3, a4}, new java.lang.String[]{}, new double[]{});
		//line 1003 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (this1) );
	}
	
	
	public static <T1, T2, T3, T4, T5> java.lang.Object unzip5(haxe.root.Array<java.lang.Object> array)
	{
		//line 1010 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T1> a1 = new haxe.root.Array<T1>(( (T1[]) (new java.lang.Object[] {}) ));
		//line 1010 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T2> a2 = new haxe.root.Array<T2>(( (T2[]) (new java.lang.Object[] {}) ));
		//line 1010 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T3> a3 = new haxe.root.Array<T3>(( (T3[]) (new java.lang.Object[] {}) ));
		//line 1010 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T4> a4 = new haxe.root.Array<T4>(( (T4[]) (new java.lang.Object[] {}) ));
		//line 1010 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T5> a5 = new haxe.root.Array<T5>(( (T5[]) (new java.lang.Object[] {}) ));
		//line 1011 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.map(((haxe.lang.Function) (new thx.Arrays_unzip5_1011__Fun<T5, T4, T3, T2, T1>(a5, a4, a3, a2, a1)) ));
		//line 1018 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2", "_3", "_4"}, new java.lang.Object[]{a1, a2, a3, a4, a5}, new java.lang.String[]{}, new double[]{});
		//line 1018 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (this1) );
	}
	
	
	public static <T1, T2> haxe.root.Array<java.lang.Object> zip(haxe.root.Array<T1> array1, haxe.root.Array<T2> array2)
	{
		//line 1025 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int a = array1.length;
		//line 1025 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int b = array2.length;
		//line 1025 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int length = ( (( a < b )) ? (a) : (b) );
		//line 1025 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> array = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 1027 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1027 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1027 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = length;
			//line 1027 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1027 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object this1 = null;
				//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T1 __temp_odecl1 = ((T1) (((haxe.root.Array<T1>) (array1) ).__get(i)) );
					//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T2 __temp_odecl2 = ((T2) (((haxe.root.Array<T2>) (array2) ).__get(i)) );
					//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 1028 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				array.push(((java.lang.Object) (this1) ));
			}
			
		}
		
		//line 1029 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T1, T2, T3> haxe.root.Array<java.lang.Object> zip3(haxe.root.Array<T1> array1, haxe.root.Array<T2> array2, haxe.root.Array<T3> array3)
	{
		//line 1036 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object length = thx.ArrayInts.min(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{array1.length, array2.length, array3.length}));
		//line 1036 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> array = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 1038 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1038 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1038 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ((int) (haxe.lang.Runtime.toInt(length)) );
			//line 1038 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1038 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object this1 = null;
				//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T1 __temp_odecl1 = ((T1) (((haxe.root.Array<T1>) (array1) ).__get(i)) );
					//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T2 __temp_odecl2 = ((T2) (((haxe.root.Array<T2>) (array2) ).__get(i)) );
					//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T3 __temp_odecl3 = ((T3) (((haxe.root.Array<T3>) (array3) ).__get(i)) );
					//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 1039 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				array.push(((java.lang.Object) (this1) ));
			}
			
		}
		
		//line 1040 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T1, T2, T3, T4> haxe.root.Array<java.lang.Object> zip4(haxe.root.Array<T1> array1, haxe.root.Array<T2> array2, haxe.root.Array<T3> array3, haxe.root.Array<T4> array4)
	{
		//line 1047 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object length = thx.ArrayInts.min(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{array1.length, array2.length, array3.length, array4.length}));
		//line 1047 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> array = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 1049 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1049 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1049 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ((int) (haxe.lang.Runtime.toInt(length)) );
			//line 1049 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1049 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object this1 = null;
				//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T1 __temp_odecl1 = ((T1) (((haxe.root.Array<T1>) (array1) ).__get(i)) );
					//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T2 __temp_odecl2 = ((T2) (((haxe.root.Array<T2>) (array2) ).__get(i)) );
					//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T3 __temp_odecl3 = ((T3) (((haxe.root.Array<T3>) (array3) ).__get(i)) );
					//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T4 __temp_odecl4 = ((T4) (((haxe.root.Array<T4>) (array4) ).__get(i)) );
					//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2", "_3"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 1050 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				array.push(((java.lang.Object) (this1) ));
			}
			
		}
		
		//line 1051 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <T1, T2, T3, T4, T5> haxe.root.Array<java.lang.Object> zip5(haxe.root.Array<T1> array1, haxe.root.Array<T2> array2, haxe.root.Array<T3> array3, haxe.root.Array<T4> array4, haxe.root.Array<T5> array5)
	{
		//line 1058 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object length = thx.ArrayInts.min(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{array1.length, array2.length, array3.length, array4.length, array5.length}));
		//line 1058 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<java.lang.Object> array = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 1060 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1060 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1060 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ((int) (haxe.lang.Runtime.toInt(length)) );
			//line 1060 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1060 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object this1 = null;
				//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				{
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T1 __temp_odecl1 = ((T1) (((haxe.root.Array<T1>) (array1) ).__get(i)) );
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T2 __temp_odecl2 = ((T2) (((haxe.root.Array<T2>) (array2) ).__get(i)) );
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T3 __temp_odecl3 = ((T3) (((haxe.root.Array<T3>) (array3) ).__get(i)) );
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T4 __temp_odecl4 = ((T4) (((haxe.root.Array<T4>) (array4) ).__get(i)) );
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					T5 __temp_odecl5 = ((T5) (((haxe.root.Array<T5>) (array5) ).__get(i)) );
					//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1", "_2", "_3", "_4"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4, __temp_odecl5}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 1061 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				array.push(((java.lang.Object) (this1) ));
			}
			
		}
		
		//line 1062 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static <A, B> haxe.root.Array<B> zipAp(haxe.root.Array<A> ax, haxe.root.Array<haxe.lang.Function> fx)
	{
		//line 1069 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<B> result = new haxe.root.Array<B>(( (B[]) (new java.lang.Object[] {}) ));
		//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int a = ax.length;
			//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int b = fx.length;
			//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = ( (( a < b )) ? (a) : (b) );
			//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1070 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1071 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				result.push(((B) (((haxe.lang.Function) (((haxe.root.Array<haxe.lang.Function>) (fx) ).__get(i)) ).__hx_invoke1_o(0.0, ((A) (((haxe.root.Array<A>) (ax) ).__get(i)) ))) ));
			}
			
		}
		
		//line 1073 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return result;
	}
	
	
	public static <A, B, C> haxe.root.Array<C> zip2Ap(haxe.lang.Function f, haxe.root.Array<A> ax, haxe.root.Array<B> bx)
	{
		//line 1080 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<C>) (thx.Arrays.zipAp(((haxe.root.Array<B>) (bx) ), ((haxe.root.Array<haxe.lang.Function>) (((haxe.root.Array) (ax.map(((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (f) ))) ))) )) ))) );
	}
	
	
	public static <A, B, C, D> haxe.root.Array<D> zip3Ap(haxe.lang.Function f, haxe.root.Array<A> ax, haxe.root.Array<B> bx, haxe.root.Array<C> cx)
	{
		//line 1086 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.lang.Function f1 = f;
		//line 1086 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<D>) (thx.Arrays.zipAp(((haxe.root.Array<C>) (cx) ), ((haxe.root.Array<haxe.lang.Function>) (((haxe.root.Array) (thx.Arrays.zip2Ap(((haxe.lang.Function) (new thx.Arrays_zip3Ap_1086__Fun<C, D, B, A>(f1)) ), ((haxe.root.Array<A>) (ax) ), ((haxe.root.Array<B>) (bx) ))) )) ))) );
	}
	
	
	public static <A, B, C, D, E> haxe.root.Array<E> zip4Ap(haxe.lang.Function f, haxe.root.Array<A> ax, haxe.root.Array<B> bx, haxe.root.Array<C> cx, haxe.root.Array<D> dx)
	{
		//line 1092 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.lang.Function f1 = f;
		//line 1092 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<E>) (thx.Arrays.zipAp(((haxe.root.Array<D>) (dx) ), ((haxe.root.Array<haxe.lang.Function>) (((haxe.root.Array) (thx.Arrays.zip3Ap(((haxe.lang.Function) (new thx.Arrays_zip4Ap_1092__Fun<D, E, C, B, A>(f1)) ), ((haxe.root.Array<A>) (ax) ), ((haxe.root.Array<B>) (bx) ), ((haxe.root.Array<C>) (cx) ))) )) ))) );
	}
	
	
	public static <A, B, C, D, E, F> haxe.root.Array<F> zip5Ap(haxe.lang.Function f, haxe.root.Array<A> ax, haxe.root.Array<B> bx, haxe.root.Array<C> cx, haxe.root.Array<D> dx, haxe.root.Array<E> ex)
	{
		//line 1098 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.lang.Function f1 = f;
		//line 1098 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<F>) (thx.Arrays.zipAp(((haxe.root.Array<E>) (ex) ), ((haxe.root.Array<haxe.lang.Function>) (((haxe.root.Array) (thx.Arrays.zip4Ap(((haxe.lang.Function) (new thx.Arrays_zip5Ap_1098__Fun<E, F, D, C, B, A>(f1)) ), ((haxe.root.Array<A>) (ax) ), ((haxe.root.Array<B>) (bx) ), ((haxe.root.Array<C>) (cx) ), ((haxe.root.Array<D>) (dx) ))) )) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> withPrepend(haxe.root.Array<T> arr, T el)
	{
		//line 1104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) )).concat(((haxe.root.Array<T>) (arr) ));
	}
	
	
	public static <T> haxe.root.Array<T> with(haxe.root.Array<T> arr, T el)
	{
		//line 1110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array<T>) (arr) ).concat(((haxe.root.Array<T>) (new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> withSlice(haxe.root.Array<T> arr, haxe.root.Array<T> other, int start, java.lang.Object length)
	{
		//line 1116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		java.lang.Object __temp_length48 = ( (haxe.lang.Runtime.eq(length, null)) ? (((java.lang.Object) (0) )) : (length) );
		//line 1116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr.slice(0, start).concat(((haxe.root.Array<T>) (other) )).concat(arr.slice(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.plus(start, __temp_length48))) ), null));
	}
	
	
	public static <T> haxe.root.Array<T> withInsert(haxe.root.Array<T> arr, T el, int pos)
	{
		//line 1122 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return arr.slice(0, pos).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(arr.slice(pos, null));
	}
	
	
	public static <A> haxe.ds.Option maxBy(haxe.root.Array<A> arr, haxe.lang.Function ord)
	{
		//line 1128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( arr.length == 0 )) 
		{
			//line 1128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 1128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.lang.Function _e = ord;
			//line 1128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.Some(((A) (thx.Arrays.reduce(((haxe.root.Array<A>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_maxBy_1128__Fun<A>(_e)) ), ((A) (((haxe.root.Array<A>) (arr) ).__get(0)) ))) ));
		}
		
	}
	
	
	public static <A> haxe.ds.Option minBy(haxe.root.Array<A> arr, haxe.lang.Function ord)
	{
		//line 1134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		if (( arr.length == 0 )) 
		{
			//line 1134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 1134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			haxe.lang.Function _e = ord;
			//line 1134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			return haxe.ds.Option.Some(((A) (thx.Arrays.reduce(((haxe.root.Array<A>) (arr) ), ((haxe.lang.Function) (new thx.Arrays_minBy_1134__Fun<A>(_e)) ), ((A) (((haxe.root.Array<A>) (arr) ).__get(0)) ))) ));
		}
		
	}
	
	
	public static <K, V> thx.Either toMap(haxe.root.Array<java.lang.Object> arr, haxe.lang.Function keyOrder)
	{
		//line 1141 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		thx.fp.MapImpl m = ((thx.fp.MapImpl) (thx.fp.MapImpl.Tip) );
		//line 1142 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<K> collisions = new haxe.root.Array<K>(( (K[]) (new java.lang.Object[] {}) ));
		//line 1143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		{
			//line 1143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g1 = 0;
			//line 1143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			int _g = arr.length;
			//line 1143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			while (( _g1 < _g ))
			{
				//line 1143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				int i = _g1++;
				//line 1144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				java.lang.Object tuple = ((java.lang.Object) (((haxe.root.Array<java.lang.Object>) (arr) ).__get(i)) );
				//line 1145 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				if (((boolean) (thx.Options.isNone(((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (m) ), ((K) (haxe.lang.Runtime.getField(tuple, "_0", true)) ), ((haxe.lang.Function) (keyOrder) ))) ))) )) 
				{
					//line 1146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					m = ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.insert(((thx.fp.MapImpl) (m) ), ((K) (haxe.lang.Runtime.getField(tuple, "_0", true)) ), ((V) (haxe.lang.Runtime.getField(tuple, "_1", true)) ), ((haxe.lang.Function) (keyOrder) ))) );
				}
				else
				{
					//line 1148 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
					collisions.push(((K) (haxe.lang.Runtime.getField(tuple, "_0", true)) ));
				}
				
			}
			
		}
		
		//line 1152 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((thx.Either) (thx.Options.toFailure(((haxe.ds.Option) (thx._Nel.Nel_Impl_.fromArray(((haxe.root.Array<K>) (collisions) ))) ), ((thx.fp.MapImpl) (m) ))) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return new thx.Arrays(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return new thx.Arrays();
	}
	
	
}


