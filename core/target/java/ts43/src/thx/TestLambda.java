// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestLambda extends haxe.lang.HxObject
{
	public TestLambda(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestLambda(int i)
	{
		//line 8 "/shared/core/test/thx/TestLambda.hx"
		thx.TestLambda.__hx_ctor_thx_TestLambda(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestLambda(thx.TestLambda __temp_me112, int i)
	{
		//line 9 "/shared/core/test/thx/TestLambda.hx"
		__temp_me112.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		return new thx.TestLambda(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		return new thx.TestLambda(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testFunctions()
	{
		//line 13 "/shared/core/test/thx/TestLambda.hx"
		int _g1 = 0;
		//line 13 "/shared/core/test/thx/TestLambda.hx"
		int _g = this.x;
		//line 13 "/shared/core/test/thx/TestLambda.hx"
		while (( _g1 < _g ))
		{
			//line 13 "/shared/core/test/thx/TestLambda.hx"
			 ++ _g1;
			//line 14 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{2, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2}).map(((haxe.lang.Function) (( (( thx.TestLambda_testFunctions_14__Fun.__hx_current != null )) ? (thx.TestLambda_testFunctions_14__Fun.__hx_current) : (thx.TestLambda_testFunctions_14__Fun.__hx_current = ((thx.TestLambda_testFunctions_14__Fun) (new thx.TestLambda_testFunctions_14__Fun()) )) )) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
			//line 16 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(0, 0, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
			//line 17 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(2, ((java.lang.Object) (2) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
			//line 18 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
			//line 19 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
			//line 20 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 21 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 23 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(1, haxe.root.Std.parseInt("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
			//line 24 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(1, haxe.root.Std.parseInt("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(1, ((java.lang.Object) (1) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
			//line 26 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
			//line 27 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
			//line 28 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
			//line 29 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
			//line 31 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(1, ((java.lang.Object) (1) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
			//line 32 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
			//line 33 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
			//line 34 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
			//line 35 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
			//line 37 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("Test 1", ( "Test " + "1" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
			//line 38 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("Test 1+2", ( ( ( "Test " + "1" ) + "+" ) + "2" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
			//line 39 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("BA", ( "B" + "A" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
			//line 40 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("21", ( ( "" + 2 ) + "1" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 41 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("$_1$_0", "$_1$_0", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
			//line 42 "/shared/core/test/thx/TestLambda.hx"
			utest.Assert.equals("$_0", ( "$" + "_0" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
		}
		
	}
	
	
	public void testForms()
	{
		//line 47 "/shared/core/test/thx/TestLambda.hx"
		int _g1 = 0;
		//line 47 "/shared/core/test/thx/TestLambda.hx"
		int _g = this.x;
		//line 47 "/shared/core/test/thx/TestLambda.hx"
		while (( _g1 < _g ))
		{
			//line 47 "/shared/core/test/thx/TestLambda.hx"
			 ++ _g1;
			//line 48 "/shared/core/test/thx/TestLambda.hx"
			{
				//line 49 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (49) )) )}));
				//line 53 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
				//line 56 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (56) )) )}));
				//line 63 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(0, 0, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (63) )) )}));
				//line 67 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
				//line 70 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (70) )) )}));
				//line 74 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (74) )) )}));
				//line 77 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (77) )) )}));
				//line 81 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (81) )) )}));
				//line 84 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (84) )) )}));
				//line 86 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(false, false, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
				//line 87 "/shared/core/test/thx/TestLambda.hx"
				utest.Assert.equals(true, true, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (87) )) )}));
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						this.x = ((int) (value) );
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case -1203346755:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("testForms")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testForms")) );
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return this.x;
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
				case 529131305:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("testFunctions")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFunctions")) );
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						return ((double) (this.x) );
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case -1203346755:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("testForms")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						this.testForms();
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
				case 529131305:
				{
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					if (field.equals("testFunctions")) 
					{
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestLambda.hx"
						this.testFunctions();
					}
					
					//line 6 "/shared/core/test/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestLambda.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		baseArr.push("x");
		//line 6 "/shared/core/test/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/test/thx/TestLambda.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


