// Generated by Haxe 3.3.0
package thx.fp._Set;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Set_Impl_
{
	static
	{
		//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		thx.fp._Set.Set_Impl_.delta = 4;
		//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		thx.fp._Set.Set_Impl_.ratio = 4;
	}
	
	public static <X> thx.fp.SetImpl empty()
	{
		//line 7 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return thx.fp.SetImpl.Tip;
	}
	
	
	public static <X> thx.fp.SetImpl singleton(X x)
	{
		//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return thx.fp.SetImpl.Bin(1, x, thx.fp.SetImpl.Tip, thx.fp.SetImpl.Tip);
	}
	
	
	public static <X> thx.fp.SetImpl bin(X x, thx.fp.SetImpl l, thx.fp.SetImpl r)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (l) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (r) ))) ) ) + 1 ), x, l, r);
	}
	
	
	public static <X> boolean isEmpty(thx.fp.SetImpl this1)
	{
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return true;
			}
			
			
			case 1:
			{
				//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return false;
			}
			
			
		}
		
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return false;
	}
	
	
	public static <X> int size(thx.fp.SetImpl this1)
	{
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return 0;
			}
			
			
			case 1:
			{
				//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				int sz = ((int) (haxe.lang.Runtime.toInt(this1.params[0])) );
				//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return sz;
			}
			
			
		}
		
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return 0;
	}
	
	
	public static <X> boolean member(thx.fp.SetImpl this1, X x, haxe.lang.Function comparator)
	{
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return false;
			}
			
			
			case 1:
			{
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (this1.params[3]) );
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (this1.params[2]) );
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X y = ((X) (this1.params[1]) );
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.OrderingImpl _g = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, x, 0.0, y)) );
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				switch (_g)
				{
					case LT:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return ((boolean) (thx.fp._Set.Set_Impl_.member(((thx.fp.SetImpl) (l) ), ((X) (x) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case GT:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return ((boolean) (thx.fp._Set.Set_Impl_.member(((thx.fp.SetImpl) (r) ), ((X) (x) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case EQ:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return true;
					}
					
					
				}
				
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				break;
			}
			
			
		}
		
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return false;
	}
	
	
	public static <B, X> B foldLeft(thx.fp.SetImpl this1, B b, haxe.lang.Function f)
	{
		//line 33 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 33 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return b;
			}
			
			
			case 1:
			{
				//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (this1.params[3]) );
				//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (this1.params[2]) );
				//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X x = ((X) (this1.params[1]) );
				//line 33 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((B) (thx.fp._Set.Set_Impl_.foldLeft(((thx.fp.SetImpl) (r) ), ((B) (thx.fp._Set.Set_Impl_.foldLeft(((thx.fp.SetImpl) (l) ), ((B) (f.__hx_invoke2_o(0.0, b, 0.0, x)) ), ((haxe.lang.Function) (f) ))) ), ((haxe.lang.Function) (f) ))) );
			}
			
			
		}
		
		//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return null;
	}
	
	
	public static <X> thx.fp.SetImpl insert(thx.fp.SetImpl this1, X x, haxe.lang.Function comparator)
	{
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(1, x, thx.fp.SetImpl.Tip, thx.fp.SetImpl.Tip)) );
			}
			
			
			case 1:
			{
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (this1.params[3]) );
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (this1.params[2]) );
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X y = ((X) (this1.params[1]) );
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				int sz = ((int) (haxe.lang.Runtime.toInt(this1.params[0])) );
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.OrderingImpl _g = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, x, 0.0, y)) );
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				switch (_g)
				{
					case LT:
					{
						//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.balance(((thx.fp.SetImpl) (l) ), ((X) (y) ), ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.insert(((thx.fp.SetImpl) (l) ), ((X) (x) ), ((haxe.lang.Function) (comparator) ))) ), ((thx.fp.SetImpl) (r) ))) );
					}
					
					
					case GT:
					{
						//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.balance(((thx.fp.SetImpl) (r) ), ((X) (y) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.insert(((thx.fp.SetImpl) (r) ), ((X) (x) ), ((haxe.lang.Function) (comparator) ))) ))) );
					}
					
					
					case EQ:
					{
						//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return thx.fp.SetImpl.Bin(sz, x, l, r);
					}
					
					
				}
				
				//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				break;
			}
			
			
		}
		
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return null;
	}
	
	
	public static <Y, X> thx.fp.ListImpl mapList(thx.fp.SetImpl this1, haxe.lang.Function f)
	{
		//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.ListImpl) (thx.fp.ListImpl.Nil) );
			}
			
			
			case 1:
			{
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (this1.params[3]) );
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (this1.params[2]) );
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X y = ((X) (this1.params[1]) );
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return thx.fp.ListImpl.Cons(((Y) (f.__hx_invoke1_o(0.0, y)) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.concat(((thx.fp.ListImpl) (thx.fp._Set.Set_Impl_.mapList(((thx.fp.SetImpl) (l) ), ((haxe.lang.Function) (f) ))) ), ((thx.fp.ListImpl) (thx.fp._Set.Set_Impl_.mapList(((thx.fp.SetImpl) (r) ), ((haxe.lang.Function) (f) ))) ))) ));
			}
			
			
		}
		
		//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return null;
	}
	
	
	public static int delta;
	
	public static int ratio;
	
	public static <X> thx.fp.SetImpl balance(thx.fp.SetImpl this1, X x, thx.fp.SetImpl l, thx.fp.SetImpl r)
	{
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		int sl = ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (l) ))) );
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		int sr = ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (r) ))) );
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		int sx = ( ( sl + sr ) + 1 );
		//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		if (( ( sl + sr ) <= 1 )) 
		{
			//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
			return thx.fp.SetImpl.Bin(sx, x, l, r);
		}
		else
		{
			//line 63 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
			if (( sr >= ( 4 * sl ) )) 
			{
				//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.rotateLeft(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
			}
			else
			{
				//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				if (( sl >= ( 4 * sr ) )) 
				{
					//line 66 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.rotateRight(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
				}
				else
				{
					//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return thx.fp.SetImpl.Bin(sx, x, l, r);
				}
				
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl rotateLeft(X x, thx.fp.SetImpl l, thx.fp.SetImpl r)
	{
		//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (r.index)
		{
			case 1:
			{
				//line 74 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl ry = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[3]) );
				//line 74 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl ly = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) );
				//line 74 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				if (( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (ly) ))) ) < ( 4 * ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (ry) ))) ) ) )) 
				{
					//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.singleLeft(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
				}
				else
				{
					//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.doubleLeft(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
				}
				
			}
			
			
			default:
			{
				//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.doubleLeft(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl rotateRight(X x, thx.fp.SetImpl l, thx.fp.SetImpl r)
	{
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (l.index)
		{
			case 1:
			{
				//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl ry = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) );
				//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl ly = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[2]) );
				//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				if (( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (ry) ))) ) < ( 4 * ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (ly) ))) ) ) )) 
				{
					//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.singleRight(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
				}
				else
				{
					//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
					return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.doubleRight(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
				}
				
			}
			
			
			default:
			{
				//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.SetImpl) (thx.fp._Set.Set_Impl_.doubleRight(((X) (x) ), ((thx.fp.SetImpl) (l) ), ((thx.fp.SetImpl) (r) ))) );
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl singleLeft(X x1, thx.fp.SetImpl t1, thx.fp.SetImpl r)
	{
		//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (r.index)
		{
			case 1:
			{
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl t3 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[3]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl t2 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X x2 = ((X) (((thx.fp.SetImpl) (r) ).params[1]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t1) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t2) ))) ) ) + 1 ), x1, t1, t2)) );
				//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (l) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t3) ))) ) ) + 1 ), x2, l, t3);
			}
			
			
			default:
			{
				//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "singleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (91) )) )})));
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl singleRight(X x1, thx.fp.SetImpl l, thx.fp.SetImpl t3)
	{
		//line 95 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (l.index)
		{
			case 1:
			{
				//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl t2 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) );
				//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl t1 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[2]) );
				//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X x2 = ((X) (((thx.fp.SetImpl) (l) ).params[1]) );
				//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t2) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t3) ))) ) ) + 1 ), x1, t2, t3)) );
				//line 95 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t1) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (r) ))) ) ) + 1 ), x2, t1, r);
			}
			
			
			default:
			{
				//line 97 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "singleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (97) )) )})));
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl doubleLeft(X x1, thx.fp.SetImpl t1, thx.fp.SetImpl r)
	{
		//line 101 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (r.index)
		{
			case 1:
			{
				//line 101 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				switch (((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) ).index)
				{
					case 1:
					{
						//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t4 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[3]) );
						//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						X x2 = ((X) (((thx.fp.SetImpl) (r) ).params[1]) );
						//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t3 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) ).params[3]) );
						//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t2 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) ).params[2]) );
						//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						X x3 = ((X) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (r) ).params[2]) ).params[1]) );
						//line 103 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl l = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t1) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t2) ))) ) ) + 1 ), x1, t1, t2)) );
						//line 103 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl r1 = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t3) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t4) ))) ) ) + 1 ), x2, t3, t4)) );
						//line 101 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (l) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (r1) ))) ) ) + 1 ), x3, l, r1);
					}
					
					
					default:
					{
						//line 104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "doubleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )})));
					}
					
				}
				
			}
			
			
			default:
			{
				//line 104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "doubleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )})));
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.SetImpl doubleRight(X x1, thx.fp.SetImpl l, thx.fp.SetImpl t4)
	{
		//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (l.index)
		{
			case 1:
			{
				//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				switch (((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) ).index)
				{
					case 1:
					{
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						X x2 = ((X) (((thx.fp.SetImpl) (l) ).params[1]) );
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t1 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[2]) );
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t3 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) ).params[3]) );
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl t2 = ((thx.fp.SetImpl) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) ).params[2]) );
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						X x3 = ((X) (((thx.fp.SetImpl) (((thx.fp.SetImpl) (l) ).params[3]) ).params[1]) );
						//line 110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl l1 = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t1) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t2) ))) ) ) + 1 ), x2, t1, t2)) );
						//line 110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						thx.fp.SetImpl r = ((thx.fp.SetImpl) (thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t3) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (t4) ))) ) ) + 1 ), x1, t3, t4)) );
						//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						return thx.fp.SetImpl.Bin(( ( ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (l1) ))) ) + ((int) (thx.fp._Set.Set_Impl_.size(((thx.fp.SetImpl) (r) ))) ) ) + 1 ), x3, l1, r);
					}
					
					
					default:
					{
						//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
						throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "doubleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (111) )) )})));
					}
					
				}
				
			}
			
			
			default:
			{
				//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Set.Set_Impl_", "Set.hx", "doubleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (111) )) )})));
			}
			
		}
		
	}
	
	
	public static <X> thx.fp.ListImpl toList(thx.fp.SetImpl this1)
	{
		//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return ((thx.fp.ListImpl) (thx.fp.ListImpl.Nil) );
			}
			
			
			case 1:
			{
				//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl r = ((thx.fp.SetImpl) (this1.params[3]) );
				//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				thx.fp.SetImpl l = ((thx.fp.SetImpl) (this1.params[2]) );
				//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				X x = ((X) (this1.params[1]) );
				//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
				return thx.fp.ListImpl.Cons(x, ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.concat(((thx.fp.ListImpl) (thx.fp._Set.Set_Impl_.toList(((thx.fp.SetImpl) (l) ))) ), ((thx.fp.ListImpl) (thx.fp._Set.Set_Impl_.toList(((thx.fp.SetImpl) (r) ))) ))) ));
			}
			
			
		}
		
		//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Set.hx"
		return null;
	}
	
	
}


