// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestEithers extends haxe.lang.HxObject
{
	public TestEithers(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestEithers(int i)
	{
		//line 9 "/shared/core/test/thx/TestEithers.hx"
		thx.TestEithers.__hx_ctor_thx_TestEithers(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestEithers(thx.TestEithers __temp_me111, int i)
	{
		//line 10 "/shared/core/test/thx/TestEithers.hx"
		__temp_me111.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		return new thx.TestEithers(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		return new thx.TestEithers(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testIsLeft()
	{
		//line 14 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 14 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 14 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 14 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 15 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isTrue(((boolean) (thx.Eithers.isLeft(((thx.Either) (thx.Either.Left(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
			//line 16 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isFalse(((boolean) (thx.Eithers.isLeft(((thx.Either) (thx.Either.Right(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		}
		
	}
	
	
	public void testIsRight()
	{
		//line 20 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 20 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 20 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 20 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 21 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isFalse(((boolean) (thx.Eithers.isRight(((thx.Either) (thx.Either.Left(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 22 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isTrue(((boolean) (thx.Eithers.isRight(((thx.Either) (thx.Either.Right(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
		}
		
	}
	
	
	public void testToLeft()
	{
		//line 26 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 26 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 26 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 26 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 27 "/shared/core/test/thx/TestEithers.hx"
			haxe.ds.Option _g2 = ((haxe.ds.Option) (thx.Eithers.toLeft(((thx.Either) (thx.Either.Left(123)) ))) );
			//line 27 "/shared/core/test/thx/TestEithers.hx"
			java.lang.Object tmp = null;
			//line 27 "/shared/core/test/thx/TestEithers.hx"
			switch (_g2.index)
			{
				case 0:
				{
					//line 28 "/shared/core/test/thx/TestEithers.hx"
					int v = ((int) (haxe.lang.Runtime.toInt(_g2.params[0])) );
					//line 27 "/shared/core/test/thx/TestEithers.hx"
					tmp = v;
					//line 28 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1:
				{
					//line 27 "/shared/core/test/thx/TestEithers.hx"
					tmp = null;
					//line 27 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 27 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(123, tmp, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
			//line 32 "/shared/core/test/thx/TestEithers.hx"
			haxe.ds.Option _g3 = ((haxe.ds.Option) (thx.Eithers.toLeft(((thx.Either) (thx.Either.Right(123)) ))) );
			//line 32 "/shared/core/test/thx/TestEithers.hx"
			java.lang.Object tmp1 = null;
			//line 32 "/shared/core/test/thx/TestEithers.hx"
			switch (_g3.index)
			{
				case 0:
				{
					//line 33 "/shared/core/test/thx/TestEithers.hx"
					java.lang.Object v1 = _g3.params[0];
					//line 32 "/shared/core/test/thx/TestEithers.hx"
					tmp1 = v1;
					//line 33 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1:
				{
					//line 32 "/shared/core/test/thx/TestEithers.hx"
					tmp1 = null;
					//line 32 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 32 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isNull(tmp1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
		}
		
	}
	
	
	public void testToRight()
	{
		//line 39 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 39 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 39 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 39 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 40 "/shared/core/test/thx/TestEithers.hx"
			haxe.ds.Option _g2 = ((haxe.ds.Option) (thx.Eithers.toRight(((thx.Either) (thx.Either.Right(123)) ))) );
			//line 40 "/shared/core/test/thx/TestEithers.hx"
			java.lang.Object tmp = null;
			//line 40 "/shared/core/test/thx/TestEithers.hx"
			switch (_g2.index)
			{
				case 0:
				{
					//line 41 "/shared/core/test/thx/TestEithers.hx"
					int v = ((int) (haxe.lang.Runtime.toInt(_g2.params[0])) );
					//line 40 "/shared/core/test/thx/TestEithers.hx"
					tmp = v;
					//line 41 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1:
				{
					//line 40 "/shared/core/test/thx/TestEithers.hx"
					tmp = null;
					//line 40 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 40 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(123, tmp, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 45 "/shared/core/test/thx/TestEithers.hx"
			haxe.ds.Option _g3 = ((haxe.ds.Option) (thx.Eithers.toRight(((thx.Either) (thx.Either.Left(123)) ))) );
			//line 45 "/shared/core/test/thx/TestEithers.hx"
			java.lang.Object tmp1 = null;
			//line 45 "/shared/core/test/thx/TestEithers.hx"
			switch (_g3.index)
			{
				case 0:
				{
					//line 46 "/shared/core/test/thx/TestEithers.hx"
					java.lang.Object v1 = _g3.params[0];
					//line 45 "/shared/core/test/thx/TestEithers.hx"
					tmp1 = v1;
					//line 46 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1:
				{
					//line 45 "/shared/core/test/thx/TestEithers.hx"
					tmp1 = null;
					//line 45 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 45 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.isNull(tmp1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
		}
		
	}
	
	
	public void testToLeftUnsafe()
	{
		//line 52 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 52 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 52 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 52 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 53 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(123, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Either.Left(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeftUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
			//line 54 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Either.Right(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeftUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (54) )) )}));
		}
		
	}
	
	
	public void testToRightUnsafe()
	{
		//line 58 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 58 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 58 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 58 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 59 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(123, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Either.Right(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRightUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
			//line 60 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Either.Left(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRightUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (60) )) )}));
		}
		
	}
	
	
	public void testFlatMap()
	{
		//line 64 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 64 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 64 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 64 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 65 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(5, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_65__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_65__Fun.__hx_current) : (thx.TestEithers_testFlatMap_65__Fun.__hx_current = ((thx.TestEithers_testFlatMap_65__Fun) (new thx.TestEithers_testFlatMap_65__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (65) )) )}));
			//line 69 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(5, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_69__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_69__Fun.__hx_current) : (thx.TestEithers_testFlatMap_69__Fun.__hx_current = ((thx.TestEithers_testFlatMap_69__Fun) (new thx.TestEithers_testFlatMap_69__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (69) )) )}));
			//line 73 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(10, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_73__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_73__Fun.__hx_current) : (thx.TestEithers_testFlatMap_73__Fun.__hx_current = ((thx.TestEithers_testFlatMap_73__Fun) (new thx.TestEithers_testFlatMap_73__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (73) )) )}));
			//line 77 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_77__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_77__Fun.__hx_current) : (thx.TestEithers_testFlatMap_77__Fun.__hx_current = ((thx.TestEithers_testFlatMap_77__Fun) (new thx.TestEithers_testFlatMap_77__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (77) )) )}));
			//line 81 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_81__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_81__Fun.__hx_current) : (thx.TestEithers_testFlatMap_81__Fun.__hx_current = ((thx.TestEithers_testFlatMap_81__Fun) (new thx.TestEithers_testFlatMap_81__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (81) )) )}));
			//line 85 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_85__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_85__Fun.__hx_current) : (thx.TestEithers_testFlatMap_85__Fun.__hx_current = ((thx.TestEithers_testFlatMap_85__Fun) (new thx.TestEithers_testFlatMap_85__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (85) )) )}));
			//line 89 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_89__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_89__Fun.__hx_current) : (thx.TestEithers_testFlatMap_89__Fun.__hx_current = ((thx.TestEithers_testFlatMap_89__Fun) (new thx.TestEithers_testFlatMap_89__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
			//line 93 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(10, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_93__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_93__Fun.__hx_current) : (thx.TestEithers_testFlatMap_93__Fun.__hx_current = ((thx.TestEithers_testFlatMap_93__Fun) (new thx.TestEithers_testFlatMap_93__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (93) )) )}));
		}
		
	}
	
	
	public void testLeftMap()
	{
		//line 99 "/shared/core/test/thx/TestEithers.hx"
		int _g1 = 0;
		//line 99 "/shared/core/test/thx/TestEithers.hx"
		int _g = this.x;
		//line 99 "/shared/core/test/thx/TestEithers.hx"
		while (( _g1 < _g ))
		{
			//line 99 "/shared/core/test/thx/TestEithers.hx"
			 ++ _g1;
			//line 100 "/shared/core/test/thx/TestEithers.hx"
			thx.Either l = thx.Either.Left(1);
			//line 101 "/shared/core/test/thx/TestEithers.hx"
			thx.Either rt = thx.Either.Right(true);
			//line 102 "/shared/core/test/thx/TestEithers.hx"
			thx.Either l2 = thx.Either.Left(2);
			//line 103 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(l2, ((thx.Either) (thx.Eithers.leftMap(((thx.Either) (l) ), ((haxe.lang.Function) (( (( thx.TestEithers_testLeftMap_103__Fun.__hx_current != null )) ? (thx.TestEithers_testLeftMap_103__Fun.__hx_current) : (thx.TestEithers_testLeftMap_103__Fun.__hx_current = ((thx.TestEithers_testLeftMap_103__Fun) (new thx.TestEithers_testLeftMap_103__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testLeftMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (103) )) )}));
			//line 104 "/shared/core/test/thx/TestEithers.hx"
			utest.Assert.same(rt, ((thx.Either) (thx.Eithers.leftMap(((thx.Either) (rt) ), ((haxe.lang.Function) (( (( thx.TestEithers_testLeftMap_104__Fun.__hx_current != null )) ? (thx.TestEithers_testLeftMap_104__Fun.__hx_current) : (thx.TestEithers_testLeftMap_104__Fun.__hx_current = ((thx.TestEithers_testLeftMap_104__Fun) (new thx.TestEithers_testLeftMap_104__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testLeftMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.x = ((int) (value) );
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return value;
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return value;
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case -337172765:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testLeftMap")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testLeftMap")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return this.x;
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlatMap")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1439397763:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testIsLeft")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIsLeft")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 681589237:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToRightUnsafe")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToRightUnsafe")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1677318688:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testIsRight")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIsRight")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1095081754:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToLeftUnsafe")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToLeftUnsafe")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1750624340:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToLeft")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToLeft")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case -1559559313:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToRight")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToRight")) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						return ((double) (this.x) );
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case -337172765:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testLeftMap")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testLeftMap();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1439397763:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testIsLeft")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testIsLeft();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testFlatMap();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1677318688:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testIsRight")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testIsRight();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 681589237:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToRightUnsafe")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testToRightUnsafe();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1750624340:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToLeft")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testToLeft();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case 1095081754:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToLeftUnsafe")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testToLeftUnsafe();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
				case -1559559313:
				{
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					if (field.equals("testToRight")) 
					{
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestEithers.hx"
						this.testToRight();
					}
					
					//line 7 "/shared/core/test/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestEithers.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		baseArr.push("x");
		//line 7 "/shared/core/test/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/test/thx/TestEithers.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


