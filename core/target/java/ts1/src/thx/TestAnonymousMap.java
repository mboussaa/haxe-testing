// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestAnonymousMap extends haxe.lang.HxObject
{
	public TestAnonymousMap(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestAnonymousMap(int i)
	{
		//line 16 "/shared/core/test/thx/TestAnonymousMap.hx"
		thx.TestAnonymousMap.__hx_ctor_thx_TestAnonymousMap(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestAnonymousMap(thx.TestAnonymousMap __temp_me112, int i)
	{
		//line 17 "/shared/core/test/thx/TestAnonymousMap.hx"
		__temp_me112.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		return new thx.TestAnonymousMap(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		return new thx.TestAnonymousMap(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testFeatures()
	{
		//line 21 "/shared/core/test/thx/TestAnonymousMap.hx"
		int _g1 = 0;
		//line 21 "/shared/core/test/thx/TestAnonymousMap.hx"
		int _g = this.x;
		//line 21 "/shared/core/test/thx/TestAnonymousMap.hx"
		while (( _g1 < _g ))
		{
			//line 21 "/shared/core/test/thx/TestAnonymousMap.hx"
			 ++ _g1;
			//line 22 "/shared/core/test/thx/TestAnonymousMap.hx"
			thx.AnonymousMap map = new thx.AnonymousMap(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"name", "type"}, new java.lang.Object[]{"thx", "library"}, new java.lang.String[]{}, new double[]{})) ));
			//line 23 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.equals("thx", map.get("name"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testFeatures"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
			//line 24 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.isTrue(map.exists("type"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testFeatures"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestAnonymousMap.hx"
			map.remove("type");
			//line 26 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.isFalse(map.exists("type"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testFeatures"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
			//line 27 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{"name"}), ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (map.keys()) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testFeatures"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
			//line 28 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{"thx"}), ((haxe.root.Array<java.lang.Object>) (thx.Iterators.toArray(((java.lang.Object) (map.iterator()) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testFeatures"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		}
		
	}
	
	
	public void testGetOption()
	{
		//line 32 "/shared/core/test/thx/TestAnonymousMap.hx"
		int _g1 = 0;
		//line 32 "/shared/core/test/thx/TestAnonymousMap.hx"
		int _g = this.x;
		//line 32 "/shared/core/test/thx/TestAnonymousMap.hx"
		while (( _g1 < _g ))
		{
			//line 32 "/shared/core/test/thx/TestAnonymousMap.hx"
			 ++ _g1;
			//line 33 "/shared/core/test/thx/TestAnonymousMap.hx"
			thx.AnonymousMap map = new thx.AnonymousMap(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"key1"}, new double[]{((double) (((double) (1) )) )})) ));
			//line 35 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.same(((java.lang.Object) (thx.Options.get(((haxe.ds.Option) (map.getOption("key1")) ))) ), 1, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testGetOption"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
			//line 36 "/shared/core/test/thx/TestAnonymousMap.hx"
			utest.Assert.same(((boolean) (thx.Options.toBool(((haxe.ds.Option) (map.getOption("key2")) ))) ), false, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestAnonymousMap", "TestAnonymousMap.hx", "testGetOption"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("x")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						this.x = ((int) (value) );
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return value;
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
			}
			
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("x")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return value;
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
			}
			
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			switch (field.hashCode())
			{
				case 1355582201:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("testGetOption")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testGetOption")) );
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
				case 120:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("x")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return this.x;
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
				case 423680751:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("testFeatures")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFeatures")) );
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
			}
			
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("x")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						return ((double) (this.x) );
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
			}
			
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			switch (field.hashCode())
			{
				case 1355582201:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("testGetOption")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						this.testGetOption();
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
				case 423680751:
				{
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					if (field.equals("testFeatures")) 
					{
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						__temp_executeDef1 = false;
						//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
						this.testFeatures();
					}
					
					//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
					break;
				}
				
				
			}
			
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		baseArr.push("x");
		//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
		{
			//line 14 "/shared/core/test/thx/TestAnonymousMap.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


