// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DefaultAssertBehavior extends haxe.lang.HxObject implements thx.IAssertBehavior
{
	public DefaultAssertBehavior(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DefaultAssertBehavior()
	{
		//line 685 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		thx.DefaultAssertBehavior.__hx_ctor_thx_DefaultAssertBehavior(this);
	}
	
	
	public static void __hx_ctor_thx_DefaultAssertBehavior(thx.DefaultAssertBehavior __temp_me53)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		return new thx.DefaultAssertBehavior(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		return new thx.DefaultAssertBehavior();
	}
	
	
	public void success(java.lang.Object pos)
	{
	}
	
	
	public void warn(java.lang.String message, java.lang.Object pos)
	{
		//line 694 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, message, 0.0, pos);
	}
	
	
	public void fail(java.lang.String message, java.lang.Object pos)
	{
		//line 697 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		throw haxe.lang.HaxeException.wrap(new thx.error.AssertError(message, pos));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		{
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			boolean __temp_executeDef1 = true;
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			switch (field.hashCode())
			{
				case 3135262:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("fail")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fail")) );
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
				case -1867169789:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("success")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "success")) );
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
				case 3641990:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("warn")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "warn")) );
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
			}
			
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			if (__temp_executeDef1) 
			{
				//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		{
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			boolean __temp_executeDef1 = true;
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			switch (field.hashCode())
			{
				case 3135262:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("fail")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						this.fail(haxe.lang.Runtime.toString(dynargs.__get(0)), dynargs.__get(1));
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
				case -1867169789:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("success")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						this.success(dynargs.__get(0));
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
				case 3641990:
				{
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					if (field.equals("warn")) 
					{
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						__temp_executeDef1 = false;
						//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
						this.warn(haxe.lang.Runtime.toString(dynargs.__get(0)), dynargs.__get(1));
					}
					
					//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
					break;
				}
				
				
			}
			
			//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
			if (__temp_executeDef1) 
			{
				//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 684 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		return null;
	}
	
	
}


