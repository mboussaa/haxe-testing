// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestObjects extends haxe.lang.HxObject
{
	public TestObjects(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestObjects(int i)
	{
		//line 14 "/shared/core/test/thx/TestObjects.hx"
		thx.TestObjects.__hx_ctor_thx_TestObjects(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestObjects(thx.TestObjects __temp_me111, int i)
	{
		//line 15 "/shared/core/test/thx/TestObjects.hx"
		__temp_me111.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		return new thx.TestObjects(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		return new thx.TestObjects(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testIssue20151201()
	{
		//line 19 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 19 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 19 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 19 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 20 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{"newId", "oldId"}, new java.lang.Object[]{"2", "1"}, new java.lang.String[]{}, new double[]{});
			//line 20 "/shared/core/test/thx/TestObjects.hx"
			java.lang.String s = thx.Objects.string(o);
			//line 22 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.stringContains("oldId : \"1\"", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
			//line 23 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.stringContains("newId : \"2\"", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
			//line 24 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.stringContains(", ", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(s.startsWith("{"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
			//line 26 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(s.endsWith("}"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		}
		
	}
	
	
	public void testObjects()
	{
		//line 30 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 30 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 30 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 30 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 31 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object ob = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{});
			//line 32 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(( haxe.root.Reflect.fields(ob).length == 0 ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
			//line 33 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{}), haxe.root.Reflect.fields(ob), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
			//line 35 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object ob1 = new haxe.lang.DynamicObject(new java.lang.String[]{"a", "b"}, new java.lang.Object[]{"A", "B"}, new java.lang.String[]{}, new double[]{});
			//line 36 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(( haxe.root.Reflect.fields(ob1).length == 0 ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
			//line 38 "/shared/core/test/thx/TestObjects.hx"
			haxe.root.Array<java.lang.String> fields = haxe.root.Reflect.fields(ob1);
			//line 39 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(fields.remove("a"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
			//line 40 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(fields.remove("b"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 41 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.equals(0, fields.length, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
			//line 43 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = ob1;
			//line 43 "/shared/core/test/thx/TestObjects.hx"
			haxe.root.Array values = ((haxe.root.Array) (haxe.root.Reflect.fields(o).map(((haxe.lang.Function) (new thx.TestObjects_testObjects_43__Fun(o)) ))) );
			//line 44 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(values.remove("A"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
			//line 45 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(values.remove("B"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
			//line 46 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.equals(0, values.length, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
			//line 48 "/shared/core/test/thx/TestObjects.hx"
			haxe.root.Array<java.lang.Object> tuples = thx.Objects.tuples(ob1);
			//line 50 "/shared/core/test/thx/TestObjects.hx"
			tuples.sort(( (( thx.TestObjects_testObjects_50__Fun.__hx_current != null )) ? (thx.TestObjects_testObjects_50__Fun.__hx_current) : (thx.TestObjects_testObjects_50__Fun.__hx_current = ((thx.TestObjects_testObjects_50__Fun) (new thx.TestObjects_testObjects_50__Fun()) )) ));
			//line 52 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{"a", "A"}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{"b", "B"}, new java.lang.String[]{}, new double[]{})}), tuples, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testObjects"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
		}
		
	}
	
	
	public void testAssign()
	{
		//line 55 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 55 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 55 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 55 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 56 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{"name"}, new java.lang.Object[]{"Franco"}, new java.lang.String[]{"age"}, new double[]{((double) (((double) (19) )) )});
			//line 57 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object out = thx.Objects.assign(o, new haxe.lang.DynamicObject(new java.lang.String[]{"age", "foo", "name"}, new java.lang.Object[]{"Two", "bar", "Michael"}, new java.lang.String[]{}, new double[]{}), null);
			//line 59 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("Michael", haxe.lang.Runtime.getField(out, "name", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testAssign"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
			//line 60 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("Two", haxe.lang.Runtime.getField(out, "age", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testAssign"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (60) )) )}));
			//line 61 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("bar", haxe.lang.Runtime.getField(out, "foo", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testAssign"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
			//line 63 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 63 "/shared/core/test/thx/TestObjects.hx"
				int _g2 = 0;
				//line 63 "/shared/core/test/thx/TestObjects.hx"
				haxe.root.Array<java.lang.String> _g3 = haxe.root.Reflect.fields(out);
				//line 63 "/shared/core/test/thx/TestObjects.hx"
				while (( _g2 < _g3.length ))
				{
					//line 63 "/shared/core/test/thx/TestObjects.hx"
					java.lang.String field = _g3.__get(_g2);
					//line 63 "/shared/core/test/thx/TestObjects.hx"
					 ++ _g2;
					//line 64 "/shared/core/test/thx/TestObjects.hx"
					utest.Assert.same(haxe.root.Reflect.field(out, field), haxe.root.Reflect.field(o, field), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testAssign"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (64) )) )}));
				}
				
			}
			
		}
		
	}
	
	
	public void testCombine()
	{
		//line 69 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 69 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 69 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 69 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 70 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{"name"}, new java.lang.Object[]{"Franco"}, new java.lang.String[]{"age"}, new double[]{((double) (((double) (19) )) )});
			//line 71 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object out = thx.Objects.combine(o, new haxe.lang.DynamicObject(new java.lang.String[]{"age", "foo", "name"}, new java.lang.Object[]{"Two", "bar", "Michael"}, new java.lang.String[]{}, new double[]{}));
			//line 73 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("Michael", haxe.lang.Runtime.getField(out, "name", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testCombine"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (73) )) )}));
			//line 74 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("Two", haxe.lang.Runtime.getField(out, "age", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testCombine"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (74) )) )}));
			//line 75 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("bar", haxe.lang.Runtime.getField(out, "foo", true), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testCombine"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (75) )) )}));
			//line 76 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("Franco", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o, "name", true)), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testCombine"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
		}
		
	}
	
	
	public void testMergeWithNullable()
	{
		//line 80 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 80 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 80 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 80 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 81 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object a = null;
			//line 79 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object options_sub = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) );
			//line 84 "/shared/core/test/thx/TestObjects.hx"
			a = ((java.lang.Object) (thx.Objects.combine(new haxe.lang.DynamicObject(new java.lang.String[]{"bar", "foo"}, new java.lang.Object[]{"qux", "baz"}, new java.lang.String[]{}, new double[]{}), options_sub)) );
			//line 89 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("baz", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(a, "foo", true)), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testMergeWithNullable"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
		}
		
	}
	
	
	public void testMergeWithTypedef()
	{
		//line 93 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 93 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 93 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 93 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 94 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object to = new haxe.lang.DynamicObject(new java.lang.String[]{"bar"}, new java.lang.Object[]{"qux"}, new java.lang.String[]{}, new double[]{});
			//line 94 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object from = new haxe.lang.DynamicObject(new java.lang.String[]{"extra", "foo"}, new java.lang.Object[]{"field", "baz"}, new java.lang.String[]{}, new double[]{});
			//line 102 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object merged = ((java.lang.Object) (thx.Objects.combine(to, from)) );
			//line 104 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(merged, "foo", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(from, "foo", true)), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testMergeWithTypedef"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )}));
			//line 105 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(merged, "bar", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(to, "bar", true)), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testMergeWithTypedef"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (105) )) )}));
			//line 106 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(haxe.lang.Runtime.getField(merged, "extra", false), "field", null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testMergeWithTypedef"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (106) )) )}));
		}
		
	}
	
	
	public void testHasPath()
	{
		//line 110 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 110 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 110 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 110 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 111 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = null;
			//line 111 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 112 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl2 = null;
				//line 112 "/shared/core/test/thx/TestObjects.hx"
				{
					//line 119 "/shared/core/test/thx/TestObjects.hx"
					haxe.root.Array<java.lang.Object> __temp_odecl1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test1"}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test2"}, new java.lang.String[]{}, new double[]{})});
					//line 112 "/shared/core/test/thx/TestObjects.hx"
					__temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"key3", "key4", "key5", "key6"}, new java.lang.Object[]{"abc", new haxe.root.Array<java.lang.String>(new java.lang.String[]{"one", "two"}), __temp_odecl1, null}, new java.lang.String[]{"key2"}, new double[]{((double) (((double) (123) )) )});
				}
				
				//line 111 "/shared/core/test/thx/TestObjects.hx"
				o = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 127 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(thx.Objects.hasPath(o, "key1.key2"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (127) )) )}));
			//line 128 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(thx.Objects.hasPath(o, "key1.key4.1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (128) )) )}));
			//line 129 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isTrue(thx.Objects.hasPath(o, "key1.key6"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (129) )) )}));
			//line 131 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(thx.Objects.hasPath(o, "key1.key4.2"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (131) )) )}));
			//line 132 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(thx.Objects.hasPath(o, "key1.key7"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (132) )) )}));
		}
		
	}
	
	
	public void testHasPathValue()
	{
		//line 136 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 136 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 136 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 136 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 137 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = null;
			//line 137 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 138 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl2 = null;
				//line 138 "/shared/core/test/thx/TestObjects.hx"
				{
					//line 146 "/shared/core/test/thx/TestObjects.hx"
					haxe.root.Array<java.lang.Object> __temp_odecl1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test1"}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test2"}, new java.lang.String[]{}, new double[]{})});
					//line 138 "/shared/core/test/thx/TestObjects.hx"
					__temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"key3", "key4", "key5", "key6"}, new java.lang.Object[]{"abc", new haxe.root.Array<java.lang.String>(new java.lang.String[]{"one", "two", null}), __temp_odecl1, null}, new java.lang.String[]{"key2"}, new double[]{((double) (((double) (123) )) )});
				}
				
				//line 137 "/shared/core/test/thx/TestObjects.hx"
				o = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 154 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(thx.Objects.hasPathValue(o, "key1.key6"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPathValue"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (154) )) )}));
			//line 155 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(thx.Objects.hasPathValue(o, "key1.key4.2"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPathValue"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (155) )) )}));
			//line 156 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isFalse(thx.Objects.hasPathValue(o, "key1.key7"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testHasPathValue"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (156) )) )}));
		}
		
	}
	
	
	public void testGetPath()
	{
		//line 160 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 160 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 160 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 160 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 161 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object o = null;
			//line 161 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 162 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl2 = null;
				//line 162 "/shared/core/test/thx/TestObjects.hx"
				{
					//line 169 "/shared/core/test/thx/TestObjects.hx"
					haxe.root.Array<java.lang.Object> __temp_odecl1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test1"}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test2"}, new java.lang.String[]{}, new double[]{})});
					//line 162 "/shared/core/test/thx/TestObjects.hx"
					__temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"key3", "key4", "key5"}, new java.lang.Object[]{"abc", new haxe.root.Array<java.lang.String>(new java.lang.String[]{"one", "two"}), __temp_odecl1}, new java.lang.String[]{"key2"}, new double[]{((double) (((double) (123) )) )});
				}
				
				//line 161 "/shared/core/test/thx/TestObjects.hx"
				o = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 175 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(123, thx.Objects.getPath(o, "key1.key2"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (175) )) )}));
			//line 176 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("abc", thx.Objects.getPath(o, "key1.key3"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (176) )) )}));
			//line 177 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("one", thx.Objects.getPath(o, "key1.key4.0"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (177) )) )}));
			//line 178 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("two", thx.Objects.getPath(o, "key1.key4.1"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (178) )) )}));
			//line 179 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test1"}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"key6"}, new java.lang.Object[]{"test2"}, new java.lang.String[]{}, new double[]{})}), thx.Objects.getPath(o, "key1.key5"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (179) )) )}));
			//line 180 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("test1", thx.Objects.getPath(o, "key1.key5.0.key6"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (180) )) )}));
			//line 181 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same("test2", thx.Objects.getPath(o, "key1.key5.1.key6"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (181) )) )}));
			//line 183 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isNull(thx.Objects.getPath(o, ""), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (183) )) )}));
			//line 184 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isNull(thx.Objects.getPath(o, "bad"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (184) )) )}));
			//line 185 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.isNull(thx.Objects.getPath(o, "bad.key"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testGetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (185) )) )}));
		}
		
	}
	
	
	public void testSetPath()
	{
		//line 189 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 189 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 189 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 189 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 190 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"key"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (190) )) )}));
			//line 191 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"key1", "key2"}, new java.lang.Object[]{"val1", "val2"}, new java.lang.String[]{}, new double[]{}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key1"), ((java.lang.Object) ("val1") ))) ), haxe.lang.Runtime.toString("key2"), ((java.lang.Object) ("val2") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (191) )) )}));
			//line 192 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt8 = null;
			//line 192 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 192 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl1 = new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{});
				//line 192 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt8 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 192 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt8, ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key1.key2"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (192) )) )}));
			//line 193 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt9 = null;
			//line 193 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 193 "/shared/core/test/thx/TestObjects.hx"
				haxe.root.Array<java.lang.Object> __temp_odecl2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{})});
				//line 193 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt9 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 193 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt9, ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key1.0.key2"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (193) )) )}));
			//line 194 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{new haxe.root.Array<haxe.root.Array<haxe.root.Array<java.lang.Object>>>(new haxe.root.Array[]{new haxe.root.Array<haxe.root.Array<java.lang.Object>>(new haxe.root.Array[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{null, 123})})})}, new java.lang.String[]{}, new double[]{}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key1.0.0.1"), ((java.lang.Object) (123) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (194) )) )}));
			//line 195 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt10 = null;
			//line 195 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 195 "/shared/core/test/thx/TestObjects.hx"
				haxe.root.Array<haxe.root.Array<haxe.root.Array<java.lang.Object>>> __temp_odecl3 = new haxe.root.Array<haxe.root.Array<haxe.root.Array<java.lang.Object>>>(new haxe.root.Array[]{new haxe.root.Array<haxe.root.Array<java.lang.Object>>(new haxe.root.Array[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{null, new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{})})})});
				//line 195 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt10 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl3}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 195 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt10, ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key1.0.0.1.key2"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (195) )) )}));
			//line 197 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"key"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"key"}, new java.lang.Object[]{"before"}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("key"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (197) )) )}));
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt11 = null;
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 198 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl4 = new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{"val"}, new java.lang.String[]{}, new double[]{});
				//line 198 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt11 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl4}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt13 = null;
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 198 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl5 = new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{"before"}, new java.lang.String[]{}, new double[]{});
				//line 198 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt13 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl5}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt12 = thx.Objects.setPath(((java.lang.Object) (__temp_stmt13) ), haxe.lang.Runtime.toString("key1.key2"), ((java.lang.Object) ("val") ));
			//line 198 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt11, ((java.lang.Object) (__temp_stmt12) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (198) )) )}));
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt14 = null;
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 199 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl6 = new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 55, 3})}, new java.lang.String[]{}, new double[]{});
				//line 199 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt14 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl6}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt16 = null;
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 199 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl7 = new haxe.lang.DynamicObject(new java.lang.String[]{"key2"}, new java.lang.Object[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3})}, new java.lang.String[]{}, new double[]{});
				//line 199 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt16 = new haxe.lang.DynamicObject(new java.lang.String[]{"key1"}, new java.lang.Object[]{__temp_odecl7}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt15 = thx.Objects.setPath(((java.lang.Object) (__temp_stmt16) ), haxe.lang.Runtime.toString("key1.key2.1"), ((java.lang.Object) (55) ));
			//line 199 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt14, ((java.lang.Object) (__temp_stmt15) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (199) )) )}));
			//line 200 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"newKey"}, new java.lang.Object[]{"val"}, new java.lang.String[]{"key1"}, new double[]{((double) (((double) (123) )) )}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"key1"}, new double[]{((double) (((double) (123) )) )})) ), haxe.lang.Runtime.toString("newKey"), ((java.lang.Object) ("val") ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (200) )) )}));
			//line 202 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.root.Array(new java.lang.Object[]{})) ), haxe.lang.Runtime.toString("*"), ((java.lang.Object) (1) ))) ), haxe.lang.Runtime.toString("*"), ((java.lang.Object) (2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (202) )) )}));
			//line 203 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"list"}, new java.lang.Object[]{new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2})}, new java.lang.String[]{}, new double[]{}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})) ), haxe.lang.Runtime.toString("list.*"), ((java.lang.Object) (1) ))) ), haxe.lang.Runtime.toString("list.*"), ((java.lang.Object) (2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (203) )) )}));
			//line 204 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{new haxe.root.Array(new java.lang.Object[]{1, 2})}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.root.Array(new java.lang.Object[]{})) ), haxe.lang.Runtime.toString("0.*"), ((java.lang.Object) (1) ))) ), haxe.lang.Runtime.toString("0.*"), ((java.lang.Object) (2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (204) )) )}));
			//line 205 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{new haxe.root.Array(new java.lang.Object[]{1}), new haxe.root.Array(new java.lang.Object[]{2})}), ((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (thx.Objects.setPath(((java.lang.Object) (new haxe.root.Array(new java.lang.Object[]{})) ), haxe.lang.Runtime.toString("0.*"), ((java.lang.Object) (1) ))) ), haxe.lang.Runtime.toString("*.*"), ((java.lang.Object) (2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testSetPath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (205) )) )}));
		}
		
	}
	
	
	public void testRemovePath()
	{
		//line 209 "/shared/core/test/thx/TestObjects.hx"
		int _g1 = 0;
		//line 209 "/shared/core/test/thx/TestObjects.hx"
		int _g = this.x;
		//line 209 "/shared/core/test/thx/TestObjects.hx"
		while (( _g1 < _g ))
		{
			//line 209 "/shared/core/test/thx/TestObjects.hx"
			 ++ _g1;
			//line 210 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object simple = new haxe.lang.DynamicObject(new java.lang.String[]{"foo"}, new java.lang.Object[]{"bar"}, new java.lang.String[]{}, new double[]{});
			//line 211 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object nested = null;
			//line 211 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 212 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl2 = null;
				//line 212 "/shared/core/test/thx/TestObjects.hx"
				{
					//line 213 "/shared/core/test/thx/TestObjects.hx"
					java.lang.Object __temp_odecl1 = new haxe.lang.DynamicObject(new java.lang.String[]{"baz", "other"}, new java.lang.Object[]{"qux", "other"}, new java.lang.String[]{}, new double[]{});
					//line 212 "/shared/core/test/thx/TestObjects.hx"
					__temp_odecl2 = new haxe.lang.DynamicObject(new java.lang.String[]{"bar"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 211 "/shared/core/test/thx/TestObjects.hx"
				nested = new haxe.lang.DynamicObject(new java.lang.String[]{"foo"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 219 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object arr = null;
			//line 219 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 220 "/shared/core/test/thx/TestObjects.hx"
				haxe.root.Array<java.lang.Object> __temp_odecl3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{"bar"}, new java.lang.Object[]{"baz"}, new java.lang.String[]{}, new double[]{})});
				//line 219 "/shared/core/test/thx/TestObjects.hx"
				arr = new haxe.lang.DynamicObject(new java.lang.String[]{"foo"}, new java.lang.Object[]{__temp_odecl3}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 225 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}), thx.Objects.removePath(simple, "foo"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (225) )) )}));
			//line 226 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}), simple, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (226) )) )}));
			//line 227 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(simple, thx.Objects.removePath(simple, "a.b.c.d"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (227) )) )}));
			//line 229 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt7 = null;
			//line 229 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 229 "/shared/core/test/thx/TestObjects.hx"
				java.lang.Object __temp_odecl5 = null;
				//line 229 "/shared/core/test/thx/TestObjects.hx"
				{
					//line 229 "/shared/core/test/thx/TestObjects.hx"
					java.lang.Object __temp_odecl4 = new haxe.lang.DynamicObject(new java.lang.String[]{"baz"}, new java.lang.Object[]{"qux"}, new java.lang.String[]{}, new double[]{});
					//line 229 "/shared/core/test/thx/TestObjects.hx"
					__temp_odecl5 = new haxe.lang.DynamicObject(new java.lang.String[]{"bar"}, new java.lang.Object[]{__temp_odecl4}, new java.lang.String[]{}, new double[]{});
				}
				
				//line 229 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt7 = new haxe.lang.DynamicObject(new java.lang.String[]{"foo"}, new java.lang.Object[]{__temp_odecl5}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 229 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt7, thx.Objects.removePath(nested, "foo.bar.other"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (229) )) )}));
			//line 231 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(arr, thx.Objects.removePath(arr, "foo.0.bar"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (231) )) )}));
			//line 232 "/shared/core/test/thx/TestObjects.hx"
			java.lang.Object __temp_stmt8 = null;
			//line 232 "/shared/core/test/thx/TestObjects.hx"
			{
				//line 232 "/shared/core/test/thx/TestObjects.hx"
				haxe.root.Array<java.lang.Object> __temp_odecl6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}), new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{})});
				//line 232 "/shared/core/test/thx/TestObjects.hx"
				__temp_stmt8 = new haxe.lang.DynamicObject(new java.lang.String[]{"foo"}, new java.lang.Object[]{__temp_odecl6}, new java.lang.String[]{}, new double[]{});
			}
			
			//line 232 "/shared/core/test/thx/TestObjects.hx"
			utest.Assert.same(__temp_stmt8, thx.Objects.removePath(arr, "foo.1.bar"), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestObjects", "TestObjects.hx", "testRemovePath"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (232) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.x = ((int) (value) );
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return value;
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return value;
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			switch (field.hashCode())
			{
				case 384434427:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testRemovePath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testRemovePath")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return this.x;
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1592262325:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testSetPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testSetPath")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1288791083:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testIssue20151201")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIssue20151201")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -467847255:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testGetPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testGetPath")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -2052247518:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testObjects")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testObjects")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -441502588:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testHasPathValue")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHasPathValue")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1211530273:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testAssign")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAssign")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 304216301:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testHasPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHasPath")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 557475917:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testCombine")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCombine")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 868574271:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testMergeWithTypedef")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMergeWithTypedef")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -74120147:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testMergeWithNullable")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMergeWithNullable")) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						return ((double) (this.x) );
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			switch (field.hashCode())
			{
				case 384434427:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testRemovePath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testRemovePath();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1288791083:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testIssue20151201")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testIssue20151201();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1592262325:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testSetPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testSetPath();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -2052247518:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testObjects")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testObjects();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -467847255:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testGetPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testGetPath();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 1211530273:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testAssign")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testAssign();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -441502588:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testHasPathValue")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testHasPathValue();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 557475917:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testCombine")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testCombine();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 304216301:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testHasPath")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testHasPath();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case -74120147:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testMergeWithNullable")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testMergeWithNullable();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
				case 868574271:
				{
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					if (field.equals("testMergeWithTypedef")) 
					{
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestObjects.hx"
						this.testMergeWithTypedef();
					}
					
					//line 12 "/shared/core/test/thx/TestObjects.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestObjects.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		baseArr.push("x");
		//line 12 "/shared/core/test/thx/TestObjects.hx"
		{
			//line 12 "/shared/core/test/thx/TestObjects.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


