// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestOrderedSet extends haxe.lang.HxObject
{
	public TestOrderedSet(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestOrderedSet()
	{
		//line 6 "/shared/core/thx/TestOrderedSet.hx"
		thx.TestOrderedSet.__hx_ctor_thx_TestOrderedSet(this);
	}
	
	
	public static void __hx_ctor_thx_TestOrderedSet(thx.TestOrderedSet __temp_me195)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/shared/core/thx/TestOrderedSet.hx"
		return new thx.TestOrderedSet(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/shared/core/thx/TestOrderedSet.hx"
		return new thx.TestOrderedSet();
	}
	
	
	public void testCreate()
	{
		//line 9 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> set = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.create(((haxe.root.Array<java.lang.Object>) (null) ))) )) );
		//line 10 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.equals(0, set.length, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (10) )) )}));
		//line 11 "/shared/core/thx/TestOrderedSet.hx"
		thx._OrderedSet.OrderedSet_Impl_.add(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (set) )) ), ((java.lang.Object) (1) ));
		//line 12 "/shared/core/thx/TestOrderedSet.hx"
		thx._OrderedSet.OrderedSet_Impl_.add(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (set) )) ), ((java.lang.Object) (1) ));
		//line 13 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.equals(1, set.length, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
	}
	
	
	public void testOrderedSet()
	{
		//line 17 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> set = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 2, 2, 3})) )) ))) )) );
		//line 18 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (set) )) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testOrderedSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
	}
	
	
	public void testUnion()
	{
		//line 22 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> s1 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3})) )) ))) )) );
		//line 22 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> s2 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 2, 4})) )) ))) )) );
		//line 24 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3, 4}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (s1) ).concat(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (s2) )) ))) )) )) )) ))) )) )) )) ))) )) )) )) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
	}
	
	
	public void testDifference()
	{
		//line 28 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> s1 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3})) )) ))) )) );
		//line 28 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> s2 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 2, 4})) )) ))) )) );
		//line 30 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> result = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (s1) ).copy()) )) );
		//line 30 "/shared/core/thx/TestOrderedSet.hx"
		{
			//line 30 "/shared/core/thx/TestOrderedSet.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (s2) )) ))) );
			//line 30 "/shared/core/thx/TestOrderedSet.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 30 "/shared/core/thx/TestOrderedSet.hx"
				int item = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(tmp, "next", null))) );
				//line 30 "/shared/core/thx/TestOrderedSet.hx"
				result.remove(item);
			}
			
		}
		
		//line 30 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (result) )) )) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
	}
	
	
	public void testBooleans()
	{
		//line 34 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> this1 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3})) )) ))) )) ).concat(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 3, 4})) )) ))) )) )) )) ))) )) )) )) ))) )) )) )) ))) )) );
		//line 34 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> set = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 3})) )) ))) )) );
		//line 34 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> result = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (this1) ).copy()) )) );
		//line 34 "/shared/core/thx/TestOrderedSet.hx"
		{
			//line 34 "/shared/core/thx/TestOrderedSet.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (set) )) ))) );
			//line 34 "/shared/core/thx/TestOrderedSet.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 34 "/shared/core/thx/TestOrderedSet.hx"
				int item = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(tmp, "next", null))) );
				//line 34 "/shared/core/thx/TestOrderedSet.hx"
				result.remove(item);
			}
			
		}
		
		//line 34 "/shared/core/thx/TestOrderedSet.hx"
		haxe.root.Array<java.lang.Object> s = ((haxe.root.Array<java.lang.Object>) (result) );
		//line 35 "/shared/core/thx/TestOrderedSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 4}), s, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestOrderedSet", "TestOrderedSet.hx", "testBooleans"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/shared/core/thx/TestOrderedSet.hx"
		{
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			switch (field.hashCode())
			{
				case -1574563843:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testBooleans")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBooleans")) );
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCreate")) );
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDifference")) );
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 47442663:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testOrderedSet")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOrderedSet")) );
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testUnion")) );
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/thx/TestOrderedSet.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/thx/TestOrderedSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/shared/core/thx/TestOrderedSet.hx"
		{
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			switch (field.hashCode())
			{
				case -1574563843:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testBooleans")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						this.testBooleans();
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						this.testCreate();
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						this.testDifference();
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case 47442663:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testOrderedSet")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						this.testOrderedSet();
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestOrderedSet.hx"
						this.testUnion();
					}
					
					//line 5 "/shared/core/thx/TestOrderedSet.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/thx/TestOrderedSet.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/thx/TestOrderedSet.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/shared/core/thx/TestOrderedSet.hx"
		return null;
	}
	
	
}


