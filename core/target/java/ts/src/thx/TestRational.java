// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRational extends haxe.lang.HxObject
{
	public TestRational(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRational()
	{
		//line 7 "/shared/core/thx/TestRational.hx"
		thx.TestRational.__hx_ctor_thx_TestRational(this);
	}
	
	
	public static void __hx_ctor_thx_TestRational(thx.TestRational __temp_me198)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/thx/TestRational.hx"
		return new thx.TestRational(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/thx/TestRational.hx"
		return new thx.TestRational();
	}
	
	
	public void testOperations()
	{
		//line 10 "/shared/core/thx/TestRational.hx"
		java.lang.Object x = null;
		//line 10 "/shared/core/thx/TestRational.hx"
		java.lang.Object y = null;
		//line 14 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(2)) ));
		//line 15 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3)) ));
		//line 16 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("5/6", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 19 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(8)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(9)) ));
		//line 20 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(9)) ));
		//line 21 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("1", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 24 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(200000000)) ));
		//line 25 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(300000000)) ));
		//line 26 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("1/120000000", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		//line 29 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1073741789)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(20)) ));
		//line 30 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1073741789)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(30)) ));
		//line 31 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("1073741789/12", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		//line 34 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(4)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(17)) ));
		//line 35 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(17)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(4)) ));
		//line 36 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("1", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.multiply(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		//line 39 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3037141)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3247033)) ));
		//line 40 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3037547)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3246599)) ));
		//line 41 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("841/961", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.multiply(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
		//line 42 "/shared/core/thx/TestRational.hx"
		utest.Assert.floatEquals(0.87513007284079, thx._Rational.Rational_Impl_.toFloat(thx._Rational.Rational_Impl_.multiply(x, y)), null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
		//line 45 "/shared/core/thx/TestRational.hx"
		x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(6)) ));
		//line 46 "/shared/core/thx/TestRational.hx"
		y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(-4)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(-8)) ));
		//line 47 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("-1/3", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.subtract(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
	}
	
	
	public void testFromInt()
	{
		//line 51 "/shared/core/thx/TestRational.hx"
		java.lang.Object r = thx._Rational.Rational_Impl_.fromInt(3);
		//line 52 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("3", thx._Rational.Rational_Impl_.toString(r), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testFromInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
		//line 53 "/shared/core/thx/TestRational.hx"
		r = thx._Rational.Rational_Impl_.divide(r, thx._Rational.Rational_Impl_.fromInt(2));
		//line 54 "/shared/core/thx/TestRational.hx"
		utest.Assert.equals("3/2", thx._Rational.Rational_Impl_.toString(r), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testFromInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (54) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/thx/TestRational.hx"
		{
			//line 6 "/shared/core/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case -986948877:
				{
					//line 6 "/shared/core/thx/TestRational.hx"
					if (field.equals("testFromInt")) 
					{
						//line 6 "/shared/core/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestRational.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromInt")) );
					}
					
					//line 6 "/shared/core/thx/TestRational.hx"
					break;
				}
				
				
				case -709826018:
				{
					//line 6 "/shared/core/thx/TestRational.hx"
					if (field.equals("testOperations")) 
					{
						//line 6 "/shared/core/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestRational.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOperations")) );
					}
					
					//line 6 "/shared/core/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestRational.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/thx/TestRational.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/thx/TestRational.hx"
		{
			//line 6 "/shared/core/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case -986948877:
				{
					//line 6 "/shared/core/thx/TestRational.hx"
					if (field.equals("testFromInt")) 
					{
						//line 6 "/shared/core/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestRational.hx"
						this.testFromInt();
					}
					
					//line 6 "/shared/core/thx/TestRational.hx"
					break;
				}
				
				
				case -709826018:
				{
					//line 6 "/shared/core/thx/TestRational.hx"
					if (field.equals("testOperations")) 
					{
						//line 6 "/shared/core/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestRational.hx"
						this.testOperations();
					}
					
					//line 6 "/shared/core/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestRational.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/thx/TestRational.hx"
		return null;
	}
	
	
}


