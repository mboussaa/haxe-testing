// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestEnums extends haxe.lang.HxObject
{
	public TestEnums(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestEnums()
	{
		//line 10 "/shared/core/thx/TestEnums.hx"
		thx.TestEnums.__hx_ctor_thx_TestEnums(this);
	}
	
	
	public static void __hx_ctor_thx_TestEnums(thx.TestEnums __temp_me178)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 9 "/shared/core/thx/TestEnums.hx"
		return new thx.TestEnums(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 9 "/shared/core/thx/TestEnums.hx"
		return new thx.TestEnums();
	}
	
	
	public void testIssue20151201()
	{
		//line 13 "/shared/core/thx/TestEnums.hx"
		java.lang.Object o = new haxe.lang.DynamicObject(new java.lang.String[]{"newId", "oldId"}, new java.lang.Object[]{"2", "1"}, new java.lang.String[]{}, new double[]{});
		//line 13 "/shared/core/thx/TestEnums.hx"
		thx.Enum20151201 e = thx.Enum20151201.Test(o);
		//line 13 "/shared/core/thx/TestEnums.hx"
		java.lang.String s = haxe.lang.Runtime.toString(thx.Enums.string(((thx.Enum20151201) (e) )));
		//line 16 "/shared/core/thx/TestEnums.hx"
		utest.Assert.stringContains("oldId : \"1\"", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 17 "/shared/core/thx/TestEnums.hx"
		utest.Assert.stringContains("newId : \"2\"", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		//line 18 "/shared/core/thx/TestEnums.hx"
		utest.Assert.stringContains(", ", s, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
		//line 19 "/shared/core/thx/TestEnums.hx"
		utest.Assert.isTrue(s.startsWith("Test({"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		//line 20 "/shared/core/thx/TestEnums.hx"
		utest.Assert.isTrue(s.endsWith("})"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testIssue20151201"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
	}
	
	
	public void testCompare()
	{
		//line 24 "/shared/core/thx/TestEnums.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{thx._TestEnums.Sample.A, thx._TestEnums.Sample.B(1), thx._TestEnums.Sample.B(2)}), ((haxe.root.Array<thx._TestEnums.Sample>) (thx.Arrays.order(((haxe.root.Array<thx._TestEnums.Sample>) (new haxe.root.Array<thx._TestEnums.Sample>(new thx._TestEnums.Sample[]{thx._TestEnums.Sample.B(2), thx._TestEnums.Sample.A, thx._TestEnums.Sample.B(1)})) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Enums.class, "compare")) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testCompare"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
	}
	
	
	public void testString()
	{
		//line 33 "/shared/core/thx/TestEnums.hx"
		utest.Assert.equals("A", haxe.lang.Runtime.toString(thx.Enums.string(((thx._TestEnums.Sample) (thx._TestEnums.Sample.A) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 34 "/shared/core/thx/TestEnums.hx"
		utest.Assert.equals("B(1)", haxe.lang.Runtime.toString(thx.Enums.string(((thx._TestEnums.Sample) (thx._TestEnums.Sample.B(1)) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEnums", "TestEnums.hx", "testString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 9 "/shared/core/thx/TestEnums.hx"
		{
			//line 9 "/shared/core/thx/TestEnums.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/core/thx/TestEnums.hx"
			switch (field.hashCode())
			{
				case 1727748931:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testString")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testString")) );
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
				case 1288791083:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testIssue20151201")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIssue20151201")) );
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
				case 557885427:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testCompare")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCompare")) );
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/core/thx/TestEnums.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/core/thx/TestEnums.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 9 "/shared/core/thx/TestEnums.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 9 "/shared/core/thx/TestEnums.hx"
		{
			//line 9 "/shared/core/thx/TestEnums.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/core/thx/TestEnums.hx"
			switch (field.hashCode())
			{
				case 1727748931:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testString")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						this.testString();
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
				case 1288791083:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testIssue20151201")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						this.testIssue20151201();
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
				case 557885427:
				{
					//line 9 "/shared/core/thx/TestEnums.hx"
					if (field.equals("testCompare")) 
					{
						//line 9 "/shared/core/thx/TestEnums.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/core/thx/TestEnums.hx"
						this.testCompare();
					}
					
					//line 9 "/shared/core/thx/TestEnums.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/core/thx/TestEnums.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/core/thx/TestEnums.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 9 "/shared/core/thx/TestEnums.hx"
		return null;
	}
	
	
}


