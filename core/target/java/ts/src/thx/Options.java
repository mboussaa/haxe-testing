// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Options extends haxe.lang.HxObject
{
	public Options(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Options()
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		thx.Options.__hx_ctor_thx_Options(this);
	}
	
	
	public static void __hx_ctor_thx_Options(thx.Options __temp_me142)
	{
	}
	
	
	public static <T> haxe.ds.Option ofValue(java.lang.Object value)
	{
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		if (( null == value )) 
		{
			//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.Some(value);
		}
		
	}
	
	
	public static <T> haxe.ds.Option maybe(java.lang.Object value)
	{
		//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		if (( null == value )) 
		{
			//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.Some(value);
		}
		
	}
	
	
	public static <T> boolean equals(haxe.ds.Option a, haxe.ds.Option b, haxe.lang.Function eq)
	{
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (a.index)
		{
			case 0:
			{
				//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				switch (b.index)
				{
					case 0:
					{
						//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						T a1 = ((T) (a.params[0]) );
						//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						T b1 = ((T) (b.params[0]) );
						//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						if (( null == eq )) 
						{
							//line 27 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
							eq = new thx.Options_equals_27__Fun<T>();
						}
						
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						return haxe.lang.Runtime.toBool(eq.__hx_invoke2_o(0.0, a1, 0.0, b1));
					}
					
					
					default:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						return false;
					}
					
				}
				
			}
			
			
			case 1:
			{
				//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				switch (b.index)
				{
					case 1:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						return true;
					}
					
					
					default:
					{
						//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
						return false;
					}
					
				}
				
			}
			
			
		}
		
		//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return false;
	}
	
	
	public static <T> boolean equalsValue(haxe.ds.Option a, java.lang.Object b, haxe.lang.Function eq)
	{
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((boolean) (thx.Options.equals(((haxe.ds.Option) (a) ), ((haxe.ds.Option) (( (( null == b )) ? (haxe.ds.Option.None) : (haxe.ds.Option.Some(b)) )) ), ((haxe.lang.Function) (eq) ))) );
	}
	
	
	public static <T, TOut> haxe.ds.Option map(haxe.ds.Option option, haxe.lang.Function callback)
	{
		//line 45 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 45 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.Some(((TOut) (callback.__hx_invoke1_o(0.0, v)) ));
			}
			
			
			case 1:
			{
				//line 45 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.None;
			}
			
			
		}
		
		//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T, U> haxe.ds.Option ap(haxe.ds.Option option, haxe.ds.Option fopt)
	{
		//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (fopt) ), ((haxe.lang.Function) (new thx.Options_ap_57__Fun<T, U>(v)) ))) );
			}
			
			
			case 1:
			{
				//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.None;
			}
			
			
		}
		
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T, TOut> haxe.ds.Option flatMap(haxe.ds.Option option, haxe.lang.Function callback)
	{
		//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 66 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((haxe.ds.Option) (callback.__hx_invoke1_o(0.0, v)) );
			}
			
			
			case 1:
			{
				//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.None;
			}
			
			
		}
		
		//line 63 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T> haxe.ds.Option join(haxe.ds.Option option)
	{
		//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 75 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				haxe.ds.Option v = ((haxe.ds.Option) (option.params[0]) );
				//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return v;
			}
			
			
			case 1:
			{
				//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.None;
			}
			
			
		}
		
		//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <A, B> B cata(haxe.ds.Option option, B ifNone, haxe.lang.Function f)
	{
		//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				A v = ((A) (option.params[0]) );
				//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((B) (f.__hx_invoke1_o(0.0, v)) );
			}
			
			
			case 1:
			{
				//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ifNone;
			}
			
			
		}
		
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T, B> B foldLeft(haxe.ds.Option option, B b, haxe.lang.Function f)
	{
		//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 93 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((B) (f.__hx_invoke2_o(0.0, b, 0.0, v)) );
			}
			
			
			case 1:
			{
				//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return b;
			}
			
			
		}
		
		//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <A, B> B foldMap(haxe.ds.Option option, haxe.lang.Function f, java.lang.Object m)
	{
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.ds.Option tmp = ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (option) ), ((haxe.lang.Function) (f) ))) );
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		B tmp1 = ((B) (thx._Monoid.Monoid_Impl_.get_zero(((java.lang.Object) (m) ))) );
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		java.lang.Object _e = m;
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((B) (thx.Options.foldLeft(((haxe.ds.Option) (tmp) ), ((B) (tmp1) ), ((haxe.lang.Function) (new thx.Options_foldMap_100__Fun<B>(_e)) ))) );
	}
	
	
	public static <A> haxe.ds.Option filter(haxe.ds.Option option, haxe.lang.Function f)
	{
		//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				A v = ((A) (option.params[0]) );
				//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				if (haxe.lang.Runtime.toBool(f.__hx_invoke1_o(0.0, v))) 
				{
					//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
					return option;
				}
				else
				{
					//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
					return haxe.ds.Option.None;
				}
				
			}
			
			
			default:
			{
				//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.ds.Option.None;
			}
			
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> toArray(haxe.ds.Option option)
	{
		//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 118 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {v}) ));
			}
			
			
			case 1:
			{
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
			}
			
			
		}
		
		//line 115 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T> boolean toBool(haxe.ds.Option option)
	{
		//line 127 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 127 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return true;
			}
			
			
			case 1:
			{
				//line 127 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return false;
			}
			
			
		}
		
		//line 126 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return false;
	}
	
	
	public static <T> boolean isNone(haxe.ds.Option option)
	{
		//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return  ! (((boolean) (thx.Options.toBool(((haxe.ds.Option) (option) ))) )) ;
	}
	
	
	public static <T> haxe.ds.Option toOption(java.lang.Object value)
	{
		//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		if (( null == value )) 
		{
			//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.None;
		}
		else
		{
			//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
			return haxe.ds.Option.Some(value);
		}
		
	}
	
	
	public static <T> java.lang.Object get(haxe.ds.Option option)
	{
		//line 150 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 152 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 150 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return v;
			}
			
			
			case 1:
			{
				//line 150 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return null;
			}
			
			
		}
		
		//line 149 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T> T getOrElse(haxe.ds.Option option, T alt)
	{
		//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 161 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return v;
			}
			
			
			case 1:
			{
				//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return alt;
			}
			
			
		}
		
		//line 158 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T> haxe.ds.Option orElse(haxe.ds.Option option, haxe.ds.Option alt)
	{
		//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return option;
			}
			
			
			case 1:
			{
				//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return alt;
			}
			
			
		}
		
		//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <T> boolean all(haxe.ds.Option option, haxe.lang.Function f)
	{
		//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.lang.Runtime.toBool(f.__hx_invoke1_o(0.0, v));
			}
			
			
			case 1:
			{
				//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return true;
			}
			
			
		}
		
		//line 173 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return false;
	}
	
	
	public static <T> boolean any(haxe.ds.Option option, haxe.lang.Function f)
	{
		//line 180 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 182 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 180 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return haxe.lang.Runtime.toBool(f.__hx_invoke1_o(0.0, v));
			}
			
			
			case 1:
			{
				//line 180 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return false;
			}
			
			
		}
		
		//line 179 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return false;
	}
	
	
	public static <E, T, U> thx.Either traverseValidation(haxe.ds.Option option, haxe.lang.Function f)
	{
		//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx._Validation.Validation_Impl_.ap(((thx.Either) (f.__hx_invoke1_o(0.0, v)) ), ((thx.Either) (thx.Either.Right(new thx.Options_traverseValidation_192__Fun_0<U>())) ), ((haxe.lang.Function) (new thx.Options_traverseValidation_192__Fun<E>()) ))) );
			}
			
			
			case 1:
			{
				//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Right(haxe.ds.Option.None)) );
			}
			
			
		}
		
		//line 190 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <E, T> thx.Either toSuccess(haxe.ds.Option option, E error)
	{
		//line 197 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 199 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 197 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Right(v)) );
			}
			
			
			case 1:
			{
				//line 197 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Left(error)) );
			}
			
			
		}
		
		//line 196 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <E, T> thx.Either toSuccessNel(haxe.ds.Option option, E error)
	{
		//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (option.index)
		{
			case 0:
			{
				//line 205 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				T v = ((T) (option.params[0]) );
				//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Right(v)) );
			}
			
			
			case 1:
			{
				//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Left(((thx.NonEmptyList) (thx._Nel.Nel_Impl_.pure(((E) (error) ))) ))) );
			}
			
			
		}
		
		//line 202 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <E, T> thx.Either toFailure(haxe.ds.Option error, T value)
	{
		//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (error.index)
		{
			case 0:
			{
				//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				E e = ((E) (error.params[0]) );
				//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Left(e)) );
			}
			
			
			case 1:
			{
				//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Right(value)) );
			}
			
			
		}
		
		//line 208 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <E, T> thx.Either toFailureNel(haxe.ds.Option error, T value)
	{
		//line 215 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		switch (error.index)
		{
			case 0:
			{
				//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				E e = ((E) (error.params[0]) );
				//line 215 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Left(((thx.NonEmptyList) (thx._Nel.Nel_Impl_.pure(((E) (e) ))) ))) );
			}
			
			
			case 1:
			{
				//line 215 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
				return ((thx.Either) (thx.Either.Right(value)) );
			}
			
			
		}
		
		//line 214 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return null;
	}
	
	
	public static <A, B, C> haxe.ds.Option ap2(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2)
	{
		//line 221 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (f) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D> haxe.ds.Option ap3(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3)
	{
		//line 224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap3_224__Fun<C, D, B, A>(f1)) ))) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D, E> haxe.ds.Option ap4(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3, haxe.ds.Option v4)
	{
		//line 229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f2 = new thx.Options_ap4_229__Fun_1<D, E, C, B, A>(f1);
		//line 229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v4) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap4_229__Fun<C, D, E, B, A>(f2)) ))) ))) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D, E, F> haxe.ds.Option ap5(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3, haxe.ds.Option v4, haxe.ds.Option v5)
	{
		//line 234 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 234 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f2 = new thx.Options_ap5_234__Fun_3<E, F, D, C, B, A>(f1);
		//line 234 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f3 = new thx.Options_ap5_234__Fun_1<D, E, F, C, B, A>(f2);
		//line 234 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v5) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v4) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap5_234__Fun<C, D, E, F, B, A>(f3)) ))) ))) ))) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D, E, F, G> haxe.ds.Option ap6(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3, haxe.ds.Option v4, haxe.ds.Option v5, haxe.ds.Option v6)
	{
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f2 = new thx.Options_ap6_239__Fun_5<F, G, E, D, C, B, A>(f1);
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f3 = new thx.Options_ap6_239__Fun_3<E, F, G, D, C, B, A>(f2);
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f4 = new thx.Options_ap6_239__Fun_1<D, E, F, G, C, B, A>(f3);
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v6) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v5) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v4) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap6_239__Fun<C, D, E, F, G, B, A>(f4)) ))) ))) ))) ))) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D, E, F, G, H> haxe.ds.Option ap7(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3, haxe.ds.Option v4, haxe.ds.Option v5, haxe.ds.Option v6, haxe.ds.Option v7)
	{
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f2 = new thx.Options_ap7_244__Fun_7<G, H, F, E, D, C, B, A>(f1);
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f3 = new thx.Options_ap7_244__Fun_5<F, G, H, E, D, C, B, A>(f2);
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f4 = new thx.Options_ap7_244__Fun_3<E, F, G, H, D, C, B, A>(f3);
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f5 = new thx.Options_ap7_244__Fun_1<D, E, F, G, H, C, B, A>(f4);
		//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v7) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v6) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v5) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v4) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap7_244__Fun<C, D, E, F, G, H, B, A>(f5)) ))) ))) ))) ))) ))) ))) ))) ))) );
	}
	
	
	public static <A, B, C, D, E, F, G, H, I> haxe.ds.Option ap8(haxe.lang.Function f, haxe.ds.Option v1, haxe.ds.Option v2, haxe.ds.Option v3, haxe.ds.Option v4, haxe.ds.Option v5, haxe.ds.Option v6, haxe.ds.Option v7, haxe.ds.Option v8)
	{
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f1 = f;
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f2 = new thx.Options_ap8_249__Fun_9<H, I, G, F, E, D, C, B, A>(f1);
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f3 = new thx.Options_ap8_249__Fun_7<G, H, I, F, E, D, C, B, A>(f2);
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f4 = new thx.Options_ap8_249__Fun_5<F, G, H, I, E, D, C, B, A>(f3);
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f5 = new thx.Options_ap8_249__Fun_3<E, F, G, H, I, D, C, B, A>(f4);
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		haxe.lang.Function f6 = new thx.Options_ap8_249__Fun_1<D, E, F, G, H, I, C, B, A>(f5);
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v8) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v7) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v6) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v5) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v4) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v3) ), ((haxe.ds.Option) (thx.Options.ap(((haxe.ds.Option) (v2) ), ((haxe.ds.Option) (thx.Options.map(((haxe.ds.Option) (v1) ), ((haxe.lang.Function) (thx.Functions2.curry(((haxe.lang.Function) (new thx.Options_ap8_249__Fun<C, D, E, F, G, H, I, B, A>(f6)) ))) ))) ))) ))) ))) ))) ))) ))) ))) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return new thx.Options(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Options.hx"
		return new thx.Options();
	}
	
	
}


