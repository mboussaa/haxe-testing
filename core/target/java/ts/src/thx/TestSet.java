// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestSet extends haxe.lang.HxObject
{
	public TestSet(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestSet()
	{
		//line 7 "/shared/core/thx/TestSet.hx"
		thx.TestSet.__hx_ctor_thx_TestSet(this);
	}
	
	
	public static void __hx_ctor_thx_TestSet(thx.TestSet __temp_me200)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/thx/TestSet.hx"
		return new thx.TestSet(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/thx/TestSet.hx"
		return new thx.TestSet();
	}
	
	
	public void testCreate()
	{
		//line 10 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> set = thx._Set.Set_Impl_.createInt(null);
		//line 11 "/shared/core/thx/TestSet.hx"
		utest.Assert.equals(0, ((int) (thx._Set.Set_Impl_.get_length(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/core/thx/TestSet.hx"
		thx._Set.Set_Impl_.add(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ), ((java.lang.Object) (1) ));
		//line 13 "/shared/core/thx/TestSet.hx"
		thx._Set.Set_Impl_.add(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ), ((java.lang.Object) (1) ));
		//line 14 "/shared/core/thx/TestSet.hx"
		utest.Assert.equals(1, ((int) (thx._Set.Set_Impl_.get_length(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
	}
	
	
	public void testSet()
	{
		//line 18 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> set = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 2, 2, 3}));
		//line 19 "/shared/core/thx/TestSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Arrays.order(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ))) )) )) )) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Ints.class, "compare")) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
	}
	
	
	public void testUnion()
	{
		//line 23 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> s1 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3}));
		//line 23 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> s2 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 2, 4}));
		//line 25 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> newset = ((haxe.ds.IntMap<java.lang.Object>) (thx._Set.Set_Impl_.copy(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (((haxe.ds.IntMap<java.lang.Object>) (s1) )) )) ))) );
		//line 25 "/shared/core/thx/TestSet.hx"
		thx._Set.Set_Impl_.pushMany(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (newset) )) ), ((haxe.root.Array<java.lang.Object>) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (s2) )) ))) ));
		//line 25 "/shared/core/thx/TestSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3, 4}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Arrays.order(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (newset) )) ))) )) )) )) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Ints.class, "compare")) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
	}
	
	
	public void testDifference()
	{
		//line 29 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> s1 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3}));
		//line 29 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> s2 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 2, 4}));
		//line 31 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> result = ((haxe.ds.IntMap<java.lang.Object>) (thx._Set.Set_Impl_.copy(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (((haxe.ds.IntMap<java.lang.Object>) (s1) )) )) ))) );
		//line 31 "/shared/core/thx/TestSet.hx"
		{
			//line 31 "/shared/core/thx/TestSet.hx"
			java.lang.Object tmp = ((java.lang.Object) (thx._Set.Set_Impl_.iterator(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (s2) )) ))) );
			//line 31 "/shared/core/thx/TestSet.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 31 "/shared/core/thx/TestSet.hx"
				int item = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(tmp, "next", null))) );
				//line 31 "/shared/core/thx/TestSet.hx"
				((haxe.ds.IntMap<java.lang.Object>) (result) ).remove(((int) (item) ));
			}
			
		}
		
		//line 31 "/shared/core/thx/TestSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Arrays.order(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (result) )) ))) )) )) )) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Ints.class, "compare")) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
	}
	
	
	public void testBooleans()
	{
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> this1 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3}));
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> set = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 3, 4}));
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> newset = ((haxe.ds.IntMap<java.lang.Object>) (thx._Set.Set_Impl_.copy(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (((haxe.ds.IntMap<java.lang.Object>) (this1) )) )) ))) );
		//line 35 "/shared/core/thx/TestSet.hx"
		thx._Set.Set_Impl_.pushMany(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (newset) )) ), ((haxe.root.Array<java.lang.Object>) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set) )) ))) ));
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> this2 = newset;
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> set1 = thx._Set.Set_Impl_.createInt(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 3}));
		//line 35 "/shared/core/thx/TestSet.hx"
		haxe.ds.IntMap<java.lang.Object> result = ((haxe.ds.IntMap<java.lang.Object>) (thx._Set.Set_Impl_.copy(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (((haxe.ds.IntMap<java.lang.Object>) (this2) )) )) ))) );
		//line 35 "/shared/core/thx/TestSet.hx"
		{
			//line 35 "/shared/core/thx/TestSet.hx"
			java.lang.Object tmp = ((java.lang.Object) (thx._Set.Set_Impl_.iterator(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (set1) )) ))) );
			//line 35 "/shared/core/thx/TestSet.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 35 "/shared/core/thx/TestSet.hx"
				int item = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.callField(tmp, "next", null))) );
				//line 35 "/shared/core/thx/TestSet.hx"
				((haxe.ds.IntMap<java.lang.Object>) (result) ).remove(((int) (item) ));
			}
			
		}
		
		//line 38 "/shared/core/thx/TestSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 4}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Arrays.order(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx._Set.Set_Impl_.toArray(((haxe.IMap<java.lang.Object, java.lang.Object>) (((haxe.IMap) (result) )) ))) )) )) )) ), ((haxe.lang.Function) (new haxe.lang.Closure(thx.Ints.class, "compare")) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestSet", "TestSet.hx", "testBooleans"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/thx/TestSet.hx"
		{
			//line 6 "/shared/core/thx/TestSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestSet.hx"
			switch (field.hashCode())
			{
				case -1574563843:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testBooleans")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBooleans")) );
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCreate")) );
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDifference")) );
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case -1422467472:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testSet")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testSet")) );
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testUnion")) );
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestSet.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/thx/TestSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/thx/TestSet.hx"
		{
			//line 6 "/shared/core/thx/TestSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestSet.hx"
			switch (field.hashCode())
			{
				case -1574563843:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testBooleans")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						this.testBooleans();
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						this.testCreate();
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						this.testDifference();
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case -1422467472:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testSet")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						this.testSet();
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 6 "/shared/core/thx/TestSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 6 "/shared/core/thx/TestSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestSet.hx"
						this.testUnion();
					}
					
					//line 6 "/shared/core/thx/TestSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestSet.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/thx/TestSet.hx"
		return null;
	}
	
	
}


