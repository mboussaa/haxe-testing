// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestEithers extends haxe.lang.HxObject
{
	public TestEithers(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestEithers()
	{
		//line 8 "/shared/core/thx/TestEithers.hx"
		thx.TestEithers.__hx_ctor_thx_TestEithers(this);
	}
	
	
	public static void __hx_ctor_thx_TestEithers(thx.TestEithers __temp_me177)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/core/thx/TestEithers.hx"
		return new thx.TestEithers(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/core/thx/TestEithers.hx"
		return new thx.TestEithers();
	}
	
	
	public void testIsLeft()
	{
		//line 11 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isTrue(((boolean) (thx.Eithers.isLeft(((thx.Either) (thx.Either.Left(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isFalse(((boolean) (thx.Eithers.isLeft(((thx.Either) (thx.Either.Right(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
	}
	
	
	public void testIsRight()
	{
		//line 16 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isFalse(((boolean) (thx.Eithers.isRight(((thx.Either) (thx.Either.Left(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 17 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isTrue(((boolean) (thx.Eithers.isRight(((thx.Either) (thx.Either.Right(123)) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testIsRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
	}
	
	
	public void testToLeft()
	{
		//line 21 "/shared/core/thx/TestEithers.hx"
		haxe.ds.Option _g = ((haxe.ds.Option) (thx.Eithers.toLeft(((thx.Either) (thx.Either.Left(123)) ))) );
		//line 21 "/shared/core/thx/TestEithers.hx"
		java.lang.Object tmp = null;
		//line 21 "/shared/core/thx/TestEithers.hx"
		switch (_g.index)
		{
			case 0:
			{
				//line 22 "/shared/core/thx/TestEithers.hx"
				int v = ((int) (haxe.lang.Runtime.toInt(_g.params[0])) );
				//line 21 "/shared/core/thx/TestEithers.hx"
				tmp = v;
				//line 22 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
			case 1:
			{
				//line 21 "/shared/core/thx/TestEithers.hx"
				tmp = null;
				//line 21 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
		}
		
		//line 21 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(123, tmp, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 26 "/shared/core/thx/TestEithers.hx"
		haxe.ds.Option _g1 = ((haxe.ds.Option) (thx.Eithers.toLeft(((thx.Either) (thx.Either.Right(123)) ))) );
		//line 26 "/shared/core/thx/TestEithers.hx"
		java.lang.Object tmp1 = null;
		//line 26 "/shared/core/thx/TestEithers.hx"
		switch (_g1.index)
		{
			case 0:
			{
				//line 27 "/shared/core/thx/TestEithers.hx"
				java.lang.Object v1 = _g1.params[0];
				//line 26 "/shared/core/thx/TestEithers.hx"
				tmp1 = v1;
				//line 27 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
			case 1:
			{
				//line 26 "/shared/core/thx/TestEithers.hx"
				tmp1 = null;
				//line 26 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
		}
		
		//line 26 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isNull(tmp1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
	}
	
	
	public void testToRight()
	{
		//line 33 "/shared/core/thx/TestEithers.hx"
		haxe.ds.Option _g = ((haxe.ds.Option) (thx.Eithers.toRight(((thx.Either) (thx.Either.Right(123)) ))) );
		//line 33 "/shared/core/thx/TestEithers.hx"
		java.lang.Object tmp = null;
		//line 33 "/shared/core/thx/TestEithers.hx"
		switch (_g.index)
		{
			case 0:
			{
				//line 34 "/shared/core/thx/TestEithers.hx"
				int v = ((int) (haxe.lang.Runtime.toInt(_g.params[0])) );
				//line 33 "/shared/core/thx/TestEithers.hx"
				tmp = v;
				//line 34 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
			case 1:
			{
				//line 33 "/shared/core/thx/TestEithers.hx"
				tmp = null;
				//line 33 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
		}
		
		//line 33 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(123, tmp, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 38 "/shared/core/thx/TestEithers.hx"
		haxe.ds.Option _g1 = ((haxe.ds.Option) (thx.Eithers.toRight(((thx.Either) (thx.Either.Left(123)) ))) );
		//line 38 "/shared/core/thx/TestEithers.hx"
		java.lang.Object tmp1 = null;
		//line 38 "/shared/core/thx/TestEithers.hx"
		switch (_g1.index)
		{
			case 0:
			{
				//line 39 "/shared/core/thx/TestEithers.hx"
				java.lang.Object v1 = _g1.params[0];
				//line 38 "/shared/core/thx/TestEithers.hx"
				tmp1 = v1;
				//line 39 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
			case 1:
			{
				//line 38 "/shared/core/thx/TestEithers.hx"
				tmp1 = null;
				//line 38 "/shared/core/thx/TestEithers.hx"
				break;
			}
			
			
		}
		
		//line 38 "/shared/core/thx/TestEithers.hx"
		utest.Assert.isNull(tmp1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
	}
	
	
	public void testToLeftUnsafe()
	{
		//line 45 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(123, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Either.Left(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeftUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
		//line 46 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Either.Right(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToLeftUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
	}
	
	
	public void testToRightUnsafe()
	{
		//line 50 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(123, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Either.Right(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRightUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (50) )) )}));
		//line 51 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Either.Left(123)) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testToRightUnsafe"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
	}
	
	
	public void testFlatMap()
	{
		//line 55 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(5, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_55__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_55__Fun.__hx_current) : (thx.TestEithers_testFlatMap_55__Fun.__hx_current = ((thx.TestEithers_testFlatMap_55__Fun) (new thx.TestEithers_testFlatMap_55__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
		//line 59 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(5, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_59__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_59__Fun.__hx_current) : (thx.TestEithers_testFlatMap_59__Fun.__hx_current = ((thx.TestEithers_testFlatMap_59__Fun) (new thx.TestEithers_testFlatMap_59__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
		//line 63 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(10, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_63__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_63__Fun.__hx_current) : (thx.TestEithers_testFlatMap_63__Fun.__hx_current = ((thx.TestEithers_testFlatMap_63__Fun) (new thx.TestEithers_testFlatMap_63__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (63) )) )}));
		//line 67 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toLeftUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_67__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_67__Fun.__hx_current) : (thx.TestEithers_testFlatMap_67__Fun.__hx_current = ((thx.TestEithers_testFlatMap_67__Fun) (new thx.TestEithers_testFlatMap_67__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
		//line 71 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_71__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_71__Fun.__hx_current) : (thx.TestEithers_testFlatMap_71__Fun.__hx_current = ((thx.TestEithers_testFlatMap_71__Fun) (new thx.TestEithers_testFlatMap_71__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (71) )) )}));
		//line 75 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Left(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_75__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_75__Fun.__hx_current) : (thx.TestEithers_testFlatMap_75__Fun.__hx_current = ((thx.TestEithers_testFlatMap_75__Fun) (new thx.TestEithers_testFlatMap_75__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (75) )) )}));
		//line 79 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(null, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_79__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_79__Fun.__hx_current) : (thx.TestEithers_testFlatMap_79__Fun.__hx_current = ((thx.TestEithers_testFlatMap_79__Fun) (new thx.TestEithers_testFlatMap_79__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (79) )) )}));
		//line 83 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(10, ((java.lang.Object) (thx.Eithers.toRightUnsafe(((thx.Either) (thx.Eithers.flatMap(((thx.Either) (thx.Either.Right(5)) ), ((haxe.lang.Function) (( (( thx.TestEithers_testFlatMap_83__Fun.__hx_current != null )) ? (thx.TestEithers_testFlatMap_83__Fun.__hx_current) : (thx.TestEithers_testFlatMap_83__Fun.__hx_current = ((thx.TestEithers_testFlatMap_83__Fun) (new thx.TestEithers_testFlatMap_83__Fun()) )) )) ))) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
	}
	
	
	public void testLeftMap()
	{
		//line 89 "/shared/core/thx/TestEithers.hx"
		thx.Either l = thx.Either.Left(1);
		//line 90 "/shared/core/thx/TestEithers.hx"
		thx.Either rt = thx.Either.Right(true);
		//line 91 "/shared/core/thx/TestEithers.hx"
		thx.Either l2 = thx.Either.Left(2);
		//line 92 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(l2, ((thx.Either) (thx.Eithers.leftMap(((thx.Either) (l) ), ((haxe.lang.Function) (( (( thx.TestEithers_testLeftMap_92__Fun.__hx_current != null )) ? (thx.TestEithers_testLeftMap_92__Fun.__hx_current) : (thx.TestEithers_testLeftMap_92__Fun.__hx_current = ((thx.TestEithers_testLeftMap_92__Fun) (new thx.TestEithers_testLeftMap_92__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testLeftMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (92) )) )}));
		//line 93 "/shared/core/thx/TestEithers.hx"
		utest.Assert.same(rt, ((thx.Either) (thx.Eithers.leftMap(((thx.Either) (rt) ), ((haxe.lang.Function) (( (( thx.TestEithers_testLeftMap_93__Fun.__hx_current != null )) ? (thx.TestEithers_testLeftMap_93__Fun.__hx_current) : (thx.TestEithers_testLeftMap_93__Fun.__hx_current = ((thx.TestEithers_testLeftMap_93__Fun) (new thx.TestEithers_testLeftMap_93__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestEithers", "TestEithers.hx", "testLeftMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (93) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/core/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case -337172765:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testLeftMap")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testLeftMap")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1439397763:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testIsLeft")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIsLeft")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlatMap")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1677318688:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testIsRight")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIsRight")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 681589237:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToRightUnsafe")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToRightUnsafe")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1750624340:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToLeft")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToLeft")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1095081754:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToLeftUnsafe")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToLeftUnsafe")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case -1559559313:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToRight")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToRight")) );
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/thx/TestEithers.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/thx/TestEithers.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/core/thx/TestEithers.hx"
		{
			//line 7 "/shared/core/thx/TestEithers.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/thx/TestEithers.hx"
			switch (field.hashCode())
			{
				case -337172765:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testLeftMap")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testLeftMap();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1439397763:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testIsLeft")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testIsLeft();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testFlatMap();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1677318688:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testIsRight")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testIsRight();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 681589237:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToRightUnsafe")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testToRightUnsafe();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1750624340:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToLeft")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testToLeft();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case 1095081754:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToLeftUnsafe")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testToLeftUnsafe();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
				case -1559559313:
				{
					//line 7 "/shared/core/thx/TestEithers.hx"
					if (field.equals("testToRight")) 
					{
						//line 7 "/shared/core/thx/TestEithers.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestEithers.hx"
						this.testToRight();
					}
					
					//line 7 "/shared/core/thx/TestEithers.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/thx/TestEithers.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/thx/TestEithers.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/core/thx/TestEithers.hx"
		return null;
	}
	
	
}


