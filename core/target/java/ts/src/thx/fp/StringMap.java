// Generated by Haxe 3.3.0
package thx.fp;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class StringMap extends haxe.lang.HxObject
{
	public StringMap(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public StringMap()
	{
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		thx.fp.StringMap.__hx_ctor_thx_fp_StringMap(this);
	}
	
	
	public static void __hx_ctor_thx_fp_StringMap(thx.fp.StringMap __temp_me233)
	{
	}
	
	
	public static <V> boolean exists(thx.fp.MapImpl map, java.lang.String key)
	{
		//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((boolean) (thx.Options.toBool(((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (map) ), haxe.lang.Runtime.toString(key), ((haxe.lang.Function) (thx.Strings.order) ))) ))) );
	}
	
	
	public static <V> haxe.ds.Option get(thx.fp.MapImpl map, java.lang.String key)
	{
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (map) ), haxe.lang.Runtime.toString(key), ((haxe.lang.Function) (thx.Strings.order) ))) );
	}
	
	
	public static <V> V getAlt(thx.fp.MapImpl map, java.lang.String key, V alt)
	{
		//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((V) (thx.Options.getOrElse(((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (map) ), haxe.lang.Runtime.toString(key), ((haxe.lang.Function) (thx.Strings.order) ))) ), ((V) (alt) ))) );
	}
	
	
	public static <V> thx.fp.MapImpl set(thx.fp.MapImpl map, java.lang.String key, V value)
	{
		//line 24 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.insert(((thx.fp.MapImpl) (map) ), haxe.lang.Runtime.toString(key), ((V) (value) ), ((haxe.lang.Function) (thx.Strings.order) ))) );
	}
	
	
	public static <V> thx.fp.MapImpl remove(thx.fp.MapImpl map, java.lang.String key)
	{
		//line 27 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.delete(((thx.fp.MapImpl) (map) ), haxe.lang.Runtime.toString(key), ((haxe.lang.Function) (thx.Strings.order) ))) );
	}
	
	
	public static <V> thx.fp.MapImpl fromNative(haxe.IMap<java.lang.String, V> map)
	{
		//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.fromNative(((haxe.IMap<java.lang.String, V>) (map) ), ((haxe.lang.Function) (thx.Strings.order) ))) );
	}
	
	
	public static <V> haxe.ds.StringMap<V> toNative(thx.fp.MapImpl map)
	{
		//line 33 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((haxe.ds.StringMap<V>) (thx.fp._Map.Map_Impl_.foldLeftTuples(((thx.fp.MapImpl) (map) ), ((java.lang.Object) (new haxe.ds.StringMap<V>()) ), ((haxe.lang.Function) (new thx.fp.StringMap_toNative_33__Fun<V>()) ))) );
	}
	
	
	public static <V> thx.fp.MapImpl merge(thx.fp.MapImpl a, thx.fp.MapImpl b)
	{
		//line 39 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.foldLeftTuples(((thx.fp.MapImpl) (b) ), ((java.lang.Object) (a) ), ((haxe.lang.Function) (new thx.fp.StringMap_merge_39__Fun<V>()) ))) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return new thx.fp.StringMap(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Maps.hx"
		return new thx.fp.StringMap();
	}
	
	
}


