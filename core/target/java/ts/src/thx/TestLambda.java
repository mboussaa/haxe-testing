// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestLambda extends haxe.lang.HxObject
{
	public TestLambda(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestLambda()
	{
		//line 7 "/shared/core/thx/TestLambda.hx"
		thx.TestLambda.__hx_ctor_thx_TestLambda(this);
	}
	
	
	public static void __hx_ctor_thx_TestLambda(thx.TestLambda __temp_me188)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/thx/TestLambda.hx"
		return new thx.TestLambda(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/thx/TestLambda.hx"
		return new thx.TestLambda();
	}
	
	
	public void testFunctions()
	{
		//line 10 "/shared/core/thx/TestLambda.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{2, 3}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2}).map(((haxe.lang.Function) (( (( thx.TestLambda_testFunctions_10__Fun.__hx_current != null )) ? (thx.TestLambda_testFunctions_10__Fun.__hx_current) : (thx.TestLambda_testFunctions_10__Fun.__hx_current = ((thx.TestLambda_testFunctions_10__Fun) (new thx.TestLambda_testFunctions_10__Fun()) )) )) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (10) )) )}));
		//line 12 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(0, 0, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(2, ((java.lang.Object) (2) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
		//line 14 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 15 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
		//line 16 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 17 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		//line 19 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, haxe.root.Std.parseInt("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		//line 20 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, haxe.root.Std.parseInt("1"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, ((java.lang.Object) (1) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 22 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
		//line 23 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
		//line 24 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
		//line 25 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		//line 27 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, ((java.lang.Object) (1) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
		//line 28 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(3, 3, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 29 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(6, 6, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 30 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(10, 10, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
		//line 31 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(15, 15, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		//line 33 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("Test 1", ( "Test " + "1" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 34 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("Test 1+2", ( ( ( "Test " + "1" ) + "+" ) + "2" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
		//line 35 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("BA", ( "B" + "A" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
		//line 36 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("21", ( ( "" + 2 ) + "1" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		//line 37 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("$_1$_0", "$_1$_0", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
		//line 38 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals("$_0", ( "$" + "_0" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testFunctions"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
	}
	
	
	public void testForms()
	{
		//line 44 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
		//line 48 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
		//line 51 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		//line 58 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(0, 0, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (58) )) )}));
		//line 62 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (62) )) )}));
		//line 65 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (65) )) )}));
		//line 69 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (69) )) )}));
		//line 72 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (72) )) )}));
		//line 76 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
		//line 79 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(1, 1, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (79) )) )}));
		//line 81 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(false, false, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (81) )) )}));
		//line 82 "/shared/core/thx/TestLambda.hx"
		utest.Assert.equals(true, true, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestLambda", "TestLambda.hx", "testForms"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (82) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case -1203346755:
				{
					//line 6 "/shared/core/thx/TestLambda.hx"
					if (field.equals("testForms")) 
					{
						//line 6 "/shared/core/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestLambda.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testForms")) );
					}
					
					//line 6 "/shared/core/thx/TestLambda.hx"
					break;
				}
				
				
				case 529131305:
				{
					//line 6 "/shared/core/thx/TestLambda.hx"
					if (field.equals("testFunctions")) 
					{
						//line 6 "/shared/core/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestLambda.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFunctions")) );
					}
					
					//line 6 "/shared/core/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestLambda.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/thx/TestLambda.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/thx/TestLambda.hx"
		{
			//line 6 "/shared/core/thx/TestLambda.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestLambda.hx"
			switch (field.hashCode())
			{
				case -1203346755:
				{
					//line 6 "/shared/core/thx/TestLambda.hx"
					if (field.equals("testForms")) 
					{
						//line 6 "/shared/core/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestLambda.hx"
						this.testForms();
					}
					
					//line 6 "/shared/core/thx/TestLambda.hx"
					break;
				}
				
				
				case 529131305:
				{
					//line 6 "/shared/core/thx/TestLambda.hx"
					if (field.equals("testFunctions")) 
					{
						//line 6 "/shared/core/thx/TestLambda.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestLambda.hx"
						this.testFunctions();
					}
					
					//line 6 "/shared/core/thx/TestLambda.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestLambda.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestLambda.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/thx/TestLambda.hx"
		return null;
	}
	
	
}


