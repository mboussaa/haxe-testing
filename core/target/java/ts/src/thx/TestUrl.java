// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestUrl extends haxe.lang.HxObject
{
	public TestUrl(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestUrl()
	{
		//line 7 "/shared/core/thx/TestUrl.hx"
		thx.TestUrl.__hx_ctor_thx_TestUrl(this);
	}
	
	
	public static void __hx_ctor_thx_TestUrl(thx.TestUrl __temp_me208)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/thx/TestUrl.hx"
		return new thx.TestUrl(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/thx/TestUrl.hx"
		return new thx.TestUrl();
	}
	
	
	public void testBasics()
	{
		//line 10 "/shared/core/thx/TestUrl.hx"
		java.lang.Object url = thx._Url.Url_Impl_.fromString("http://user:password@www.example.com:8888/some/path/name.ext?a=b&c=d#hashtag/is/here");
		//line 11 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("http", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "protocol", true)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("user:password", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "auth", true)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("www.example.com:8888", ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) + (( (( ! (haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "port", true), null)) )) ? (( haxe.lang.Runtime.toString(":") + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "port", true)) )) : ("") )) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
		//line 14 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("www.example.com", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 16 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isTrue(( haxe.lang.Runtime.valEq("/some/path/name.ext?a=b&c=d", ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "pathName", true)) + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "search", true)) != null ) || ( ( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "queryString", true)) ) != null ) &&  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "queryString", true)) ).iterator(), "hasNext", null))) ))  ) )) ? (( "?" + thx._Url.Url_Impl_.get_search(((java.lang.Object) (url) )) )) : ("") )) )) || haxe.lang.Runtime.valEq("/some/path/name.ext?c=d&a=b", ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "pathName", true)) + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "search", true)) != null ) || ( ( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "queryString", true)) ) != null ) &&  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "queryString", true)) ).iterator(), "hasNext", null))) ))  ) )) ? (( "?" + thx._Url.Url_Impl_.get_search(((java.lang.Object) (url) )) )) : ("") )) )) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 20 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("/some/path/name.ext", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "pathName", true)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "/shared/core/thx/TestUrl.hx"
		utest.Assert.equals("hashtag/is/here", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hash", true)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
	}
	
	
	public void testToString()
	{
		//line 25 "/shared/core/thx/TestUrl.hx"
		haxe.root.Array<java.lang.String> urls = new haxe.root.Array<java.lang.String>(new java.lang.String[]{"http://user:password@www.example.com:8888/some/path/name.ext?a=b#hashtag/is/here", "http://example.com", "irc://irc.example.com/channel", "www.example.com/foo", "news:rec.gardens.roses", "ldap://[2001:db8::7]/c=GB?objectClass?one", "mailto:John.Doe@example.com", "telnet://192.0.2.16:80/", "ldap://ldap.example.com/dc=example,dc=com", "ldap://ldap.example.com/cn=Barbara%20Jensen,dc=example,dc=com?cn,mail,telephoneNumber"});
		//line 37 "/shared/core/thx/TestUrl.hx"
		{
			//line 37 "/shared/core/thx/TestUrl.hx"
			int _g = 0;
			//line 37 "/shared/core/thx/TestUrl.hx"
			while (( _g < urls.length ))
			{
				//line 37 "/shared/core/thx/TestUrl.hx"
				java.lang.String url = urls.__get(_g);
				//line 37 "/shared/core/thx/TestUrl.hx"
				 ++ _g;
				//line 38 "/shared/core/thx/TestUrl.hx"
				utest.Assert.equals(url, thx._Url.Url_Impl_.toString(thx._Url.Url_Impl_.parse(url, false)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
			}
			
		}
		
	}
	
	
	public void testAbsolute()
	{
		//line 42 "/shared/core/thx/TestUrl.hx"
		java.lang.Object url = thx._Url.Url_Impl_.fromString("http://example.com");
		//line 43 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isTrue(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) != null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (43) )) )}));
		//line 44 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isFalse(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) == null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
		//line 46 "/shared/core/thx/TestUrl.hx"
		url = thx._Url.Url_Impl_.fromString("example.com");
		//line 47 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isTrue(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) != null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
		//line 48 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isFalse(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) == null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
		//line 50 "/shared/core/thx/TestUrl.hx"
		url = thx._Url.Url_Impl_.fromString("/some/path");
		//line 51 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isFalse(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) != null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		//line 52 "/shared/core/thx/TestUrl.hx"
		utest.Assert.isTrue(( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (url) ), "hostName", true)) == null ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestUrl", "TestUrl.hx", "testAbsolute"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/thx/TestUrl.hx"
		{
			//line 6 "/shared/core/thx/TestUrl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestUrl.hx"
			switch (field.hashCode())
			{
				case -1852505047:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testAbsolute")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAbsolute")) );
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
				case -1062581986:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testToString")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToString")) );
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestUrl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestUrl.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/thx/TestUrl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/thx/TestUrl.hx"
		{
			//line 6 "/shared/core/thx/TestUrl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestUrl.hx"
			switch (field.hashCode())
			{
				case -1852505047:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testAbsolute")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						this.testAbsolute();
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						this.testBasics();
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
				case -1062581986:
				{
					//line 6 "/shared/core/thx/TestUrl.hx"
					if (field.equals("testToString")) 
					{
						//line 6 "/shared/core/thx/TestUrl.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestUrl.hx"
						this.testToString();
					}
					
					//line 6 "/shared/core/thx/TestUrl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestUrl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestUrl.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/thx/TestUrl.hx"
		return null;
	}
	
	
}


