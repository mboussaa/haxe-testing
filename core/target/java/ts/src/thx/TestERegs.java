// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestERegs extends haxe.lang.HxObject
{
	public TestERegs(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestERegs()
	{
		//line 13 "/shared/core/thx/TestERegs.hx"
		thx.TestERegs.__hx_ctor_thx_TestERegs(this);
	}
	
	
	public static void __hx_ctor_thx_TestERegs(thx.TestERegs __temp_me175)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 11 "/shared/core/thx/TestERegs.hx"
		return new thx.TestERegs(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 11 "/shared/core/thx/TestERegs.hx"
		return new thx.TestERegs();
	}
	
	
	public void testEscape()
	{
		//line 17 "/shared/core/thx/TestERegs.hx"
		utest.Assert.equals("a\\.b", thx.ERegs.escape("a.b"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestERegs", "TestERegs.hx", "testEscape"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		//line 18 "/shared/core/thx/TestERegs.hx"
		utest.Assert.equals("a\\.b\\.c", thx.ERegs.escape("a.b.c"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestERegs", "TestERegs.hx", "testEscape"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
		//line 19 "/shared/core/thx/TestERegs.hx"
		utest.Assert.equals("\\(\\[\\.\\]\\.\\)", thx.ERegs.escape("([.].)"), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestERegs", "TestERegs.hx", "testEscape"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 11 "/shared/core/thx/TestERegs.hx"
		{
			//line 11 "/shared/core/thx/TestERegs.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/thx/TestERegs.hx"
			switch (field.hashCode())
			{
				case 1325562803:
				{
					//line 11 "/shared/core/thx/TestERegs.hx"
					if (field.equals("testEscape")) 
					{
						//line 11 "/shared/core/thx/TestERegs.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/thx/TestERegs.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEscape")) );
					}
					
					//line 11 "/shared/core/thx/TestERegs.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/thx/TestERegs.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/thx/TestERegs.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 11 "/shared/core/thx/TestERegs.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 11 "/shared/core/thx/TestERegs.hx"
		{
			//line 11 "/shared/core/thx/TestERegs.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/thx/TestERegs.hx"
			switch (field.hashCode())
			{
				case 1325562803:
				{
					//line 11 "/shared/core/thx/TestERegs.hx"
					if (field.equals("testEscape")) 
					{
						//line 11 "/shared/core/thx/TestERegs.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/thx/TestERegs.hx"
						this.testEscape();
					}
					
					//line 11 "/shared/core/thx/TestERegs.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/thx/TestERegs.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/thx/TestERegs.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 11 "/shared/core/thx/TestERegs.hx"
		return null;
	}
	
	
}


