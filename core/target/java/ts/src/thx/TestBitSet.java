// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestBitSet extends haxe.lang.HxObject
{
	public TestBitSet(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestBitSet()
	{
		//line 7 "/shared/core/thx/TestBitSet.hx"
		thx.TestBitSet.__hx_ctor_thx_TestBitSet(this);
	}
	
	
	public static void __hx_ctor_thx_TestBitSet(thx.TestBitSet __temp_me165)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/thx/TestBitSet.hx"
		return new thx.TestBitSet(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/thx/TestBitSet.hx"
		return new thx.TestBitSet();
	}
	
	
	public void testBitSet()
	{
		//line 10 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 10 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 10 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 10 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 11 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(0, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 14 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testBitSet_14__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 15 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testBitSet_15__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
		//line 16 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testBitSet_16__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 17 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testBitSet_17__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		//line 19 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(bits, 0, true);
		//line 20 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(1, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("1", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 23 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(bits, 1, true);
		//line 24 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(2, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
		//line 25 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("11", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		//line 27 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(bits, 2, true);
		//line 28 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 29 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("111", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 31 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(bits, 1, false);
		//line 32 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
		//line 33 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("101", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 36 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(bits, 32, true);
		//line 37 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
		//line 38 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("101000000000000000000000000000001", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
		//line 40 "/shared/core/thx/TestBitSet.hx"
		{
			//line 40 "/shared/core/thx/TestBitSet.hx"
			int _g1 = 0;
			//line 40 "/shared/core/thx/TestBitSet.hx"
			int _g = ((int) (thx._BitSet.BitSet_Impl_.get_length(bits)) );
			//line 40 "/shared/core/thx/TestBitSet.hx"
			while (( _g1 < _g ))
			{
				//line 40 "/shared/core/thx/TestBitSet.hx"
				int i = _g1++;
				//line 41 "/shared/core/thx/TestBitSet.hx"
				if (((boolean) (thx.Arrays.contains(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 2, 32})) )) ), ((java.lang.Object) (i) ), ((haxe.lang.Function) (null) ))) )) 
				{
					//line 42 "/shared/core/thx/TestBitSet.hx"
					utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.at(bits, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
				}
				else
				{
					//line 44 "/shared/core/thx/TestBitSet.hx"
					utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.at(bits, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
				}
				
			}
			
		}
		
		//line 48 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testBitSet_48__Fun(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
		//line 50 "/shared/core/thx/TestBitSet.hx"
		{
			//line 50 "/shared/core/thx/TestBitSet.hx"
			int _g11 = 0;
			//line 50 "/shared/core/thx/TestBitSet.hx"
			int _g2 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (bits) ));
			//line 50 "/shared/core/thx/TestBitSet.hx"
			while (( _g11 < _g2 ))
			{
				//line 50 "/shared/core/thx/TestBitSet.hx"
				int i1 = _g11++;
				//line 50 "/shared/core/thx/TestBitSet.hx"
				thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (bits) ), i1, true);
			}
			
		}
		
		//line 51 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		//line 52 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("111111111111111111111111111111111", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
		//line 54 "/shared/core/thx/TestBitSet.hx"
		{
			//line 54 "/shared/core/thx/TestBitSet.hx"
			int _g12 = 0;
			//line 54 "/shared/core/thx/TestBitSet.hx"
			int _g3 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (bits) ));
			//line 54 "/shared/core/thx/TestBitSet.hx"
			while (( _g12 < _g3 ))
			{
				//line 54 "/shared/core/thx/TestBitSet.hx"
				int i2 = _g12++;
				//line 54 "/shared/core/thx/TestBitSet.hx"
				thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (bits) ), i2, false);
			}
			
		}
		
		//line 55 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(33, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
		//line 56 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("000000000000000000000000000000000", thx._BitSet.BitSet_Impl_.toString(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testBitSet"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (56) )) )}));
	}
	
	
	public void testFromBools()
	{
		//line 60 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 60 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 60 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 60 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{true, false, true, true})) )) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testFromBools_60__Fun.__hx_current != null )) ? (thx.TestBitSet_testFromBools_60__Fun.__hx_current) : (thx.TestBitSet_testFromBools_60__Fun.__hx_current = ((thx.TestBitSet_testFromBools_60__Fun) (new thx.TestBitSet_testFromBools_60__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 61 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(4, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
		//line 62 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 0), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (62) )) )}));
		//line 63 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(false, thx._BitSet.BitSet_Impl_.at(bits, 1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (63) )) )}));
		//line 64 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (64) )) )}));
		//line 65 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (65) )) )}));
	}
	
	
	public void testToBools()
	{
		//line 69 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
		//line 69 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 69 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 69 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 69 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testToBools_69__Fun.__hx_current != null )) ? (thx.TestBitSet_testToBools_69__Fun.__hx_current) : (thx.TestBitSet_testToBools_69__Fun.__hx_current = ((thx.TestBitSet_testToBools_69__Fun) (new thx.TestBitSet_testToBools_69__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 70 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = bits;
		//line 70 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{true, false, true, false, true}), ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (thx.Ints.range(thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) )), null, null).map(((haxe.lang.Function) (new thx.TestBitSet_testToBools_70__Fun(this2)) ))) )) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testToBools"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (70) )) )}));
	}
	
	
	public void testToInt32s()
	{
		//line 74 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
		//line 74 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 74 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 74 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 74 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testToInt32s_74__Fun.__hx_current != null )) ? (thx.TestBitSet_testToInt32s_74__Fun.__hx_current) : (thx.TestBitSet_testToInt32s_74__Fun.__hx_current = ((thx.TestBitSet_testToInt32s_74__Fun) (new thx.TestBitSet_testToInt32s_74__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 75 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> parts = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (bits) ).slice(1, null)) )) );
		//line 76 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{21}), parts, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testToInt32s"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
	}
	
	
	public void testFromString()
	{
		//line 80 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("1011", "");
		//line 80 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 80 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 80 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 80 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testFromString_80__Fun.__hx_current != null )) ? (thx.TestBitSet_testFromString_80__Fun.__hx_current) : (thx.TestBitSet_testFromString_80__Fun.__hx_current = ((thx.TestBitSet_testFromString_80__Fun) (new thx.TestBitSet_testFromString_80__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 81 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(4, thx._BitSet.BitSet_Impl_.get_length(bits), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (81) )) )}));
		//line 82 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 0), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (82) )) )}));
		//line 83 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(false, thx._BitSet.BitSet_Impl_.at(bits, 1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
		//line 84 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (84) )) )}));
		//line 85 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(true, thx._BitSet.BitSet_Impl_.at(bits, 3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (85) )) )}));
	}
	
	
	public void testPresetLength()
	{
		//line 89 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{35});
		//line 89 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (1.09375) ) + 1 );
		//line 89 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 89 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits1 = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 90 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(35, thx._BitSet.BitSet_Impl_.get_length(bits1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (90) )) )}));
		//line 91 "/shared/core/thx/TestBitSet.hx"
		{
			//line 91 "/shared/core/thx/TestBitSet.hx"
			int _g = 0;
			//line 91 "/shared/core/thx/TestBitSet.hx"
			while (( _g < 35 ))
			{
				//line 91 "/shared/core/thx/TestBitSet.hx"
				int i = _g++;
				//line 92 "/shared/core/thx/TestBitSet.hx"
				utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.at(bits1, i), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (92) )) )}));
			}
			
		}
		
		//line 94 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testPresetLength_94__Fun(bits1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (94) )) )}));
		//line 96 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{35});
		//line 96 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (1.09375) ) + 1 );
		//line 96 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 96 "/shared/core/thx/TestBitSet.hx"
		{
			//line 96 "/shared/core/thx/TestBitSet.hx"
			int _g1 = 0;
			//line 96 "/shared/core/thx/TestBitSet.hx"
			int _g2 = thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) ));
			//line 96 "/shared/core/thx/TestBitSet.hx"
			while (( _g1 < _g2 ))
			{
				//line 96 "/shared/core/thx/TestBitSet.hx"
				int i1 = _g1++;
				//line 96 "/shared/core/thx/TestBitSet.hx"
				thx._BitSet.BitSet_Impl_.setAt(((haxe.root.Array<java.lang.Object>) (this2) ), i1, true);
			}
			
		}
		
		//line 96 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> bits2 = ((haxe.root.Array<java.lang.Object>) (this2) );
		//line 97 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(35, thx._BitSet.BitSet_Impl_.get_length(bits2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (97) )) )}));
		//line 98 "/shared/core/thx/TestBitSet.hx"
		{
			//line 98 "/shared/core/thx/TestBitSet.hx"
			int _g3 = 0;
			//line 98 "/shared/core/thx/TestBitSet.hx"
			while (( _g3 < 35 ))
			{
				//line 98 "/shared/core/thx/TestBitSet.hx"
				int i2 = _g3++;
				//line 99 "/shared/core/thx/TestBitSet.hx"
				utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.at(bits2, i2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (99) )) )}));
			}
			
		}
		
		//line 101 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testPresetLength_101__Fun(bits2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testPresetLength"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (101) )) )}));
	}
	
	
	public void testConcat()
	{
		//line 105 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101", "");
		//line 105 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 105 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 105 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 105 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testConcat_105__Fun.__hx_current != null )) ? (thx.TestBitSet_testConcat_105__Fun.__hx_current) : (thx.TestBitSet_testConcat_105__Fun.__hx_current = ((thx.TestBitSet_testConcat_105__Fun) (new thx.TestBitSet_testConcat_105__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 106 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("111", "");
		//line 106 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 106 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 106 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 106 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testConcat_106__Fun.__hx_current != null )) ? (thx.TestBitSet_testConcat_106__Fun.__hx_current) : (thx.TestBitSet_testConcat_106__Fun.__hx_current = ((thx.TestBitSet_testConcat_106__Fun) (new thx.TestBitSet_testConcat_106__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 107 "/shared/core/thx/TestBitSet.hx"
		int length = ( ((int) (thx._BitSet.BitSet_Impl_.get_length(b1)) ) + ((int) (thx._BitSet.BitSet_Impl_.get_length(b2)) ) );
		//line 107 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{length});
		//line 107 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (( length / 32 )) ) + 1 );
		//line 107 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 107 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> result = ((haxe.root.Array<java.lang.Object>) (this3) );
		//line 107 "/shared/core/thx/TestBitSet.hx"
		int index = 0;
		//line 107 "/shared/core/thx/TestBitSet.hx"
		{
			//line 107 "/shared/core/thx/TestBitSet.hx"
			int _g1 = 0;
			//line 107 "/shared/core/thx/TestBitSet.hx"
			int _g = ((int) (thx._BitSet.BitSet_Impl_.get_length(b1)) );
			//line 107 "/shared/core/thx/TestBitSet.hx"
			while (( _g1 < _g ))
			{
				//line 107 "/shared/core/thx/TestBitSet.hx"
				int leftIndex = _g1++;
				//line 107 "/shared/core/thx/TestBitSet.hx"
				thx._BitSet.BitSet_Impl_.setAt(result, index++, thx._BitSet.BitSet_Impl_.at(b1, leftIndex));
			}
			
		}
		
		//line 107 "/shared/core/thx/TestBitSet.hx"
		{
			//line 107 "/shared/core/thx/TestBitSet.hx"
			int _g11 = 0;
			//line 107 "/shared/core/thx/TestBitSet.hx"
			int _g2 = ((int) (thx._BitSet.BitSet_Impl_.get_length(b2)) );
			//line 107 "/shared/core/thx/TestBitSet.hx"
			while (( _g11 < _g2 ))
			{
				//line 107 "/shared/core/thx/TestBitSet.hx"
				int rightIndex = _g11++;
				//line 107 "/shared/core/thx/TestBitSet.hx"
				thx._BitSet.BitSet_Impl_.setAt(result, index++, thx._BitSet.BitSet_Impl_.at(b2, rightIndex));
			}
			
		}
		
		//line 108 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("10101", thx._BitSet.BitSet_Impl_.toString(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (108) )) )}));
		//line 109 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("111", thx._BitSet.BitSet_Impl_.toString(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (109) )) )}));
		//line 110 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("10101111", thx._BitSet.BitSet_Impl_.toString(result), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (110) )) )}));
		//line 111 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(5, thx._BitSet.BitSet_Impl_.get_length(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (111) )) )}));
		//line 112 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(3, thx._BitSet.BitSet_Impl_.get_length(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (112) )) )}));
		//line 113 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same(8, thx._BitSet.BitSet_Impl_.get_length(result), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (113) )) )}));
	}
	
	
	public void testExpand()
	{
		//line 117 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("1011", "");
		//line 117 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 117 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 117 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 117 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testExpand_117__Fun.__hx_current != null )) ? (thx.TestBitSet_testExpand_117__Fun.__hx_current) : (thx.TestBitSet_testExpand_117__Fun.__hx_current = ((thx.TestBitSet_testExpand_117__Fun) (new thx.TestBitSet_testExpand_117__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 118 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = thx._BitSet.BitSet_Impl_.expand(b1, 1);
		//line 119 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = thx._BitSet.BitSet_Impl_.expand(b1, 3);
		//line 120 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("1011", thx._BitSet.BitSet_Impl_.toString(b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (120) )) )}));
		//line 121 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("11001111", thx._BitSet.BitSet_Impl_.toString(b2), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (121) )) )}));
		//line 122 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("1111000011111111", thx._BitSet.BitSet_Impl_.toString(b3), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testExpand"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (122) )) )}));
	}
	
	
	public void testEquals()
	{
		//line 126 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
		//line 126 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 126 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 126 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 126 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_126__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_126__Fun.__hx_current) : (thx.TestBitSet_testEquals_126__Fun.__hx_current = ((thx.TestBitSet_testEquals_126__Fun) (new thx.TestBitSet_testEquals_126__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 127 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("10101100", "");
		//line 127 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 127 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 127 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 127 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_127__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_127__Fun.__hx_current) : (thx.TestBitSet_testEquals_127__Fun.__hx_current = ((thx.TestBitSet_testEquals_127__Fun) (new thx.TestBitSet_testEquals_127__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 128 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("101011001", "");
		//line 128 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 128 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 128 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 128 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_128__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_128__Fun.__hx_current) : (thx.TestBitSet_testEquals_128__Fun.__hx_current = ((thx.TestBitSet_testEquals_128__Fun) (new thx.TestBitSet_testEquals_128__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 129 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("10101101", "");
		//line 129 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 129 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 129 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 129 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_129__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_129__Fun.__hx_current) : (thx.TestBitSet_testEquals_129__Fun.__hx_current = ((thx.TestBitSet_testEquals_129__Fun) (new thx.TestBitSet_testEquals_129__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
		//line 130 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("1010110", "");
		//line 130 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 130 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 130 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 130 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testEquals_130__Fun.__hx_current != null )) ? (thx.TestBitSet_testEquals_130__Fun.__hx_current) : (thx.TestBitSet_testEquals_130__Fun.__hx_current = ((thx.TestBitSet_testEquals_130__Fun) (new thx.TestBitSet_testEquals_130__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 131 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (131) )) )}));
		//line 132 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (132) )) )}));
		//line 133 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (133) )) )}));
		//line 134 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (134) )) )}));
		//line 135 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (135) )) )}));
		//line 136 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (136) )) )}));
		//line 137 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (137) )) )}));
		//line 138 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.equals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (138) )) )}));
	}
	
	
	public void testNotEquals()
	{
		//line 142 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
		//line 142 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 142 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 142 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 142 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_142__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_142__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_142__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_142__Fun) (new thx.TestBitSet_testNotEquals_142__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 143 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("10101100", "");
		//line 143 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 143 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 143 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 143 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_143__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_143__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_143__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_143__Fun) (new thx.TestBitSet_testNotEquals_143__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 144 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("101011001", "");
		//line 144 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 144 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 144 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 144 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_144__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_144__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_144__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_144__Fun) (new thx.TestBitSet_testNotEquals_144__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 145 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("10101101", "");
		//line 145 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 145 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 145 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 145 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_145__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_145__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_145__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_145__Fun) (new thx.TestBitSet_testNotEquals_145__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
		//line 146 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("1010110", "");
		//line 146 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 146 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 146 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 146 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNotEquals_146__Fun.__hx_current != null )) ? (thx.TestBitSet_testNotEquals_146__Fun.__hx_current) : (thx.TestBitSet_testNotEquals_146__Fun.__hx_current = ((thx.TestBitSet_testNotEquals_146__Fun) (new thx.TestBitSet_testNotEquals_146__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 147 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (147) )) )}));
		//line 148 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (148) )) )}));
		//line 149 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (149) )) )}));
		//line 150 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (150) )) )}));
		//line 151 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isFalse(thx._BitSet.BitSet_Impl_.notEquals(b1, b2), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (151) )) )}));
		//line 152 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b3), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (152) )) )}));
		//line 153 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b4), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (153) )) )}));
		//line 154 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.notEquals(b1, b5), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNotEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (154) )) )}));
	}
	
	
	public void testAnd()
	{
		//line 158 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
		//line 158 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 158 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 158 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 158 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_158__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_158__Fun.__hx_current) : (thx.TestBitSet_testAnd_158__Fun.__hx_current = ((thx.TestBitSet_testAnd_158__Fun) (new thx.TestBitSet_testAnd_158__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 159 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
		//line 159 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 159 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 159 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 159 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_159__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_159__Fun.__hx_current) : (thx.TestBitSet_testAnd_159__Fun.__hx_current = ((thx.TestBitSet_testAnd_159__Fun) (new thx.TestBitSet_testAnd_159__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 160 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
		//line 160 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 160 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 160 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 160 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_160__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_160__Fun.__hx_current) : (thx.TestBitSet_testAnd_160__Fun.__hx_current = ((thx.TestBitSet_testAnd_160__Fun) (new thx.TestBitSet_testAnd_160__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 161 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
		//line 161 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 161 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 161 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 161 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_161__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_161__Fun.__hx_current) : (thx.TestBitSet_testAnd_161__Fun.__hx_current = ((thx.TestBitSet_testAnd_161__Fun) (new thx.TestBitSet_testAnd_161__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
		//line 162 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
		//line 162 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 162 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 162 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 162 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_162__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_162__Fun.__hx_current) : (thx.TestBitSet_testAnd_162__Fun.__hx_current = ((thx.TestBitSet_testAnd_162__Fun) (new thx.TestBitSet_testAnd_162__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 163 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("10101100", "");
		//line 163 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 163 "/shared/core/thx/TestBitSet.hx"
		int size5 = ( ((int) (0.) ) + 1 );
		//line 163 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
		//line 163 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_163__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_163__Fun.__hx_current) : (thx.TestBitSet_testAnd_163__Fun.__hx_current = ((thx.TestBitSet_testAnd_163__Fun) (new thx.TestBitSet_testAnd_163__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.and(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (163) )) )}));
		//line 164 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("00000000", "");
		//line 164 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 164 "/shared/core/thx/TestBitSet.hx"
		int size6 = ( ((int) (0.) ) + 1 );
		//line 164 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
		//line 164 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testAnd_164__Fun.__hx_current != null )) ? (thx.TestBitSet_testAnd_164__Fun.__hx_current) : (thx.TestBitSet_testAnd_164__Fun.__hx_current = ((thx.TestBitSet_testAnd_164__Fun) (new thx.TestBitSet_testAnd_164__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.and(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (164) )) )}));
		//line 165 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testAnd_165__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (165) )) )}));
		//line 166 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testAnd_166__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testAnd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (166) )) )}));
	}
	
	
	public void testOr()
	{
		//line 170 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
		//line 170 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 170 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 170 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 170 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_170__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_170__Fun.__hx_current) : (thx.TestBitSet_testOr_170__Fun.__hx_current = ((thx.TestBitSet_testOr_170__Fun) (new thx.TestBitSet_testOr_170__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 171 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
		//line 171 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 171 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 171 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 171 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_171__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_171__Fun.__hx_current) : (thx.TestBitSet_testOr_171__Fun.__hx_current = ((thx.TestBitSet_testOr_171__Fun) (new thx.TestBitSet_testOr_171__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 172 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
		//line 172 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 172 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 172 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 172 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_172__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_172__Fun.__hx_current) : (thx.TestBitSet_testOr_172__Fun.__hx_current = ((thx.TestBitSet_testOr_172__Fun) (new thx.TestBitSet_testOr_172__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 173 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
		//line 173 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 173 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 173 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 173 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_173__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_173__Fun.__hx_current) : (thx.TestBitSet_testOr_173__Fun.__hx_current = ((thx.TestBitSet_testOr_173__Fun) (new thx.TestBitSet_testOr_173__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
		//line 174 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
		//line 174 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 174 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 174 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 174 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_174__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_174__Fun.__hx_current) : (thx.TestBitSet_testOr_174__Fun.__hx_current = ((thx.TestBitSet_testOr_174__Fun) (new thx.TestBitSet_testOr_174__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 175 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("11111111", "");
		//line 175 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 175 "/shared/core/thx/TestBitSet.hx"
		int size5 = ( ((int) (0.) ) + 1 );
		//line 175 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
		//line 175 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_175__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_175__Fun.__hx_current) : (thx.TestBitSet_testOr_175__Fun.__hx_current = ((thx.TestBitSet_testOr_175__Fun) (new thx.TestBitSet_testOr_175__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.or(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (175) )) )}));
		//line 176 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("10101100", "");
		//line 176 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 176 "/shared/core/thx/TestBitSet.hx"
		int size6 = ( ((int) (0.) ) + 1 );
		//line 176 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
		//line 176 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testOr_176__Fun.__hx_current != null )) ? (thx.TestBitSet_testOr_176__Fun.__hx_current) : (thx.TestBitSet_testOr_176__Fun.__hx_current = ((thx.TestBitSet_testOr_176__Fun) (new thx.TestBitSet_testOr_176__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.or(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (176) )) )}));
		//line 177 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testOr_177__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (177) )) )}));
		//line 178 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testOr_178__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testOr"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (178) )) )}));
	}
	
	
	public void testXor()
	{
		//line 182 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("10101100", "");
		//line 182 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 182 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 182 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 182 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_182__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_182__Fun.__hx_current) : (thx.TestBitSet_testXor_182__Fun.__hx_current = ((thx.TestBitSet_testXor_182__Fun) (new thx.TestBitSet_testXor_182__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 183 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
		//line 183 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 183 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 183 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 183 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_183__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_183__Fun.__hx_current) : (thx.TestBitSet_testXor_183__Fun.__hx_current = ((thx.TestBitSet_testXor_183__Fun) (new thx.TestBitSet_testXor_183__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) );
		//line 184 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("00000000", "");
		//line 184 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 184 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 184 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 184 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b3 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_184__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_184__Fun.__hx_current) : (thx.TestBitSet_testXor_184__Fun.__hx_current = ((thx.TestBitSet_testXor_184__Fun) (new thx.TestBitSet_testXor_184__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 185 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("111", "");
		//line 185 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 185 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 185 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 185 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b4 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_185__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_185__Fun.__hx_current) : (thx.TestBitSet_testXor_185__Fun.__hx_current = ((thx.TestBitSet_testXor_185__Fun) (new thx.TestBitSet_testXor_185__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) );
		//line 186 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("000", "");
		//line 186 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 186 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 186 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 186 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b5 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_186__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_186__Fun.__hx_current) : (thx.TestBitSet_testXor_186__Fun.__hx_current = ((thx.TestBitSet_testXor_186__Fun) (new thx.TestBitSet_testXor_186__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 187 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("01010011", "");
		//line 187 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 187 "/shared/core/thx/TestBitSet.hx"
		int size5 = ( ((int) (0.) ) + 1 );
		//line 187 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
		//line 187 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_187__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_187__Fun.__hx_current) : (thx.TestBitSet_testXor_187__Fun.__hx_current = ((thx.TestBitSet_testXor_187__Fun) (new thx.TestBitSet_testXor_187__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ), thx._BitSet.BitSet_Impl_.xor(b1, b2)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (187) )) )}));
		//line 188 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars6 = haxe.lang.StringExt.split("10101100", "");
		//line 188 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 188 "/shared/core/thx/TestBitSet.hx"
		int size6 = ( ((int) (0.) ) + 1 );
		//line 188 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this7) )) ), ((int) (( size6 + 1 )) ), ((java.lang.Object) (0) ));
		//line 188 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars6) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testXor_188__Fun.__hx_current != null )) ? (thx.TestBitSet_testXor_188__Fun.__hx_current) : (thx.TestBitSet_testXor_188__Fun.__hx_current = ((thx.TestBitSet_testXor_188__Fun) (new thx.TestBitSet_testXor_188__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this7) ))) ), thx._BitSet.BitSet_Impl_.xor(b1, b3)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (188) )) )}));
		//line 189 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testXor_189__Fun(b4, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (189) )) )}));
		//line 190 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.raises(new thx.TestBitSet_testXor_190__Fun(b5, b1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testXor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (190) )) )}));
	}
	
	
	public void testNegate()
	{
		//line 194 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("00000000", "");
		//line 194 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 194 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 194 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 194 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> tmp = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_194__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_194__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_194__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_194__Fun_0) (new thx.TestBitSet_testNegate_194__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 194 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars1 = haxe.lang.StringExt.split("11111111", "");
		//line 194 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 194 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 194 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this2) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 194 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars1) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_194__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_194__Fun.__hx_current) : (thx.TestBitSet_testNegate_194__Fun.__hx_current = ((thx.TestBitSet_testNegate_194__Fun) (new thx.TestBitSet_testNegate_194__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this2) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (194) )) )}));
		//line 195 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars2 = haxe.lang.StringExt.split("11111111", "");
		//line 195 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 195 "/shared/core/thx/TestBitSet.hx"
		int size2 = ( ((int) (0.) ) + 1 );
		//line 195 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size2 + 1 )) ), ((java.lang.Object) (0) ));
		//line 195 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> tmp1 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars2) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_195__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_195__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_195__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_195__Fun_0) (new thx.TestBitSet_testNegate_195__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 195 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars3 = haxe.lang.StringExt.split("00000000", "");
		//line 195 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 195 "/shared/core/thx/TestBitSet.hx"
		int size3 = ( ((int) (0.) ) + 1 );
		//line 195 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this4) )) ), ((int) (( size3 + 1 )) ), ((java.lang.Object) (0) ));
		//line 195 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp1, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars3) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_195__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_195__Fun.__hx_current) : (thx.TestBitSet_testNegate_195__Fun.__hx_current = ((thx.TestBitSet_testNegate_195__Fun) (new thx.TestBitSet_testNegate_195__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this4) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (195) )) )}));
		//line 196 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars4 = haxe.lang.StringExt.split("01010011", "");
		//line 196 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 196 "/shared/core/thx/TestBitSet.hx"
		int size4 = ( ((int) (0.) ) + 1 );
		//line 196 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this5) )) ), ((int) (( size4 + 1 )) ), ((java.lang.Object) (0) ));
		//line 196 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> tmp2 = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars4) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_196__Fun_0.__hx_current != null )) ? (thx.TestBitSet_testNegate_196__Fun_0.__hx_current) : (thx.TestBitSet_testNegate_196__Fun_0.__hx_current = ((thx.TestBitSet_testNegate_196__Fun_0) (new thx.TestBitSet_testNegate_196__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this5) ))) );
		//line 196 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars5 = haxe.lang.StringExt.split("10101100", "");
		//line 196 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 196 "/shared/core/thx/TestBitSet.hx"
		int size5 = ( ((int) (0.) ) + 1 );
		//line 196 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this6) )) ), ((int) (( size5 + 1 )) ), ((java.lang.Object) (0) ));
		//line 196 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.isTrue(thx._BitSet.BitSet_Impl_.equals(tmp2, thx._BitSet.BitSet_Impl_.negate(((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars5) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testNegate_196__Fun.__hx_current != null )) ? (thx.TestBitSet_testNegate_196__Fun.__hx_current) : (thx.TestBitSet_testNegate_196__Fun.__hx_current = ((thx.TestBitSet_testNegate_196__Fun) (new thx.TestBitSet_testNegate_196__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this6) ))) ))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testNegate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (196) )) )}));
	}
	
	
	public void testClone()
	{
		//line 200 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.String> chars = haxe.lang.StringExt.split("0101", "");
		//line 200 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 200 "/shared/core/thx/TestBitSet.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 200 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 200 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> a = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.String>) (chars) ), ((haxe.lang.Function) (( (( thx.TestBitSet_testClone_200__Fun.__hx_current != null )) ? (thx.TestBitSet_testClone_200__Fun.__hx_current) : (thx.TestBitSet_testClone_200__Fun.__hx_current = ((thx.TestBitSet_testClone_200__Fun) (new thx.TestBitSet_testClone_200__Fun()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
		//line 201 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this2 = a;
		//line 201 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> tmp = thx.Ints.range(thx._BitSet.BitSet_Impl_.get_length(((haxe.root.Array<java.lang.Object>) (this2) )), null, null);
		//line 201 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 201 "/shared/core/thx/TestBitSet.hx"
		int size1 = ( ((int) (0.) ) + 1 );
		//line 201 "/shared/core/thx/TestBitSet.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this3) )) ), ((int) (( size1 + 1 )) ), ((java.lang.Object) (0) ));
		//line 201 "/shared/core/thx/TestBitSet.hx"
		haxe.root.Array<java.lang.Object> b = ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reduce(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (tmp) )) ), ((haxe.lang.Function) (new thx.TestBitSet_testClone_201__Fun(this2)) ), ((haxe.root.Array<java.lang.Object>) (this3) ))) );
		//line 202 "/shared/core/thx/TestBitSet.hx"
		thx._BitSet.BitSet_Impl_.setAt(b, 0, true);
		//line 203 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("0101", thx._BitSet.BitSet_Impl_.toString(a), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (203) )) )}));
		//line 204 "/shared/core/thx/TestBitSet.hx"
		utest.Assert.same("1101", thx._BitSet.BitSet_Impl_.toString(b), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestBitSet", "TestBitSet.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (204) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case -1206209557:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testClone")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testClone")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1230932807:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testBitSet")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBitSet")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1570415156:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testNegate")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testNegate")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 723465421:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testFromBools")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromBools")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422462359:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testXor")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testXor")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1574149092:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testToBools")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToBools")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -877170155:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testOr")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOr")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1354408782:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testToInt32s")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToInt32s")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422484507:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testAnd")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAnd")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1551191040:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testNotEquals")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testNotEquals")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1616475223:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testPresetLength")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testPresetLength")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testEquals")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEquals")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testConcat")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testConcat")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1330567628:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testExpand")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testExpand")) );
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestBitSet.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/thx/TestBitSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/thx/TestBitSet.hx"
		{
			//line 6 "/shared/core/thx/TestBitSet.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/thx/TestBitSet.hx"
			switch (field.hashCode())
			{
				case -1206209557:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testClone")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testClone();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1230932807:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testBitSet")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testBitSet();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1570415156:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testNegate")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testNegate();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 723465421:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testFromBools")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testFromBools();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422462359:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testXor")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testXor();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1574149092:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testToBools")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testToBools();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -877170155:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testOr")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testOr();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1354408782:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testToInt32s")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testToInt32s();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case -1422484507:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testAnd")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testAnd();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testFromString();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1551191040:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testNotEquals")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testNotEquals();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1616475223:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testPresetLength")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testPresetLength();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testEquals")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testEquals();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testConcat")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testConcat();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
				case 1330567628:
				{
					//line 6 "/shared/core/thx/TestBitSet.hx"
					if (field.equals("testExpand")) 
					{
						//line 6 "/shared/core/thx/TestBitSet.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/thx/TestBitSet.hx"
						this.testExpand();
					}
					
					//line 6 "/shared/core/thx/TestBitSet.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/thx/TestBitSet.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/thx/TestBitSet.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/thx/TestBitSet.hx"
		return null;
	}
	
	
}


