// Generated by Haxe 3.3.0
package thx.bigint;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DecimalImpl extends haxe.lang.HxObject
{
	static
	{
		//line 7 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl.zero = thx.bigint.Decimals.fromInt(0);
		//line 8 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl.one = thx.bigint.Decimals.fromInt(1);
		//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl.ten = thx.bigint.Decimals.fromInt(10);
	}
	
	public DecimalImpl(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DecimalImpl(thx.bigint.BigIntImpl value, int scale)
	{
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl.__hx_ctor_thx_bigint_DecimalImpl(this, value, scale);
	}
	
	
	public static void __hx_ctor_thx_bigint_DecimalImpl(thx.bigint.DecimalImpl __temp_me94, thx.bigint.BigIntImpl value, int scale)
	{
		//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		__temp_me94.value = value;
		//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		__temp_me94.scale = scale;
	}
	
	
	public static thx.bigint.DecimalImpl zero;
	
	public static thx.bigint.DecimalImpl one;
	
	public static thx.bigint.DecimalImpl ten;
	
	public static thx.bigint.DecimalImpl randomBetween(thx.bigint.DecimalImpl a, thx.bigint.DecimalImpl b)
	{
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = a.matchScale(b);
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = b.matchScale(a);
		//line 14 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(thx._BigInt.BigInt_Impl_.randomBetween(lhs.value, rhs.value), lhs.scale);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(((thx.bigint.BigIntImpl) (arr.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(arr.__get(1))) ));
	}
	
	
	public thx.bigint.BigIntImpl value;
	
	public int scale;
	
	public thx.bigint.DecimalImpl add(thx.bigint.DecimalImpl that)
	{
		//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(lhs.value.add(rhs.value), lhs.scale);
	}
	
	
	public thx.bigint.DecimalImpl subtract(thx.bigint.DecimalImpl that)
	{
		//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 34 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(lhs.value.subtract(rhs.value), lhs.scale);
	}
	
	
	public thx.bigint.DecimalImpl divide(thx.bigint.DecimalImpl that)
	{
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.divideWithScale(that, thx.bigint.Decimals.divisionExtraScale);
	}
	
	
	public thx.bigint.DecimalImpl divideWithScale(thx.bigint.DecimalImpl that, int scale)
	{
		//line 41 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (that.isZero()) 
		{
			//line 42 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			throw haxe.lang.HaxeException.wrap(new thx.Error("division by zero", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.bigint.DecimalImpl", "DecimalImpl.hx", "divideWithScale"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )})));
		}
		
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.BigIntImpl pow = thx.bigint.Small.ten.pow(thx.bigint.Bigs.fromInt(( rhs.scale + scale )));
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.Object qr = lhs.value.multiply(pow).divMod(rhs.value);
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		int nscale = ( rhs.scale + scale );
		//line 48 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(((thx.bigint.BigIntImpl) (haxe.lang.Runtime.getField(qr, "quotient", true)) ), nscale).trim(nscale);
	}
	
	
	public thx.bigint.DecimalImpl moduloWithScale(thx.bigint.DecimalImpl that, int scale)
	{
		//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (that.isZero()) 
		{
			//line 53 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			throw haxe.lang.HaxeException.wrap(new thx.Error("modulo by zero", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.bigint.DecimalImpl", "DecimalImpl.hx", "moduloWithScale"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )})));
		}
		
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.BigIntImpl pow = thx.bigint.Small.ten.pow(thx.bigint.Bigs.fromInt(scale));
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.Object qr = lhs.value.multiply(pow).divMod(rhs.value.multiply(pow));
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		int nscale = ( lhs.scale + scale );
		//line 59 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(((thx.bigint.BigIntImpl) (haxe.lang.Runtime.getField(qr, "remainder", true)) ), nscale).trim(nscale);
	}
	
	
	public thx.bigint.DecimalImpl multiply(thx.bigint.DecimalImpl that)
	{
		//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(this.value.multiply(that.value), ( this.scale + that.scale ));
	}
	
	
	public thx.bigint.DecimalImpl modulo(thx.bigint.DecimalImpl that)
	{
		//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.moduloWithScale(that, thx.bigint.Decimals.divisionExtraScale);
	}
	
	
	public thx.bigint.DecimalImpl abs()
	{
		//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(this.value.abs(), this.scale);
	}
	
	
	public thx.bigint.DecimalImpl negate()
	{
		//line 75 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return new thx.bigint.DecimalImpl(this.value.negate(), this.scale);
	}
	
	
	public thx.bigint.DecimalImpl next()
	{
		//line 78 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.add(thx.bigint.DecimalImpl.one);
	}
	
	
	public thx.bigint.DecimalImpl prev()
	{
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.subtract(thx.bigint.DecimalImpl.one);
	}
	
	
	public thx.bigint.DecimalImpl pow(int exp)
	{
		//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( exp < 0 )) 
		{
			//line 85 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			thx.bigint.BigIntImpl i = this.value.pow(thx.bigint.Bigs.fromInt( - (exp) ));
			//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return thx._Decimal.Decimal_Impl_.one.divideWithScale(thx._Decimal.Decimal_Impl_.fromBigInt(i), ( (( this.scale + 1 )) *  - (exp)  ));
		}
		else
		{
			//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			thx.bigint.BigIntImpl i1 = this.value.pow(thx.bigint.Bigs.fromInt(exp));
			//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return new thx.bigint.DecimalImpl(i1, ( this.scale * exp ));
		}
		
	}
	
	
	public thx.bigint.DecimalImpl ceilTo(int newscale)
	{
		//line 94 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (this.isZero()) 
		{
			//line 95 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return this;
		}
		
		//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl scaled = this.scaleTo(newscale);
		//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		double f = (( (scaled.isZero()) ? (thx.bigint.DecimalImpl.one) : (this.modulo(scaled)) )).multiply(thx.bigint.DecimalImpl.ten.pow(newscale)).toFloat();
		//line 98 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( f <= 0 )) 
		{
			//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return scaled;
		}
		else
		{
			//line 101 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return new thx.bigint.DecimalImpl(scaled.value.add(thx.bigint.Small.one), scaled.scale);
		}
		
	}
	
	
	public thx.bigint.DecimalImpl floorTo(int newscale)
	{
		//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.scaleTo(newscale);
	}
	
	
	public thx.bigint.DecimalImpl roundTo(int newscale)
	{
		//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (this.isZero()) 
		{
			//line 110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return this;
		}
		
		//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl scaled = this.scaleTo(newscale);
		//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		double f = (( (scaled.isZero()) ? (thx.bigint.DecimalImpl.one) : (this.modulo(scaled)) )).multiply(thx.bigint.DecimalImpl.ten.pow(newscale)).toFloat();
		//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( f < 0.5 )) 
		{
			//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return scaled;
		}
		else
		{
			//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return new thx.bigint.DecimalImpl(scaled.value.add(thx.bigint.Small.one), scaled.scale);
		}
		
	}
	
	
	public thx.bigint.DecimalImpl scaleTo(int newscale)
	{
		//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( newscale == this.scale )) 
		{
			//line 122 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return this;
		}
		
		//line 123 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( newscale > this.scale )) 
		{
			//line 124 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			thx.bigint.BigIntImpl mul = thx.bigint.Small.ten.pow(thx.bigint.Bigs.fromInt(( newscale - this.scale )));
			//line 125 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return new thx.bigint.DecimalImpl(this.value.multiply(mul), newscale);
		}
		else
		{
			//line 127 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			thx.bigint.BigIntImpl div = thx.bigint.Small.ten.pow(thx.bigint.Bigs.fromInt(( this.scale - newscale )));
			//line 128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return new thx.bigint.DecimalImpl(this.value.divide(div), newscale);
		}
		
	}
	
	
	public thx.bigint.DecimalImpl square()
	{
		//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.multiply(this);
	}
	
	
	public boolean isNegative()
	{
		//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(this.value, "sign", true));
	}
	
	
	public boolean isEven()
	{
		//line 140 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.value.isEven();
	}
	
	
	public boolean isOdd()
	{
		//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.value.isOdd();
	}
	
	
	public boolean isZero()
	{
		//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.value.isZero();
	}
	
	
	public int compareTo(thx.bigint.DecimalImpl that)
	{
		//line 149 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 149 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 151 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return lhs.value.compareTo(rhs.value);
	}
	
	
	public int compareToAbs(thx.bigint.DecimalImpl that)
	{
		//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl lhs = this.matchScale(that);
		//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.DecimalImpl rhs = that.matchScale(this);
		//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return lhs.value.compareToAbs(rhs.value);
	}
	
	
	public thx.bigint.DecimalImpl trim(java.lang.Object min)
	{
		//line 161 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.Object __temp_min93 = ( (haxe.lang.Runtime.eq(min, null)) ? (((java.lang.Object) (0) )) : (min) );
		//line 162 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( this.scale == 0 )) 
		{
			//line 163 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return this;
		}
		
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.String s = this.toString();
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		haxe.root.Array<java.lang.String> parts = haxe.lang.StringExt.split(s, ".");
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.String dec = thx.Strings.rpad(thx.Strings.trimCharsRight(parts.__get(1), "0"), "0", ((int) (haxe.lang.Runtime.toInt(__temp_min93)) ));
		//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( dec.length() > 0 )) 
		{
			//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			s = ( ( parts.__get(0) + "." ) + dec );
		}
		else
		{
			//line 170 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			s = parts.__get(0);
		}
		
		//line 171 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return thx.bigint.Decimals.parse(s);
	}
	
	
	public double toFloat()
	{
		//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return haxe.root.Std.parseFloat(this.toString());
	}
	
	
	public int toInt()
	{
		//line 180 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		thx.bigint.BigIntImpl i = this.value.divide(thx.bigint.Small.ten.pow(thx.bigint.Bigs.fromInt(this.scale)));
		//line 181 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return i.toInt();
	}
	
	
	@Override public java.lang.String toString()
	{
		//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		boolean sign = haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(this.value, "sign", true));
		//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		java.lang.String i = (( (sign) ? (this.value.negate()) : (this.value) )).toString();
		//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		int l = i.length();
		//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( this.scale == 0 )) 
		{
			//line 190 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return ( (( (sign) ? ("-") : ("") )) + i );
		}
		else
		{
			//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (( i.length() <= this.scale )) 
			{
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return ( ( (( (sign) ? ("-") : ("") )) + "0." ) + thx.Strings.lpad(i, "0", this.scale) );
			}
			else
			{
				//line 194 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return ( ( ( (( (sign) ? ("-") : ("") )) + haxe.lang.StringExt.substring(i, 0, ( l - this.scale )) ) + "." ) + haxe.lang.StringExt.substring(i, ( l - this.scale ), null) );
			}
			
		}
		
	}
	
	
	public thx.bigint.DecimalImpl matchScale(thx.bigint.DecimalImpl that)
	{
		//line 201 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		if (( this.scale >= that.scale )) 
		{
			//line 202 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			return this;
		}
		
		//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		return this.scaleTo(that.scale);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			switch (field.hashCode())
			{
				case 109250890:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						this.scale = ((int) (value) );
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return value;
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			switch (field.hashCode())
			{
				case 109250890:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						this.scale = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return value;
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 111972721:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("value")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						this.value = ((thx.bigint.BigIntImpl) (value) );
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return value;
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			switch (field.hashCode())
			{
				case 1853657733:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("matchScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "matchScale")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 111972721:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("value")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.value;
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1776922004:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toString")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 109250890:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.scale;
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 110508916:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toInt")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toInt")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 96417:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("add")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "add")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1177945951:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toFloat")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toFloat")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -2060248300:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("subtract")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "subtract")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3568674:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("trim")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "trim")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1331463047:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("divide")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "divide")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 102184466:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("compareToAbs")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "compareToAbs")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 224825259:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("divideWithScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "divideWithScale")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1412718016:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("compareTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "compareTo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1248940622:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("moduloWithScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "moduloWithScale")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1179919630:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isZero")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isZero")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 653829668:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("multiply")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "multiply")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 100474789:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isOdd")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isOdd")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1068784010:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("modulo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "modulo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1180529308:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isEven")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isEven")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 96370:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("abs")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "abs")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 127841151:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isNegative")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isNegative")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1049319678:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("negate")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "negate")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -894674659:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("square")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "square")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3377907:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("next")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1910892901:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scaleTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "scaleTo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3449395:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("prev")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "prev")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1385468073:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("roundTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "roundTo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 111192:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("pow")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "pow")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -766026841:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("floorTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "floorTo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1364171168:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("ceilTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "ceilTo")) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			switch (field.hashCode())
			{
				case 109250890:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return ((double) (this.scale) );
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			switch (field.hashCode())
			{
				case 1853657733:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("matchScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.matchScale(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 96417:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("add")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.add(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1776922004:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toString")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.toString();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -2060248300:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("subtract")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.subtract(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 110508916:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toInt")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.toInt();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1331463047:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("divide")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.divide(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1177945951:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("toFloat")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.toFloat();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 224825259:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("divideWithScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.divideWithScale(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3568674:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("trim")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.trim(dynargs.__get(0));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1248940622:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("moduloWithScale")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.moduloWithScale(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ), ((int) (haxe.lang.Runtime.toInt(dynargs.__get(1))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 102184466:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("compareToAbs")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.compareToAbs(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 653829668:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("multiply")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.multiply(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1412718016:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("compareTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.compareTo(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1068784010:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("modulo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.modulo(((thx.bigint.DecimalImpl) (dynargs.__get(0)) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1179919630:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isZero")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.isZero();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 96370:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("abs")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.abs();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 100474789:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isOdd")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.isOdd();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1049319678:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("negate")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.negate();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1180529308:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isEven")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.isEven();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3377907:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("next")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.next();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 127841151:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("isNegative")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.isNegative();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 3449395:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("prev")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.prev();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -894674659:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("square")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.square();
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 111192:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("pow")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.pow(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1910892901:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("scaleTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.scaleTo(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -1364171168:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("ceilTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.ceilTo(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case 1385468073:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("roundTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.roundTo(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
				case -766026841:
				{
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					if (field.equals("floorTo")) 
					{
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						__temp_executeDef1 = false;
						//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
						return this.floorTo(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
					break;
				}
				
				
			}
			
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		baseArr.push("scale");
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		baseArr.push("value");
		//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
		{
			//line 6 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/bigint/DecimalImpl.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


