// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestMake extends haxe.lang.HxObject
{
	public TestMake(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestMake()
	{
		//line 6 "/shared/core/thx/TestMake.hx"
		thx.TestMake.__hx_ctor_thx_TestMake(this);
	}
	
	
	public static void __hx_ctor_thx_TestMake(thx.TestMake __temp_me191)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/shared/core/thx/TestMake.hx"
		return new thx.TestMake(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/shared/core/thx/TestMake.hx"
		return new thx.TestMake();
	}
	
	
	public void testConstructorLiteral()
	{
		//line 9 "/shared/core/thx/TestMake.hx"
		haxe.lang.Function constructor = ( (( thx.TestMake_testConstructorLiteral_9__Fun.__hx_current != null )) ? (thx.TestMake_testConstructorLiteral_9__Fun.__hx_current) : (thx.TestMake_testConstructorLiteral_9__Fun.__hx_current = ((thx.TestMake_testConstructorLiteral_9__Fun) (new thx.TestMake_testConstructorLiteral_9__Fun()) )) );
		//line 10 "/shared/core/thx/TestMake.hx"
		utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"c", "d"}, new java.lang.Object[]{"A", "D"}, new java.lang.String[]{"a", "b"}, new double[]{((double) (0.2) ), ((double) (((double) (1) )) )}), ((java.lang.Object) (constructor.__hx_invoke4_o(0.0, "A", ((double) (1) ), haxe.lang.Runtime.undefined, 0.2, haxe.lang.Runtime.undefined, 0.0, "D")) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestMake", "TestMake.hx", "testConstructorLiteral"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (10) )) )}));
	}
	
	
	public void testConstructorFromTypedef()
	{
		//line 19 "/shared/core/thx/TestMake.hx"
		haxe.lang.Function constructor = ( (( thx.TestMake_testConstructorFromTypedef_19__Fun.__hx_current != null )) ? (thx.TestMake_testConstructorFromTypedef_19__Fun.__hx_current) : (thx.TestMake_testConstructorFromTypedef_19__Fun.__hx_current = ((thx.TestMake_testConstructorFromTypedef_19__Fun) (new thx.TestMake_testConstructorFromTypedef_19__Fun()) )) );
		//line 20 "/shared/core/thx/TestMake.hx"
		utest.Assert.same(new haxe.lang.DynamicObject(new java.lang.String[]{"c", "d"}, new java.lang.Object[]{"A", "D"}, new java.lang.String[]{"a", "b"}, new double[]{((double) (0.2) ), ((double) (((double) (1) )) )}), ((java.lang.Object) (constructor.__hx_invoke4_o(0.0, "A", ((double) (1) ), haxe.lang.Runtime.undefined, 0.2, haxe.lang.Runtime.undefined, 0.0, "D")) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestMake", "TestMake.hx", "testConstructorFromTypedef"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/shared/core/thx/TestMake.hx"
		{
			//line 5 "/shared/core/thx/TestMake.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/thx/TestMake.hx"
			switch (field.hashCode())
			{
				case -1594710439:
				{
					//line 5 "/shared/core/thx/TestMake.hx"
					if (field.equals("testConstructorFromTypedef")) 
					{
						//line 5 "/shared/core/thx/TestMake.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestMake.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testConstructorFromTypedef")) );
					}
					
					//line 5 "/shared/core/thx/TestMake.hx"
					break;
				}
				
				
				case 884511623:
				{
					//line 5 "/shared/core/thx/TestMake.hx"
					if (field.equals("testConstructorLiteral")) 
					{
						//line 5 "/shared/core/thx/TestMake.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestMake.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testConstructorLiteral")) );
					}
					
					//line 5 "/shared/core/thx/TestMake.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/thx/TestMake.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/thx/TestMake.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/shared/core/thx/TestMake.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/shared/core/thx/TestMake.hx"
		{
			//line 5 "/shared/core/thx/TestMake.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/core/thx/TestMake.hx"
			switch (field.hashCode())
			{
				case -1594710439:
				{
					//line 5 "/shared/core/thx/TestMake.hx"
					if (field.equals("testConstructorFromTypedef")) 
					{
						//line 5 "/shared/core/thx/TestMake.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestMake.hx"
						this.testConstructorFromTypedef();
					}
					
					//line 5 "/shared/core/thx/TestMake.hx"
					break;
				}
				
				
				case 884511623:
				{
					//line 5 "/shared/core/thx/TestMake.hx"
					if (field.equals("testConstructorLiteral")) 
					{
						//line 5 "/shared/core/thx/TestMake.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/core/thx/TestMake.hx"
						this.testConstructorLiteral();
					}
					
					//line 5 "/shared/core/thx/TestMake.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/core/thx/TestMake.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/core/thx/TestMake.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/shared/core/thx/TestMake.hx"
		return null;
	}
	
	
}


