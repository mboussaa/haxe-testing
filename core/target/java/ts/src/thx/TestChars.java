// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestChars extends haxe.lang.HxObject
{
	public TestChars(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestChars()
	{
		//line 8 "/shared/core/thx/TestChars.hx"
		thx.TestChars.__hx_ctor_thx_TestChars(this);
	}
	
	
	public static void __hx_ctor_thx_TestChars(thx.TestChars __temp_me167)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/core/thx/TestChars.hx"
		return new thx.TestChars(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/core/thx/TestChars.hx"
		return new thx.TestChars();
	}
	
	
	public void testChars()
	{
		//line 11 "/shared/core/thx/TestChars.hx"
		haxe.root.Array<java.lang.Object> t = thx._Chars.Chars_Impl_.fromString("a\u263ab\u263a\u263ac\u263a\u263a\u263a");
		//line 11 "/shared/core/thx/TestChars.hx"
		haxe.root.Array<java.lang.Object> e = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{97, 9786, 98, 9786, 9786, 99, 9786, 9786, 9786});
		//line 14 "/shared/core/thx/TestChars.hx"
		utest.Assert.same(e, t, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestChars", "TestChars.hx", "testChars"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 15 "/shared/core/thx/TestChars.hx"
		utest.Assert.equals("a\u263ab\u263a\u263ac\u263a\u263a\u263a", thx._Chars.Chars_Impl_.toString(t), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestChars", "TestChars.hx", "testChars"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
	}
	
	
	public void testArrayAccess()
	{
		//line 19 "/shared/core/thx/TestChars.hx"
		haxe.root.Array<java.lang.Object> chars = thx._Chars.Chars_Impl_.fromString("a\u263ab\u263a\u263ac\u263a\u263a\u263a");
		//line 20 "/shared/core/thx/TestChars.hx"
		utest.Assert.equals(9786, ((int) (haxe.lang.Runtime.toInt(chars.__get(1))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestChars", "TestChars.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "/shared/core/thx/TestChars.hx"
		utest.Assert.equals(99, ((int) (haxe.lang.Runtime.toInt(chars.__get(5))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestChars", "TestChars.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/core/thx/TestChars.hx"
		{
			//line 7 "/shared/core/thx/TestChars.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/thx/TestChars.hx"
			switch (field.hashCode())
			{
				case -466132693:
				{
					//line 7 "/shared/core/thx/TestChars.hx"
					if (field.equals("testArrayAccess")) 
					{
						//line 7 "/shared/core/thx/TestChars.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestChars.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testArrayAccess")) );
					}
					
					//line 7 "/shared/core/thx/TestChars.hx"
					break;
				}
				
				
				case -1206342037:
				{
					//line 7 "/shared/core/thx/TestChars.hx"
					if (field.equals("testChars")) 
					{
						//line 7 "/shared/core/thx/TestChars.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestChars.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testChars")) );
					}
					
					//line 7 "/shared/core/thx/TestChars.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/thx/TestChars.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/thx/TestChars.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/thx/TestChars.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/core/thx/TestChars.hx"
		{
			//line 7 "/shared/core/thx/TestChars.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/thx/TestChars.hx"
			switch (field.hashCode())
			{
				case -466132693:
				{
					//line 7 "/shared/core/thx/TestChars.hx"
					if (field.equals("testArrayAccess")) 
					{
						//line 7 "/shared/core/thx/TestChars.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestChars.hx"
						this.testArrayAccess();
					}
					
					//line 7 "/shared/core/thx/TestChars.hx"
					break;
				}
				
				
				case -1206342037:
				{
					//line 7 "/shared/core/thx/TestChars.hx"
					if (field.equals("testChars")) 
					{
						//line 7 "/shared/core/thx/TestChars.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/thx/TestChars.hx"
						this.testChars();
					}
					
					//line 7 "/shared/core/thx/TestChars.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/thx/TestChars.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/thx/TestChars.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/core/thx/TestChars.hx"
		return null;
	}
	
	
}


