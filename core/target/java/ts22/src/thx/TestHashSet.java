// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestHashSet extends haxe.lang.HxObject
{
	public TestHashSet(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestHashSet(int i)
	{
		//line 9 "/shared/core/test/thx/TestHashSet.hx"
		thx.TestHashSet.__hx_ctor_thx_TestHashSet(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestHashSet(thx.TestHashSet __temp_me112, int i)
	{
		//line 10 "/shared/core/test/thx/TestHashSet.hx"
		__temp_me112.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		return new thx.TestHashSet(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		return new thx.TestHashSet(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testCreate()
	{
		//line 14 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 14 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 14 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 14 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 15 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (1) ))})) ))) )) );
			//line 16 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
			//line 17 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCreate"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		}
		
	}
	
	
	public void testEmpty()
	{
		//line 21 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 21 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 21 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 21 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 22 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) ))})) ))) )) );
			//line 23 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.empty(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 24 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(1, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testEmpty"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(0, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testEmpty"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		}
		
	}
	
	
	public void testExists()
	{
		//line 29 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 29 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 29 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 29 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 30 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i1 = new thx.TestItem(((int) (1) ));
			//line 31 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i2a = new thx.TestItem(((int) (2) ));
			//line 32 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i2b = new thx.TestItem(((int) (2) ));
			//line 33 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{i1, i2a, i2b})) ))) )) );
			//line 34 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
			//line 35 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (i1.hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
			//line 36 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
			//line 37 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (i2a.hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
			//line 38 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (i2b.hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
			//line 39 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).exists(((int) (new thx.TestItem(((int) (2) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testExists"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
		}
		
	}
	
	
	public void testAdd()
	{
		//line 43 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 43 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 43 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 43 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 44 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (null) ))) )) );
			//line 45 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((boolean) (thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (1) ))) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
			//line 46 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((boolean) (thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (2) ))) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
			//line 47 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isFalse(((boolean) (thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (2) ))) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
			//line 48 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((boolean) (thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (3) ))) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
			//line 49 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isFalse(((boolean) (thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (3) ))) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (49) )) )}));
			//line 50 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testAdd"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (50) )) )}));
		}
		
	}
	
	
	public void testPush()
	{
		//line 54 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 54 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 54 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 54 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 55 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (null) ))) )) );
			//line 56 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (1) ))) ));
			//line 57 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (2) ))) ));
			//line 58 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (2) ))) ));
			//line 59 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (3) ))) ));
			//line 60 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ), ((thx.TestItem) (new thx.TestItem(((int) (3) ))) ));
			//line 61 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testPush"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
		}
		
	}
	
	
	public void testRemove()
	{
		//line 65 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 65 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 65 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 65 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 66 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i1 = new thx.TestItem(((int) (1) ));
			//line 67 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i2 = new thx.TestItem(((int) (2) ));
			//line 68 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{i1, i2})) ))) )) );
			//line 69 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 69 "/shared/core/test/thx/TestHashSet.hx"
				((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).remove(((int) (i1.hashCode()) ));
				//line 69 "/shared/core/test/thx/TestHashSet.hx"
				((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).keys.remove(((int) (i1.hashCode()) ));
			}
			
			//line 70 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(1, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testRemove"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (70) )) )}));
			//line 71 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 71 "/shared/core/test/thx/TestHashSet.hx"
				thx.TestItem v = new thx.TestItem(((int) (2) ));
				//line 71 "/shared/core/test/thx/TestHashSet.hx"
				((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).values) )) ).remove(((int) (v.hashCode()) ));
				//line 71 "/shared/core/test/thx/TestHashSet.hx"
				((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ).keys.remove(((int) (v.hashCode()) ));
			}
			
			//line 72 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(0, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testRemove"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (72) )) )}));
		}
		
	}
	
	
	public void testCopy()
	{
		//line 76 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 76 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 76 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 76 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 77 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i1 = new thx.TestItem(((int) (1) ));
			//line 78 "/shared/core/test/thx/TestHashSet.hx"
			thx.TestItem i2 = new thx.TestItem(((int) (2) ));
			//line 79 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{i1, i2})) ))) )) );
			//line 80 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 81 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (81) )) )}));
			//line 82 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (82) )) )}));
			//line 83 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ).values) )) ).exists(((int) (i1.hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
			//line 84 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (2) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (84) )) )}));
			//line 85 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ).values) )) ).exists(((int) (i1.hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (85) )) )}));
			//line 86 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ).values) )) ).exists(((int) (new thx.TestItem(((int) (2) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
			//line 87 "/shared/core/test/thx/TestHashSet.hx"
			thx._HashSet.HashSet_Impl_.add(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ), ((thx.TestItem) (new thx.TestItem(((int) (3) ))) ));
			//line 88 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (88) )) )}));
			//line 89 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testCopy"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
		}
		
	}
	
	
	public void testUnion()
	{
		//line 93 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 93 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 93 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 93 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 94 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) ))})) ))) )) );
			//line 95 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (4) )), new thx.TestItem(((int) (5) ))})) ))) )) );
			//line 96 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> newset = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 96 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 96 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) );
				//line 96 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
				{
					//line 96 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem k = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp, "next", null)) );
					//line 96 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).keys.set(((int) (k.hashCode()) ), ((thx.TestItem) (k) ));
					//line 96 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).set(((int) (k.hashCode()) ), ((java.lang.Object) (true) ));
				}
				
			}
			
			//line 97 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (97) )) )}));
			//line 98 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(4, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (98) )) )}));
			//line 99 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(5, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (99) )) )}));
			//line 100 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (100) )) )}));
			//line 101 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).exists(((int) (new thx.TestItem(((int) (2) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (101) )) )}));
			//line 102 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).exists(((int) (new thx.TestItem(((int) (3) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (102) )) )}));
			//line 103 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).exists(((int) (new thx.TestItem(((int) (4) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (103) )) )}));
			//line 104 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).exists(((int) (new thx.TestItem(((int) (5) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testUnion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )}));
		}
		
	}
	
	
	public void testIntersection()
	{
		//line 108 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 108 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 108 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 108 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 109 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) ))})) ))) )) );
			//line 110 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (4) )), new thx.TestItem(((int) (5) ))})) ))) )) );
			//line 111 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.empty(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 111 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 111 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
				//line 111 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
				{
					//line 111 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp, "next", null)) );
					//line 111 "/shared/core/test/thx/TestHashSet.hx"
					if (((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ).values) )) ).exists(((int) (item.hashCode()) ))) 
					{
						//line 111 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).keys.set(((int) (item.hashCode()) ), ((thx.TestItem) (item) ));
						//line 111 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).set(((int) (item.hashCode()) ), ((java.lang.Object) (true) ));
					}
					
				}
				
			}
			
			//line 112 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testIntersection"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (112) )) )}));
			//line 113 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(4, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testIntersection"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (113) )) )}));
			//line 114 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testIntersection"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (114) )) )}));
			//line 115 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).exists(((int) (new thx.TestItem(((int) (2) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testIntersection"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (115) )) )}));
			//line 116 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).exists(((int) (new thx.TestItem(((int) (3) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testIntersection"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (116) )) )}));
		}
		
	}
	
	
	public void testDifference()
	{
		//line 120 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 120 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 120 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 120 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 121 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) ))})) ))) )) );
			//line 122 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (4) )), new thx.TestItem(((int) (5) ))})) ))) )) );
			//line 123 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 123 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 123 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) );
				//line 123 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
				{
					//line 123 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp, "next", null)) );
					//line 123 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).remove(((int) (item.hashCode()) ));
					//line 123 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).keys.remove(((int) (item.hashCode()) ));
				}
				
			}
			
			//line 124 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) );
			//line 124 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 124 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp1 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
				//line 124 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp1, "hasNext", null)))
				{
					//line 124 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item1 = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp1, "next", null)) );
					//line 124 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).remove(((int) (item1.hashCode()) ));
					//line 124 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).keys.remove(((int) (item1.hashCode()) ));
				}
				
			}
			
			//line 125 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (125) )) )}));
			//line 126 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(4, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (126) )) )}));
			//line 127 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(1, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (127) )) )}));
			//line 128 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (128) )) )}));
			//line 129 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (129) )) )}));
			//line 130 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (4) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (130) )) )}));
			//line 131 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (5) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (131) )) )}));
		}
		
	}
	
	
	public void testSymmetricDifference()
	{
		//line 135 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 135 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 135 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 135 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 136 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) ))})) ))) )) );
			//line 137 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (2) )), new thx.TestItem(((int) (3) )), new thx.TestItem(((int) (4) )), new thx.TestItem(((int) (5) ))})) ))) )) );
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> self = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> newset = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self) ))) );
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) );
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
				{
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem k = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp, "next", null)) );
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).keys.set(((int) (k.hashCode()) ), ((thx.TestItem) (k) ));
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset) ).values) )) ).set(((int) (k.hashCode()) ), ((java.lang.Object) (true) ));
				}
				
			}
			
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> this1 = newset;
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.empty(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self) ))) );
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp1 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self) ))) );
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp1, "hasNext", null)))
				{
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp1, "next", null)) );
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					if (((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ).values) )) ).exists(((int) (item.hashCode()) ))) 
					{
						//line 138 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).keys.set(((int) (item.hashCode()) ), ((thx.TestItem) (item) ));
						//line 138 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ).values) )) ).set(((int) (item.hashCode()) ), ((java.lang.Object) (true) ));
					}
					
				}
				
			}
			
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (this1) ))) );
			//line 138 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp2 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result) ))) );
				//line 138 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp2, "hasNext", null)))
				{
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item1 = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp2, "next", null)) );
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).remove(((int) (item1.hashCode()) ));
					//line 138 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).keys.remove(((int) (item1.hashCode()) ));
				}
				
			}
			
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> self1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) );
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> newset1 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self1) ))) );
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp3 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) );
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp3, "hasNext", null)))
				{
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem k1 = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp3, "next", null)) );
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset1) ).keys.set(((int) (k1.hashCode()) ), ((thx.TestItem) (k1) ));
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (newset1) ).values) )) ).set(((int) (k1.hashCode()) ), ((java.lang.Object) (true) ));
				}
				
			}
			
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> this2 = newset1;
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result2 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.empty(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self1) ))) );
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp4 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (self1) ))) );
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp4, "hasNext", null)))
				{
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item2 = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp4, "next", null)) );
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					if (((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ).values) )) ).exists(((int) (item2.hashCode()) ))) 
					{
						//line 139 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result2) ).keys.set(((int) (item2.hashCode()) ), ((thx.TestItem) (item2) ));
						//line 139 "/shared/core/test/thx/TestHashSet.hx"
						((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result2) ).values) )) ).set(((int) (item2.hashCode()) ), ((java.lang.Object) (true) ));
					}
					
				}
				
			}
			
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> result3 = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (thx._HashSet.HashSet_Impl_.copy(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (this2) ))) );
			//line 139 "/shared/core/test/thx/TestHashSet.hx"
			{
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				java.lang.Object tmp5 = ((java.lang.Object) (thx._HashSet.HashSet_Impl_.iterator(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result2) ))) );
				//line 139 "/shared/core/test/thx/TestHashSet.hx"
				while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp5, "hasNext", null)))
				{
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					thx.TestItem item3 = ((thx.TestItem) (haxe.lang.Runtime.callField(tmp5, "next", null)) );
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ).values) )) ).remove(((int) (item3.hashCode()) ));
					//line 139 "/shared/core/test/thx/TestHashSet.hx"
					((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ).keys.remove(((int) (item3.hashCode()) ));
				}
				
			}
			
			//line 140 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (140) )) )}));
			//line 141 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(4, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s2) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (141) )) )}));
			//line 142 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (142) )) )}));
			//line 143 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(3, ((int) (thx._HashSet.HashSet_Impl_.get_length(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (143) )) )}));
			//line 144 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (144) )) )}));
			//line 145 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (4) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (145) )) )}));
			//line 146 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result1) ).values) )) ).exists(((int) (new thx.TestItem(((int) (5) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (146) )) )}));
			//line 147 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ).values) )) ).exists(((int) (new thx.TestItem(((int) (1) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (147) )) )}));
			//line 148 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ).values) )) ).exists(((int) (new thx.TestItem(((int) (4) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (148) )) )}));
			//line 149 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(((haxe.ds.IntMap<java.lang.Object>) (((haxe.ds.IntMap) (((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (result3) ).values) )) ).exists(((int) (new thx.TestItem(((int) (5) )).hashCode()) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testSymmetricDifference"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (149) )) )}));
		}
		
	}
	
	
	public void testToArray()
	{
		//line 153 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 153 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 153 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 153 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 154 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) ))})) ))) )) );
			//line 155 "/shared/core/test/thx/TestHashSet.hx"
			haxe.root.Array<thx.TestItem> a = ((haxe.root.Array<thx.TestItem>) (thx._HashSet.HashSet_Impl_.toArray(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) ))) );
			//line 156 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, a.length, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testToArray"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (156) )) )}));
			//line 157 "/shared/core/test/thx/TestHashSet.hx"
			haxe.root.Array<thx.TestItem> _e = a;
			//line 157 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(1, ((thx.TestItem) ((new thx.TestHashSet_testToArray_157__Fun(_e)).__hx_invoke1_o(0.0, ( (( thx.TestHashSet_testToArray_157__Fun_0.__hx_current != null )) ? (thx.TestHashSet_testToArray_157__Fun_0.__hx_current) : (thx.TestHashSet_testToArray_157__Fun_0.__hx_current = ((thx.TestHashSet_testToArray_157__Fun_0) (new thx.TestHashSet_testToArray_157__Fun_0()) )) ))) ).code, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testToArray"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (157) )) )}));
			//line 158 "/shared/core/test/thx/TestHashSet.hx"
			haxe.root.Array<thx.TestItem> _e1 = a;
			//line 158 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.same(2, ((thx.TestItem) ((new thx.TestHashSet_testToArray_158__Fun(_e1)).__hx_invoke1_o(0.0, ( (( thx.TestHashSet_testToArray_158__Fun_0.__hx_current != null )) ? (thx.TestHashSet_testToArray_158__Fun_0.__hx_current) : (thx.TestHashSet_testToArray_158__Fun_0.__hx_current = ((thx.TestHashSet_testToArray_158__Fun_0) (new thx.TestHashSet_testToArray_158__Fun_0()) )) ))) ).code, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testToArray"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (158) )) )}));
		}
		
	}
	
	
	public void testToString()
	{
		//line 162 "/shared/core/test/thx/TestHashSet.hx"
		int _g1 = 0;
		//line 162 "/shared/core/test/thx/TestHashSet.hx"
		int _g = this.x;
		//line 162 "/shared/core/test/thx/TestHashSet.hx"
		while (( _g1 < _g ))
		{
			//line 162 "/shared/core/test/thx/TestHashSet.hx"
			 ++ _g1;
			//line 163 "/shared/core/test/thx/TestHashSet.hx"
			haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object> s = ((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (((haxe.ds._HashMap.HashMapData) (thx._HashSet.HashSet_Impl_.create(((java.lang.Object) (new haxe.root.Array<thx.TestItem>(new thx.TestItem[]{new thx.TestItem(((int) (1) )), new thx.TestItem(((int) (2) ))})) ))) )) );
			//line 164 "/shared/core/test/thx/TestHashSet.hx"
			utest.Assert.isTrue(new haxe.root.EReg("TestItem \\d, TestItem \\d}", "").match(haxe.lang.Runtime.toString(thx._HashSet.HashSet_Impl_.toString(((haxe.ds._HashMap.HashMapData<thx.TestItem, java.lang.Object>) (s) )))), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestHashSet", "TestHashSet.hx", "testToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (164) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.x = ((int) (value) );
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return value;
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return value;
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			switch (field.hashCode())
			{
				case -1062581986:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testToString")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToString")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return this.x;
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1574980692:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testToArray")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToArray")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCreate")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -428490270:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testSymmetricDifference")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testSymmetricDifference")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1204331557:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testEmpty")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEmpty")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDifference")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1330376590:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testExists")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testExists")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1200846907:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testIntersection")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIntersection")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1422484817:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testAdd")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAdd")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testUnion")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1146892596:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testPush")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testPush")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1147285721:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testCopy")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCopy")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1685124022:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testRemove")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testRemove")) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						return ((double) (this.x) );
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			switch (field.hashCode())
			{
				case -1062581986:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testToString")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testToString();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1267440686:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testCreate")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testCreate();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1574980692:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testToArray")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testToArray();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1204331557:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testEmpty")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testEmpty();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -428490270:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testSymmetricDifference")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testSymmetricDifference();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1330376590:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testExists")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testExists();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1014351727:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testDifference")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testDifference();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1422484817:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testAdd")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testAdd();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1200846907:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testIntersection")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testIntersection();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1146892596:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testPush")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testPush();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1189532323:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testUnion")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testUnion();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case 1685124022:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testRemove")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testRemove();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
				case -1147285721:
				{
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					if (field.equals("testCopy")) 
					{
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/core/test/thx/TestHashSet.hx"
						this.testCopy();
					}
					
					//line 7 "/shared/core/test/thx/TestHashSet.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/core/test/thx/TestHashSet.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		baseArr.push("x");
		//line 7 "/shared/core/test/thx/TestHashSet.hx"
		{
			//line 7 "/shared/core/test/thx/TestHashSet.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


