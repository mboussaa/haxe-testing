// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Dynamics extends haxe.lang.HxObject
{
	public Dynamics(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Dynamics()
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		thx.Dynamics.__hx_ctor_thx_Dynamics(this);
	}
	
	
	public static void __hx_ctor_thx_Dynamics(thx.Dynamics __temp_me66)
	{
	}
	
	
	public static <T1, T2> boolean equals(T1 a, T2 b)
	{
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if ( ! (((boolean) (thx.Types.sameType(((T1) (a) ), ((T2) (b) ))) )) ) 
		{
			//line 17 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return false;
		}
		
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if (haxe.lang.Runtime.eq(a, b)) 
		{
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return true;
		}
		
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		haxe.root.ValueType _g = haxe.root.Type.typeof(a);
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		switch (_g.index)
		{
			case 0:
			case 1:
			case 2:
			case 3:
			{
				//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return false;
			}
			
			
			case 4:
			{
				//line 115 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				haxe.root.Array<java.lang.String> fa = haxe.root.Reflect.fields(a);
				//line 115 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				haxe.root.Array<java.lang.String> fb = haxe.root.Reflect.fields(b);
				//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					int _g1 = 0;
					//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					while (( _g1 < fa.length ))
					{
						//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.String field = fa.__get(_g1);
						//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						 ++ _g1;
						//line 118 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						fb.remove(field);
						//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if ( ! (haxe.root.Reflect.hasField(b, field)) ) 
						{
							//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return false;
						}
						
						//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.Object va = haxe.root.Reflect.field(a, field);
						//line 122 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if (haxe.root.Reflect.isFunction(va)) 
						{
							//line 123 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							continue;
						}
						
						//line 124 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.Object vb = haxe.root.Reflect.field(b, field);
						//line 125 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (va) ), ((java.lang.Object) (vb) ))) )) ) 
						{
							//line 126 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return false;
						}
						
					}
					
				}
				
				//line 128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( fb.length > 0 )) 
				{
					//line 129 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return false;
				}
				
				//line 132 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				boolean t = false;
				//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				boolean tmp = false;
				//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				t = thx.Iterators.isIterator(a);
				//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if ( ! (t) ) 
				{
					//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp = thx.Iterables.isIterable(a);
				}
				else
				{
					//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp = true;
				}
				
				//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (tmp) 
				{
					//line 134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( t &&  ! (thx.Iterators.isIterator(b))  )) 
					{
						//line 135 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 136 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if ((  ! (t)  &&  ! (thx.Iterables.isIterable(b))  )) 
					{
						//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 140 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array aa = ( (t) ? (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (a) ))) )) : (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (haxe.lang.Runtime.callField(((java.lang.Object) (a) ), "iterator", null)) ))) )) );
					//line 141 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array ab = ( (t) ? (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (b) ))) )) : (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (haxe.lang.Runtime.callField(((java.lang.Object) (b) ), "iterator", null)) ))) )) );
					//line 142 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( aa.length != ab.length )) 
					{
						//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					{
						//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g11 = 0;
						//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g2 = aa.length;
						//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						while (( _g11 < _g2 ))
						{
							//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							int i = _g11++;
							//line 145 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (aa.__get(i)) ), ((java.lang.Object) (ab.__get(i)) ))) )) ) 
							{
								//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return false;
							}
							
						}
						
					}
					
					//line 147 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return true;
				}
				
				//line 149 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return true;
			}
			
			
			case 5:
			{
				//line 27 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return haxe.root.Reflect.compareMethods(a, b);
			}
			
			
			case 6:
			{
				//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class c = ((java.lang.Class) (_g.params[0]) );
				//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String ca = haxe.root.Type.getClassName(c);
				//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String cb = haxe.root.Type.getClassName(((java.lang.Class) (haxe.root.Type.getClass(((T2) (b) ))) ));
				//line 31 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if ( ! (haxe.lang.Runtime.valEq(ca, cb)) ) 
				{
					//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return false;
				}
				
				//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( a instanceof java.lang.String )) 
				{
					//line 36 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return false;
				}
				
				//line 39 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( a instanceof haxe.root.Array )) 
				{
					//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array aa1 = ((haxe.root.Array) (((java.lang.Object) (a) )) );
					//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array ab1 = ((haxe.root.Array) (((java.lang.Object) (b) )) );
					//line 42 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( aa1.length != ab1.length )) 
					{
						//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					{
						//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g12 = 0;
						//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g3 = aa1.length;
						//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						while (( _g12 < _g3 ))
						{
							//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							int i1 = _g12++;
							//line 45 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (aa1.__get(i1)) ), ((java.lang.Object) (ab1.__get(i1)) ))) )) ) 
							{
								//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return false;
							}
							
						}
						
					}
					
					//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return true;
				}
				
				//line 51 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( a instanceof haxe.root.Date )) 
				{
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return haxe.lang.Runtime.eq(((java.lang.Object) (haxe.lang.Runtime.callField(a, "getTime", null)) ), ((java.lang.Object) (haxe.lang.Runtime.callField(b, "getTime", null)) ));
				}
				
				//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( a instanceof haxe.IMap )) 
				{
					//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.IMap ha = ((haxe.IMap) (((java.lang.Object) (a) )) );
					//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.IMap hb = ((haxe.IMap) (((java.lang.Object) (b) )) );
					//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array ka = ((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (ha.keys()) ))) );
					//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array kb = ((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (hb.keys()) ))) );
					//line 60 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( ka.length != kb.length )) 
					{
						//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					{
						//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g4 = 0;
						//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						while (( _g4 < ka.length ))
						{
							//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							java.lang.Object key = ka.__get(_g4);
							//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							 ++ _g4;
							//line 63 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if ((  ! (hb.exists(key))  ||  ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (ha.get(key)) ), ((java.lang.Object) (hb.get(key)) ))) ))  )) 
							{
								//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return false;
							}
							
						}
						
					}
					
					//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return true;
				}
				
				//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				boolean t1 = false;
				//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				boolean tmp1 = false;
				//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				t1 = thx.Iterators.isIterator(a);
				//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if ( ! (t1) ) 
				{
					//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp1 = thx.Iterables.isIterable(a);
				}
				else
				{
					//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp1 = true;
				}
				
				//line 70 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (tmp1) 
				{
					//line 71 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array va1 = ( (t1) ? (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (a) ))) )) : (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (haxe.lang.Runtime.callField(((java.lang.Object) (a) ), "iterator", null)) ))) )) );
					//line 71 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					haxe.root.Array vb1 = ( (t1) ? (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (b) ))) )) : (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (haxe.lang.Runtime.callField(((java.lang.Object) (b) ), "iterator", null)) ))) )) );
					//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( va1.length != vb1.length )) 
					{
						//line 74 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return false;
					}
					
					//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					{
						//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g13 = 0;
						//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int _g5 = va1.length;
						//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						while (( _g13 < _g5 ))
						{
							//line 76 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							int i2 = _g13++;
							//line 77 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (va1.__get(i2)) ), ((java.lang.Object) (vb1.__get(i2)) ))) )) ) 
							{
								//line 78 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return false;
							}
							
						}
						
					}
					
					//line 79 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return true;
				}
				
				//line 83 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Object f = null;
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				boolean tmp2 = false;
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (haxe.root.Reflect.hasField(a, "equals")) 
				{
					//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					f = ((haxe.lang.Function) (haxe.lang.Runtime.getField(a, "equals", false)) );
					//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp2 = haxe.root.Reflect.isFunction(f);
				}
				else
				{
					//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					tmp2 = false;
				}
				
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (tmp2) 
				{
					//line 85 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return haxe.lang.Runtime.toBool(haxe.root.Reflect.callMethod(a, f, new haxe.root.Array(new java.lang.Object[]{b})));
				}
				
				//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				haxe.root.Array<java.lang.String> fields = haxe.root.Type.getInstanceFields(((java.lang.Class) (haxe.root.Type.getClass(((T1) (a) ))) ));
				//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					int _g6 = 0;
					//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					while (( _g6 < fields.length ))
					{
						//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.String field1 = fields.__get(_g6);
						//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						 ++ _g6;
						//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.Object va2 = haxe.root.Reflect.field(a, field1);
						//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if (haxe.root.Reflect.isFunction(va2)) 
						{
							//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							continue;
						}
						
						//line 93 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						java.lang.Object vb2 = haxe.root.Reflect.field(b, field1);
						//line 94 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (va2) ), ((java.lang.Object) (vb2) ))) )) ) 
						{
							//line 95 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return false;
						}
						
					}
					
				}
				
				//line 97 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return true;
			}
			
			
			case 7:
			{
				//line 98 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class e = ((java.lang.Class) (_g.params[0]) );
				//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String ea = haxe.root.Type.getEnumName(e);
				//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class teb = haxe.root.Type.getEnum(((java.lang.Object) (b) ));
				//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String eb = haxe.root.Type.getEnumName(teb);
				//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if ( ! (haxe.lang.Runtime.valEq(ea, eb)) ) 
				{
					//line 103 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return false;
				}
				
				//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( haxe.root.Type.enumIndex(((java.lang.Object) (a) )) != haxe.root.Type.enumIndex(((java.lang.Object) (b) )) )) 
				{
					//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return false;
				}
				
				//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				haxe.root.Array pa = haxe.root.Type.enumParameters(((java.lang.Object) (a) ));
				//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				haxe.root.Array pb = haxe.root.Type.enumParameters(((java.lang.Object) (b) ));
				//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					int _g14 = 0;
					//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					int _g7 = pa.length;
					//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					while (( _g14 < _g7 ))
					{
						//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						int i3 = _g14++;
						//line 110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if ( ! (((boolean) (thx.Dynamics.equals(((java.lang.Object) (pa.__get(i3)) ), ((java.lang.Object) (pb.__get(i3)) ))) )) ) 
						{
							//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return false;
						}
						
					}
					
				}
				
				//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return true;
			}
			
			
			case 8:
			{
				//line 151 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				throw haxe.lang.HaxeException.wrap("Unable to compare two unknown types");
			}
			
			
		}
		
		//line 14 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		return false;
	}
	
	
	public static java.lang.Object clone(java.lang.Object v, java.lang.Object cloneInstances)
	{
		//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		java.lang.Object __temp_cloneInstances65 = ( (haxe.lang.Runtime.eq(cloneInstances, null)) ? (((java.lang.Object) (false) )) : (cloneInstances) );
		//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		haxe.root.ValueType _g = haxe.root.Type.typeof(v);
		//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		switch (_g.index)
		{
			case 0:
			{
				//line 170 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return null;
			}
			
			
			case 1:
			case 2:
			case 3:
			case 5:
			case 7:
			case 8:
			{
				//line 172 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return v;
			}
			
			
			case 4:
			{
				//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return thx.Objects.copyTo(v, new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}), null);
			}
			
			
			case 6:
			{
				//line 175 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class c = ((java.lang.Class) (_g.params[0]) );
				//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String name = haxe.root.Type.getClassName(c);
				//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					java.lang.String __temp_svar1 = (name);
					//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					int __temp_hash3 = __temp_svar1.hashCode();
					//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					boolean __temp_executeDef2 = true;
					//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					switch (__temp_hash3)
					{
						case 63537721:
						{
							//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("Array")) 
							{
								//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 179 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (v) ).map(((haxe.lang.Function) (new thx.Dynamics_clone_179__Fun(__temp_cloneInstances65)) ))) );
							}
							
							//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
						case -1808118735:
						case 2122702:
						{
							//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (( (( ( __temp_hash3 == -1808118735 ) && __temp_svar1.equals("String") )) || __temp_svar1.equals("Date") )) 
							{
								//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return v;
							}
							
							//line 177 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
					}
					
					//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (__temp_executeDef2) 
					{
						//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if (haxe.lang.Runtime.toBool((__temp_cloneInstances65))) 
						{
							//line 186 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							java.lang.Object o = ((java.lang.Object) (haxe.root.Type.createEmptyInstance(((java.lang.Class) (c) ))) );
							//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							{
								//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								int _g1 = 0;
								//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								haxe.root.Array<java.lang.String> _g11 = haxe.root.Type.getInstanceFields(c);
								//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								while (( _g1 < _g11.length ))
								{
									//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
									java.lang.String field = _g11.__get(_g1);
									//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
									 ++ _g1;
									//line 188 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
									haxe.root.Reflect.setField(o, field, thx.Dynamics.clone(haxe.root.Reflect.field(v, field), __temp_cloneInstances65));
								}
								
							}
							
							//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return o;
						}
						else
						{
							//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return v;
						}
						
					}
					else
					{
						//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						throw null;
					}
					
				}
				
			}
			
			
		}
		
		//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		return null;
	}
	
	
	public static int compare(java.lang.Object a, java.lang.Object b)
	{
		//line 201 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if (( ( null == a ) && ( null == b ) )) 
		{
			//line 202 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return 0;
		}
		
		//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if (( null == a )) 
		{
			//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return -1;
		}
		
		//line 205 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if (( null == b )) 
		{
			//line 206 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return 1;
		}
		
		//line 207 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		if ( ! (((boolean) (thx.Types.sameType(((java.lang.Object) (a) ), ((java.lang.Object) (b) ))) )) ) 
		{
			//line 208 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
			return haxe.Utf8.compare(thx.Types.toString(haxe.root.Type.typeof(((java.lang.Object) (a) ))), thx.Types.toString(haxe.root.Type.typeof(((java.lang.Object) (b) ))));
		}
		
		//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		haxe.root.ValueType _g = haxe.root.Type.typeof(a);
		//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		switch (_g.index)
		{
			case 1:
			{
				//line 210 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return ( ((int) (haxe.lang.Runtime.toInt(a)) ) - ((int) (haxe.lang.Runtime.toInt(b)) ) );
			}
			
			
			case 2:
			{
				//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				double a1 = ((double) (haxe.lang.Runtime.toDouble(a)) );
				//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				double b1 = ((double) (haxe.lang.Runtime.toDouble(b)) );
				//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				if (( a1 < b1 )) 
				{
					//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					return -1;
				}
				else
				{
					//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (( a1 > b1 )) 
					{
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return 1;
					}
					else
					{
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						return 0;
					}
					
				}
				
			}
			
			
			case 3:
			{
				//line 212 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return thx.Bools.compare(haxe.lang.Runtime.toBool(a), haxe.lang.Runtime.toBool(b));
			}
			
			
			case 4:
			{
				//line 213 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return thx.Objects.compare(a, b);
			}
			
			
			case 6:
			{
				//line 214 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class c = ((java.lang.Class) (_g.params[0]) );
				//line 215 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String name = haxe.root.Type.getClassName(c);
				//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					java.lang.String __temp_svar1 = (name);
					//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					boolean __temp_executeDef2 = true;
					//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					switch (__temp_svar1.hashCode())
					{
						case 63537721:
						{
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("Array")) 
							{
								//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 218 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return ((int) (thx.Arrays.compare(((haxe.root.Array<java.lang.Object>) (a) ), ((haxe.root.Array<java.lang.Object>) (b) ))) );
							}
							
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
						case -1808118735:
						{
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("String")) 
							{
								//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 220 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return haxe.Utf8.compare(haxe.lang.Runtime.toString(a), haxe.lang.Runtime.toString(b));
							}
							
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
						case 2122702:
						{
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("Date")) 
							{
								//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 222 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return thx.Dates.compare(((haxe.root.Date) (a) ), ((haxe.root.Date) (b) ));
							}
							
							//line 216 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
					}
					
					//line 223 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (__temp_executeDef2) 
					{
						//line 223 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if (haxe.root.Reflect.hasField(a, "compare")) 
						{
							//line 224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return ((int) (haxe.lang.Runtime.toInt(haxe.root.Reflect.callMethod(a, haxe.lang.Runtime.getField(a, "compare", false), new haxe.root.Array(new java.lang.Object[]{b})))) );
						}
						else
						{
							//line 226 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return haxe.Utf8.compare(haxe.root.Std.string(a), haxe.root.Std.string(b));
						}
						
					}
					else
					{
						//line 223 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						throw null;
					}
					
				}
				
			}
			
			
			case 7:
			{
				//line 229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return ((int) (thx.Enums.compare(((java.lang.Object) (a) ), ((java.lang.Object) (b) ))) );
			}
			
			
			default:
			{
				//line 231 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return 0;
			}
			
		}
		
	}
	
	
	public static java.lang.String string(java.lang.Object v)
	{
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		haxe.root.ValueType _g = haxe.root.Type.typeof(v);
		//line 239 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		switch (_g.index)
		{
			case 0:
			{
				//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return "null";
			}
			
			
			case 1:
			case 2:
			case 3:
			{
				//line 243 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return ( "" + haxe.root.Std.string(v) );
			}
			
			
			case 4:
			{
				//line 245 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return thx.Objects.string(v);
			}
			
			
			case 5:
			{
				//line 265 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return "<function>";
			}
			
			
			case 6:
			{
				//line 246 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.Class c = ((java.lang.Class) (_g.params[0]) );
				//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				java.lang.String _g1 = haxe.root.Type.getClassName(c);
				//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				{
					//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					java.lang.String __temp_svar1 = (_g1);
					//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					boolean __temp_executeDef2 = true;
					//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					switch (__temp_svar1.hashCode())
					{
						case 63537721:
						{
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("Array")) 
							{
								//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return haxe.lang.Runtime.toString(thx.Arrays.string(((haxe.root.Array<java.lang.Object>) (v) )));
							}
							
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
						case -1808118735:
						{
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("String")) 
							{
								//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 251 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return haxe.lang.Runtime.toString(v);
							}
							
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
						case 2122702:
						{
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							if (__temp_svar1.equals("Date")) 
							{
								//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								__temp_executeDef2 = false;
								//line 253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
								return ((haxe.root.Date) (v) ).toString();
							}
							
							//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							break;
						}
						
						
					}
					
					//line 255 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
					if (__temp_executeDef2) 
					{
						//line 255 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						if (( v instanceof haxe.IMap )) 
						{
							//line 256 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return haxe.lang.Runtime.toString(thx.Maps.string(((haxe.IMap<java.lang.Object, java.lang.Object>) (v) )));
						}
						else
						{
							//line 258 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
							return haxe.root.Std.string(v);
						}
						
					}
					else
					{
						//line 255 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
						throw null;
					}
					
				}
				
			}
			
			
			case 7:
			{
				//line 261 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return haxe.lang.Runtime.toString(thx.Enums.string(((java.lang.Object) (v) )));
			}
			
			
			case 8:
			{
				//line 263 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
				return "<unknown>";
			}
			
			
		}
		
		//line 238 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		return null;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		return new thx.Dynamics(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Dynamics.hx"
		return new thx.Dynamics();
	}
	
	
}


