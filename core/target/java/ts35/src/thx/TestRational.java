// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRational extends haxe.lang.HxObject
{
	public TestRational(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRational(int i)
	{
		//line 8 "/shared/core/test/thx/TestRational.hx"
		thx.TestRational.__hx_ctor_thx_TestRational(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestRational(thx.TestRational __temp_me122, int i)
	{
		//line 9 "/shared/core/test/thx/TestRational.hx"
		__temp_me122.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		return new thx.TestRational(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		return new thx.TestRational(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testOperations()
	{
		//line 13 "/shared/core/test/thx/TestRational.hx"
		int _g1 = 0;
		//line 13 "/shared/core/test/thx/TestRational.hx"
		int _g = this.x;
		//line 13 "/shared/core/test/thx/TestRational.hx"
		while (( _g1 < _g ))
		{
			//line 13 "/shared/core/test/thx/TestRational.hx"
			 ++ _g1;
			//line 14 "/shared/core/test/thx/TestRational.hx"
			java.lang.Object x = null;
			//line 14 "/shared/core/test/thx/TestRational.hx"
			java.lang.Object y = null;
			//line 18 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(2)) ));
			//line 19 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3)) ));
			//line 20 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("5/6", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 23 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(8)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(9)) ));
			//line 24 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(9)) ));
			//line 25 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("1", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
			//line 28 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(200000000)) ));
			//line 29 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(300000000)) ));
			//line 30 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("1/120000000", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
			//line 33 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1073741789)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(20)) ));
			//line 34 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1073741789)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(30)) ));
			//line 35 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("1073741789/12", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.add(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
			//line 38 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(4)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(17)) ));
			//line 39 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(17)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(4)) ));
			//line 40 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("1", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.multiply(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 43 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3037141)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3247033)) ));
			//line 44 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3037547)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(3246599)) ));
			//line 45 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("841/961", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.multiply(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
			//line 46 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.floatEquals(0.87513007284079, thx._Rational.Rational_Impl_.toFloat(thx._Rational.Rational_Impl_.multiply(x, y)), null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
			//line 49 "/shared/core/test/thx/TestRational.hx"
			x = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(1)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(6)) ));
			//line 50 "/shared/core/test/thx/TestRational.hx"
			y = thx._Rational.Rational_Impl_.create(((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(-4)) ), ((thx.bigint.BigIntImpl) (thx.bigint.Bigs.fromInt(-8)) ));
			//line 51 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("-1/3", thx._Rational.Rational_Impl_.toString(thx._Rational.Rational_Impl_.subtract(x, y)), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testOperations"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		}
		
	}
	
	
	public void testFromInt()
	{
		//line 55 "/shared/core/test/thx/TestRational.hx"
		int _g1 = 0;
		//line 55 "/shared/core/test/thx/TestRational.hx"
		int _g = this.x;
		//line 55 "/shared/core/test/thx/TestRational.hx"
		while (( _g1 < _g ))
		{
			//line 55 "/shared/core/test/thx/TestRational.hx"
			 ++ _g1;
			//line 56 "/shared/core/test/thx/TestRational.hx"
			java.lang.Object r = thx._Rational.Rational_Impl_.fromInt(3);
			//line 57 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("3", thx._Rational.Rational_Impl_.toString(r), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testFromInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (57) )) )}));
			//line 58 "/shared/core/test/thx/TestRational.hx"
			r = thx._Rational.Rational_Impl_.divide(r, thx._Rational.Rational_Impl_.fromInt(2));
			//line 59 "/shared/core/test/thx/TestRational.hx"
			utest.Assert.equals("3/2", thx._Rational.Rational_Impl_.toString(r), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestRational", "TestRational.hx", "testFromInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						this.x = ((int) (value) );
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return value;
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case -986948877:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("testFromInt")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromInt")) );
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return this.x;
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
				case -709826018:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("testOperations")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOperations")) );
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("x")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						return ((double) (this.x) );
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/core/test/thx/TestRational.hx"
			switch (field.hashCode())
			{
				case -986948877:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("testFromInt")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						this.testFromInt();
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
				case -709826018:
				{
					//line 6 "/shared/core/test/thx/TestRational.hx"
					if (field.equals("testOperations")) 
					{
						//line 6 "/shared/core/test/thx/TestRational.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/core/test/thx/TestRational.hx"
						this.testOperations();
					}
					
					//line 6 "/shared/core/test/thx/TestRational.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/core/test/thx/TestRational.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/core/test/thx/TestRational.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/core/test/thx/TestRational.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "/shared/core/test/thx/TestRational.hx"
		baseArr.push("x");
		//line 6 "/shared/core/test/thx/TestRational.hx"
		{
			//line 6 "/shared/core/test/thx/TestRational.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


