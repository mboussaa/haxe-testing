// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestInt64s extends haxe.lang.HxObject
{
	public TestInt64s(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestInt64s(int i)
	{
		//line 14 "/shared/core/test/thx/TestInt64s.hx"
		thx.TestInt64s.__hx_ctor_thx_TestInt64s(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestInt64s(thx.TestInt64s __temp_me112, int i)
	{
		//line 15 "/shared/core/test/thx/TestInt64s.hx"
		__temp_me112.x = i;
	}
	
	
	public static java.lang.Object here(java.lang.Object pos)
	{
		//line 49 "/shared/core/test/thx/TestInt64s.hx"
		return pos;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		return new thx.TestInt64s(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		return new thx.TestInt64s(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testRounding()
	{
		//line 19 "/shared/core/test/thx/TestInt64s.hx"
		int _g1 = 0;
		//line 19 "/shared/core/test/thx/TestInt64s.hx"
		int _g = this.x;
		//line 19 "/shared/core/test/thx/TestInt64s.hx"
		while (( _g1 < _g ))
		{
			//line 19 "/shared/core/test/thx/TestInt64s.hx"
			 ++ _g1;
			//line 21 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt9 = null;
			//line 21 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 21 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl1 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )})) );
				//line 21 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt9 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (2) )) ), ((double) (((double) (5) )) ), ((double) (((double) (3) )) ), ((double) (((double) (2) )) ), ((double) (((double) (3) )) )});
			}
			
			//line 22 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt10 = null;
			//line 22 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 22 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl2 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )})) );
				//line 22 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt10 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl2}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (2) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) )});
			}
			
			//line 23 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt11 = null;
			//line 23 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 23 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl3 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )})) );
				//line 23 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt11 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl3}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (4) )) ), ((double) (((double) (1) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (1) )) )});
			}
			
			//line 25 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt12 = null;
			//line 25 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 25 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl4 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )})) );
				//line 25 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt12 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl4}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (2) )) ), ((double) (((double) (-5) )) ), ((double) (((double) (-2) )) ), ((double) (((double) (-3) )) ), ((double) (((double) (-2) )) )});
			}
			
			//line 26 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt13 = null;
			//line 26 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 26 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl5 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )})) );
				//line 26 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt13 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl5}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (4) )) ), ((double) (((double) (-1) )) ), ((double) (((double) (0) )) ), ((double) (((double) (-1) )) ), ((double) (((double) (0) )) )});
			}
			
			//line 28 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt14 = null;
			//line 28 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 28 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl6 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )})) );
				//line 28 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt14 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl6}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (-2) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) ), ((double) (((double) (0) )) )});
			}
			
			//line 29 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt15 = null;
			//line 29 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 29 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl7 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )})) );
				//line 29 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt15 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl7}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (-2) )) ), ((double) (((double) (5) )) ), ((double) (((double) (-2) )) ), ((double) (((double) (-3) )) ), ((double) (((double) (-2) )) )});
			}
			
			//line 30 "/shared/core/test/thx/TestInt64s.hx"
			java.lang.Object __temp_stmt16 = null;
			//line 30 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 30 "/shared/core/test/thx/TestInt64s.hx"
				java.lang.Object __temp_odecl8 = ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestInt64s", "TestInt64s.hx", "testRounding"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )})) );
				//line 30 "/shared/core/test/thx/TestInt64s.hx"
				__temp_stmt16 = new haxe.lang.DynamicObject(new java.lang.String[]{"pos"}, new java.lang.Object[]{__temp_odecl8}, new java.lang.String[]{"div", "num", "round", "roundDown", "roundUp"}, new double[]{((double) (((double) (-4) )) ), ((double) (((double) (1) )) ), ((double) (((double) (0) )) ), ((double) (((double) (-1) )) ), ((double) (((double) (0) )) )});
			}
			
			//line 20 "/shared/core/test/thx/TestInt64s.hx"
			haxe.root.Array<java.lang.Object> tests = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{__temp_stmt9, __temp_stmt10, __temp_stmt11, __temp_stmt12, __temp_stmt13, __temp_stmt14, __temp_stmt15, __temp_stmt16});
			//line 32 "/shared/core/test/thx/TestInt64s.hx"
			long up = 0L;
			//line 32 "/shared/core/test/thx/TestInt64s.hx"
			long down = 0L;
			//line 32 "/shared/core/test/thx/TestInt64s.hx"
			long round = 0L;
			//line 32 "/shared/core/test/thx/TestInt64s.hx"
			long num = 0L;
			//line 32 "/shared/core/test/thx/TestInt64s.hx"
			long div = 0L;
			//line 37 "/shared/core/test/thx/TestInt64s.hx"
			{
				//line 37 "/shared/core/test/thx/TestInt64s.hx"
				int _g2 = 0;
				//line 37 "/shared/core/test/thx/TestInt64s.hx"
				while (( _g2 < tests.length ))
				{
					//line 37 "/shared/core/test/thx/TestInt64s.hx"
					java.lang.Object test = tests.__get(_g2);
					//line 37 "/shared/core/test/thx/TestInt64s.hx"
					 ++ _g2;
					//line 38 "/shared/core/test/thx/TestInt64s.hx"
					up = ((long) (((int) (haxe.lang.Runtime.getField_f(test, "roundUp", true)) )) );
					//line 39 "/shared/core/test/thx/TestInt64s.hx"
					down = ((long) (((int) (haxe.lang.Runtime.getField_f(test, "roundDown", true)) )) );
					//line 40 "/shared/core/test/thx/TestInt64s.hx"
					round = ((long) (((int) (haxe.lang.Runtime.getField_f(test, "round", true)) )) );
					//line 41 "/shared/core/test/thx/TestInt64s.hx"
					num = ((long) (((int) (haxe.lang.Runtime.getField_f(test, "num", true)) )) );
					//line 42 "/shared/core/test/thx/TestInt64s.hx"
					div = ((long) (((int) (haxe.lang.Runtime.getField_f(test, "div", true)) )) );
					//line 43 "/shared/core/test/thx/TestInt64s.hx"
					utest.Assert.isTrue(( ((long) (round) ) == ((long) (thx.Int64s.divRound(num, div)) ) ), ( ( ( ( ( ( ( ( "expected " + (( "" + haxe.root.Std.string(((long) (round) )) )) ) + " but got " ) + (( "" + haxe.root.Std.string(((long) (thx.Int64s.divRound(num, div)) )) )) ) + " from " ) + (( "" + haxe.root.Std.string(((long) (num) )) )) ) + ".divRound(" ) + (( "" + haxe.root.Std.string(((long) (div) )) )) ) + ")" ), haxe.lang.Runtime.getField(test, "pos", true));
					//line 44 "/shared/core/test/thx/TestInt64s.hx"
					utest.Assert.isTrue(( ((long) (up) ) == ((long) (thx.Int64s.divCeil(num, div)) ) ), ( ( ( ( ( ( ( ( "expected " + (( "" + haxe.root.Std.string(((long) (up) )) )) ) + " but got " ) + (( "" + haxe.root.Std.string(((long) (thx.Int64s.divCeil(num, div)) )) )) ) + " from " ) + (( "" + haxe.root.Std.string(((long) (num) )) )) ) + ".divCeil(" ) + (( "" + haxe.root.Std.string(((long) (div) )) )) ) + ")" ), haxe.lang.Runtime.getField(test, "pos", true));
					//line 45 "/shared/core/test/thx/TestInt64s.hx"
					utest.Assert.isTrue(( ((long) (down) ) == ((long) (thx.Int64s.divFloor(num, div)) ) ), ( ( ( ( ( ( ( ( "expected " + (( "" + haxe.root.Std.string(((long) (down) )) )) ) + " but got " ) + (( "" + haxe.root.Std.string(((long) (thx.Int64s.divFloor(num, div)) )) )) ) + " from " ) + (( "" + haxe.root.Std.string(((long) (num) )) )) ) + ".divFloor(" ) + (( "" + haxe.root.Std.string(((long) (div) )) )) ) + ")" ), haxe.lang.Runtime.getField(test, "pos", true));
				}
				
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						this.x = ((int) (value) );
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						return value;
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						return value;
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			switch (field.hashCode())
			{
				case 714197574:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("testRounding")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testRounding")) );
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						return this.x;
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("x")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						return ((double) (this.x) );
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			switch (field.hashCode())
			{
				case 714197574:
				{
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					if (field.equals("testRounding")) 
					{
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						__temp_executeDef1 = false;
						//line 12 "/shared/core/test/thx/TestInt64s.hx"
						this.testRounding();
					}
					
					//line 12 "/shared/core/test/thx/TestInt64s.hx"
					break;
				}
				
				
			}
			
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "/shared/core/test/thx/TestInt64s.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		baseArr.push("x");
		//line 12 "/shared/core/test/thx/TestInt64s.hx"
		{
			//line 12 "/shared/core/test/thx/TestInt64s.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


