// Generated by Haxe 3.3.0
package thx._BitMatrix;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BitMatrix_Impl__fromBools_35__Fun extends haxe.lang.Function
{
	public BitMatrix_Impl__fromBools_35__Fun()
	{
		//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
		super(1, 0);
	}
	
	
	public static thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		haxe.root.Array<java.lang.Object> _1 = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<java.lang.Object>) (((java.lang.Object) (__fn_float1) )) )) : (( (( __fn_dyn1 == null )) ? (null) : (((haxe.root.Array<java.lang.Object>) (__fn_dyn1) )) )) );
		//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
		//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		int size = ( ((int) (0.) ) + 1 );
		//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		thx.Arrays.resize(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (this1) )) ), ((int) (( size + 1 )) ), ((java.lang.Object) (0) ));
		//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
		return ((haxe.root.Array<java.lang.Object>) (thx.Arrays.reducei(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (_1) )) ), ((haxe.lang.Function) (( (( thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun_0.__hx_current != null )) ? (thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun_0.__hx_current) : (thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun_0.__hx_current = ((thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun_0) (new thx._BitMatrix.BitMatrix_Impl__fromBools_35__Fun_0()) )) )) ), ((haxe.root.Array<java.lang.Object>) (this1) ))) );
	}
	
	
}


