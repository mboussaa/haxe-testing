// Generated by Haxe 3.3.0
package thx._BitMatrix;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BitMatrix_Impl__combine_183__Fun extends haxe.lang.Function
{
	public BitMatrix_Impl__combine_183__Fun(haxe.root.Array<haxe.root.Array<java.lang.Object>> right, haxe.root.Array<haxe.root.Array<java.lang.Object>> left, haxe.lang.Function combiner, int bitSetIndex)
	{
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		super(2, 0);
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		this.right = right;
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		this.left = left;
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		this.combiner = combiner;
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		this.bitSetIndex = bitSetIndex;
	}
	
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		int bitIndex = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		haxe.root.Array<haxe.root.Array<java.lang.Object>> acc1 = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<haxe.root.Array<java.lang.Object>>) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.root.Array<haxe.root.Array<java.lang.Object>>) (__fn_dyn1) )) );
		//line 184 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		thx._BitMatrix.BitMatrix_Impl_.setBitAt(acc1, this.bitSetIndex, bitIndex, haxe.lang.Runtime.toBool(this.combiner.__hx_invoke2_o(0.0, thx._BitMatrix.BitMatrix_Impl_.bitAt(this.left, this.bitSetIndex, bitIndex), 0.0, thx._BitMatrix.BitMatrix_Impl_.bitAt(this.right, this.bitSetIndex, bitIndex))));
		//line 185 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/BitMatrix.hx"
		return acc1;
	}
	
	
	public haxe.root.Array<haxe.root.Array<java.lang.Object>> right;
	
	public haxe.root.Array<haxe.root.Array<java.lang.Object>> left;
	
	public haxe.lang.Function combiner;
	
	public int bitSetIndex;
	
}


