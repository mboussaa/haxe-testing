// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DateTools extends haxe.lang.HxObject
{
	static
	{
		//line 136 "/usr/lib/haxe/std/DateTools.hx"
		haxe.root.DateTools.DAYS_OF_MONTH = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31});
	}
	
	public DateTools(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DateTools()
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		haxe.root.DateTools.__hx_ctor__DateTools(this);
	}
	
	
	public static void __hx_ctor__DateTools(haxe.root.DateTools __temp_me4)
	{
	}
	
	
	public static haxe.root.Array<java.lang.Object> DAYS_OF_MONTH;
	
	public static int getMonthDays(haxe.root.Date d)
	{
		//line 144 "/usr/lib/haxe/std/DateTools.hx"
		int month = d.date.getMonth();
		//line 145 "/usr/lib/haxe/std/DateTools.hx"
		int year = ( d.date.getYear() + 1900 );
		//line 147 "/usr/lib/haxe/std/DateTools.hx"
		if (( month != 1 )) 
		{
			//line 148 "/usr/lib/haxe/std/DateTools.hx"
			return ((int) (haxe.lang.Runtime.toInt(haxe.root.DateTools.DAYS_OF_MONTH.__get(month))) );
		}
		
		//line 150 "/usr/lib/haxe/std/DateTools.hx"
		boolean isB = ( ( ( ( year % 4 ) == 0 ) && ( ( year % 100 ) != 0 ) ) || ( ( year % 400 ) == 0 ) );
		//line 151 "/usr/lib/haxe/std/DateTools.hx"
		if (isB) 
		{
			//line 151 "/usr/lib/haxe/std/DateTools.hx"
			return 29;
		}
		else
		{
			//line 151 "/usr/lib/haxe/std/DateTools.hx"
			return 28;
		}
		
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		return new haxe.root.DateTools(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		return new haxe.root.DateTools();
	}
	
	
}


