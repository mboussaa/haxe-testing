// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Assert_sameAs_401__Fun extends haxe.lang.Function
{
	public Assert_sameAs_401__Fun(java.lang.Object status)
	{
		//line 402 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		super(1, 0);
		//line 402 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		this.status = status;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 401 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		java.lang.String msg = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float1)) : (haxe.lang.Runtime.toString(__fn_dyn1)) );
		//line 402 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Assert.hx"
		return ( msg + (( (thx.Strings.isEmpty(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.status, "path", true)))) ? ("") : (( " at " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.status, "path", true)) )) )) );
	}
	
	
	public java.lang.Object status;
	
}


