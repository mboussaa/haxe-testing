// Generated by Haxe 3.3.0
package thx._Chars;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Chars_Impl__fromString_17__Fun extends haxe.lang.Function
{
	public Chars_Impl__fromString_17__Fun()
	{
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Chars.hx"
		super(1, 0);
	}
	
	
	public static thx._Chars.Chars_Impl__fromString_17__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 17 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Chars.hx"
		java.lang.String s1 = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float1)) : (haxe.lang.Runtime.toString(__fn_dyn1)) );
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Chars.hx"
		int i = ((int) (haxe.lang.Runtime.toInt(haxe.lang.StringExt.charCodeAt(s1, 0))) );
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Chars.hx"
		thx.Assert.isTrue(( i >= 0 ), ( "Char value should be greater than zero: " + i ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx._Char.Char_Impl_", "Char.hx", "fromInt"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Chars.hx"
		return ((int) (i) );
	}
	
	
}


