// Generated by Haxe 3.3.0
package thx._Url;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Url_Impl_
{
	static
	{
		//line 10 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		thx._Url.Url_Impl_.pattern = new haxe.root.EReg("^((((?:([^:/#\\?]+):)?(?:(//)?((?:(([^:@/#\\?]+)(?:[:]([^:@/#\\?]+))?)@)?(([^:/#\\?\\]\\[]+|\\[[^/\\]@#?]+\\])(?:[:]([0-9]+))?))?)?)?((/?(?:[^/\\?#]+/+)*)([^\\?#]*)))?(?:\\?([^#]+))?)(?:#(.*))?", "");
	}
	
	public static haxe.root.EReg pattern;
	
	public static java.lang.Object fromString(java.lang.String s)
	{
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return thx._Url.Url_Impl_.parse(s, true);
	}
	
	
	public static java.lang.Object parse(java.lang.String s, boolean parseQueryString)
	{
		//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if ( ! (thx._Url.Url_Impl_.pattern.match(s)) ) 
		{
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			throw haxe.lang.HaxeException.wrap(new thx.Error(( ( "unable to parse \"" + s ) + "\" to Url" ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx._Url.Url_Impl_", "Url.hx", "parse"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )})));
		}
		
		//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		java.lang.String port = thx._Url.Url_Impl_.pattern.matched(12);
		//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		java.lang.Object o = null;
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		{
			//line 24 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl1 = thx._Url.Url_Impl_.pattern.matched(4);
			//line 25 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			boolean __temp_odecl2 = haxe.lang.Runtime.valEq(thx._Url.Url_Impl_.pattern.matched(5), "//");
			//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl3 = thx._Url.Url_Impl_.pattern.matched(7);
			//line 27 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl4 = thx._Url.Url_Impl_.pattern.matched(11);
			//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.Object __temp_odecl5 = ( (( null == port )) ? (null) : (haxe.root.Std.parseInt(port)) );
			//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl6 = thx._Url.Url_Impl_.pattern.matched(13);
			//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl7 = thx._Url.Url_Impl_.pattern.matched(17);
			//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			o = new haxe.lang.DynamicObject(new java.lang.String[]{"auth", "hash", "hostName", "pathName", "port", "protocol", "queryString", "search", "slashes"}, new java.lang.Object[]{__temp_odecl3, __temp_odecl7, __temp_odecl4, __temp_odecl6, __temp_odecl5, __temp_odecl1, null, null, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
		}
		
		//line 34 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		thx._Url.Url_Impl_.set_search(o, thx._Url.Url_Impl_.pattern.matched(16));
		//line 35 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return o;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static boolean equals(java.lang.Object self, java.lang.Object that)
	{
		//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return thx._Url.Url_Impl_.equalsTo(self, that);
	}
	
	
	public static boolean equalsTo(java.lang.Object this1, java.lang.Object that)
	{
		//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( ( ( ( ( ( ( haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "protocol", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "protocol", true))) && ( haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(this1, "slashes", true)) == haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "slashes", true)) ) ) && haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "auth", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "auth", true))) ) && haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hostName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "hostName", true))) ) && haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(this1, "port", true), haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "port", true)) ) && haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "pathName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "pathName", true))) ) && thx._QueryString.QueryString_Impl_.equals(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) ), ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "queryString", true)) )) ) && haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "search", true)), thx._Url.Url_Impl_.get_search(that)) )) 
		{
			//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hash", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (that) ), "hash", true)));
		}
		else
		{
			//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return false;
		}
		
	}
	
	
	public static java.lang.Object concatString(java.lang.Object this1, java.lang.String that)
	{
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		java.lang.Object copy = thx._Url.Url_Impl_.clone(this1);
		//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (thx.Strings.isEmpty(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "pathName", true)))) 
		{
			//line 83 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if ( ! (that.startsWith("/")) ) 
			{
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				that = ( "/" + that );
			}
			
			//line 85 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(((java.lang.Object) (copy) ), "pathName", that);
		}
		else
		{
			//line 87 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (that.startsWith("/")) 
			{
				//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				that = haxe.lang.StringExt.substring(that, 1, null);
			}
			
			//line 89 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "pathName", true)).endsWith("/")) 
			{
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				haxe.lang.Runtime.setField(((java.lang.Object) (copy) ), "pathName", ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (copy) ), "pathName", true)) + that ));
			}
			else
			{
				//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				haxe.lang.Runtime.setField(((java.lang.Object) (copy) ), "pathName", ( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (copy) ), "pathName", true)) + "/" ) + that ));
			}
			
		}
		
		//line 94 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return copy;
	}
	
	
	public static java.lang.String toString(java.lang.Object this1)
	{
		//line 98 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hostName", true)) != null )) 
		{
			//line 98 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return ( ( ( ( ( ( "" + (( (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "protocol", true)) != null )) ? (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "protocol", true)) + ":" )) : ("") )) ) + (( (haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "slashes", true))) ? ("//") : ("") )) ) + (( (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "auth", true)) != null )) ? (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "auth", true)) + "@" )) : ("") )) ) + (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hostName", true)) + (( (( ! (haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "port", true), null)) )) ? (( haxe.lang.Runtime.toString(":") + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "port", true)) )) : ("") )) )) ) + (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "pathName", true)) + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "search", true)) != null ) || ( ( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ) != null ) &&  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ).iterator(), "hasNext", null))) ))  ) )) ? (( "?" + thx._Url.Url_Impl_.get_search(((java.lang.Object) (this1) )) )) : ("") )) )) ) + (( (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hash", true)) != null )) ? (( "#" + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hash", true)) )) : ("") )) );
		}
		else
		{
			//line 98 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return ( ( "" + (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "pathName", true)) + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "search", true)) != null ) || ( ( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ) != null ) &&  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ).iterator(), "hasNext", null))) ))  ) )) ? (( "?" + thx._Url.Url_Impl_.get_search(((java.lang.Object) (this1) )) )) : ("") )) )) ) + (( (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hash", true)) != null )) ? (( "#" + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hash", true)) )) : ("") )) );
		}
		
	}
	
	
	public static java.lang.Object clone(java.lang.Object this1)
	{
		//line 104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		{
			//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "protocol", true));
			//line 106 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			boolean __temp_odecl2 = haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "slashes", true));
			//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl3 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "auth", true));
			//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl4 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hostName", true));
			//line 109 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.Object __temp_odecl5 = haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "port", true);
			//line 110 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl6 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "pathName", true));
			//line 111 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.ds.StringMap<haxe.root.Array<java.lang.String>> __temp_odecl7 = thx._QueryString.QueryString_Impl_.clone(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ));
			//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl8 = thx._Url.Url_Impl_.get_search(this1);
			//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.String __temp_odecl9 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "hash", true));
			//line 104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"auth", "hash", "hostName", "pathName", "port", "protocol", "queryString", "search", "slashes"}, new java.lang.Object[]{__temp_odecl3, __temp_odecl9, __temp_odecl4, __temp_odecl6, __temp_odecl5, __temp_odecl1, __temp_odecl7, __temp_odecl8, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
		}
		
	}
	
	
	public static haxe.ds.StringMap<haxe.root.Array<java.lang.String>> ensureQueryString(java.lang.Object this1)
	{
		//line 118 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) ) != null )) 
		{
			//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) );
		}
		else
		{
			//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.ds.StringMap<haxe.root.Array<java.lang.String>> value = new haxe.ds.StringMap<haxe.root.Array<java.lang.String>>();
			//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (( null != value )) 
			{
				//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				haxe.lang.Runtime.setField(((java.lang.Object) (this1) ), "search", null);
			}
			
			//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.setField(((java.lang.Object) (this1) ), "queryString", value)) );
		}
		
	}
	
	
	public static java.lang.String get_auth(java.lang.Object this1)
	{
		//line 125 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "auth", true));
	}
	
	
	public static java.lang.String set_auth(java.lang.Object this1, java.lang.String value)
	{
		//line 128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(this1, "auth", value));
	}
	
	
	public static boolean get_hasAuth(java.lang.Object this1)
	{
		//line 131 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "auth", true)) != null );
	}
	
	
	public static boolean get_hasHash(java.lang.Object this1)
	{
		//line 134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hash", true)) != null );
	}
	
	
	public static boolean get_hasPort(java.lang.Object this1)
	{
		//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( ! (haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(this1, "port", true), null)) );
	}
	
	
	public static boolean get_hasProtocol(java.lang.Object this1)
	{
		//line 140 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "protocol", true)) != null );
	}
	
	
	public static boolean get_hasQueryString(java.lang.Object this1)
	{
		//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) ) != null )) 
		{
			//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) ).iterator(), "hasNext", null))) )) ;
		}
		else
		{
			//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return false;
		}
		
	}
	
	
	public static boolean get_hasSearch(java.lang.Object this1)
	{
		//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "search", true)) == null )) 
		{
			//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ) != null )) 
			{
				//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				return  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ).iterator(), "hasNext", null))) )) ;
			}
			else
			{
				//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				return false;
			}
			
		}
		else
		{
			//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return true;
		}
		
	}
	
	
	public static java.lang.String get_host(java.lang.Object this1)
	{
		//line 149 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hostName", true)) + (( (( ! (haxe.lang.Runtime.eq(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "port", true), null)) )) ? (( haxe.lang.Runtime.toString(":") + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "port", true)) )) : ("") )) );
	}
	
	
	public static java.lang.String set_host(java.lang.Object this1, java.lang.String host)
	{
		//line 152 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		int p = haxe.lang.StringExt.indexOf(host, ":", null);
		//line 153 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( p < 0 )) 
		{
			//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "hostName", host);
			//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "port", null);
		}
		else
		{
			//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "hostName", haxe.lang.StringExt.substring(host, 0, p));
			//line 158 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "port", haxe.root.Std.parseInt(haxe.lang.StringExt.substring(host, ( p + 1 ), null)));
		}
		
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return host;
	}
	
	
	public static java.lang.String get_hostName(java.lang.Object this1)
	{
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hostName", true));
	}
	
	
	public static java.lang.String set_hostName(java.lang.Object this1, java.lang.String hostName)
	{
		//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(this1, "hostName", hostName));
	}
	
	
	public static java.lang.String get_href(java.lang.Object this1)
	{
		//line 170 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return thx._Url.Url_Impl_.toString(this1);
	}
	
	
	public static java.lang.String set_href(java.lang.Object this1, java.lang.String value)
	{
		//line 173 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		this1 = ((java.lang.Object) (thx._Url.Url_Impl_.parse(value, true)) );
		//line 174 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return value;
	}
	
	
	public static boolean get_isAbsolute(java.lang.Object this1)
	{
		//line 178 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hostName", true)) != null );
	}
	
	
	public static boolean get_isRelative(java.lang.Object this1)
	{
		//line 181 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hostName", true)) == null );
	}
	
	
	public static java.lang.String get_path(java.lang.Object this1)
	{
		//line 184 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "pathName", true)) + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "search", true)) != null ) || ( ( ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ) != null ) &&  ! (( ! (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(((java.lang.Object) (this1) ), "queryString", true)) ).iterator(), "hasNext", null))) ))  ) )) ? (( "?" + thx._Url.Url_Impl_.get_search(this1) )) : ("") )) );
	}
	
	
	public static java.lang.String set_path(java.lang.Object this1, java.lang.String value)
	{
		//line 187 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		int p = haxe.lang.StringExt.indexOf(value, "?", null);
		//line 188 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( p < 0 )) 
		{
			//line 189 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "pathName", value);
			//line 190 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "search", null);
			//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "queryString", null);
		}
		else
		{
			//line 193 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "pathName", haxe.lang.StringExt.substring(value, 0, p));
			//line 194 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			thx._Url.Url_Impl_.set_search(this1, haxe.lang.StringExt.substring(value, ( p + 1 ), null));
		}
		
		//line 196 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return value;
	}
	
	
	public static java.lang.String get_pathName(java.lang.Object this1)
	{
		//line 200 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "pathName", true));
	}
	
	
	public static java.lang.String set_pathName(java.lang.Object this1, java.lang.String value)
	{
		//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(this1, "pathName", value));
	}
	
	
	public static java.lang.Object get_port(java.lang.Object this1)
	{
		//line 206 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.getField(this1, "port", true);
	}
	
	
	public static java.lang.Object set_port(java.lang.Object this1, java.lang.Object value)
	{
		//line 209 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.setField(this1, "port", value);
	}
	
	
	public static java.lang.String get_protocol(java.lang.Object this1)
	{
		//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "protocol", true));
	}
	
	
	public static java.lang.String set_protocol(java.lang.Object this1, java.lang.String value)
	{
		//line 214 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(this1, "protocol", ( (( null == value )) ? (null) : (value.toLowerCase()) )));
	}
	
	
	public static java.lang.String get_hash(java.lang.Object this1)
	{
		//line 217 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "hash", true));
	}
	
	
	public static java.lang.String set_hash(java.lang.Object this1, java.lang.String value)
	{
		//line 220 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toString(haxe.lang.Runtime.setField(this1, "hash", value));
	}
	
	
	public static boolean get_slashes(java.lang.Object this1)
	{
		//line 223 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(this1, "slashes", true));
	}
	
	
	public static boolean set_slashes(java.lang.Object this1, boolean value)
	{
		//line 226 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return haxe.lang.Runtime.toBool(haxe.lang.Runtime.setField(this1, "slashes", value));
	}
	
	
	public static haxe.ds.StringMap<haxe.root.Array<java.lang.String>> get_queryString(java.lang.Object this1)
	{
		//line 229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) );
	}
	
	
	public static haxe.ds.StringMap<haxe.root.Array<java.lang.String>> set_queryString(java.lang.Object this1, haxe.ds.StringMap<haxe.root.Array<java.lang.String>> value)
	{
		//line 232 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( null != value )) 
		{
			//line 233 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "search", null);
		}
		
		//line 234 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return ((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.setField(this1, "queryString", value)) );
	}
	
	
	public static java.lang.String get_search(java.lang.Object this1)
	{
		//line 238 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( ( null != haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "search", true)) ) &&  ! (haxe.lang.Runtime.valEq("", haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "search", true))))  )) 
		{
			//line 238 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this1, "search", true));
		}
		else
		{
			//line 238 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			return thx._QueryString.QueryString_Impl_.toStringWithSymbols(((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (haxe.lang.Runtime.getField(this1, "queryString", true)) ), thx._QueryString.QueryString_Impl_.separator, thx._QueryString.QueryString_Impl_.assignment, thx._QueryString.QueryString_Impl_.encodeURIComponent);
		}
		
	}
	
	
	public static java.lang.String set_search(java.lang.Object this1, java.lang.String value)
	{
		//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		haxe.ds.StringMap<haxe.root.Array<java.lang.String>> qs = null;
		//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		try 
		{
			//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			qs = thx._QueryString.QueryString_Impl_.parseWithSymbols(value, thx._QueryString.QueryString_Impl_.separator, thx._QueryString.QueryString_Impl_.assignment, thx._QueryString.QueryString_Impl_.decodeURIComponent);
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			{
				//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				java.lang.Object e = __temp_catchall2;
				//line 241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				qs = null;
			}
			
		}
		
		
		//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		boolean tmp = false;
		//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (( qs != null )) 
		{
			//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.root.Array<java.lang.String> arr = ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (thx.Iterators.toArray(((java.lang.Object) (((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (qs) ).keys()) ))) )) );
			//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			if (( arr.length == 0 )) 
			{
				//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				tmp = true;
			}
			else
			{
				//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
				if (( arr.length != 1 )) 
				{
					//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
					tmp = false;
				}
				else
				{
					//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
					tmp = ( ((haxe.root.Array<java.lang.String>) (((haxe.ds.StringMap<haxe.root.Array<java.lang.String>>) (qs) ).get(arr.__get(0))) ).length == 0 );
				}
				
			}
			
		}
		else
		{
			//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			tmp = true;
		}
		
		//line 242 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		if (tmp) 
		{
			//line 243 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "search", value);
			//line 244 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "queryString", null);
		}
		else
		{
			//line 246 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "queryString", qs);
			//line 247 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
			haxe.lang.Runtime.setField(this1, "search", null);
		}
		
		//line 249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Url.hx"
		return value;
	}
	
	
}


