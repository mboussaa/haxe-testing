// Generated by Haxe 3.3.0
package thx._OrderedSet;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class OrderedSet_Impl_
{
	public static <T> haxe.root.Array<T> toOrderedSet(haxe.root.Array<T> arr)
	{
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		haxe.root.Array<T> this1 = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		haxe.root.Array<T> set = ((haxe.root.Array<T>) (this1) );
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		{
			//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			int _g = 0;
			//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			while (( _g < arr.length ))
			{
				//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				T v = arr.__get(_g);
				//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				 ++ _g;
				//line 14 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				thx._OrderedSet.OrderedSet_Impl_.push(((haxe.root.Array<T>) (set) ), ((T) (v) ));
			}
			
		}
		
		//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return set;
	}
	
	
	public static <T> haxe.root.Array<T> arrayToOrderedSet(haxe.root.Array<T> arr)
	{
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<T>) (arr) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> create(haxe.root.Array<T> arr)
	{
		//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		if (( null == arr )) 
		{
			//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			haxe.root.Array<T> this1 = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
			//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			return ((haxe.root.Array<T>) (this1) );
		}
		else
		{
			//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			return ((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<T>) (arr) ))) );
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> _new(haxe.root.Array<T> arr)
	{
		//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (arr) );
	}
	
	
	public static <T> boolean add(haxe.root.Array<T> this1, T v)
	{
		//line 37 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		if (((boolean) (thx._OrderedSet.OrderedSet_Impl_.exists(((haxe.root.Array<T>) (this1) ), ((T) (v) ))) )) 
		{
			//line 37 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			return false;
		}
		else
		{
			//line 40 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			this1.push(v);
			//line 37 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			return true;
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> copy(haxe.root.Array<T> this1)
	{
		//line 48 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (this1.copy()) );
	}
	
	
	public static <T> haxe.root.Array<T> difference(haxe.root.Array<T> this1, haxe.root.Array<T> set)
	{
		//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		haxe.root.Array<T> result = this1.copy();
		//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		{
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			java.lang.Object tmp = ((java.lang.Object) (new _Array.ArrayIterator<T>(((haxe.root.Array<T>) (set) ))) );
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				T item = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				result.remove(item);
			}
			
		}
		
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (result) );
	}
	
	
	public static <T> boolean exists(haxe.root.Array<T> this1, T v)
	{
		//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		{
			//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			int _g = 0;
			//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			while (( _g < this1.length ))
			{
				//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				T t = this1.__get(_g);
				//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				 ++ _g;
				//line 66 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				if (haxe.lang.Runtime.eq(t, v)) 
				{
					//line 67 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
					return true;
				}
				
			}
			
		}
		
		//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return false;
	}
	
	
	public static <T> java.lang.Object get(haxe.root.Array<T> this1, int index)
	{
		//line 77 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return this1.__get(index);
	}
	
	
	public static <T> haxe.root.Array<T> intersection(haxe.root.Array<T> this1, haxe.root.Array<T> set)
	{
		//line 83 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		haxe.root.Array<T> result = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		{
			//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			int _g = 0;
			//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			while (( _g < this1.length ))
			{
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				T item = this1.__get(_g);
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				 ++ _g;
				//line 85 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
				if (((boolean) (thx._OrderedSet.OrderedSet_Impl_.exists(((haxe.root.Array<T>) (set) ), ((T) (item) ))) )) 
				{
					//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
					result.push(item);
				}
				
			}
			
		}
		
		//line 87 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (result) );
	}
	
	
	public static <T> void push(haxe.root.Array<T> this1, T v)
	{
		//line 94 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		thx._OrderedSet.OrderedSet_Impl_.add(((haxe.root.Array<T>) (this1) ), ((T) (v) ));
	}
	
	
	public static <T> void pushMany(haxe.root.Array<T> this1, java.lang.Object values)
	{
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		java.lang.Object tmp = ((java.lang.Object) (haxe.lang.Runtime.callField(values, "iterator", null)) );
		//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
		{
			//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			T value = ((T) (haxe.lang.Runtime.callField(tmp, "next", null)) );
			//line 101 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
			thx._OrderedSet.OrderedSet_Impl_.push(((haxe.root.Array<T>) (this1) ), ((T) (value) ));
		}
		
	}
	
	
	public static <T> haxe.root.Array<T> slice(haxe.root.Array<T> this1, int pos, java.lang.Object end)
	{
		//line 107 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (this1.slice(pos, end)) );
	}
	
	
	public static <T> haxe.root.Array<T> splice(haxe.root.Array<T> this1, int pos, int len)
	{
		//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (this1.splice(pos, len)) );
	}
	
	
	public static <T> haxe.root.Array<T> union(haxe.root.Array<T> this1, haxe.root.Array<T> set)
	{
		//line 119 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<T>) (this1.concat(((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<T>) (set) ))) ))) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> unionArray(haxe.root.Array<T> this1, haxe.root.Array<T> set)
	{
		//line 125 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toOrderedSet(((haxe.root.Array<T>) (this1.concat(set)) ))) );
	}
	
	
	public static <T> haxe.root.Array<T> toArray(haxe.root.Array<T> this1)
	{
		//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return this1.copy();
	}
	
	
	public static <T> haxe.root.Array<T> setToArray(haxe.root.Array<T> this1)
	{
		//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ((haxe.root.Array<T>) (thx._OrderedSet.OrderedSet_Impl_.toArray(((haxe.root.Array<T>) (this1) ))) );
	}
	
	
	public static <T> java.lang.String toString(haxe.root.Array<T> this1)
	{
		//line 144 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/OrderedSet.hx"
		return ( ( "{" + this1.join(", ") ) + "}" );
	}
	
	
}


