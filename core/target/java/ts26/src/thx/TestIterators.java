// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestIterators extends haxe.lang.HxObject
{
	public TestIterators(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestIterators(int i)
	{
		//line 13 "/shared/core/test/thx/TestIterators.hx"
		thx.TestIterators.__hx_ctor_thx_TestIterators(this, i);
	}
	
	
	public static void __hx_ctor_thx_TestIterators(thx.TestIterators __temp_me111, int i)
	{
		//line 14 "/shared/core/test/thx/TestIterators.hx"
		__temp_me111.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		return new thx.TestIterators(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		return new thx.TestIterators(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testEquals()
	{
		//line 18 "/shared/core/test/thx/TestIterators.hx"
		int _g1 = 0;
		//line 18 "/shared/core/test/thx/TestIterators.hx"
		int _g = this.x;
		//line 18 "/shared/core/test/thx/TestIterators.hx"
		while (( _g1 < _g ))
		{
			//line 18 "/shared/core/test/thx/TestIterators.hx"
			 ++ _g1;
			//line 19 "/shared/core/test/thx/TestIterators.hx"
			haxe.root.Array<java.lang.Object> a = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3});
			//line 19 "/shared/core/test/thx/TestIterators.hx"
			haxe.root.Array<java.lang.Object> b = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2});
			//line 19 "/shared/core/test/thx/TestIterators.hx"
			haxe.root.Array<java.lang.Object> c = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 4});
			//line 23 "/shared/core/test/thx/TestIterators.hx"
			utest.Assert.isTrue(((boolean) (thx.Iterators.equals(((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (a) )) ))) ), ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (a) )) ))) ), ((haxe.lang.Function) (null) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestIterators", "TestIterators.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
			//line 24 "/shared/core/test/thx/TestIterators.hx"
			utest.Assert.isFalse(((boolean) (thx.Iterators.equals(((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (a) )) ))) ), ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (b) )) ))) ), ((haxe.lang.Function) (null) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestIterators", "TestIterators.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
			//line 25 "/shared/core/test/thx/TestIterators.hx"
			utest.Assert.isFalse(((boolean) (thx.Iterators.equals(((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (a) )) ))) ), ((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (c) )) ))) ), ((haxe.lang.Function) (null) ))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestIterators", "TestIterators.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		}
		
	}
	
	
	public void testReduce()
	{
		//line 29 "/shared/core/test/thx/TestIterators.hx"
		int _g1 = 0;
		//line 29 "/shared/core/test/thx/TestIterators.hx"
		int _g = this.x;
		//line 29 "/shared/core/test/thx/TestIterators.hx"
		while (( _g1 < _g ))
		{
			//line 29 "/shared/core/test/thx/TestIterators.hx"
			 ++ _g1;
			//line 30 "/shared/core/test/thx/TestIterators.hx"
			haxe.root.Array<java.lang.Object> a = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 3, 5, 7});
			//line 31 "/shared/core/test/thx/TestIterators.hx"
			utest.Assert.equals(17, ((int) (haxe.lang.Runtime.toInt(thx.Iterators.reduce(((java.lang.Object) (new _Array.ArrayIterator<java.lang.Object>(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (a) )) ))) ), ((haxe.lang.Function) (( (( thx.TestIterators_testReduce_31__Fun.__hx_current != null )) ? (thx.TestIterators_testReduce_31__Fun.__hx_current) : (thx.TestIterators_testReduce_31__Fun.__hx_current = ((thx.TestIterators_testReduce_31__Fun) (new thx.TestIterators_testReduce_31__Fun()) )) )) ), ((java.lang.Object) (0) )))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.TestIterators", "TestIterators.hx", "testReduce"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("x")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						this.x = ((int) (value) );
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return value;
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("x")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return value;
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			switch (field.hashCode())
			{
				case 1684861080:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("testReduce")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testReduce")) );
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
				case 120:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("x")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return this.x;
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("testEquals")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEquals")) );
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("x")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						return ((double) (this.x) );
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			switch (field.hashCode())
			{
				case 1684861080:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("testReduce")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						this.testReduce();
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					if (field.equals("testEquals")) 
					{
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						__temp_executeDef1 = false;
						//line 11 "/shared/core/test/thx/TestIterators.hx"
						this.testEquals();
					}
					
					//line 11 "/shared/core/test/thx/TestIterators.hx"
					break;
				}
				
				
			}
			
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/shared/core/test/thx/TestIterators.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		baseArr.push("x");
		//line 11 "/shared/core/test/thx/TestIterators.hx"
		{
			//line 11 "/shared/core/test/thx/TestIterators.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


