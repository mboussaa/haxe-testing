// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_thx_Floats
#include <thx/Floats.h>
#endif
#ifndef INCLUDED_thx_Options
#include <thx/Options.h>
#endif
#ifndef INCLUDED_thx_OrderingImpl
#include <thx/OrderingImpl.h>
#endif
#ifndef INCLUDED_thx_fp_FloatMap
#include <thx/fp/FloatMap.h>
#endif
#ifndef INCLUDED_thx_fp_MapImpl
#include <thx/fp/MapImpl.h>
#endif
#ifndef INCLUDED_thx_fp__Map_Map_Impl_
#include <thx/fp/_Map/Map_Impl_.h>
#endif

namespace thx{
namespace fp{

void FloatMap_obj::__construct() { }

Dynamic FloatMap_obj::__CreateEmpty() { return new FloatMap_obj; }

hx::ObjectPtr< FloatMap_obj > FloatMap_obj::__new()
{
	hx::ObjectPtr< FloatMap_obj > _hx_result = new FloatMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic FloatMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FloatMap_obj > _hx_result = new FloatMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Bool FloatMap_obj::exists(::hx::EnumBase map,Float key){
            	HX_STACK_FRAME("thx.fp.FloatMap","exists",0xdf273890,"thx.fp.FloatMap.exists","thx/fp/Maps.hx",44,0x8274fa8d)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
HXLINE(  44)		::hx::EnumBase _hx_tmp = ::thx::fp::_Map::Map_Impl__obj::lookup(map,key,::thx::Floats_obj::order);
HXDLIN(  44)		return ::thx::Options_obj::toBool(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatMap_obj,exists,return )

::hx::EnumBase FloatMap_obj::get(::hx::EnumBase map,Float key){
            	HX_STACK_FRAME("thx.fp.FloatMap","get",0x771a6d62,"thx.fp.FloatMap.get","thx/fp/Maps.hx",47,0x8274fa8d)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
HXLINE(  47)		return ::thx::fp::_Map::Map_Impl__obj::lookup(map,key,::thx::Floats_obj::order);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatMap_obj,get,return )

 ::Dynamic FloatMap_obj::getAlt(::hx::EnumBase map,Float key, ::Dynamic alt){
            	HX_STACK_FRAME("thx.fp.FloatMap","getAlt",0xc2604ce7,"thx.fp.FloatMap.getAlt","thx/fp/Maps.hx",50,0x8274fa8d)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(alt,"alt")
HXLINE(  50)		::hx::EnumBase _hx_tmp = ::thx::fp::_Map::Map_Impl__obj::lookup(map,key,::thx::Floats_obj::order);
HXDLIN(  50)		return ::thx::Options_obj::getOrElse(_hx_tmp,alt);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatMap_obj,getAlt,return )

::hx::EnumBase FloatMap_obj::set(::hx::EnumBase map,Float key, ::Dynamic value){
            	HX_STACK_FRAME("thx.fp.FloatMap","set",0x7723886e,"thx.fp.FloatMap.set","thx/fp/Maps.hx",53,0x8274fa8d)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(value,"value")
HXLINE(  53)		return ::thx::fp::_Map::Map_Impl__obj::insert(map,key,value,::thx::Floats_obj::order);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FloatMap_obj,set,return )

::hx::EnumBase FloatMap_obj::remove(::hx::EnumBase map,Float key){
            	HX_STACK_FRAME("thx.fp.FloatMap","remove",0x23cfb6f8,"thx.fp.FloatMap.remove","thx/fp/Maps.hx",56,0x8274fa8d)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(key,"key")
HXLINE(  56)		return ::thx::fp::_Map::Map_Impl__obj::_hx_delete(map,key,::thx::Floats_obj::order);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatMap_obj,remove,return )

::hx::EnumBase FloatMap_obj::merge(::hx::EnumBase a,::hx::EnumBase b){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::hx::EnumBase _hx_run(::hx::EnumBase acc, ::Dynamic t){
            			HX_STACK_FRAME("thx.fp.FloatMap","merge",0xb9005a84,"thx.fp.FloatMap.merge","thx/fp/Maps.hx",59,0x8274fa8d)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(t,"t")
HXLINE(  59)			return ::thx::fp::_Map::Map_Impl__obj::insert(acc, ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)),::thx::Floats_obj::order);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp.FloatMap","merge",0xb9005a84,"thx.fp.FloatMap.merge","thx/fp/Maps.hx",59,0x8274fa8d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  59)		return ::thx::fp::_Map::Map_Impl__obj::foldLeftTuples(b,a, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FloatMap_obj,merge,return )


FloatMap_obj::FloatMap_obj()
{
}

bool FloatMap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"merge") ) { outValue = merge_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAlt") ) { outValue = getAlt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FloatMap_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FloatMap_obj_sStaticStorageInfo = 0;
#endif

static void FloatMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FloatMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FloatMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FloatMap_obj::__mClass,"__mClass");
};

#endif

hx::Class FloatMap_obj::__mClass;

static ::String FloatMap_obj_sStaticFields[] = {
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("getAlt","\x33","\x32","\x19","\xa3"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("merge","\xb8","\xa2","\xc6","\x05"),
	::String(null())
};

void FloatMap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp.FloatMap","\x3a","\xf7","\xde","\x32");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FloatMap_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FloatMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FloatMap_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FloatMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FloatMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FloatMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FloatMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace fp
