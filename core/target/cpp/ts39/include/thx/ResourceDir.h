// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_ResourceDir
#define INCLUDED_thx_ResourceDir

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_StaticResource
#include <thx/StaticResource.h>
#endif
HX_DECLARE_CLASS1(thx,ResourceDir)
HX_DECLARE_CLASS1(thx,StaticResource)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES ResourceDir_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ResourceDir_obj OBJ_;
		ResourceDir_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.ResourceDir")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.ResourceDir"); }
		static hx::ObjectPtr< ResourceDir_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ResourceDir_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("ResourceDir","\xff","\xa4","\x91","\x8d"); }

		static void __boot();
		static ::String text;
		static  ::Dynamic object;
};

} // end namespace thx

#endif /* INCLUDED_thx_ResourceDir */ 
