// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_error_ErrorWrapper
#define INCLUDED_thx_error_ErrorWrapper

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
HX_DECLARE_CLASS1(haxe,StackItem)
HX_DECLARE_CLASS1(thx,Error)
HX_DECLARE_CLASS2(thx,error,ErrorWrapper)

namespace thx{
namespace error{


class HXCPP_CLASS_ATTRIBUTES ErrorWrapper_obj : public  ::thx::Error_obj
{
	public:
		typedef  ::thx::Error_obj super;
		typedef ErrorWrapper_obj OBJ_;
		ErrorWrapper_obj();

	public:
		void __construct(::String message, ::Dynamic innerError,::Array< ::Dynamic> stack, ::Dynamic pos);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.error.ErrorWrapper")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.error.ErrorWrapper"); }
		static hx::ObjectPtr< ErrorWrapper_obj > __new(::String message, ::Dynamic innerError,::Array< ::Dynamic> stack, ::Dynamic pos);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ErrorWrapper_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("ErrorWrapper","\x8b","\x06","\xa7","\x86"); }

		 ::Dynamic innerError;
};

} // end namespace thx
} // end namespace error

#endif /* INCLUDED_thx_error_ErrorWrapper */ 
