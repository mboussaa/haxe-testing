// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_ResourceDir
#include <thx/ResourceDir.h>
#endif
#ifndef INCLUDED_thx_StaticResource
#include <thx/StaticResource.h>
#endif

namespace thx{

void ResourceDir_obj::__construct() { }

Dynamic ResourceDir_obj::__CreateEmpty() { return new ResourceDir_obj; }

hx::ObjectPtr< ResourceDir_obj > ResourceDir_obj::__new()
{
	hx::ObjectPtr< ResourceDir_obj > _hx_result = new ResourceDir_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic ResourceDir_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ResourceDir_obj > _hx_result = new ResourceDir_obj();
	_hx_result->__construct();
	return _hx_result;
}

static ::thx::StaticResource_obj _hx_thx_ResourceDir__hx_thx_StaticResource= {
};

void *ResourceDir_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x6cb11300: return &_hx_thx_ResourceDir__hx_thx_StaticResource;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::String ResourceDir_obj::text;

 ::Dynamic ResourceDir_obj::object;


ResourceDir_obj::ResourceDir_obj()
{
}

bool ResourceDir_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { outValue = text; return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"object") ) { outValue = object; return true; }
	}
	return false;
}

bool ResourceDir_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=ioValue.Cast< ::String >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"object") ) { object=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ResourceDir_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ResourceDir_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &ResourceDir_obj::text,HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ResourceDir_obj::object,HX_HCSTRING("object","\xbf","\x7e","\x3f","\x15")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ResourceDir_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ResourceDir_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ResourceDir_obj::text,"text");
	HX_MARK_MEMBER_NAME(ResourceDir_obj::object,"object");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ResourceDir_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ResourceDir_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ResourceDir_obj::text,"text");
	HX_VISIT_MEMBER_NAME(ResourceDir_obj::object,"object");
};

#endif

hx::Class ResourceDir_obj::__mClass;

static ::String ResourceDir_obj_sStaticFields[] = {
	HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c"),
	HX_HCSTRING("object","\xbf","\x7e","\x3f","\x15"),
	::String(null())
};

void ResourceDir_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.ResourceDir","\x15","\x6e","\xa0","\xa8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ResourceDir_obj::__GetStatic;
	__mClass->mSetStaticField = &ResourceDir_obj::__SetStatic;
	__mClass->mMarkFunc = ResourceDir_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ResourceDir_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ResourceDir_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ResourceDir_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ResourceDir_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ResourceDir_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ResourceDir_obj::__boot()
{
{
            	HX_STACK_FRAME("thx.ResourceDir","boot",0x7819992b,"thx.ResourceDir.boot","thx/macro/BuildResource.hx",26,0xef86e250)
HXLINE(  26)		text = HX_("some text\n",91,a8,97,73);
            	}
{
            	HX_STACK_FRAME("thx.ResourceDir","boot",0x7819992b,"thx.ResourceDir.boot","thx/macro/BuildResource.hx",26,0xef86e250)
HXLINE(  26)		object =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("some",f4,22,58,4c),HX_("value",71,7f,b8,31)));
            	}
}

} // end namespace thx
