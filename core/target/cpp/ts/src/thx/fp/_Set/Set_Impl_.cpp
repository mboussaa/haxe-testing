// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_OrderingImpl
#include <thx/OrderingImpl.h>
#endif
#ifndef INCLUDED_thx_fp_ListImpl
#include <thx/fp/ListImpl.h>
#endif
#ifndef INCLUDED_thx_fp_SetImpl
#include <thx/fp/SetImpl.h>
#endif
#ifndef INCLUDED_thx_fp__List_List_Impl_
#include <thx/fp/_List/List_Impl_.h>
#endif
#ifndef INCLUDED_thx_fp__Set_Set_Impl_
#include <thx/fp/_Set/Set_Impl_.h>
#endif

namespace thx{
namespace fp{
namespace _Set{

void Set_Impl__obj::__construct() { }

Dynamic Set_Impl__obj::__CreateEmpty() { return new Set_Impl__obj; }

hx::ObjectPtr< Set_Impl__obj > Set_Impl__obj::__new()
{
	hx::ObjectPtr< Set_Impl__obj > _hx_result = new Set_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Set_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Set_Impl__obj > _hx_result = new Set_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::hx::EnumBase Set_Impl__obj::empty(){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","empty",0xeb8f4c90,"thx.fp._Set.Set_Impl_.empty","thx/fp/Set.hx",7,0x5f85cd56)
HXLINE(   7)		return ::thx::fp::SetImpl_obj::Tip_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Set_Impl__obj,empty,return )

::hx::EnumBase Set_Impl__obj::singleton( ::Dynamic x){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","singleton",0xa259948e,"thx.fp._Set.Set_Impl_.singleton","thx/fp/Set.hx",9,0x5f85cd56)
            	HX_STACK_ARG(x,"x")
HXLINE(   9)		return ::thx::fp::SetImpl_obj::Bin((int)1,x,::thx::fp::SetImpl_obj::Tip_dyn(),::thx::fp::SetImpl_obj::Tip_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,singleton,return )

::hx::EnumBase Set_Impl__obj::bin( ::Dynamic x,::hx::EnumBase l,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","bin",0x4938340a,"thx.fp._Set.Set_Impl_.bin","thx/fp/Set.hx",11,0x5f85cd56)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(r,"r")
HXLINE(  11)		Int _hx_tmp = ::thx::fp::_Set::Set_Impl__obj::size(l);
HXDLIN(  11)		Int _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::size(r);
HXDLIN(  11)		return ::thx::fp::SetImpl_obj::Bin(((_hx_tmp + _hx_tmp1) + (int)1),x,l,r);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,bin,return )

Bool Set_Impl__obj::isEmpty(::hx::EnumBase this1){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","isEmpty",0xacffb706,"thx.fp._Set.Set_Impl_.isEmpty","thx/fp/Set.hx",13,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  13)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  13)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  13)				return true;
            			}
            			break;
            			case (int)1: {
HXLINE(  13)				return false;
            			}
            			break;
            		}
HXDLIN(  13)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,isEmpty,return )

Int Set_Impl__obj::size(::hx::EnumBase this1){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","size",0xd332001e,"thx.fp._Set.Set_Impl_.size","thx/fp/Set.hx",18,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  18)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  18)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  18)				return (int)0;
            			}
            			break;
            			case (int)1: {
HXLINE(  18)				return this1->_hx_getInt(0);
            			}
            			break;
            		}
HXDLIN(  18)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,size,return )

Bool Set_Impl__obj::member(::hx::EnumBase this1, ::Dynamic x, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","member",0xc77092f7,"thx.fp._Set.Set_Impl_.member","thx/fp/Set.hx",23,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  23)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  23)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  23)				return false;
            			}
            			break;
            			case (int)1: {
HXLINE(  25)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  25)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  25)				HX_VARI( ::hx::EnumBase,_g) = comparator(x,this1->_hx_getObject(1));
HXDLIN(  25)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN(  25)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  23)						return ::thx::fp::_Set::Set_Impl__obj::member(l,x,comparator);
            					}
            					break;
            					case (int)1: {
HXLINE(  23)						return ::thx::fp::_Set::Set_Impl__obj::member(r,x,comparator);
            					}
            					break;
            					case (int)2: {
HXLINE(  23)						return true;
            					}
            					break;
            				}
            			}
            			break;
            		}
HXDLIN(  23)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,member,return )

 ::Dynamic Set_Impl__obj::foldLeft(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","foldLeft",0xb24bf685,"thx.fp._Set.Set_Impl_.foldLeft","thx/fp/Set.hx",33,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE(  33)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  33)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  33)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE(  35)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  35)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  35)				 ::Dynamic _hx_tmp1 = f(b,this1->_hx_getObject(1));
HXDLIN(  35)				 ::Dynamic _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::foldLeft(l,_hx_tmp1,f);
HXLINE(  33)				return ::thx::fp::_Set::Set_Impl__obj::foldLeft(r,_hx_tmp2,f);
            			}
            			break;
            		}
HXDLIN(  33)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,foldLeft,return )

::hx::EnumBase Set_Impl__obj::insert(::hx::EnumBase this1, ::Dynamic x, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","insert",0x6097f3d6,"thx.fp._Set.Set_Impl_.insert","thx/fp/Set.hx",38,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  38)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  38)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  38)				return ::thx::fp::SetImpl_obj::Bin((int)1,x,::thx::fp::SetImpl_obj::Tip_dyn(),::thx::fp::SetImpl_obj::Tip_dyn());
            			}
            			break;
            			case (int)1: {
HXLINE(  40)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  40)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  40)				HX_VARI(  ::Dynamic,y) = this1->_hx_getObject(1);
HXDLIN(  40)				HX_VARI( Int,sz) = this1->_hx_getInt(0);
HXDLIN(  40)				HX_VARI( ::hx::EnumBase,_g) = comparator(x,y);
HXDLIN(  40)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN(  40)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  41)						::hx::EnumBase _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::insert(l,x,comparator);
HXLINE(  38)						return ::thx::fp::_Set::Set_Impl__obj::balance(l,y,_hx_tmp2,r);
            					}
            					break;
            					case (int)1: {
HXLINE(  42)						::hx::EnumBase _hx_tmp3 = ::thx::fp::_Set::Set_Impl__obj::insert(r,x,comparator);
HXLINE(  38)						return ::thx::fp::_Set::Set_Impl__obj::balance(r,y,l,_hx_tmp3);
            					}
            					break;
            					case (int)2: {
HXLINE(  38)						return ::thx::fp::SetImpl_obj::Bin(sz,x,l,r);
            					}
            					break;
            				}
            			}
            			break;
            		}
HXDLIN(  38)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,insert,return )

::hx::EnumBase Set_Impl__obj::mapList(::hx::EnumBase this1, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","mapList",0xcd4ea9dd,"thx.fp._Set.Set_Impl_.mapList","thx/fp/Set.hx",47,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE(  47)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  47)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  47)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  50)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  50)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXLINE(  51)				HX_VARI(  ::Dynamic,x) = f(this1->_hx_getObject(1));
HXDLIN(  51)				::hx::EnumBase _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::mapList(l,f);
HXDLIN(  51)				::hx::EnumBase _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::mapList(r,f);
HXDLIN(  51)				HX_VARI( ::hx::EnumBase,xs) = ::thx::fp::_List::List_Impl__obj::concat(_hx_tmp1,_hx_tmp2);
HXLINE(  47)				return ::thx::fp::ListImpl_obj::Cons(x,xs);
            			}
            			break;
            		}
HXDLIN(  47)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Set_Impl__obj,mapList,return )

Int Set_Impl__obj::delta;

Int Set_Impl__obj::ratio;

::hx::EnumBase Set_Impl__obj::balance(::hx::EnumBase this1, ::Dynamic x,::hx::EnumBase l,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","balance",0xc42d75df,"thx.fp._Set.Set_Impl_.balance","thx/fp/Set.hx",57,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(r,"r")
HXLINE(  58)		HX_VARI( Int,sl) = ::thx::fp::_Set::Set_Impl__obj::size(l);
HXDLIN(  58)		HX_VARI( Int,sr) = ::thx::fp::_Set::Set_Impl__obj::size(r);
HXDLIN(  58)		HX_VARI( Int,sx) = ((sl + sr) + (int)1);
HXLINE(  61)		if (((sl + sr) <= (int)1)) {
HXLINE(  62)			return ::thx::fp::SetImpl_obj::Bin(sx,x,l,r);
            		}
            		else {
HXLINE(  63)			if ((sr >= ((int)4 * sl))) {
HXLINE(  64)				return ::thx::fp::_Set::Set_Impl__obj::rotateLeft(x,l,r);
            			}
            			else {
HXLINE(  65)				if ((sl >= ((int)4 * sr))) {
HXLINE(  66)					return ::thx::fp::_Set::Set_Impl__obj::rotateRight(x,l,r);
            				}
            				else {
HXLINE(  68)					return ::thx::fp::SetImpl_obj::Bin(sx,x,l,r);
            				}
            			}
            		}
HXLINE(  61)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Set_Impl__obj,balance,return )

::hx::EnumBase Set_Impl__obj::rotateLeft( ::Dynamic x,::hx::EnumBase l,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","rotateLeft",0x1377071f,"thx.fp._Set.Set_Impl_.rotateLeft","thx/fp/Set.hx",73,0x5f85cd56)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(r,"r")
HXLINE(  73)		Int _hx_tmp = ( ( ::hx::EnumBase)(r) )->_hx_getIndex();
HXDLIN(  73)		if ((_hx_tmp == (int)1)) {
HXLINE(  74)			HX_VARI( ::hx::EnumBase,ry) = r->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  74)			HX_VARI( ::hx::EnumBase,ly) = r->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  74)			Int _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::size(ly);
HXDLIN(  74)			Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(ry);
HXDLIN(  74)			if ((_hx_tmp1 < ((int)4 * _hx_tmp2))) {
HXLINE(  73)				return ::thx::fp::_Set::Set_Impl__obj::singleLeft(x,l,r);
            			}
            			else {
HXLINE(  73)				return ::thx::fp::_Set::Set_Impl__obj::doubleLeft(x,l,r);
            			}
            		}
            		else {
HXLINE(  73)			return ::thx::fp::_Set::Set_Impl__obj::doubleLeft(x,l,r);
            		}
HXDLIN(  73)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,rotateLeft,return )

::hx::EnumBase Set_Impl__obj::rotateRight( ::Dynamic x,::hx::EnumBase l,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","rotateRight",0x6bbc41c4,"thx.fp._Set.Set_Impl_.rotateRight","thx/fp/Set.hx",81,0x5f85cd56)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(r,"r")
HXLINE(  81)		Int _hx_tmp = ( ( ::hx::EnumBase)(l) )->_hx_getIndex();
HXDLIN(  81)		if ((_hx_tmp == (int)1)) {
HXLINE(  82)			HX_VARI( ::hx::EnumBase,ry) = l->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  82)			HX_VARI( ::hx::EnumBase,ly) = l->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  82)			Int _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::size(ry);
HXDLIN(  82)			Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(ly);
HXDLIN(  82)			if ((_hx_tmp1 < ((int)4 * _hx_tmp2))) {
HXLINE(  81)				return ::thx::fp::_Set::Set_Impl__obj::singleRight(x,l,r);
            			}
            			else {
HXLINE(  81)				return ::thx::fp::_Set::Set_Impl__obj::doubleRight(x,l,r);
            			}
            		}
            		else {
HXLINE(  81)			return ::thx::fp::_Set::Set_Impl__obj::doubleRight(x,l,r);
            		}
HXDLIN(  81)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,rotateRight,return )

::hx::EnumBase Set_Impl__obj::singleLeft( ::Dynamic x1,::hx::EnumBase t1,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","singleLeft",0x519041cc,"thx.fp._Set.Set_Impl_.singleLeft","thx/fp/Set.hx",89,0x5f85cd56)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(t1,"t1")
            	HX_STACK_ARG(r,"r")
HXLINE(  89)		Int _hx_tmp = ( ( ::hx::EnumBase)(r) )->_hx_getIndex();
HXDLIN(  89)		if ((_hx_tmp == (int)1)) {
HXLINE(  90)			HX_VARI( ::hx::EnumBase,t3) = r->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  90)			HX_VARI( ::hx::EnumBase,t2) = r->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  90)			HX_VARI(  ::Dynamic,x2) = r->_hx_getObject(1);
HXDLIN(  90)			Int _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::size(t1);
HXDLIN(  90)			Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(t2);
HXDLIN(  90)			HX_VARI( ::hx::EnumBase,l) = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp1 + _hx_tmp2) + (int)1),x1,t1,t2);
HXDLIN(  90)			Int _hx_tmp3 = ::thx::fp::_Set::Set_Impl__obj::size(l);
HXDLIN(  90)			Int _hx_tmp4 = ::thx::fp::_Set::Set_Impl__obj::size(t3);
HXLINE(  89)			return ::thx::fp::SetImpl_obj::Bin(((_hx_tmp3 + _hx_tmp4) + (int)1),x2,l,t3);
            		}
            		else {
HXLINE(  91)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),91,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("singleLeft",af,7e,d4,bd))));
            		}
HXLINE(  89)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,singleLeft,return )

::hx::EnumBase Set_Impl__obj::singleRight( ::Dynamic x1,::hx::EnumBase l,::hx::EnumBase t3){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","singleRight",0x83b65e77,"thx.fp._Set.Set_Impl_.singleRight","thx/fp/Set.hx",95,0x5f85cd56)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(t3,"t3")
HXLINE(  95)		Int _hx_tmp = ( ( ::hx::EnumBase)(l) )->_hx_getIndex();
HXDLIN(  95)		if ((_hx_tmp == (int)1)) {
HXLINE(  96)			HX_VARI( ::hx::EnumBase,t2) = l->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  96)			HX_VARI( ::hx::EnumBase,t1) = l->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN(  96)			HX_VARI(  ::Dynamic,x2) = l->_hx_getObject(1);
HXDLIN(  96)			Int _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::size(t2);
HXDLIN(  96)			Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(t3);
HXDLIN(  96)			HX_VARI( ::hx::EnumBase,r) = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp1 + _hx_tmp2) + (int)1),x1,t2,t3);
HXDLIN(  96)			Int _hx_tmp3 = ::thx::fp::_Set::Set_Impl__obj::size(t1);
HXDLIN(  96)			Int _hx_tmp4 = ::thx::fp::_Set::Set_Impl__obj::size(r);
HXLINE(  95)			return ::thx::fp::SetImpl_obj::Bin(((_hx_tmp3 + _hx_tmp4) + (int)1),x2,t1,r);
            		}
            		else {
HXLINE(  97)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),97,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("singleRight",34,68,27,d3))));
            		}
HXLINE(  95)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,singleRight,return )

::hx::EnumBase Set_Impl__obj::doubleLeft( ::Dynamic x1,::hx::EnumBase t1,::hx::EnumBase r){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","doubleLeft",0xbf517ed5,"thx.fp._Set.Set_Impl_.doubleLeft","thx/fp/Set.hx",101,0x5f85cd56)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(t1,"t1")
            	HX_STACK_ARG(r,"r")
HXLINE( 101)		Int _hx_tmp = ( ( ::hx::EnumBase)(r) )->_hx_getIndex();
HXDLIN( 101)		if ((_hx_tmp == (int)1)) {
HXLINE( 101)			Int _hx_tmp1 = ( ( ::hx::EnumBase)(r->_hx_getObject(2).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 101)			if ((_hx_tmp1 == (int)1)) {
HXLINE( 102)				HX_VARI( ::hx::EnumBase,t4) = r->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 102)				HX_VARI(  ::Dynamic,x2) = r->_hx_getObject(1);
HXDLIN( 102)				HX_VARI( ::hx::EnumBase,t3) = r->_hx_getObject(2).StaticCast< ::hx::EnumBase >()->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 102)				HX_VARI( ::hx::EnumBase,t2) = r->_hx_getObject(2).StaticCast< ::hx::EnumBase >()->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 102)				HX_VARI(  ::Dynamic,x3) = r->_hx_getObject(2).StaticCast< ::hx::EnumBase >()->_hx_getObject(1);
HXLINE( 103)				Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(t1);
HXDLIN( 103)				Int _hx_tmp3 = ::thx::fp::_Set::Set_Impl__obj::size(t2);
HXDLIN( 103)				HX_VARI( ::hx::EnumBase,l) = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp2 + _hx_tmp3) + (int)1),x1,t1,t2);
HXDLIN( 103)				Int _hx_tmp4 = ::thx::fp::_Set::Set_Impl__obj::size(t3);
HXDLIN( 103)				Int _hx_tmp5 = ::thx::fp::_Set::Set_Impl__obj::size(t4);
HXDLIN( 103)				HX_VARI_NAME( ::hx::EnumBase,r1,"r") = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp4 + _hx_tmp5) + (int)1),x2,t3,t4);
HXDLIN( 103)				Int _hx_tmp6 = ::thx::fp::_Set::Set_Impl__obj::size(l);
HXDLIN( 103)				Int _hx_tmp7 = ::thx::fp::_Set::Set_Impl__obj::size(r1);
HXLINE( 101)				return ::thx::fp::SetImpl_obj::Bin(((_hx_tmp6 + _hx_tmp7) + (int)1),x3,l,r1);
            			}
            			else {
HXLINE( 104)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),104,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("doubleLeft",b8,bb,95,2b))));
            			}
            		}
            		else {
HXLINE( 104)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),104,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("doubleLeft",b8,bb,95,2b))));
            		}
HXLINE( 101)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,doubleLeft,return )

::hx::EnumBase Set_Impl__obj::doubleRight( ::Dynamic x1,::hx::EnumBase l,::hx::EnumBase t4){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","doubleRight",0x1f0a894e,"thx.fp._Set.Set_Impl_.doubleRight","thx/fp/Set.hx",108,0x5f85cd56)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(l,"l")
            	HX_STACK_ARG(t4,"t4")
HXLINE( 108)		Int _hx_tmp = ( ( ::hx::EnumBase)(l) )->_hx_getIndex();
HXDLIN( 108)		if ((_hx_tmp == (int)1)) {
HXLINE( 108)			Int _hx_tmp1 = ( ( ::hx::EnumBase)(l->_hx_getObject(3).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 108)			if ((_hx_tmp1 == (int)1)) {
HXLINE( 109)				HX_VARI(  ::Dynamic,x2) = l->_hx_getObject(1);
HXDLIN( 109)				HX_VARI( ::hx::EnumBase,t1) = l->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 109)				HX_VARI( ::hx::EnumBase,t3) = l->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 109)				HX_VARI( ::hx::EnumBase,t2) = l->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 109)				HX_VARI(  ::Dynamic,x3) = l->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(1);
HXLINE( 110)				Int _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::size(t1);
HXDLIN( 110)				Int _hx_tmp3 = ::thx::fp::_Set::Set_Impl__obj::size(t2);
HXDLIN( 110)				HX_VARI_NAME( ::hx::EnumBase,l1,"l") = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp2 + _hx_tmp3) + (int)1),x2,t1,t2);
HXDLIN( 110)				Int _hx_tmp4 = ::thx::fp::_Set::Set_Impl__obj::size(t3);
HXDLIN( 110)				Int _hx_tmp5 = ::thx::fp::_Set::Set_Impl__obj::size(t4);
HXDLIN( 110)				HX_VARI( ::hx::EnumBase,r) = ::thx::fp::SetImpl_obj::Bin(((_hx_tmp4 + _hx_tmp5) + (int)1),x1,t3,t4);
HXDLIN( 110)				Int _hx_tmp6 = ::thx::fp::_Set::Set_Impl__obj::size(l1);
HXDLIN( 110)				Int _hx_tmp7 = ::thx::fp::_Set::Set_Impl__obj::size(r);
HXLINE( 108)				return ::thx::fp::SetImpl_obj::Bin(((_hx_tmp6 + _hx_tmp7) + (int)1),x3,l1,r);
            			}
            			else {
HXLINE( 111)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),111,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("doubleRight",0b,93,7b,6e))));
            			}
            		}
            		else {
HXLINE( 111)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Set.hx",7c,8c,e7,a3),111,HX_("thx.fp._Set.Set_Impl_",31,3e,ec,b5),HX_("doubleRight",0b,93,7b,6e))));
            		}
HXLINE( 108)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Set_Impl__obj,doubleRight,return )

::hx::EnumBase Set_Impl__obj::toList(::hx::EnumBase this1){
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","toList",0x40273816,"thx.fp._Set.Set_Impl_.toList","thx/fp/Set.hx",114,0x5f85cd56)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 114)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN( 114)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 114)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE( 117)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 117)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(2).StaticCast< ::hx::EnumBase >();
HXDLIN( 117)				HX_VARI(  ::Dynamic,x) = this1->_hx_getObject(1);
HXLINE( 118)				::hx::EnumBase _hx_tmp1 = ::thx::fp::_Set::Set_Impl__obj::toList(l);
HXDLIN( 118)				::hx::EnumBase _hx_tmp2 = ::thx::fp::_Set::Set_Impl__obj::toList(r);
HXDLIN( 118)				HX_VARI( ::hx::EnumBase,xs) = ::thx::fp::_List::List_Impl__obj::concat(_hx_tmp1,_hx_tmp2);
HXLINE( 114)				return ::thx::fp::ListImpl_obj::Cons(x,xs);
            			}
            			break;
            		}
HXDLIN( 114)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Set_Impl__obj,toList,return )


Set_Impl__obj::Set_Impl__obj()
{
}

bool Set_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bin") ) { outValue = bin_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"size") ) { outValue = size_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"member") ) { outValue = member_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insert") ) { outValue = insert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toList") ) { outValue = toList_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isEmpty") ) { outValue = isEmpty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mapList") ) { outValue = mapList_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"balance") ) { outValue = balance_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"foldLeft") ) { outValue = foldLeft_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"singleton") ) { outValue = singleton_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"rotateLeft") ) { outValue = rotateLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"singleLeft") ) { outValue = singleLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"doubleLeft") ) { outValue = doubleLeft_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"rotateRight") ) { outValue = rotateRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"singleRight") ) { outValue = singleRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"doubleRight") ) { outValue = doubleRight_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Set_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Set_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Set_Impl__obj::delta,HX_HCSTRING("delta","\xf8","\xe7","\x26","\xd7")},
	{hx::fsInt,(void *) &Set_Impl__obj::ratio,HX_HCSTRING("ratio","\x0b","\x35","\x24","\xe4")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Set_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Set_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Set_Impl__obj::delta,"delta");
	HX_MARK_MEMBER_NAME(Set_Impl__obj::ratio,"ratio");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Set_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Set_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Set_Impl__obj::delta,"delta");
	HX_VISIT_MEMBER_NAME(Set_Impl__obj::ratio,"ratio");
};

#endif

hx::Class Set_Impl__obj::__mClass;

static ::String Set_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("singleton","\x0b","\xc5","\x7f","\xb7"),
	HX_HCSTRING("bin","\xc7","\xb8","\x4a","\x00"),
	HX_HCSTRING("isEmpty","\x43","\xde","\x5f","\x0c"),
	HX_HCSTRING("size","\xc1","\xa0","\x53","\x4c"),
	HX_HCSTRING("member","\x5a","\xe2","\xb5","\x04"),
	HX_HCSTRING("foldLeft","\xa8","\x24","\x0e","\xc7"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("mapList","\x1a","\xd1","\xae","\x2c"),
	HX_HCSTRING("delta","\xf8","\xe7","\x26","\xd7"),
	HX_HCSTRING("ratio","\x0b","\x35","\x24","\xe4"),
	HX_HCSTRING("balance","\x1c","\x9d","\x8d","\x23"),
	HX_HCSTRING("rotateLeft","\x02","\x44","\xbb","\x7f"),
	HX_HCSTRING("rotateRight","\x81","\x4b","\x2d","\xbb"),
	HX_HCSTRING("singleLeft","\xaf","\x7e","\xd4","\xbd"),
	HX_HCSTRING("singleRight","\x34","\x68","\x27","\xd3"),
	HX_HCSTRING("doubleLeft","\xb8","\xbb","\x95","\x2b"),
	HX_HCSTRING("doubleRight","\x0b","\x93","\x7b","\x6e"),
	HX_HCSTRING("toList","\x79","\x87","\x6c","\x7d"),
	::String(null())
};

void Set_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp._Set.Set_Impl_","\x31","\x3e","\xec","\xb5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Set_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Set_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Set_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Set_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Set_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Set_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Set_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Set_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","boot",0xc7f9e38f,"thx.fp._Set.Set_Impl_.boot","thx/fp/Set.hx",55,0x5f85cd56)
HXLINE(  55)		delta = (int)4;
            	}
{
            	HX_STACK_FRAME("thx.fp._Set.Set_Impl_","boot",0xc7f9e38f,"thx.fp._Set.Set_Impl_.boot","thx/fp/Set.hx",56,0x5f85cd56)
HXLINE(  56)		ratio = (int)4;
            	}
}

} // end namespace thx
} // end namespace fp
} // end namespace _Set
