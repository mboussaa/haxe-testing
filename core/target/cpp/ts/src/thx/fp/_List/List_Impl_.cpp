// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_Functions2
#include <thx/Functions2.h>
#endif
#ifndef INCLUDED_thx__Monoid_Monoid_Impl_
#include <thx/_Monoid/Monoid_Impl_.h>
#endif
#ifndef INCLUDED_thx_fp_ListImpl
#include <thx/fp/ListImpl.h>
#endif
#ifndef INCLUDED_thx_fp__List_List_Impl_
#include <thx/fp/_List/List_Impl_.h>
#endif

namespace thx{
namespace fp{
namespace _List{

void List_Impl__obj::__construct() { }

Dynamic List_Impl__obj::__CreateEmpty() { return new List_Impl__obj; }

hx::ObjectPtr< List_Impl__obj > List_Impl__obj::__new()
{
	hx::ObjectPtr< List_Impl__obj > _hx_result = new List_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic List_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< List_Impl__obj > _hx_result = new List_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::hx::EnumBase List_Impl__obj::empty(){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","empty",0xaad2db28,"thx.fp._List.List_Impl_.empty","thx/fp/List.hx",9,0x46975ae6)
HXLINE(   9)		return ::thx::fp::ListImpl_obj::Nil_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(List_Impl__obj,empty,return )

::hx::EnumBase List_Impl__obj::bin( ::Dynamic x,::hx::EnumBase xs){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","bin",0xc50a6ca2,"thx.fp._List.List_Impl_.bin","thx/fp/List.hx",12,0x46975ae6)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(xs,"xs")
HXLINE(  12)		return ::thx::fp::ListImpl_obj::Cons(x,xs);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,bin,return )

::hx::EnumBase List_Impl__obj::singleton( ::Dynamic x){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","singleton",0x2a644f26,"thx.fp._List.List_Impl_.singleton","thx/fp/List.hx",15,0x46975ae6)
            	HX_STACK_ARG(x,"x")
HXLINE(  15)		return ::thx::fp::ListImpl_obj::Cons(x,::thx::fp::ListImpl_obj::Nil_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(List_Impl__obj,singleton,return )

::hx::EnumBase List_Impl__obj::fromArray(::cpp::VirtualArray arr){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,_e) HXARGC(2)
            		::hx::EnumBase _hx_run( ::Dynamic f,::hx::EnumBase initial){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","fromArray",0x4cfce1ea,"thx.fp._List.List_Impl_.fromArray","thx/fp/List.hx",19,0x46975ae6)
            			HX_STACK_ARG(f,"f")
            			HX_STACK_ARG(initial,"initial")
HXLINE(  19)			HX_VARI_NAME( ::hx::EnumBase,initial1,"initial") = initial;
HXDLIN(  19)			HX_VARI( Int,i) = _e->get_length();
HXDLIN(  19)			while(true){
HXLINE( 787)				Int _hx_tmp1 = --i;
HXLINE(  19)				if (!((_hx_tmp1 >= (int)0))) {
HXLINE(  19)					goto _hx_goto_0;
            				}
HXDLIN(  19)				initial1 = f(initial1,_e->__get(i));
            			}
            			_hx_goto_0:;
HXDLIN(  19)			return initial1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(2)
            		::hx::EnumBase _hx_run(::hx::EnumBase _0, ::Dynamic _1){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","fromArray",0x4cfce1ea,"thx.fp._List.List_Impl_.fromArray","thx/macro/lambda/SlambdaMacro.hx",86,0x8ba75432)
            			HX_STACK_ARG(_0,"_0")
            			HX_STACK_ARG(_1,"_1")
HXLINE(  86)			return ::thx::fp::ListImpl_obj::Cons(_1,_0);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","fromArray",0x4cfce1ea,"thx.fp._List.List_Impl_.fromArray","thx/fp/List.hx",19,0x46975ae6)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  19)		HX_VARI( ::cpp::VirtualArray,_e) = arr;
HXDLIN(  19)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_0(_e));
HXDLIN(  19)		return _hx_tmp( ::Dynamic(new _hx_Closure_1()),::thx::fp::ListImpl_obj::Nil_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(List_Impl__obj,fromArray,return )

 ::Dynamic List_Impl__obj::foldLeft(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","foldLeft",0xdfad96ed,"thx.fp._List.List_Impl_.foldLeft","thx/fp/List.hx",22,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE(  22)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  22)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  22)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE(  24)				HX_VARI( ::hx::EnumBase,xs) = this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  24)				 ::Dynamic _hx_tmp1 = f(b,this1->_hx_getObject(0));
HXLINE(  22)				return ::thx::fp::_List::List_Impl__obj::foldLeft(xs,_hx_tmp1,f);
            			}
            			break;
            		}
HXDLIN(  22)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(List_Impl__obj,foldLeft,return )

 ::Dynamic List_Impl__obj::foldMap(::hx::EnumBase this1, ::Dynamic f, ::Dynamic m){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,_e) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic a0, ::Dynamic a1){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","foldMap",0xc79b5a76,"thx.fp._List.List_Impl_.foldMap","thx/fp/List.hx",28,0x46975ae6)
            			HX_STACK_ARG(a0,"a0")
            			HX_STACK_ARG(a1,"a1")
HXLINE(  28)			return ::thx::_Monoid::Monoid_Impl__obj::append(_e,a0,a1);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","foldMap",0xc79b5a76,"thx.fp._List.List_Impl_.foldMap","thx/fp/List.hx",28,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(m,"m")
HXLINE(  28)		::hx::EnumBase _hx_tmp = ::thx::fp::_List::List_Impl__obj::map(this1,f);
HXDLIN(  28)		 ::Dynamic _hx_tmp1 = ::thx::_Monoid::Monoid_Impl__obj::get_zero(m);
HXDLIN(  28)		HX_VARI(  ::Dynamic,_e) = m;
HXDLIN(  28)		 ::Dynamic _hx_tmp2 =  ::Dynamic(new _hx_Closure_0(_e));
HXDLIN(  28)		return ::thx::fp::_List::List_Impl__obj::foldLeft(_hx_tmp,_hx_tmp1,_hx_tmp2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(List_Impl__obj,foldMap,return )

::hx::EnumBase List_Impl__obj::flatMap(::hx::EnumBase this1, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","flatMap",0x49b44dbe,"thx.fp._List.List_Impl_.flatMap","thx/fp/List.hx",31,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE(  31)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  31)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  31)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  33)				HX_VARI( ::hx::EnumBase,xs) = this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  33)				::hx::EnumBase _hx_tmp1 = f(this1->_hx_getObject(0));
HXDLIN(  33)				::hx::EnumBase _hx_tmp2 = ::thx::fp::_List::List_Impl__obj::flatMap(xs,f);
HXLINE(  31)				return ::thx::fp::_List::List_Impl__obj::concat(_hx_tmp1,_hx_tmp2);
            			}
            			break;
            		}
HXDLIN(  31)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,flatMap,return )

::hx::EnumBase List_Impl__obj::concat(::hx::EnumBase this1,::hx::EnumBase that){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","concat",0x2663f019,"thx.fp._List.List_Impl_.concat","thx/fp/List.hx",37,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  37)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  37)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  37)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(that) )->_hx_getIndex();
HXDLIN(  37)				if ((_hx_tmp1 == (int)0)) {
HXLINE(  37)					return ::thx::fp::ListImpl_obj::Nil_dyn();
            				}
            				else {
HXLINE(  37)					return that;
            				}
            			}
            			break;
            			case (int)1: {
HXLINE(  37)				Int _hx_tmp2 = ( ( ::hx::EnumBase)(that) )->_hx_getIndex();
HXDLIN(  37)				if ((_hx_tmp2 == (int)0)) {
HXLINE(  40)					HX_VARI( ::hx::EnumBase,l) = this1;
HXLINE(  37)					return l;
            				}
            				else {
HXLINE(  37)					Int _hx_tmp3 = ( ( ::hx::EnumBase)(this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN(  37)					if ((_hx_tmp3 == (int)0)) {
HXLINE(  37)						return ::thx::fp::ListImpl_obj::Cons(this1->_hx_getObject(0),that);
            					}
            					else {
HXLINE(  43)						HX_VARI(  ::Dynamic,x) = this1->_hx_getObject(0);
HXLINE(  44)						::hx::EnumBase _hx_tmp4 = ::thx::fp::_List::List_Impl__obj::concat(this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >(),that);
HXLINE(  37)						return ::thx::fp::ListImpl_obj::Cons(x,_hx_tmp4);
            					}
            				}
            			}
            			break;
            		}
HXDLIN(  37)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,concat,return )

::hx::EnumBase List_Impl__obj::prepend(::hx::EnumBase this1, ::Dynamic x){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","prepend",0x9ab6d469,"thx.fp._List.List_Impl_.prepend","thx/fp/List.hx",48,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(x,"x")
HXLINE(  48)		return ::thx::fp::ListImpl_obj::Cons(x,this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,prepend,return )

::cpp::VirtualArray List_Impl__obj::toArray(::hx::EnumBase this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc, ::Dynamic a){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","toArray",0x54e9f779,"thx.fp._List.List_Impl_.toArray","thx/fp/List.hx",52,0x46975ae6)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(a,"a")
HXLINE(  53)			acc->push(a);
HXLINE(  54)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","toArray",0x54e9f779,"thx.fp._List.List_Impl_.toArray","thx/fp/List.hx",52,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  52)		return ( (::cpp::VirtualArray)(::thx::fp::_List::List_Impl__obj::foldLeft(this1,::cpp::VirtualArray_obj::__new(0), ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(List_Impl__obj,toArray,return )

::hx::EnumBase List_Impl__obj::intersperse(::hx::EnumBase this1, ::Dynamic a){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a,::Array< ::Dynamic>,go) HXARGC(1)
            		::hx::EnumBase _hx_run(::hx::EnumBase ls){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","intersperse",0x3dc76c53,"thx.fp._List.List_Impl_.intersperse","thx/fp/List.hx",58,0x46975ae6)
            			HX_STACK_ARG(ls,"ls")
HXLINE(  58)			Int _hx_tmp = ( ( ::hx::EnumBase)(ls) )->_hx_getIndex();
HXDLIN(  58)			switch((int)(_hx_tmp)){
            				case (int)0: {
HXLINE(  58)					return ::thx::fp::ListImpl_obj::Nil_dyn();
            				}
            				break;
            				case (int)1: {
HXLINE(  59)					HX_VARI( ::hx::EnumBase,xs) = ls->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  59)					HX_VARI(  ::Dynamic,x) = ls->_hx_getObject(0);
HXLINE(  60)					::hx::EnumBase _hx_tmp1 = go->__get((int)0)(xs);
HXDLIN(  60)					::hx::EnumBase _hx_tmp2 = ::thx::fp::ListImpl_obj::Cons(x,_hx_tmp1);
HXLINE(  58)					return ::thx::fp::ListImpl_obj::Cons(a,_hx_tmp2);
            				}
            				break;
            			}
HXDLIN(  58)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","intersperse",0x3dc76c53,"thx.fp._List.List_Impl_.intersperse","thx/fp/List.hx",57,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE(  58)		HX_VARI( ::Array< ::Dynamic>,go) = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN(  58)		go[(int)0] =  ::Dynamic(new _hx_Closure_0(a,go));
HXDLIN(  58)		HX_VARI_NAME(  ::Dynamic,go1,"go") = go->__get((int)0);
HXLINE(  65)		Int _hx_tmp3 = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  65)		switch((int)(_hx_tmp3)){
            			case (int)0: {
HXLINE(  65)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  67)				HX_VARI_NAME( ::hx::EnumBase,xs1,"xs") = this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  67)				HX_VARI_NAME(  ::Dynamic,x1,"x") = this1->_hx_getObject(0);
HXDLIN(  67)				::hx::EnumBase _hx_tmp4 = go1(xs1);
HXLINE(  65)				return ::thx::fp::ListImpl_obj::Cons(x1,_hx_tmp4);
            			}
            			break;
            		}
HXDLIN(  65)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,intersperse,return )

::hx::EnumBase List_Impl__obj::map(::hx::EnumBase this1, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","map",0xc512be77,"thx.fp._List.List_Impl_.map","thx/fp/List.hx",72,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE(  72)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  72)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  72)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  74)				HX_VARI( ::hx::EnumBase,xs) = this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  74)				 ::Dynamic _hx_tmp1 = f(this1->_hx_getObject(0));
HXDLIN(  74)				::hx::EnumBase _hx_tmp2 = ::thx::fp::_List::List_Impl__obj::map(xs,f);
HXLINE(  72)				return ::thx::fp::ListImpl_obj::Cons(_hx_tmp1,_hx_tmp2);
            			}
            			break;
            		}
HXDLIN(  72)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,map,return )

::hx::EnumBase List_Impl__obj::zipAp(::hx::EnumBase this1,::hx::EnumBase other){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","zipAp",0xbf9802cb,"thx.fp._List.List_Impl_.zipAp","thx/fp/List.hx",78,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  78)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  78)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  78)				return ::thx::fp::ListImpl_obj::Nil_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  80)				HX_VARI( ::hx::EnumBase,xs) = this1->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  80)				HX_VARI(  ::Dynamic,x) = this1->_hx_getObject(0);
HXLINE(  81)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(other) )->_hx_getIndex();
HXDLIN(  81)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  78)						return ::thx::fp::ListImpl_obj::Nil_dyn();
            					}
            					break;
            					case (int)1: {
HXLINE(  83)						HX_VARI( ::hx::EnumBase,ys) = other->_hx_getObject(1).StaticCast< ::hx::EnumBase >();
HXDLIN(  83)						HX_VARI(  ::Dynamic,y) = other->_hx_getObject(0);
HXDLIN(  83)						 ::Dynamic _hx_tmp2 = y(x);
HXDLIN(  83)						::hx::EnumBase _hx_tmp3 = ::thx::fp::_List::List_Impl__obj::zipAp(xs,ys);
HXLINE(  78)						return ::thx::fp::ListImpl_obj::Cons(_hx_tmp2,_hx_tmp3);
            					}
            					break;
            				}
            			}
            			break;
            		}
HXDLIN(  78)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,zipAp,return )

::hx::EnumBase List_Impl__obj::zip2Ap( ::Dynamic f,::hx::EnumBase ax,::hx::EnumBase bx){
            	HX_STACK_FRAME("thx.fp._List.List_Impl_","zip2Ap",0xe55ee485,"thx.fp._List.List_Impl_.zip2Ap","thx/fp/List.hx",91,0x46975ae6)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
HXLINE(  91)		 ::Dynamic _hx_tmp = ::thx::Functions2_obj::curry(f);
HXDLIN(  91)		::hx::EnumBase _hx_tmp1 = ::thx::fp::_List::List_Impl__obj::map(ax,_hx_tmp);
HXDLIN(  91)		return ::thx::fp::_List::List_Impl__obj::zipAp(bx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(List_Impl__obj,zip2Ap,return )

::hx::EnumBase List_Impl__obj::zip3Ap( ::Dynamic f,::hx::EnumBase ax,::hx::EnumBase bx,::hx::EnumBase cx){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b){
            			HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,b, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic c){
            				HX_STACK_FRAME("thx.fp._List.List_Impl_","zip3Ap",0xe55fa6c6,"thx.fp._List.List_Impl_.zip3Ap","thx/fp/List.hx",97,0x46975ae6)
            				HX_STACK_ARG(c,"c")
HXLINE(  97)				return f1(a,b,c);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.fp._List.List_Impl_","zip3Ap",0xe55fa6c6,"thx.fp._List.List_Impl_.zip3Ap","thx/fp/List.hx",97,0x46975ae6)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE(  97)			return  ::Dynamic(new _hx_Closure_0(a,b,f1));
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","zip3Ap",0xe55fa6c6,"thx.fp._List.List_Impl_.zip3Ap","thx/fp/List.hx",97,0x46975ae6)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
HXLINE(  97)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN(  97)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN(  97)		::hx::EnumBase _hx_tmp1 = ::thx::fp::_List::List_Impl__obj::zip2Ap(_hx_tmp,ax,bx);
HXDLIN(  97)		return ::thx::fp::_List::List_Impl__obj::zipAp(cx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(List_Impl__obj,zip3Ap,return )

::hx::EnumBase List_Impl__obj::zip4Ap( ::Dynamic f,::hx::EnumBase ax,::hx::EnumBase bx,::hx::EnumBase cx,::hx::EnumBase dx){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(3)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b, ::Dynamic c){
            			HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,b, ::Dynamic,c, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic d){
            				HX_STACK_FRAME("thx.fp._List.List_Impl_","zip4Ap",0xe5606907,"thx.fp._List.List_Impl_.zip4Ap","thx/fp/List.hx",103,0x46975ae6)
            				HX_STACK_ARG(d,"d")
HXLINE( 103)				return f1(a,b,c,d);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.fp._List.List_Impl_","zip4Ap",0xe5606907,"thx.fp._List.List_Impl_.zip4Ap","thx/fp/List.hx",103,0x46975ae6)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
            			HX_STACK_ARG(c,"c")
HXLINE( 103)			return  ::Dynamic(new _hx_Closure_0(a,b,c,f1));
            		}
            		HX_END_LOCAL_FUNC3(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","zip4Ap",0xe5606907,"thx.fp._List.List_Impl_.zip4Ap","thx/fp/List.hx",103,0x46975ae6)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
            	HX_STACK_ARG(dx,"dx")
HXLINE( 103)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN( 103)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN( 103)		::hx::EnumBase _hx_tmp1 = ::thx::fp::_List::List_Impl__obj::zip3Ap(_hx_tmp,ax,bx,cx);
HXDLIN( 103)		return ::thx::fp::_List::List_Impl__obj::zipAp(dx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(List_Impl__obj,zip4Ap,return )

::hx::EnumBase List_Impl__obj::zip5Ap( ::Dynamic f,::hx::EnumBase ax,::hx::EnumBase bx,::hx::EnumBase cx,::hx::EnumBase dx,::hx::EnumBase ex){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(4)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b, ::Dynamic c, ::Dynamic d){
            			HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,d, ::Dynamic,b, ::Dynamic,c, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic e){
            				HX_STACK_FRAME("thx.fp._List.List_Impl_","zip5Ap",0xe5612b48,"thx.fp._List.List_Impl_.zip5Ap","thx/fp/List.hx",109,0x46975ae6)
            				HX_STACK_ARG(e,"e")
HXLINE( 109)				return f1(a,b,c,d,e);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.fp._List.List_Impl_","zip5Ap",0xe5612b48,"thx.fp._List.List_Impl_.zip5Ap","thx/fp/List.hx",109,0x46975ae6)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
            			HX_STACK_ARG(c,"c")
            			HX_STACK_ARG(d,"d")
HXLINE( 109)			return  ::Dynamic(new _hx_Closure_0(a,d,b,c,f1));
            		}
            		HX_END_LOCAL_FUNC4(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","zip5Ap",0xe5612b48,"thx.fp._List.List_Impl_.zip5Ap","thx/fp/List.hx",109,0x46975ae6)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(ex,"ex")
HXLINE( 109)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN( 109)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN( 109)		::hx::EnumBase _hx_tmp1 = ::thx::fp::_List::List_Impl__obj::zip4Ap(_hx_tmp,ax,bx,cx,dx);
HXDLIN( 109)		return ::thx::fp::_List::List_Impl__obj::zipAp(ex,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(List_Impl__obj,zip5Ap,return )

::String List_Impl__obj::toStringWithShow(::hx::EnumBase this1, ::Dynamic show){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::String _hx_run(::String _0,::String _1){
            			HX_STACK_FRAME("thx.fp._List.List_Impl_","toStringWithShow",0xda14ca34,"thx.fp._List.List_Impl_.toStringWithShow","thx/fp/List.hx",112,0x46975ae6)
            			HX_STACK_ARG(_0,"_0")
            			HX_STACK_ARG(_1,"_1")
HXLINE( 112)			return (_0 + _1);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._List.List_Impl_","toStringWithShow",0xda14ca34,"thx.fp._List.List_Impl_.toStringWithShow","thx/fp/List.hx",112,0x46975ae6)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(show,"show")
HXLINE( 112)		HX_VARI( ::hx::EnumBase,l) = ::thx::fp::_List::List_Impl__obj::map(this1,show);
HXDLIN( 112)		::hx::EnumBase _hx_tmp = ::thx::fp::_List::List_Impl__obj::intersperse(l,HX_(",",2c,00,00,00));
HXDLIN( 112)		::String _hx_tmp1 = ( (::String)(::thx::fp::_List::List_Impl__obj::foldLeft(_hx_tmp,HX_("",00,00,00,00), ::Dynamic(new _hx_Closure_0()))) );
HXDLIN( 112)		return ((HX_("[",5b,00,00,00) + _hx_tmp1) + HX_("]",5d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(List_Impl__obj,toStringWithShow,return )


List_Impl__obj::List_Impl__obj()
{
}

bool List_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bin") ) { outValue = bin_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zipAp") ) { outValue = zipAp_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"concat") ) { outValue = concat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip2Ap") ) { outValue = zip2Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip3Ap") ) { outValue = zip3Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip4Ap") ) { outValue = zip4Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip5Ap") ) { outValue = zip5Ap_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"foldMap") ) { outValue = foldMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flatMap") ) { outValue = flatMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"prepend") ) { outValue = prepend_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"foldLeft") ) { outValue = foldLeft_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"singleton") ) { outValue = singleton_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"intersperse") ) { outValue = intersperse_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"toStringWithShow") ) { outValue = toStringWithShow_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *List_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *List_Impl__obj_sStaticStorageInfo = 0;
#endif

static void List_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(List_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void List_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(List_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class List_Impl__obj::__mClass;

static ::String List_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("bin","\xc7","\xb8","\x4a","\x00"),
	HX_HCSTRING("singleton","\x0b","\xc5","\x7f","\xb7"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("foldLeft","\xa8","\x24","\x0e","\xc7"),
	HX_HCSTRING("foldMap","\x1b","\x1d","\xc5","\x64"),
	HX_HCSTRING("flatMap","\x63","\x10","\xde","\xe6"),
	HX_HCSTRING("concat","\x14","\x09","\xd0","\xc7"),
	HX_HCSTRING("prepend","\x0e","\x97","\xe0","\x37"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("intersperse","\x78","\xe5","\x17","\xe1"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("zipAp","\x30","\x62","\x9f","\x84"),
	HX_HCSTRING("zip2Ap","\x80","\xfd","\xca","\x86"),
	HX_HCSTRING("zip3Ap","\xc1","\xbf","\xcb","\x86"),
	HX_HCSTRING("zip4Ap","\x02","\x82","\xcc","\x86"),
	HX_HCSTRING("zip5Ap","\x43","\x44","\xcd","\x86"),
	HX_HCSTRING("toStringWithShow","\xef","\x0a","\xa2","\x2e"),
	::String(null())
};

void List_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp._List.List_Impl_","\xc9","\x4a","\xe0","\xd3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &List_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = List_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(List_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< List_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = List_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = List_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = List_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace fp
} // end namespace _List
