// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_thx_ArrayInts
#include <thx/ArrayInts.h>
#endif
#ifndef INCLUDED_thx_Arrays
#include <thx/Arrays.h>
#endif
#ifndef INCLUDED_thx_Dynamics
#include <thx/Dynamics.h>
#endif
#ifndef INCLUDED_thx_Either
#include <thx/Either.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_Functions
#include <thx/Functions.h>
#endif
#ifndef INCLUDED_thx_Functions2
#include <thx/Functions2.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif
#ifndef INCLUDED_thx_NonEmptyList
#include <thx/NonEmptyList.h>
#endif
#ifndef INCLUDED_thx_Options
#include <thx/Options.h>
#endif
#ifndef INCLUDED_thx_OrderingImpl
#include <thx/OrderingImpl.h>
#endif
#ifndef INCLUDED_thx__Monoid_Monoid_Impl_
#include <thx/_Monoid/Monoid_Impl_.h>
#endif
#ifndef INCLUDED_thx__Nel_Nel_Impl_
#include <thx/_Nel/Nel_Impl_.h>
#endif
#ifndef INCLUDED_thx__Ord_Ord_Impl_
#include <thx/_Ord/Ord_Impl_.h>
#endif
#ifndef INCLUDED_thx__ReadonlyArray_ReadonlyArray_Impl_
#include <thx/_ReadonlyArray/ReadonlyArray_Impl_.h>
#endif
#ifndef INCLUDED_thx__Set_Set_Impl_
#include <thx/_Set/Set_Impl_.h>
#endif
#ifndef INCLUDED_thx__TestArrays_Sample
#include <thx/_TestArrays/Sample.h>
#endif
#ifndef INCLUDED_thx__Validation_Validation_Impl_
#include <thx/_Validation/Validation_Impl_.h>
#endif
#ifndef INCLUDED_thx_fp_MapImpl
#include <thx/fp/MapImpl.h>
#endif
#ifndef INCLUDED_thx_fp__Map_Map_Impl_
#include <thx/fp/_Map/Map_Impl_.h>
#endif

namespace thx{

void Arrays_obj::__construct() { }

Dynamic Arrays_obj::__CreateEmpty() { return new Arrays_obj; }

hx::ObjectPtr< Arrays_obj > Arrays_obj::__new()
{
	hx::ObjectPtr< Arrays_obj > _hx_result = new Arrays_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Arrays_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Arrays_obj > _hx_result = new Arrays_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::haxe::ds::IntMap Arrays_obj::groupBy_Int_thx__TestArrays_Sample(::Array< ::Dynamic> arr, ::Dynamic resolver){
            	HX_STACK_FRAME("thx.Arrays","groupBy_Int_thx__TestArrays_Sample",0x87909ebc,"thx.Arrays.groupBy_Int_thx__TestArrays_Sample","thx/Arrays.hx",502,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(resolver,"resolver")
HXLINE( 503)		HX_VARI(  ::haxe::ds::IntMap,map) =  ::haxe::ds::IntMap_obj::__new();
HXLINE( 505)		{
HXLINE( 505)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 505)			HX_VARI( Int,_g) = arr->length;
HXDLIN( 505)			while((_g1 < _g)){
HXLINE( 505)				HX_VARI( Int,i) = _g1++;
HXLINE( 506)				HX_VARI(  ::thx::_TestArrays::Sample,v) = arr->__get(i).StaticCast<  ::thx::_TestArrays::Sample >();
HXLINE( 507)				HX_VARI( Int,key) = ( (Int)(resolver(v)) );
HXDLIN( 507)				HX_VARI( ::Array< ::Dynamic>,acc) = ( (::Array< ::Dynamic>)(map->get(key)) );
HXLINE( 510)				if (hx::IsNull( acc )) {
HXLINE( 511)					map->set(key,::Array_obj< ::Dynamic>::__new(1)->init(0,v));
            				}
            				else {
HXLINE( 513)					acc->push(v);
            				}
            			}
            		}
HXLINE( 517)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,groupBy_Int_thx__TestArrays_Sample,return )

 ::haxe::ds::IntMap Arrays_obj::groupBy_Int_Array_Int(::Array< ::Dynamic> arr, ::Dynamic resolver){
            	HX_STACK_FRAME("thx.Arrays","groupBy_Int_Array_Int",0xf1b0da66,"thx.Arrays.groupBy_Int_Array_Int","thx/Arrays.hx",502,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(resolver,"resolver")
HXLINE( 503)		HX_VARI(  ::haxe::ds::IntMap,map) =  ::haxe::ds::IntMap_obj::__new();
HXLINE( 505)		{
HXLINE( 505)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 505)			HX_VARI( Int,_g) = arr->length;
HXDLIN( 505)			while((_g1 < _g)){
HXLINE( 505)				HX_VARI( Int,i) = _g1++;
HXLINE( 506)				HX_VARI( ::Array< Int >,v) = arr->__get(i).StaticCast< ::Array< Int > >();
HXLINE( 507)				HX_VARI( Int,key) = ( (Int)(resolver(v)) );
HXDLIN( 507)				HX_VARI( ::Array< ::Dynamic>,acc) = ( (::Array< ::Dynamic>)(map->get(key)) );
HXLINE( 510)				if (hx::IsNull( acc )) {
HXLINE( 511)					map->set(key,::Array_obj< ::Dynamic>::__new(1)->init(0,v));
            				}
            				else {
HXLINE( 513)					acc->push(v);
            				}
            			}
            		}
HXLINE( 517)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,groupBy_Int_Array_Int,return )

 ::haxe::ds::IntMap Arrays_obj::groupBy_Int_Float(::Array< Float > arr, ::Dynamic resolver){
            	HX_STACK_FRAME("thx.Arrays","groupBy_Int_Float",0x42efa599,"thx.Arrays.groupBy_Int_Float","thx/Arrays.hx",502,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(resolver,"resolver")
HXLINE( 503)		HX_VARI(  ::haxe::ds::IntMap,map) =  ::haxe::ds::IntMap_obj::__new();
HXLINE( 505)		{
HXLINE( 505)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 505)			HX_VARI( Int,_g) = arr->length;
HXDLIN( 505)			while((_g1 < _g)){
HXLINE( 505)				HX_VARI( Int,i) = _g1++;
HXLINE( 506)				HX_VARI( Float,v) = arr->__get(i);
HXLINE( 507)				HX_VARI( Int,key) = ( (Int)(resolver(v)) );
HXDLIN( 507)				HX_VARI( ::Array< Float >,acc) = ( (::Array< Float >)(map->get(key)) );
HXLINE( 510)				if (hx::IsNull( acc )) {
HXLINE( 511)					map->set(key,::Array_obj< Float >::__new(1)->init(0,v));
            				}
            				else {
HXLINE( 513)					acc->push(v);
            				}
            			}
            		}
HXLINE( 517)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,groupBy_Int_Float,return )

 ::haxe::ds::IntMap Arrays_obj::count_Int(::Array< Int > arr){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::haxe::ds::IntMap,map) HXARGC(1)
            		void _hx_run(Int v){
            			HX_STACK_FRAME("thx.Arrays","count_Int",0x8f09b4b5,"thx.Arrays.count_Int","thx/Arrays.hx",203,0x537e0999)
            			HX_STACK_ARG(v,"v")
HXLINE( 203)			HX_VAR( Int,value);
HXDLIN( 203)			Bool _hx_tmp = map->exists(v);
HXDLIN( 203)			if (_hx_tmp) {
HXLINE( 203)				value = (map->get(v) + (int)1);
            			}
            			else {
HXLINE( 203)				value = (int)1;
            			}
HXDLIN( 203)			map->set(v,value);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Arrays","count_Int",0x8f09b4b5,"thx.Arrays.count_Int","thx/Arrays.hx",200,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
HXLINE( 201)		HX_VARI(  ::haxe::ds::IntMap,map) =  ::haxe::ds::IntMap_obj::__new();
HXLINE( 202)		arr->map( ::Dynamic(new _hx_Closure_0(map)));
HXLINE( 205)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,count_Int,return )

::cpp::VirtualArray Arrays_obj::append(::cpp::VirtualArray array, ::Dynamic element){
            	HX_STACK_FRAME("thx.Arrays","append",0xbdf8b584,"thx.Arrays.append","thx/Arrays.hx",28,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
HXLINE(  29)		array->push(element);
HXLINE(  30)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,append,return )

::cpp::VirtualArray Arrays_obj::appendIf(::cpp::VirtualArray array,Bool cond, ::Dynamic element){
            	HX_STACK_FRAME("thx.Arrays","appendIf",0xb5b45e81,"thx.Arrays.appendIf","thx/Arrays.hx",37,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(cond,"cond")
            	HX_STACK_ARG(element,"element")
HXLINE(  38)		if (cond) {
HXLINE(  39)			array->push(element);
            		}
HXLINE(  40)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,appendIf,return )

::cpp::VirtualArray Arrays_obj::applyIndexes(::cpp::VirtualArray array,::Array< Int > indexes, ::Dynamic __o_incrementDuplicates){
 ::Dynamic incrementDuplicates = __o_incrementDuplicates.Default(false);
            	HX_STACK_FRAME("thx.Arrays","applyIndexes",0x4f72975c,"thx.Arrays.applyIndexes","thx/Arrays.hx",51,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(indexes,"indexes")
            	HX_STACK_ARG(incrementDuplicates,"incrementDuplicates")
HXLINE(  52)		Bool _hx_tmp = (indexes->length != array->get_length());
HXDLIN(  52)		if (_hx_tmp) {
HXLINE(  53)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("`Arrays.applyIndexes` can only be applied to two arrays with the same length",46,28,16,fb),null(),hx::SourceInfo(HX_("Arrays.hx",24,5a,92,4c),53,HX_("thx.Arrays",84,bb,d6,08),HX_("applyIndexes",32,a8,2c,20))));
            		}
HXLINE(  54)		HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  55)		if (incrementDuplicates) {
HXLINE(  56)			HX_VARI(  ::haxe::ds::IntMap,usedIndexes) = ::thx::_Set::Set_Impl__obj::createInt(null());
HXLINE(  57)			{
HXLINE(  57)				HX_VARI( Int,_g1) = (int)0;
HXDLIN(  57)				HX_VARI( Int,_g) = array->get_length();
HXDLIN(  57)				while((_g1 < _g)){
HXLINE(  57)					HX_VARI( Int,i) = _g1++;
HXLINE(  58)					HX_VARI( Int,index) = indexes->__get(i);
HXLINE(  59)					while(true){
HXLINE(  59)						Bool _hx_tmp1 = !(usedIndexes->exists(index));
HXDLIN(  59)						if (_hx_tmp1) {
HXLINE(  59)							goto _hx_goto_4;
            						}
HXLINE(  60)						++index;
            					}
            					_hx_goto_4:;
HXLINE(  61)					::thx::_Set::Set_Impl__obj::add(usedIndexes,index);
HXLINE(  62)					result->set(index,array->__get(i));
            				}
            			}
            		}
            		else {
HXLINE(  65)			HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN(  65)			HX_VARI_NAME( Int,_g2,"_g") = array->get_length();
HXDLIN(  65)			while((_g11 < _g2)){
HXLINE(  65)				HX_VARI_NAME( Int,i1,"i") = _g11++;
HXLINE(  66)				result->set(indexes->__get(i1),array->__get(i1));
            			}
            		}
HXLINE(  69)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,applyIndexes,return )

 ::Dynamic Arrays_obj::monoid(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray a,::cpp::VirtualArray b){
            			HX_STACK_FRAME("thx.Arrays","monoid",0xf58f9a68,"thx.Arrays.monoid","thx/Arrays.hx",78,0x537e0999)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE(  78)			return a->concat(b);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","monoid",0xf58f9a68,"thx.Arrays.monoid","thx/Arrays.hx",76,0x537e0999)
HXLINE(  76)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("append",da,e1,d3,8f), ::Dynamic(new _hx_Closure_0()))
            			->setFixed(1,HX_("zero",28,0f,f1,50),::cpp::VirtualArray_obj::__new(0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Arrays_obj,monoid,return )

::cpp::VirtualArray Arrays_obj::after(::cpp::VirtualArray array, ::Dynamic element){
            	HX_STACK_FRAME("thx.Arrays","after",0x6e3335b2,"thx.Arrays.after","thx/Arrays.hx",85,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
HXLINE(  85)		Int _hx_tmp = ::thx::_ReadonlyArray::ReadonlyArray_Impl__obj::indexOf(array,element,null());
HXDLIN(  85)		return array->slice((_hx_tmp + (int)1),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,after,return )

::hx::EnumBase Arrays_obj::atIndex(::cpp::VirtualArray array,Int i){
            	HX_STACK_FRAME("thx.Arrays","atIndex",0xa65e4635,"thx.Arrays.atIndex","thx/Arrays.hx",92,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(i,"i")
HXLINE(  92)		Bool _hx_tmp;
HXDLIN(  92)		if ((i >= (int)0)) {
HXLINE(  92)			_hx_tmp = (i < array->get_length());
            		}
            		else {
HXLINE(  92)			_hx_tmp = false;
            		}
HXDLIN(  92)		if (_hx_tmp) {
HXLINE(  92)			return ::haxe::ds::Option_obj::Some(array->__get(i));
            		}
            		else {
HXLINE(  92)			return ::haxe::ds::Option_obj::None_dyn();
            		}
HXDLIN(  92)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,atIndex,return )

::hx::EnumBase Arrays_obj::getOption(::cpp::VirtualArray array,Int i){
            	HX_STACK_FRAME("thx.Arrays","getOption",0xd090af41,"thx.Arrays.getOption","thx/Arrays.hx",99,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(i,"i")
HXLINE(  99)		HX_VARI(  ::Dynamic,value) = array->__get(i);
HXDLIN(  99)		if (hx::IsNull( value )) {
HXLINE(  99)			return ::haxe::ds::Option_obj::None_dyn();
            		}
            		else {
HXLINE(  99)			return ::haxe::ds::Option_obj::Some(value);
            		}
HXDLIN(  99)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,getOption,return )

void Arrays_obj::each(::cpp::VirtualArray arr, ::Dynamic effect){
            	HX_STACK_FRAME("thx.Arrays","each",0x727a332b,"thx.Arrays.each","thx/Arrays.hx",105,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(effect,"effect")
HXLINE( 105)		HX_VARI(  ::Dynamic,tmp) = arr->iterator();
HXDLIN( 105)		while(true){
HXLINE( 105)			Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 105)			if (_hx_tmp) {
HXLINE( 105)				goto _hx_goto_6;
            			}
HXDLIN( 105)			HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXDLIN( 105)			effect(element);
            		}
            		_hx_goto_6:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,each,(void))

void Arrays_obj::eachi(::cpp::VirtualArray arr, ::Dynamic effect){
            	HX_STACK_FRAME("thx.Arrays","eachi",0xb87292de,"thx.Arrays.eachi","thx/Arrays.hx",112,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(effect,"effect")
HXLINE( 112)		HX_VARI( Int,_g1) = (int)0;
HXDLIN( 112)		HX_VARI( Int,_g) = arr->get_length();
HXDLIN( 112)		while((_g1 < _g)){
HXLINE( 112)			HX_VARI( Int,i) = _g1++;
HXDLIN( 112)			effect(arr->__get(i),i);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,eachi,(void))

Bool Arrays_obj::all(::cpp::VirtualArray arr, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","all",0x39e69737,"thx.Arrays.all","thx/Arrays.hx",118,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 119)		{
HXLINE( 119)			HX_VARI(  ::Dynamic,tmp) = arr->iterator();
HXDLIN( 119)			while(true){
HXLINE( 119)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 119)				if (_hx_tmp) {
HXLINE( 119)					goto _hx_goto_8;
            				}
HXDLIN( 119)				HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 120)				Bool _hx_tmp1 = !(( (Bool)(predicate(element)) ));
HXDLIN( 120)				if (_hx_tmp1) {
HXLINE( 121)					return false;
            				}
            			}
            			_hx_goto_8:;
            		}
HXLINE( 122)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,all,return )

Bool Arrays_obj::any(::cpp::VirtualArray arr, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","any",0x39e69902,"thx.Arrays.any","thx/Arrays.hx",128,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 129)		{
HXLINE( 129)			HX_VARI(  ::Dynamic,tmp) = arr->iterator();
HXDLIN( 129)			while(true){
HXLINE( 129)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 129)				if (_hx_tmp) {
HXLINE( 129)					goto _hx_goto_9;
            				}
HXDLIN( 129)				HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 130)				Bool _hx_tmp1 = ( (Bool)(predicate(element)) );
HXDLIN( 130)				if (_hx_tmp1) {
HXLINE( 131)					return true;
            				}
            			}
            			_hx_goto_9:;
            		}
HXLINE( 132)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,any,return )

::cpp::VirtualArray Arrays_obj::at(::cpp::VirtualArray arr,::Array< Int > indexes){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,arr) HXARGC(1)
            		 ::Dynamic _hx_run(Int i){
            			HX_STACK_FRAME("thx.Arrays","at",0x93338b9d,"thx.Arrays.at","thx/Arrays.hx",139,0x537e0999)
            			HX_STACK_ARG(i,"i")
HXLINE( 139)			return arr->__get(i);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Arrays","at",0x93338b9d,"thx.Arrays.at","thx/Arrays.hx",139,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(indexes,"indexes")
HXLINE( 139)		return indexes->map( ::Dynamic(new _hx_Closure_0(arr)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,at,return )

::cpp::VirtualArray Arrays_obj::before(::cpp::VirtualArray array, ::Dynamic element){
            	HX_STACK_FRAME("thx.Arrays","before",0xc8572829,"thx.Arrays.before","thx/Arrays.hx",145,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
HXLINE( 145)		Int _hx_tmp = ::thx::_ReadonlyArray::ReadonlyArray_Impl__obj::indexOf(array,element,null());
HXDLIN( 145)		return array->slice((int)0,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,before,return )

::cpp::VirtualArray Arrays_obj::commonsFromStart(::cpp::VirtualArray self,::cpp::VirtualArray other, ::Dynamic equality){
            	HX_STACK_FRAME("thx.Arrays","commonsFromStart",0xfe279cba,"thx.Arrays.commonsFromStart","thx/Arrays.hx",151,0x537e0999)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(equality,"equality")
HXLINE( 152)		Bool _hx_tmp = hx::IsNull( equality );
HXDLIN( 152)		if (_hx_tmp) {
HXLINE( 152)			equality = ::thx::Functions_obj::equality_dyn();
            		}
HXLINE( 153)		HX_VARI( Int,count) = (int)0;
HXLINE( 154)		{
HXLINE( 154)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 154)			HX_VARI( ::Array< ::Dynamic>,_g1) = ::thx::Arrays_obj::zip(self,other);
HXDLIN( 154)			while((_g < _g1->length)){
HXLINE( 154)				HX_VARI(  ::Dynamic,pair) = _g1->__get(_g);
HXDLIN( 154)				++_g;
HXLINE( 155)				Bool _hx_tmp1 = ( (Bool)(equality( ::Dynamic(pair->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(pair->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)))) );
HXDLIN( 155)				if (_hx_tmp1) {
HXLINE( 156)					++count;
            				}
            				else {
HXLINE( 158)					goto _hx_goto_10;
            				}
            			}
            			_hx_goto_10:;
            		}
HXLINE( 159)		return self->slice((int)0,count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,commonsFromStart,return )

::cpp::VirtualArray Arrays_obj::compact(::cpp::VirtualArray arr){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		Bool _hx_run( ::Dynamic v){
            			HX_STACK_FRAME("thx.Arrays","compact",0xb57d6cb9,"thx.Arrays.compact","thx/Arrays.hx",174,0x537e0999)
            			HX_STACK_ARG(v,"v")
HXLINE( 174)			return hx::IsNotNull( v );
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Arrays","compact",0xb57d6cb9,"thx.Arrays.compact","thx/Arrays.hx",174,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
HXLINE( 174)		return arr->filter( ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,compact,return )

Int Arrays_obj::compare(::cpp::VirtualArray a,::cpp::VirtualArray b){
            	HX_STACK_FRAME("thx.Arrays","compare",0xb57d79bb,"thx.Arrays.compare","thx/Arrays.hx",185,0x537e0999)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 186)		HX_VARI( Int,v) = (a->get_length() - b->get_length());
HXLINE( 187)		if ((v != (int)0)) {
HXLINE( 188)			return v;
            		}
HXLINE( 189)		{
HXLINE( 189)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 189)			HX_VARI( Int,_g) = a->get_length();
HXDLIN( 189)			while((_g1 < _g)){
HXLINE( 189)				HX_VARI( Int,i) = _g1++;
HXLINE( 190)				v = ::thx::Dynamics_obj::compare(a->__get(i),b->__get(i));
HXDLIN( 190)				if ((v != (int)0)) {
HXLINE( 191)					return v;
            				}
            			}
            		}
HXLINE( 193)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,compare,return )

Bool Arrays_obj::contains(::cpp::VirtualArray array, ::Dynamic element, ::Dynamic eq){
            	HX_STACK_FRAME("thx.Arrays","contains",0xcc3bec49,"thx.Arrays.contains","thx/Arrays.hx",214,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
            	HX_STACK_ARG(eq,"eq")
HXLINE( 214)		if (hx::IsNull( eq )) {
HXLINE( 215)			Int _hx_tmp = ::thx::_ReadonlyArray::ReadonlyArray_Impl__obj::indexOf(array,element,null());
HXDLIN( 215)			return (_hx_tmp >= (int)0);
            		}
            		else {
HXLINE( 217)			{
HXLINE( 217)				HX_VARI( Int,_g1) = (int)0;
HXDLIN( 217)				HX_VARI( Int,_g) = array->get_length();
HXDLIN( 217)				while((_g1 < _g)){
HXLINE( 217)					HX_VARI( Int,i) = _g1++;
HXLINE( 218)					Bool _hx_tmp1 = ( (Bool)(eq(array->__get(i),element)) );
HXDLIN( 218)					if (_hx_tmp1) {
HXLINE( 219)						return true;
            					}
            				}
            			}
HXLINE( 220)			return false;
            		}
HXLINE( 214)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,contains,return )

Bool Arrays_obj::containsAll(::cpp::VirtualArray array, ::Dynamic elements, ::Dynamic eq){
            	HX_STACK_FRAME("thx.Arrays","containsAll",0x7971d858,"thx.Arrays.containsAll","thx/Arrays.hx",229,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(elements,"elements")
            	HX_STACK_ARG(eq,"eq")
HXLINE( 230)		{
HXLINE( 230)			HX_VARI(  ::Dynamic,tmp) =  ::Dynamic(elements->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic))();
HXDLIN( 230)			while(true){
HXLINE( 230)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 230)				if (_hx_tmp) {
HXLINE( 230)					goto _hx_goto_13;
            				}
HXDLIN( 230)				HX_VARI(  ::Dynamic,el) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 231)				Bool _hx_tmp1 = !(::thx::Arrays_obj::contains(array,el,eq));
HXDLIN( 231)				if (_hx_tmp1) {
HXLINE( 231)					return false;
            				}
            			}
            			_hx_goto_13:;
            		}
HXLINE( 233)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,containsAll,return )

Bool Arrays_obj::containsAny(::cpp::VirtualArray array, ::Dynamic elements, ::Dynamic eq){
            	HX_STACK_FRAME("thx.Arrays","containsAny",0x7971da23,"thx.Arrays.containsAny","thx/Arrays.hx",241,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(elements,"elements")
            	HX_STACK_ARG(eq,"eq")
HXLINE( 242)		{
HXLINE( 242)			HX_VARI(  ::Dynamic,tmp) =  ::Dynamic(elements->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic))();
HXDLIN( 242)			while(true){
HXLINE( 242)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 242)				if (_hx_tmp) {
HXLINE( 242)					goto _hx_goto_14;
            				}
HXDLIN( 242)				HX_VARI(  ::Dynamic,el) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 243)				Bool _hx_tmp1 = ::thx::Arrays_obj::contains(array,el,eq);
HXDLIN( 243)				if (_hx_tmp1) {
HXLINE( 243)					return true;
            				}
            			}
            			_hx_goto_14:;
            		}
HXLINE( 245)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,containsAny,return )

::cpp::VirtualArray Arrays_obj::create(Int length, ::Dynamic fillWith){
            	HX_STACK_FRAME("thx.Arrays","create",0xaa343aa6,"thx.Arrays.create","thx/Arrays.hx",251,0x537e0999)
            	HX_STACK_ARG(length,"length")
            	HX_STACK_ARG(fillWith,"fillWith")
HXLINE( 252)		HX_VARI( ::cpp::VirtualArray,arr) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 253)		{
HXLINE( 253)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 253)			while((_g1 < length)){
HXLINE( 253)				HX_VARI( Int,i) = _g1++;
HXLINE( 254)				arr->set(i,fillWith);
            			}
            		}
HXLINE( 255)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,create,return )

::Array< ::Dynamic> Arrays_obj::cross(::cpp::VirtualArray a,::cpp::VirtualArray b){
            	HX_STACK_FRAME("thx.Arrays","cross",0x9ceb2f16,"thx.Arrays.cross","thx/Arrays.hx",266,0x537e0999)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 267)		HX_VARI( ::Array< ::Dynamic>,r) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 268)		{
HXLINE( 268)			HX_VARI(  ::Dynamic,tmp) = a->iterator();
HXDLIN( 268)			while(true){
HXLINE( 268)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 268)				if (_hx_tmp) {
HXLINE( 268)					goto _hx_goto_16;
            				}
HXDLIN( 268)				HX_VARI(  ::Dynamic,va) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 269)				{
HXLINE( 269)					HX_VARI_NAME(  ::Dynamic,tmp1,"tmp") = b->iterator();
HXDLIN( 269)					while(true){
HXLINE( 269)						Bool _hx_tmp1 = !(( (Bool)( ::Dynamic(tmp1->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 269)						if (_hx_tmp1) {
HXLINE( 269)							goto _hx_goto_17;
            						}
HXDLIN( 269)						HX_VARI(  ::Dynamic,vb) =  ::Dynamic(tmp1->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 270)						r->push(::cpp::VirtualArray_obj::__new(2)->init(0,va)->init(1,vb));
            					}
            					_hx_goto_17:;
            				}
            			}
            			_hx_goto_16:;
            		}
HXLINE( 271)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,cross,return )

::Array< ::Dynamic> Arrays_obj::crossMulti(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::cpp::VirtualArray _hx_run( ::Dynamic v){
            			HX_STACK_FRAME("thx.Arrays","crossMulti",0xe4875b83,"thx.Arrays.crossMulti","thx/Arrays.hx",284,0x537e0999)
            			HX_STACK_ARG(v,"v")
HXLINE( 284)			return ::cpp::VirtualArray_obj::__new(1)->init(0,v);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Arrays","crossMulti",0xe4875b83,"thx.Arrays.crossMulti","thx/Arrays.hx",282,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 283)		HX_VARI( ::Array< ::Dynamic>,acopy) = array->copy();
HXDLIN( 283)		HX_VARI( ::Array< ::Dynamic>,result) = ( (::cpp::VirtualArray)(acopy->shift()) )->map( ::Dynamic(new _hx_Closure_0()));
HXLINE( 285)		while((acopy->length > (int)0)){
HXLINE( 286)			HX_VARI_NAME( ::cpp::VirtualArray,array1,"array") = ( (::cpp::VirtualArray)(acopy->shift()) );
HXDLIN( 286)			HX_VARI( ::Array< ::Dynamic>,tresult) = result;
HXLINE( 288)			result = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 289)			{
HXLINE( 289)				HX_VARI(  ::Dynamic,tmp) = array1->iterator();
HXDLIN( 289)				while(true){
HXLINE( 289)					Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 289)					if (_hx_tmp) {
HXLINE( 289)						goto _hx_goto_19;
            					}
HXDLIN( 289)					HX_VARI_NAME(  ::Dynamic,v1,"v") =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 290)					HX_VARI( Int,_g) = (int)0;
HXDLIN( 290)					while((_g < tresult->length)){
HXLINE( 290)						HX_VARI( ::cpp::VirtualArray,ar) = ::cpp::VirtualArray( tresult->__get(_g));
HXDLIN( 290)						++_g;
HXLINE( 291)						HX_VARI( ::cpp::VirtualArray,t) = ar->copy();
HXLINE( 292)						t->push(v1);
HXLINE( 293)						result->push(t);
            					}
            				}
            				_hx_goto_19:;
            			}
            		}
HXLINE( 297)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,crossMulti,return )

::cpp::VirtualArray Arrays_obj::distinct(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","distinct",0x1103da66,"thx.Arrays.distinct","thx/Arrays.hx",306,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 307)		HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 309)		Bool _hx_tmp = (array->get_length() <= (int)1);
HXDLIN( 309)		if (_hx_tmp) {
HXLINE( 310)			return array->copy();
            		}
HXLINE( 312)		Bool _hx_tmp1 = hx::IsNull( predicate );
HXDLIN( 312)		if (_hx_tmp1) {
HXLINE( 313)			predicate = ::thx::Functions_obj::equality_dyn();
            		}
HXLINE( 315)		{
HXLINE( 315)			HX_VARI(  ::Dynamic,tmp) = array->iterator();
HXDLIN( 315)			while(true){
            				HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,predicate, ::Dynamic,v) HXARGC(1)
            				Bool _hx_run( ::Dynamic r){
            					HX_STACK_FRAME("thx.Arrays","distinct",0x1103da66,"thx.Arrays.distinct","thx/Arrays.hx",317,0x537e0999)
            					HX_STACK_ARG(r,"r")
HXLINE( 317)					return ( (Bool)(predicate(r,v)) );
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 315)				Bool _hx_tmp2 = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 315)				if (_hx_tmp2) {
HXLINE( 315)					goto _hx_goto_21;
            				}
HXDLIN( 315)				HX_VARI(  ::Dynamic,v) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 316)				HX_VARI( Bool,keep) = !(::thx::Arrays_obj::any(result, ::Dynamic(new _hx_Closure_0(predicate,v))));
HXLINE( 319)				if (keep) {
HXLINE( 319)					result->push(v);
            				}
            			}
            			_hx_goto_21:;
            		}
HXLINE( 322)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,distinct,return )

void Arrays_obj::eachPair(::cpp::VirtualArray array, ::Dynamic callback){
            	HX_STACK_FRAME("thx.Arrays","eachPair",0x9e75ace5,"thx.Arrays.eachPair","thx/Arrays.hx",331,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 331)		HX_VARI( Int,_g1) = (int)0;
HXDLIN( 331)		HX_VARI( Int,_g) = array->get_length();
HXDLIN( 331)		while((_g1 < _g)){
HXLINE( 331)			HX_VARI( Int,i) = _g1++;
HXLINE( 332)			{
HXLINE( 332)				HX_VARI( Int,_g3) = i;
HXDLIN( 332)				HX_VARI( Int,_g2) = array->get_length();
HXDLIN( 332)				while((_g3 < _g2)){
HXLINE( 332)					HX_VARI( Int,j) = _g3++;
HXLINE( 333)					Bool _hx_tmp = !(( (Bool)(callback(array->__get(i),array->__get(j))) ));
HXDLIN( 333)					if (_hx_tmp) {
HXLINE( 334)						return;
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,eachPair,(void))

Bool Arrays_obj::equals(::cpp::VirtualArray a,::cpp::VirtualArray b, ::Dynamic equality){
            	HX_STACK_FRAME("thx.Arrays","equals",0xee17c1e9,"thx.Arrays.equals","thx/Arrays.hx",341,0x537e0999)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(equality,"equality")
HXLINE( 342)		Bool _hx_tmp;
HXDLIN( 342)		Bool _hx_tmp1;
HXDLIN( 342)		if (hx::IsNotNull( a )) {
HXLINE( 342)			_hx_tmp1 = hx::IsNull( b );
            		}
            		else {
HXLINE( 342)			_hx_tmp1 = true;
            		}
HXDLIN( 342)		if (!(_hx_tmp1)) {
HXLINE( 342)			_hx_tmp = (a->get_length() != b->get_length());
            		}
            		else {
HXLINE( 342)			_hx_tmp = true;
            		}
HXDLIN( 342)		if (_hx_tmp) {
HXLINE( 342)			return false;
            		}
HXLINE( 343)		Bool _hx_tmp2 = hx::IsNull( equality );
HXDLIN( 343)		if (_hx_tmp2) {
HXLINE( 343)			equality = ::thx::Functions_obj::equality_dyn();
            		}
HXLINE( 344)		{
HXLINE( 344)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 344)			HX_VARI( Int,_g) = a->get_length();
HXDLIN( 344)			while((_g1 < _g)){
HXLINE( 344)				HX_VARI( Int,i) = _g1++;
HXLINE( 345)				Bool _hx_tmp3 = !(( (Bool)(equality(a->__get(i),b->__get(i))) ));
HXDLIN( 345)				if (_hx_tmp3) {
HXLINE( 346)					return false;
            				}
            			}
            		}
HXLINE( 347)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,equals,return )

 ::Dynamic Arrays_obj::extract(::cpp::VirtualArray a, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","extract",0xaaff1657,"thx.Arrays.extract","thx/Arrays.hx",356,0x537e0999)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 357)		{
HXLINE( 357)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 357)			HX_VARI( Int,_g) = a->get_length();
HXDLIN( 357)			while((_g1 < _g)){
HXLINE( 357)				HX_VARI( Int,i) = _g1++;
HXLINE( 358)				Bool _hx_tmp = ( (Bool)(predicate(a->__get(i))) );
HXDLIN( 358)				if (_hx_tmp) {
HXLINE( 359)					::cpp::VirtualArray _hx_tmp1 = a->splice(i,(int)1);
HXDLIN( 359)					return _hx_tmp1->__get((int)0);
            				}
            			}
            		}
HXLINE( 360)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,extract,return )

::cpp::VirtualArray Arrays_obj::filterNull(::cpp::VirtualArray a){
            	HX_STACK_FRAME("thx.Arrays","filterNull",0xd3fc1709,"thx.Arrays.filterNull","thx/Arrays.hx",366,0x537e0999)
            	HX_STACK_ARG(a,"a")
HXLINE( 367)		HX_VARI( ::cpp::VirtualArray,arr) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 368)		{
HXLINE( 368)			HX_VARI(  ::Dynamic,tmp) = a->iterator();
HXDLIN( 368)			while(true){
HXLINE( 368)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 368)				if (_hx_tmp) {
HXLINE( 368)					goto _hx_goto_26;
            				}
HXDLIN( 368)				HX_VARI(  ::Dynamic,v) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 369)				if (hx::IsNotNull( v )) {
HXLINE( 369)					arr->push(v);
            				}
            			}
            			_hx_goto_26:;
            		}
HXLINE( 370)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,filterNull,return )

::cpp::VirtualArray Arrays_obj::filterOption(::Array< ::Dynamic> a){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc,::hx::EnumBase maybeV){
            			HX_STACK_FRAME("thx.Arrays","filterOption",0x6718f077,"thx.Arrays.filterOption","thx/Arrays.hx",377,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(maybeV,"maybeV")
HXLINE( 378)			Int _hx_tmp = ( ( ::hx::EnumBase)(maybeV) )->_hx_getIndex();
HXDLIN( 378)			switch((int)(_hx_tmp)){
            				case (int)0: {
HXLINE( 379)					acc->push(maybeV->_hx_getObject(0));
            				}
            				break;
            				case (int)1: {
            				}
            				break;
            			}
HXLINE( 382)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","filterOption",0x6718f077,"thx.Arrays.filterOption","thx/Arrays.hx",377,0x537e0999)
            	HX_STACK_ARG(a,"a")
HXLINE( 377)		return ( (::cpp::VirtualArray)(::thx::Arrays_obj::reduce(a, ::Dynamic(new _hx_Closure_0()),::cpp::VirtualArray_obj::__new(0))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,filterOption,return )

 ::Dynamic Arrays_obj::find(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","find",0x73298563,"thx.Arrays.find","thx/Arrays.hx",389,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 390)		{
HXLINE( 390)			HX_VARI(  ::Dynamic,tmp) = array->iterator();
HXDLIN( 390)			while(true){
HXLINE( 390)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 390)				if (_hx_tmp) {
HXLINE( 390)					goto _hx_goto_27;
            				}
HXDLIN( 390)				HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 391)				Bool _hx_tmp1 = ( (Bool)(predicate(element)) );
HXDLIN( 391)				if (_hx_tmp1) {
HXLINE( 392)					return element;
            				}
            			}
            			_hx_goto_27:;
            		}
HXLINE( 393)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,find,return )

 ::Dynamic Arrays_obj::findi(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","findi",0x512b31a6,"thx.Arrays.findi","thx/Arrays.hx",399,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 400)		{
HXLINE( 400)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 400)			HX_VARI( Int,_g) = array->get_length();
HXDLIN( 400)			while((_g1 < _g)){
HXLINE( 400)				HX_VARI( Int,i) = _g1++;
HXLINE( 401)				Bool _hx_tmp = ( (Bool)(predicate(array->__get(i),i)) );
HXDLIN( 401)				if (_hx_tmp) {
HXLINE( 402)					return array->__get(i);
            				}
            			}
            		}
HXLINE( 403)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,findi,return )

::hx::EnumBase Arrays_obj::findiOption(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","findiOption",0xf62039bb,"thx.Arrays.findiOption","thx/Arrays.hx",409,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 410)		{
HXLINE( 410)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 410)			HX_VARI( Int,_g) = array->get_length();
HXDLIN( 410)			while((_g1 < _g)){
HXLINE( 410)				HX_VARI( Int,i) = _g1++;
HXLINE( 411)				Bool _hx_tmp = ( (Bool)(predicate(array->__get(i),i)) );
HXDLIN( 411)				if (_hx_tmp) {
HXLINE( 412)					return ::haxe::ds::Option_obj::Some(array->__get(i));
            				}
            			}
            		}
HXLINE( 413)		return ::haxe::ds::Option_obj::None_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,findiOption,return )

::hx::EnumBase Arrays_obj::findOption(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","findOption",0xd3777938,"thx.Arrays.findOption","thx/Arrays.hx",421,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 422)		{
HXLINE( 422)			HX_VARI(  ::Dynamic,tmp) = array->iterator();
HXDLIN( 422)			while(true){
HXLINE( 422)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 422)				if (_hx_tmp) {
HXLINE( 422)					goto _hx_goto_30;
            				}
HXDLIN( 422)				HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 423)				Bool _hx_tmp1 = ( (Bool)(predicate(element)) );
HXDLIN( 423)				if (_hx_tmp1) {
HXLINE( 424)					return ::haxe::ds::Option_obj::Some(element);
            				}
            			}
            			_hx_goto_30:;
            		}
HXLINE( 425)		return ::haxe::ds::Option_obj::None_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,findOption,return )

Int Arrays_obj::findIndex(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","findIndex",0xd5cb1eaf,"thx.Arrays.findIndex","thx/Arrays.hx",432,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 433)		{
HXLINE( 433)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 433)			HX_VARI( Int,_g) = array->get_length();
HXDLIN( 433)			while((_g1 < _g)){
HXLINE( 433)				HX_VARI( Int,i) = _g1++;
HXLINE( 434)				Bool _hx_tmp = ( (Bool)(predicate(array->__get(i))) );
HXDLIN( 434)				if (_hx_tmp) {
HXLINE( 435)					return i;
            				}
            			}
            		}
HXLINE( 436)		return (int)-1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,findIndex,return )

 ::Dynamic Arrays_obj::findLast(::cpp::VirtualArray array, ::Dynamic predicate){
            	HX_STACK_FRAME("thx.Arrays","findLast",0x3a01a959,"thx.Arrays.findLast","thx/Arrays.hx",443,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(predicate,"predicate")
HXLINE( 444)		HX_VARI( Int,len) = array->get_length();
HXDLIN( 444)		HX_VAR( Int,j);
HXLINE( 446)		{
HXLINE( 446)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 446)			while((_g1 < len)){
HXLINE( 446)				HX_VARI( Int,i) = _g1++;
HXLINE( 447)				j = ((len - i) - (int)1);
HXLINE( 448)				Bool _hx_tmp = ( (Bool)(predicate(array->__get(j))) );
HXDLIN( 448)				if (_hx_tmp) {
HXLINE( 449)					return array->__get(j);
            				}
            			}
            		}
HXLINE( 451)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,findLast,return )

 ::Dynamic Arrays_obj::first(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","first",0x512e47c6,"thx.Arrays.first","thx/Arrays.hx",458,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 458)		return array->__get((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,first,return )

::cpp::VirtualArray Arrays_obj::flatMap(::cpp::VirtualArray array, ::Dynamic callback){
            	HX_STACK_FRAME("thx.Arrays","flatMap",0x18f27179,"thx.Arrays.flatMap","thx/Arrays.hx",469,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 469)		::Array< ::Dynamic> _hx_tmp = array->map(callback);
HXDLIN( 469)		return ::thx::Arrays_obj::flatten(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,flatMap,return )

::cpp::VirtualArray Arrays_obj::flatten(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc,::cpp::VirtualArray element){
            			HX_STACK_FRAME("thx.Arrays","flatten",0x19100cda,"thx.Arrays.flatten","thx/Arrays.hx",484,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(element,"element")
HXLINE( 484)			return acc->concat(element);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","flatten",0x19100cda,"thx.Arrays.flatten","thx/Arrays.hx",484,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 484)		return ( (::cpp::VirtualArray)(::thx::Arrays_obj::reduce(array, ::Dynamic(new _hx_Closure_0()),::cpp::VirtualArray_obj::__new(0))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,flatten,return )

::cpp::VirtualArray Arrays_obj::from(::cpp::VirtualArray array, ::Dynamic element){
            	HX_STACK_FRAME("thx.Arrays","from",0x73305a94,"thx.Arrays.from","thx/Arrays.hx",491,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
HXLINE( 491)		Int _hx_tmp = ::thx::_ReadonlyArray::ReadonlyArray_Impl__obj::indexOf(array,element,null());
HXDLIN( 491)		return array->slice(_hx_tmp,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,from,return )

::Dynamic Arrays_obj::groupByAppend(::cpp::VirtualArray arr, ::Dynamic resolver,::Dynamic map){
            	HX_STACK_FRAME("thx.Arrays","groupByAppend",0xbcc2c306,"thx.Arrays.groupByAppend","thx/Arrays.hx",525,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(resolver,"resolver")
            	HX_STACK_ARG(map,"map")
HXLINE( 526)		{
HXLINE( 526)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 526)			HX_VARI( Int,_g) = arr->get_length();
HXDLIN( 526)			while((_g1 < _g)){
HXLINE( 526)				HX_VARI( Int,i) = _g1++;
HXLINE( 527)				HX_VARI(  ::Dynamic,v) = arr->__get(i);
HXLINE( 528)				HX_VARI(  ::Dynamic,key) = resolver(v);
HXDLIN( 528)				HX_VARI( ::cpp::VirtualArray,acc) = ( (::cpp::VirtualArray)(::haxe::IMap_obj::get(map,key)) );
HXLINE( 531)				if (hx::IsNull( acc )) {
HXLINE( 532)					::haxe::IMap_obj::set(map,key,::cpp::VirtualArray_obj::__new(1)->init(0,v));
            				}
            				else {
HXLINE( 534)					acc->push(v);
            				}
            			}
            		}
HXLINE( 538)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,groupByAppend,return )

::Array< ::Dynamic> Arrays_obj::spanByIndex(::cpp::VirtualArray arr, ::Dynamic spanKey){
            	HX_STACK_FRAME("thx.Arrays","spanByIndex",0x45c76827,"thx.Arrays.spanByIndex","thx/Arrays.hx",561,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(spanKey,"spanKey")
HXLINE( 562)		HX_VARI( ::Array< ::Dynamic>,acc) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 563)		HX_VARI(  ::Dynamic,cur) = null();
HXLINE( 564)		HX_VARI( Int,j) = (int)-1;
HXLINE( 565)		{
HXLINE( 565)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 565)			HX_VARI( Int,_g) = arr->get_length();
HXDLIN( 565)			while((_g1 < _g)){
HXLINE( 565)				HX_VARI( Int,i) = _g1++;
HXLINE( 566)				HX_VARI(  ::Dynamic,k) = spanKey(i);
HXLINE( 567)				if (hx::IsNull( k )) {
HXLINE( 567)					HX_STACK_DO_THROW( ::thx::Error_obj::__new((HX_("spanKey function returned null for index ",0a,77,e3,d3) + i),null(),hx::SourceInfo(HX_("Arrays.hx",24,5a,92,4c),567,HX_("thx.Arrays",84,bb,d6,08),HX_("spanByIndex",11,c4,9d,f0))));
            				}
HXLINE( 568)				if (hx::IsEq( cur,k )) {
HXLINE( 569)					::cpp::VirtualArray( acc->__get(j))->push(arr->__get(i));
            				}
            				else {
HXLINE( 571)					cur = k;
HXLINE( 572)					++j;
HXLINE( 573)					acc->push(::cpp::VirtualArray_obj::__new(1)->init(0,arr->__get(i)));
            				}
            			}
            		}
HXLINE( 576)		return acc;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,spanByIndex,return )

Bool Arrays_obj::hasElements(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","hasElements",0xaba4bfc7,"thx.Arrays.hasElements","thx/Arrays.hx",583,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 583)		if (hx::IsNotNull( array )) {
HXLINE( 583)			return (array->get_length() > (int)0);
            		}
            		else {
HXLINE( 583)			return false;
            		}
HXDLIN( 583)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,hasElements,return )

 ::Dynamic Arrays_obj::head(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","head",0x7478de4a,"thx.Arrays.head","thx/Arrays.hx",589,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 589)		return array->__get((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,head,return )

::cpp::VirtualArray Arrays_obj::ifEmpty(::cpp::VirtualArray array,::cpp::VirtualArray alt){
            	HX_STACK_FRAME("thx.Arrays","ifEmpty",0x0bd08e86,"thx.Arrays.ifEmpty","thx/Arrays.hx",595,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(alt,"alt")
HXLINE( 595)		Bool _hx_tmp;
HXDLIN( 595)		if (hx::IsNotNull( array )) {
HXLINE( 595)			_hx_tmp = ((int)0 != array->get_length());
            		}
            		else {
HXLINE( 595)			_hx_tmp = false;
            		}
HXDLIN( 595)		if (_hx_tmp) {
HXLINE( 595)			return array;
            		}
            		else {
HXLINE( 595)			return alt;
            		}
HXDLIN( 595)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,ifEmpty,return )

::cpp::VirtualArray Arrays_obj::initial(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","initial",0xfdb3719a,"thx.Arrays.initial","thx/Arrays.hx",601,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 601)		Int _hx_tmp = (array->get_length() - (int)1);
HXDLIN( 601)		return array->slice((int)0,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,initial,return )

::cpp::VirtualArray Arrays_obj::intersperse(::cpp::VirtualArray array, ::Dynamic value){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(3)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc, ::Dynamic v,Int i){
            			HX_STACK_FRAME("thx.Arrays","intersperse",0x3641898e,"thx.Arrays.intersperse","thx/Arrays.hx",607,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(v,"v")
            			HX_STACK_ARG(i,"i")
HXLINE( 608)			acc->set((i * (int)2),v);
HXLINE( 609)			return acc;
            		}
            		HX_END_LOCAL_FUNC3(return)

            	HX_STACK_FRAME("thx.Arrays","intersperse",0x3641898e,"thx.Arrays.intersperse","thx/Arrays.hx",607,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(value,"value")
HXLINE( 610)		Int _hx_tmp = ((array->get_length() * (int)2) - (int)1);
HXDLIN( 610)		::cpp::VirtualArray _hx_tmp1 = ::thx::Arrays_obj::create(_hx_tmp,value);
HXLINE( 607)		return ( (::cpp::VirtualArray)(::thx::Arrays_obj::reducei(array, ::Dynamic(new _hx_Closure_0()),_hx_tmp1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,intersperse,return )

Bool Arrays_obj::isEmpty(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","isEmpty",0x3e743f59,"thx.Arrays.isEmpty","thx/Arrays.hx",616,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 616)		if (hx::IsNotNull( array )) {
HXLINE( 616)			return (array->get_length() == (int)0);
            		}
            		else {
HXLINE( 616)			return true;
            		}
HXDLIN( 616)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,isEmpty,return )

 ::Dynamic Arrays_obj::last(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","last",0x771abf80,"thx.Arrays.last","thx/Arrays.hx",622,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 622)		return array->__get((array->get_length() - (int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,last,return )

::cpp::VirtualArray Arrays_obj::mapi(::cpp::VirtualArray array, ::Dynamic callback){
            	HX_STACK_FRAME("thx.Arrays","mapi",0x77c3f377,"thx.Arrays.mapi","thx/Arrays.hx",628,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 632)		HX_VARI( ::cpp::VirtualArray,r) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 633)		{
HXLINE( 633)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 633)			HX_VARI( Int,_g) = array->get_length();
HXDLIN( 633)			while((_g1 < _g)){
HXLINE( 633)				HX_VARI( Int,i) = _g1++;
HXLINE( 634)				 ::Dynamic _hx_tmp = callback(array->__get(i),i);
HXDLIN( 634)				r->push(_hx_tmp);
            			}
            		}
HXLINE( 635)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,mapi,return )

::cpp::VirtualArray Arrays_obj::mapRight(::cpp::VirtualArray array, ::Dynamic callback){
            	HX_STACK_FRAME("thx.Arrays","mapRight",0x00670dca,"thx.Arrays.mapRight","thx/Arrays.hx",642,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 643)		HX_VARI( Int,i) = array->get_length();
HXDLIN( 643)		HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 645)		while(true){
HXLINE( 645)			Int _hx_tmp = --i;
HXDLIN( 645)			if (!((_hx_tmp >= (int)0))) {
HXLINE( 645)				goto _hx_goto_36;
            			}
HXLINE( 646)			 ::Dynamic _hx_tmp1 = callback(array->__get(i));
HXDLIN( 646)			result->push(_hx_tmp1);
            		}
            		_hx_goto_36:;
HXLINE( 647)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,mapRight,return )

::cpp::VirtualArray Arrays_obj::order(::cpp::VirtualArray array, ::Dynamic sort){
            	HX_STACK_FRAME("thx.Arrays","order",0x85b1c024,"thx.Arrays.order","thx/Arrays.hx",653,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(sort,"sort")
HXLINE( 654)		HX_VARI( ::cpp::VirtualArray,n) = array->copy();
HXLINE( 655)		n->sort(sort);
HXLINE( 656)		return n;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,order,return )

void Arrays_obj::pull(::cpp::VirtualArray array,::cpp::VirtualArray toRemove, ::Dynamic equality){
            	HX_STACK_FRAME("thx.Arrays","pull",0x79cec0ef,"thx.Arrays.pull","thx/Arrays.hx",664,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(toRemove,"toRemove")
            	HX_STACK_ARG(equality,"equality")
HXLINE( 664)		HX_VARI(  ::Dynamic,tmp) = toRemove->iterator();
HXDLIN( 664)		while(true){
HXLINE( 664)			Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 664)			if (_hx_tmp) {
HXLINE( 664)				goto _hx_goto_37;
            			}
HXDLIN( 664)			HX_VARI(  ::Dynamic,element) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 665)			::thx::Arrays_obj::removeAll(array,element,equality);
            		}
            		_hx_goto_37:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,pull,(void))

::cpp::VirtualArray Arrays_obj::pushIf(::cpp::VirtualArray array,Bool condition, ::Dynamic value){
            	HX_STACK_FRAME("thx.Arrays","pushIf",0xa051d001,"thx.Arrays.pushIf","thx/Arrays.hx",670,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(condition,"condition")
            	HX_STACK_ARG(value,"value")
HXLINE( 671)		if (condition) {
HXLINE( 672)			array->push(value);
            		}
HXLINE( 673)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,pushIf,return )

::Array< Int > Arrays_obj::rank(::cpp::VirtualArray array, ::Dynamic compare, ::Dynamic __o_incrementDuplicates){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v,Int i){
            			HX_STACK_FRAME("thx.Arrays","rank",0x7b1202d6,"thx.Arrays.rank","thx/Arrays.hx",688,0x537e0999)
            			HX_STACK_ARG(v,"v")
            			HX_STACK_ARG(i,"i")
HXLINE( 688)			return  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("_0",f1,52,00,00),v)
            				->setFixed(1,HX_("_1",f2,52,00,00),i));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,compare) HXARGC(2)
            		Int _hx_run( ::Dynamic a, ::Dynamic b){
            			HX_STACK_FRAME("thx.Arrays","rank",0x7b1202d6,"thx.Arrays.rank","thx/Arrays.hx",689,0x537e0999)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE( 689)			return ( (Int)(compare( ::Dynamic(a->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(b->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)))) );
            		}
            		HX_END_LOCAL_FUNC2(return)

 ::Dynamic incrementDuplicates = __o_incrementDuplicates.Default(true);
            	HX_STACK_FRAME("thx.Arrays","rank",0x7b1202d6,"thx.Arrays.rank","thx/Arrays.hx",687,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(compare,"compare")
            	HX_STACK_ARG(incrementDuplicates,"incrementDuplicates")
HXLINE( 688)		HX_VARI( ::Array< ::Dynamic>,arr) = ::thx::Arrays_obj::mapi(array, ::Dynamic(new _hx_Closure_0()));
HXLINE( 689)		arr->sort( ::Dynamic(new _hx_Closure_1(compare)));
HXLINE( 690)		if (incrementDuplicates) {
            			HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_2,::Array< ::Dynamic>,arr, ::Dynamic,compare, ::haxe::ds::IntMap,usedIndexes) HXARGC(3)
            			::Array< Int > _hx_run(::Array< Int > acc, ::Dynamic x,Int i1){
            				HX_STACK_FRAME("thx.Arrays","rank",0x7b1202d6,"thx.Arrays.rank","thx/Arrays.hx",692,0x537e0999)
            				HX_STACK_ARG(acc,"acc")
            				HX_STACK_ARG(x,"x")
            				HX_STACK_ARG(i1,"i1")
HXLINE( 693)				HX_VAR( Int,index);
HXDLIN( 693)				Bool _hx_tmp;
HXDLIN( 693)				if ((i1 > (int)0)) {
HXLINE( 693)					Int _hx_tmp1 = ( (Int)(compare( ::Dynamic(arr->__get((i1 - (int)1))->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(x->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)))) );
HXDLIN( 693)					_hx_tmp = (_hx_tmp1 == (int)0);
            				}
            				else {
HXLINE( 693)					_hx_tmp = false;
            				}
HXDLIN( 693)				if (_hx_tmp) {
HXLINE( 693)					index = acc->__get(( (Int)(arr->__get((i1 - (int)1))->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)) ));
            				}
            				else {
HXLINE( 693)					index = i1;
            				}
HXLINE( 694)				while(true){
HXLINE( 694)					Bool _hx_tmp2 = !(usedIndexes->exists(index));
HXDLIN( 694)					if (_hx_tmp2) {
HXLINE( 694)						goto _hx_goto_38;
            					}
HXLINE( 695)					++index;
            				}
            				_hx_goto_38:;
HXLINE( 697)				::thx::_Set::Set_Impl__obj::add(usedIndexes,index);
HXLINE( 698)				acc[( (Int)(x->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)) )] = index;
HXLINE( 699)				return acc;
            			}
            			HX_END_LOCAL_FUNC3(return)

HXLINE( 691)			HX_VARI(  ::haxe::ds::IntMap,usedIndexes) = ::thx::_Set::Set_Impl__obj::createInt(null());
HXLINE( 692)			return ( (::Array< Int >)(::thx::Arrays_obj::reducei(arr, ::Dynamic(new _hx_Closure_2(arr,compare,usedIndexes)),::Array_obj< Int >::__new(0))) );
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_3,::Array< ::Dynamic>,arr, ::Dynamic,compare) HXARGC(3)
            			::Array< Int > _hx_run(::Array< Int > acc1, ::Dynamic x1,Int i2){
            				HX_STACK_FRAME("thx.Arrays","rank",0x7b1202d6,"thx.Arrays.rank","thx/Arrays.hx",702,0x537e0999)
            				HX_STACK_ARG(acc1,"acc1")
            				HX_STACK_ARG(x1,"x1")
            				HX_STACK_ARG(i2,"i2")
HXLINE( 703)				Int _hx_tmp3 = ( (Int)(x1->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)) );
HXDLIN( 703)				Int _hx_tmp4;
HXDLIN( 703)				Bool _hx_tmp5;
HXDLIN( 703)				if ((i2 > (int)0)) {
HXLINE( 703)					Int _hx_tmp6 = ( (Int)(compare( ::Dynamic(arr->__get((i2 - (int)1))->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(x1->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)))) );
HXDLIN( 703)					_hx_tmp5 = (_hx_tmp6 == (int)0);
            				}
            				else {
HXLINE( 703)					_hx_tmp5 = false;
            				}
HXDLIN( 703)				if (_hx_tmp5) {
HXLINE( 703)					_hx_tmp4 = acc1->__get(( (Int)(arr->__get((i2 - (int)1))->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)) ));
            				}
            				else {
HXLINE( 703)					_hx_tmp4 = i2;
            				}
HXDLIN( 703)				acc1[_hx_tmp3] = _hx_tmp4;
HXLINE( 704)				return acc1;
            			}
            			HX_END_LOCAL_FUNC3(return)

HXLINE( 702)			return ( (::Array< Int >)(::thx::Arrays_obj::reducei(arr, ::Dynamic(new _hx_Closure_3(arr,compare)),::Array_obj< Int >::__new(0))) );
            		}
HXLINE( 690)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,rank,return )

 ::Dynamic Arrays_obj::reduce(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial){
            	HX_STACK_FRAME("thx.Arrays","reduce",0x2cbf0150,"thx.Arrays.reduce","thx/Arrays.hx",712,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(initial,"initial")
HXLINE( 713)		{
HXLINE( 713)			HX_VARI(  ::Dynamic,tmp) = array->iterator();
HXDLIN( 713)			while(true){
HXLINE( 713)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 713)				if (_hx_tmp) {
HXLINE( 713)					goto _hx_goto_39;
            				}
HXDLIN( 713)				HX_VARI(  ::Dynamic,v) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 714)				initial = f(initial,v);
            			}
            			_hx_goto_39:;
            		}
HXLINE( 715)		return initial;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,reduce,return )

 ::Dynamic Arrays_obj::foldLeft(::cpp::VirtualArray array, ::Dynamic init, ::Dynamic f){
            	HX_STACK_FRAME("thx.Arrays","foldLeft",0x66ceb6d2,"thx.Arrays.foldLeft","thx/Arrays.hx",722,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(init,"init")
            	HX_STACK_ARG(f,"f")
HXLINE( 722)		return ::thx::Arrays_obj::reduce(array,f,init);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,foldLeft,return )

::hx::EnumBase Arrays_obj::foldLeftEither(::cpp::VirtualArray array, ::Dynamic init, ::Dynamic f){
            	HX_STACK_FRAME("thx.Arrays","foldLeftEither",0x2d0571b7,"thx.Arrays.foldLeftEither","thx/Arrays.hx",724,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(init,"init")
            	HX_STACK_ARG(f,"f")
HXLINE( 725)		HX_VARI( ::hx::EnumBase,acc) = ::thx::Either_obj::Right(init);
HXLINE( 726)		{
HXLINE( 726)			HX_VARI(  ::Dynamic,tmp) = array->iterator();
HXDLIN( 726)			while(true){
HXLINE( 726)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 726)				if (_hx_tmp) {
HXLINE( 726)					goto _hx_goto_40;
            				}
HXDLIN( 726)				HX_VARI(  ::Dynamic,a) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 727)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(acc) )->_hx_getIndex();
HXDLIN( 727)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE( 728)						return acc;
            					}
            					break;
            					case (int)1: {
HXLINE( 729)						acc = f(acc->_hx_getObject(0),a);
            					}
            					break;
            				}
            			}
            			_hx_goto_40:;
            		}
HXLINE( 733)		return acc;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,foldLeftEither,return )

 ::Dynamic Arrays_obj::foldMap(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic m){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,_e) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic a0, ::Dynamic a1){
            			HX_STACK_FRAME("thx.Arrays","foldMap",0x96d97e31,"thx.Arrays.foldMap","thx/Arrays.hx",740,0x537e0999)
            			HX_STACK_ARG(a0,"a0")
            			HX_STACK_ARG(a1,"a1")
HXLINE( 740)			return ::thx::_Monoid::Monoid_Impl__obj::append(_e,a0,a1);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","foldMap",0x96d97e31,"thx.Arrays.foldMap","thx/Arrays.hx",740,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(m,"m")
HXLINE( 740)		HX_VARI_NAME( ::cpp::VirtualArray,array1,"array") = array->map(f);
HXDLIN( 740)		HX_VARI(  ::Dynamic,init) = ::thx::_Monoid::Monoid_Impl__obj::get_zero(m);
HXDLIN( 740)		HX_VARI(  ::Dynamic,_e) = m;
HXDLIN( 740)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_0(_e));
HXDLIN( 740)		return ::thx::Arrays_obj::reduce(array1,_hx_tmp,init);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,foldMap,return )

 ::Dynamic Arrays_obj::fold(::cpp::VirtualArray array, ::Dynamic m){
            	HX_STACK_FRAME("thx.Arrays","fold",0x732e112b,"thx.Arrays.fold","thx/Arrays.hx",746,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(m,"m")
HXLINE( 746)		return ::thx::Arrays_obj::foldMap(array,::thx::Functions_obj::identity_dyn(),m);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,fold,return )

::hx::EnumBase Arrays_obj::nel(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","nel",0x39f06e6b,"thx.Arrays.nel","thx/Arrays.hx",752,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 752)		return ::thx::_Nel::Nel_Impl__obj::fromArray(array);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,nel,return )

::hx::EnumBase Arrays_obj::foldS(::cpp::VirtualArray array, ::Dynamic s){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,s) HXARGC(1)
            		 ::Dynamic _hx_run(::hx::EnumBase x){
            			HX_STACK_FRAME("thx.Arrays","foldS",0x5520f4c8,"thx.Arrays.foldS","thx/Arrays.hx",758,0x537e0999)
            			HX_STACK_ARG(x,"x")
HXLINE( 758)			return ::thx::_Nel::Nel_Impl__obj::fold(x,s);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Arrays","foldS",0x5520f4c8,"thx.Arrays.foldS","thx/Arrays.hx",758,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(s,"s")
HXLINE( 758)		::hx::EnumBase _hx_tmp = ::thx::Arrays_obj::nel(array);
HXDLIN( 758)		return ::thx::Options_obj::map(_hx_tmp, ::Dynamic(new _hx_Closure_0(s)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,foldS,return )

::cpp::VirtualArray Arrays_obj::resize(::cpp::VirtualArray array,Int length, ::Dynamic fill){
            	HX_STACK_FRAME("thx.Arrays","resize",0x36a02d9e,"thx.Arrays.resize","thx/Arrays.hx",766,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(length,"length")
            	HX_STACK_ARG(fill,"fill")
HXLINE( 767)		while((array->get_length() < length)){
HXLINE( 768)			array->push(fill);
            		}
HXLINE( 769)		Int _hx_tmp = (array->get_length() - length);
HXDLIN( 769)		array->splice(length,_hx_tmp);
HXLINE( 770)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,resize,return )

 ::Dynamic Arrays_obj::reducei(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial){
            	HX_STACK_FRAME("thx.Arrays","reducei",0xfa622519,"thx.Arrays.reducei","thx/Arrays.hx",776,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(initial,"initial")
HXLINE( 777)		{
HXLINE( 777)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 777)			HX_VARI( Int,_g) = array->get_length();
HXDLIN( 777)			while((_g1 < _g)){
HXLINE( 777)				HX_VARI( Int,i) = _g1++;
HXLINE( 778)				initial = f(initial,array->__get(i),i);
            			}
            		}
HXLINE( 779)		return initial;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,reducei,return )

 ::Dynamic Arrays_obj::reduceRight(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial){
            	HX_STACK_FRAME("thx.Arrays","reduceRight",0x135bb86c,"thx.Arrays.reduceRight","thx/Arrays.hx",785,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(initial,"initial")
HXLINE( 786)		HX_VARI( Int,i) = array->get_length();
HXLINE( 787)		while(true){
HXLINE( 787)			Int _hx_tmp = --i;
HXDLIN( 787)			if (!((_hx_tmp >= (int)0))) {
HXLINE( 787)				goto _hx_goto_43;
            			}
HXLINE( 788)			initial = f(initial,array->__get(i));
            		}
            		_hx_goto_43:;
HXLINE( 789)		return initial;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,reduceRight,return )

void Arrays_obj::removeAll(::cpp::VirtualArray array, ::Dynamic element, ::Dynamic equality){
            	HX_STACK_FRAME("thx.Arrays","removeAll",0xf3a469d3,"thx.Arrays.removeAll","thx/Arrays.hx",796,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(element,"element")
            	HX_STACK_ARG(equality,"equality")
HXLINE( 797)		Bool _hx_tmp = hx::IsNull( equality );
HXDLIN( 797)		if (_hx_tmp) {
HXLINE( 798)			equality = ::thx::Functions_obj::equality_dyn();
            		}
HXLINE( 799)		HX_VARI( Int,i) = array->get_length();
HXLINE( 800)		while(true){
HXLINE( 800)			Int _hx_tmp1 = --i;
HXDLIN( 800)			if (!((_hx_tmp1 >= (int)0))) {
HXLINE( 800)				goto _hx_goto_44;
            			}
HXLINE( 801)			Bool _hx_tmp2 = ( (Bool)(equality(array->__get(i),element)) );
HXDLIN( 801)			if (_hx_tmp2) {
HXLINE( 802)				array->splice(i,(int)1);
            			}
            		}
            		_hx_goto_44:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,removeAll,(void))

::cpp::VirtualArray Arrays_obj::rest(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","rest",0x7b15103e,"thx.Arrays.rest","thx/Arrays.hx",809,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 809)		return array->slice((int)1,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,rest,return )

::cpp::VirtualArray Arrays_obj::reversed(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","reversed",0x2176572c,"thx.Arrays.reversed","thx/Arrays.hx",814,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 815)		HX_VARI( ::cpp::VirtualArray,result) = array->copy();
HXLINE( 816)		result->reverse();
HXLINE( 817)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,reversed,return )

::cpp::VirtualArray Arrays_obj::sample(::cpp::VirtualArray array,Int n){
            	HX_STACK_FRAME("thx.Arrays","sample",0x4b6f33d4,"thx.Arrays.sample","thx/Arrays.hx",824,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(n,"n")
HXLINE( 825)		HX_VARI( Int,b) = array->get_length();
HXDLIN( 825)		Bool _hx_tmp = (n < b);
HXDLIN( 825)		if (_hx_tmp) {
HXLINE( 825)			n = n;
            		}
            		else {
HXLINE( 825)			n = b;
            		}
HXLINE( 826)		HX_VARI( ::cpp::VirtualArray,copy) = array->copy();
HXDLIN( 826)		HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 828)		{
HXLINE( 828)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 828)			HX_VARI( Int,_g) = n;
HXDLIN( 828)			while((_g1 < _g)){
HXLINE( 828)				++_g1;
HXLINE( 829)				Int _hx_tmp1 = ::Std_obj::random(copy->get_length());
HXDLIN( 829)				::cpp::VirtualArray _hx_tmp2 = copy->splice(_hx_tmp1,(int)1);
HXDLIN( 829)				result->push(_hx_tmp2->__get((int)0));
            			}
            		}
HXLINE( 830)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,sample,return )

 ::Dynamic Arrays_obj::sampleOne(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","sampleOne",0x86303af2,"thx.Arrays.sampleOne","thx/Arrays.hx",837,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 837)		HX_VARI( Int,index) = ::Std_obj::random(array->get_length());
HXDLIN( 837)		return array->__get(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,sampleOne,return )

::String Arrays_obj::string(::cpp::VirtualArray arr){
            	HX_STACK_FRAME("thx.Arrays","string",0x3f54fc7b,"thx.Arrays.string","thx/Arrays.hx",842,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
HXLINE( 843)		HX_VARI( ::Array< ::String >,strings) = arr->map(::thx::Dynamics_obj::string_dyn());
HXLINE( 844)		::String _hx_tmp = strings->join(HX_(", ",74,26,00,00));
HXDLIN( 844)		return ((HX_("[",5b,00,00,00) + _hx_tmp) + HX_("]",5d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,string,return )

::cpp::VirtualArray Arrays_obj::shuffle(::cpp::VirtualArray a){
            	HX_STACK_FRAME("thx.Arrays","shuffle",0x16f1a70f,"thx.Arrays.shuffle","thx/Arrays.hx",850,0x537e0999)
            	HX_STACK_ARG(a,"a")
HXLINE( 851)		HX_VARI( ::Array< Int >,t) = ::thx::Ints_obj::range(a->get_length(),null(),null());
HXDLIN( 851)		HX_VARI( ::cpp::VirtualArray,array) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 853)		while((t->length > (int)0)){
HXLINE( 854)			HX_VARI( Int,pos) = ::Std_obj::random(t->length);
HXDLIN( 854)			HX_VARI( Int,index) = t->__get(pos);
HXLINE( 856)			t->removeRange(pos,(int)1);
HXLINE( 857)			array->push(a->__get(index));
            		}
HXLINE( 859)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,shuffle,return )

::Array< ::Dynamic> Arrays_obj::split(::cpp::VirtualArray array,Int parts){
            	HX_STACK_FRAME("thx.Arrays","split",0xd1ffba70,"thx.Arrays.split","thx/Arrays.hx",865,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(parts,"parts")
HXLINE( 866)		Float _hx_tmp = ((Float)array->get_length() / (Float)parts);
HXDLIN( 866)		HX_VARI( Int,len) = ::Math_obj::ceil(_hx_tmp);
HXLINE( 867)		return ::thx::Arrays_obj::splitBy(array,len);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,split,return )

::Array< ::Dynamic> Arrays_obj::splitBy(::cpp::VirtualArray array,Int len){
            	HX_STACK_FRAME("thx.Arrays","splitBy",0x1d377067,"thx.Arrays.splitBy","thx/Arrays.hx",873,0x537e0999)
            	HX_STACK_ARG(array,"array")
            	HX_STACK_ARG(len,"len")
HXLINE( 874)		HX_VARI( ::Array< ::Dynamic>,res) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 875)		HX_VARI( Int,b) = array->get_length();
HXDLIN( 875)		Bool _hx_tmp = (len < b);
HXDLIN( 875)		if (_hx_tmp) {
HXLINE( 875)			len = len;
            		}
            		else {
HXLINE( 875)			len = b;
            		}
HXLINE( 876)		{
HXLINE( 876)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 876)			Float _hx_tmp1 = ((Float)array->get_length() / (Float)len);
HXDLIN( 876)			HX_VARI( Int,_g) = ::Math_obj::ceil(_hx_tmp1);
HXDLIN( 876)			while((_g1 < _g)){
HXLINE( 876)				HX_VARI( Int,p) = _g1++;
HXLINE( 877)				::cpp::VirtualArray _hx_tmp2 = array->slice((p * len),((p + (int)1) * len));
HXDLIN( 877)				res->push(_hx_tmp2);
            			}
            		}
HXLINE( 879)		return res;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,splitBy,return )

::Array< ::Dynamic> Arrays_obj::splitByPad(::cpp::VirtualArray arr,Int len, ::Dynamic pad){
            	HX_STACK_FRAME("thx.Arrays","splitByPad",0x0b60932c,"thx.Arrays.splitByPad","thx/Arrays.hx",885,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(len,"len")
            	HX_STACK_ARG(pad,"pad")
HXLINE( 886)		HX_VARI( ::Array< ::Dynamic>,res) = ::thx::Arrays_obj::splitBy(arr,len);
HXLINE( 887)		while((::cpp::VirtualArray( res->__get((res->length - (int)1)))->get_length() < len)){
HXLINE( 888)			::cpp::VirtualArray _hx_tmp = ::cpp::VirtualArray( res->__get((res->length - (int)1)));
HXDLIN( 888)			_hx_tmp->push(pad);
            		}
HXLINE( 889)		return res;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,splitByPad,return )

::cpp::VirtualArray Arrays_obj::tail(::cpp::VirtualArray array){
            	HX_STACK_FRAME("thx.Arrays","tail",0x7c646bba,"thx.Arrays.tail","thx/Arrays.hx",896,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 896)		return array->slice((int)1,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,tail,return )

::cpp::VirtualArray Arrays_obj::take(::cpp::VirtualArray arr,Int n){
            	HX_STACK_FRAME("thx.Arrays","take",0x7c646d71,"thx.Arrays.take","thx/Arrays.hx",902,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(n,"n")
HXLINE( 902)		return arr->slice((int)0,n);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,take,return )

::cpp::VirtualArray Arrays_obj::takeLast(::cpp::VirtualArray arr,Int n){
            	HX_STACK_FRAME("thx.Arrays","takeLast",0x6e6cb067,"thx.Arrays.takeLast","thx/Arrays.hx",907,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(n,"n")
HXLINE( 907)		Int _hx_tmp = (arr->get_length() - n);
HXDLIN( 907)		return arr->slice(_hx_tmp,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,takeLast,return )

::hx::EnumBase Arrays_obj::traverseOption(::cpp::VirtualArray arr, ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::Dynamic,f) HXARGC(2)
            		::hx::EnumBase _hx_run(::hx::EnumBase acc, ::Dynamic t){
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			 ::Dynamic _hx_run(::cpp::VirtualArray ux){
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,ux) HXARGC(1)
            				::cpp::VirtualArray _hx_run( ::Dynamic u){
            					HX_STACK_FRAME("thx.Arrays","traverseOption",0xdce1a471,"thx.Arrays.traverseOption","thx/Arrays.hx",916,0x537e0999)
            					HX_STACK_ARG(u,"u")
HXLINE( 916)					ux->push(u);
HXDLIN( 916)					return ux;
            				}
            				HX_END_LOCAL_FUNC1(return)

            				HX_STACK_FRAME("thx.Arrays","traverseOption",0xdce1a471,"thx.Arrays.traverseOption","thx/Arrays.hx",916,0x537e0999)
            				HX_STACK_ARG(ux,"ux")
HXLINE( 916)				return  ::Dynamic(new _hx_Closure_0(ux));
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Arrays","traverseOption",0xdce1a471,"thx.Arrays.traverseOption","thx/Arrays.hx",916,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(t,"t")
HXLINE( 916)			::hx::EnumBase _hx_tmp1 = f(t);
HXDLIN( 916)			::hx::EnumBase _hx_tmp2 = ::thx::Options_obj::map(acc, ::Dynamic(new _hx_Closure_1()));
HXDLIN( 916)			return ::thx::Options_obj::ap(_hx_tmp1,_hx_tmp2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","traverseOption",0xdce1a471,"thx.Arrays.traverseOption","thx/Arrays.hx",915,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(f,"f")
HXLINE( 917)		::hx::EnumBase _hx_tmp = ::haxe::ds::Option_obj::Some(::cpp::VirtualArray_obj::__new(0));
HXLINE( 915)		return ::thx::Arrays_obj::reduce(arr, ::Dynamic(new _hx_Closure_2(f)),_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,traverseOption,return )

::hx::EnumBase Arrays_obj::traverseValidation(::cpp::VirtualArray arr, ::Dynamic f, ::Dynamic s){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_3, ::Dynamic,f, ::Dynamic,s) HXARGC(2)
            		::hx::EnumBase _hx_run(::hx::EnumBase acc, ::Dynamic t){
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			 ::Dynamic _hx_run(::cpp::VirtualArray ux){
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,ux) HXARGC(1)
            				::cpp::VirtualArray _hx_run( ::Dynamic u){
            					HX_STACK_FRAME("thx.Arrays","traverseValidation",0xaff60b35,"thx.Arrays.traverseValidation","thx/Arrays.hx",926,0x537e0999)
            					HX_STACK_ARG(u,"u")
HXLINE( 926)					ux->push(u);
HXDLIN( 926)					return ux;
            				}
            				HX_END_LOCAL_FUNC1(return)

            				HX_STACK_FRAME("thx.Arrays","traverseValidation",0xaff60b35,"thx.Arrays.traverseValidation","thx/Arrays.hx",926,0x537e0999)
            				HX_STACK_ARG(ux,"ux")
HXLINE( 926)				return  ::Dynamic(new _hx_Closure_0(ux));
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(2)
            			 ::Dynamic _hx_run( ::Dynamic e1, ::Dynamic e2){
            				HX_STACK_FRAME("thx.Arrays","traverseValidation",0xaff60b35,"thx.Arrays.traverseValidation","thx/Arrays.hx",926,0x537e0999)
            				HX_STACK_ARG(e1,"e1")
            				HX_STACK_ARG(e2,"e2")
HXLINE( 926)				HX_STACK_DO_THROW(HX_("Unreachable",f4,60,4c,63));
HXDLIN( 926)				return null();
            			}
            			HX_END_LOCAL_FUNC2(return)

            			HX_STACK_FRAME("thx.Arrays","traverseValidation",0xaff60b35,"thx.Arrays.traverseValidation","thx/Arrays.hx",926,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(t,"t")
HXLINE( 926)			::hx::EnumBase _hx_tmp = f(t);
HXDLIN( 926)			::hx::EnumBase _hx_tmp1 = ::thx::Either_obj::Right( ::Dynamic(new _hx_Closure_1()));
HXDLIN( 926)			::hx::EnumBase _hx_tmp2 = ::thx::_Validation::Validation_Impl__obj::ap(acc,_hx_tmp1, ::Dynamic(new _hx_Closure_2()));
HXDLIN( 926)			return ::thx::_Validation::Validation_Impl__obj::ap(_hx_tmp,_hx_tmp2,s);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","traverseValidation",0xaff60b35,"thx.Arrays.traverseValidation","thx/Arrays.hx",925,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(s,"s")
HXLINE( 925)		return ::thx::Arrays_obj::reduce(arr, ::Dynamic(new _hx_Closure_3(f,s)),::thx::Either_obj::Right(::cpp::VirtualArray_obj::__new(0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,traverseValidation,return )

::hx::EnumBase Arrays_obj::traverseValidationIndexed(::cpp::VirtualArray arr, ::Dynamic f, ::Dynamic s){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_3, ::Dynamic,f, ::Dynamic,s) HXARGC(3)
            		::hx::EnumBase _hx_run(::hx::EnumBase acc, ::Dynamic t,Int i){
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			 ::Dynamic _hx_run(::cpp::VirtualArray ux){
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,ux) HXARGC(1)
            				::cpp::VirtualArray _hx_run( ::Dynamic u){
            					HX_STACK_FRAME("thx.Arrays","traverseValidationIndexed",0x8b33793c,"thx.Arrays.traverseValidationIndexed","thx/Arrays.hx",936,0x537e0999)
            					HX_STACK_ARG(u,"u")
HXLINE( 936)					ux->push(u);
HXDLIN( 936)					return ux;
            				}
            				HX_END_LOCAL_FUNC1(return)

            				HX_STACK_FRAME("thx.Arrays","traverseValidationIndexed",0x8b33793c,"thx.Arrays.traverseValidationIndexed","thx/Arrays.hx",936,0x537e0999)
            				HX_STACK_ARG(ux,"ux")
HXLINE( 936)				return  ::Dynamic(new _hx_Closure_0(ux));
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(2)
            			 ::Dynamic _hx_run( ::Dynamic e1, ::Dynamic e2){
            				HX_STACK_FRAME("thx.Arrays","traverseValidationIndexed",0x8b33793c,"thx.Arrays.traverseValidationIndexed","thx/Arrays.hx",936,0x537e0999)
            				HX_STACK_ARG(e1,"e1")
            				HX_STACK_ARG(e2,"e2")
HXLINE( 936)				HX_STACK_DO_THROW(HX_("Unreachable",f4,60,4c,63));
HXDLIN( 936)				return null();
            			}
            			HX_END_LOCAL_FUNC2(return)

            			HX_STACK_FRAME("thx.Arrays","traverseValidationIndexed",0x8b33793c,"thx.Arrays.traverseValidationIndexed","thx/Arrays.hx",936,0x537e0999)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(t,"t")
            			HX_STACK_ARG(i,"i")
HXLINE( 936)			::hx::EnumBase _hx_tmp = f(t,i);
HXDLIN( 936)			::hx::EnumBase _hx_tmp1 = ::thx::Either_obj::Right( ::Dynamic(new _hx_Closure_1()));
HXDLIN( 936)			::hx::EnumBase _hx_tmp2 = ::thx::_Validation::Validation_Impl__obj::ap(acc,_hx_tmp1, ::Dynamic(new _hx_Closure_2()));
HXDLIN( 936)			return ::thx::_Validation::Validation_Impl__obj::ap(_hx_tmp,_hx_tmp2,s);
            		}
            		HX_END_LOCAL_FUNC3(return)

            	HX_STACK_FRAME("thx.Arrays","traverseValidationIndexed",0x8b33793c,"thx.Arrays.traverseValidationIndexed","thx/Arrays.hx",935,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(s,"s")
HXLINE( 935)		return ::thx::Arrays_obj::reducei(arr, ::Dynamic(new _hx_Closure_3(f,s)),::thx::Either_obj::Right(::cpp::VirtualArray_obj::__new(0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,traverseValidationIndexed,return )

::Array< ::Dynamic> Arrays_obj::rotate(::Array< ::Dynamic> arr){
            	HX_STACK_FRAME("thx.Arrays","rotate",0xf9451a05,"thx.Arrays.rotate","thx/Arrays.hx",943,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
HXLINE( 944)		HX_VARI( ::Array< ::Dynamic>,result) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 945)		{
HXLINE( 945)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 945)			HX_VARI( Int,_g) = ::cpp::VirtualArray( arr->__get((int)0))->get_length();
HXDLIN( 945)			while((_g1 < _g)){
HXLINE( 945)				HX_VARI( Int,i) = _g1++;
HXLINE( 946)				HX_VARI( ::cpp::VirtualArray,row) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 947)				result->push(row);
HXLINE( 948)				{
HXLINE( 948)					HX_VARI( Int,_g3) = (int)0;
HXDLIN( 948)					HX_VARI( Int,_g2) = arr->length;
HXDLIN( 948)					while((_g3 < _g2)){
HXLINE( 948)						HX_VARI( Int,j) = _g3++;
HXLINE( 949)						row->push(::cpp::VirtualArray( arr->__get(j))->__get(i));
            					}
            				}
            			}
            		}
HXLINE( 952)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,rotate,return )

::cpp::VirtualArray Arrays_obj::sliding2(::cpp::VirtualArray arr, ::Dynamic f){
            	HX_STACK_FRAME("thx.Arrays","sliding2",0xb1be0dee,"thx.Arrays.sliding2","thx/Arrays.hx",956,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(f,"f")
HXLINE( 956)		Bool _hx_tmp = (arr->get_length() < (int)2);
HXDLIN( 956)		if (_hx_tmp) {
HXLINE( 957)			return ::cpp::VirtualArray_obj::__new(0);
            		}
            		else {
HXLINE( 959)			HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 960)			{
HXLINE( 960)				HX_VARI( Int,_g1) = (int)0;
HXDLIN( 960)				HX_VARI( Int,_g) = (arr->get_length() - (int)1);
HXDLIN( 960)				while((_g1 < _g)){
HXLINE( 960)					HX_VARI( Int,i) = _g1++;
HXLINE( 961)					 ::Dynamic _hx_tmp1 = f(arr->__get(i),arr->__get((i + (int)1)));
HXDLIN( 961)					result->push(_hx_tmp1);
            				}
            			}
HXLINE( 963)			return result;
            		}
HXLINE( 956)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,sliding2,return )

 ::Dynamic Arrays_obj::unzip(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,a2,::cpp::VirtualArray,a1) HXARGC(1)
            		void _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.Arrays","unzip",0xf78515be,"thx.Arrays.unzip","thx/Arrays.hx",972,0x537e0999)
            			HX_STACK_ARG(t,"t")
HXLINE( 973)			a1->push( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)));
HXLINE( 974)			a2->push( ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Arrays","unzip",0xf78515be,"thx.Arrays.unzip","thx/Arrays.hx",970,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 971)		HX_VARI( ::cpp::VirtualArray,a1) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 971)		HX_VARI( ::cpp::VirtualArray,a2) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 972)		array->map( ::Dynamic(new _hx_Closure_0(a2,a1)));
HXLINE( 976)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("_0",f1,52,00,00),a1)
            			->setFixed(1,HX_("_1",f2,52,00,00),a2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,unzip,return )

 ::Dynamic Arrays_obj::unzip3(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,a2,::cpp::VirtualArray,a1,::cpp::VirtualArray,a3) HXARGC(1)
            		void _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.Arrays","unzip3",0x9cedf0b5,"thx.Arrays.unzip3","thx/Arrays.hx",984,0x537e0999)
            			HX_STACK_ARG(t,"t")
HXLINE( 985)			a1->push( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)));
HXLINE( 986)			a2->push( ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
HXLINE( 987)			a3->push( ::Dynamic(t->__Field(HX_("_2",f3,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Arrays","unzip3",0x9cedf0b5,"thx.Arrays.unzip3","thx/Arrays.hx",982,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 983)		HX_VARI( ::cpp::VirtualArray,a1) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 983)		HX_VARI( ::cpp::VirtualArray,a2) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 983)		HX_VARI( ::cpp::VirtualArray,a3) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 984)		array->map( ::Dynamic(new _hx_Closure_0(a2,a1,a3)));
HXLINE( 989)		return  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("_0",f1,52,00,00),a1)
            			->setFixed(1,HX_("_1",f2,52,00,00),a2)
            			->setFixed(2,HX_("_2",f3,52,00,00),a3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,unzip3,return )

 ::Dynamic Arrays_obj::unzip4(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,a2,::cpp::VirtualArray,a1,::cpp::VirtualArray,a4,::cpp::VirtualArray,a3) HXARGC(1)
            		void _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.Arrays","unzip4",0x9cedf0b6,"thx.Arrays.unzip4","thx/Arrays.hx",997,0x537e0999)
            			HX_STACK_ARG(t,"t")
HXLINE( 998)			a1->push( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)));
HXLINE( 999)			a2->push( ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
HXLINE(1000)			a3->push( ::Dynamic(t->__Field(HX_("_2",f3,52,00,00),hx::paccDynamic)));
HXLINE(1001)			a4->push( ::Dynamic(t->__Field(HX_("_3",f4,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Arrays","unzip4",0x9cedf0b6,"thx.Arrays.unzip4","thx/Arrays.hx",995,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE( 996)		HX_VARI( ::cpp::VirtualArray,a1) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 996)		HX_VARI( ::cpp::VirtualArray,a2) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 996)		HX_VARI( ::cpp::VirtualArray,a3) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN( 996)		HX_VARI( ::cpp::VirtualArray,a4) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 997)		array->map( ::Dynamic(new _hx_Closure_0(a2,a1,a4,a3)));
HXLINE(1003)		return  ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("_0",f1,52,00,00),a1)
            			->setFixed(1,HX_("_1",f2,52,00,00),a2)
            			->setFixed(2,HX_("_2",f3,52,00,00),a3)
            			->setFixed(3,HX_("_3",f4,52,00,00),a4));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,unzip4,return )

 ::Dynamic Arrays_obj::unzip5(::Array< ::Dynamic> array){
            		HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,a2,::cpp::VirtualArray,a5,::cpp::VirtualArray,a1,::cpp::VirtualArray,a4,::cpp::VirtualArray,a3) HXARGC(1)
            		void _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.Arrays","unzip5",0x9cedf0b7,"thx.Arrays.unzip5","thx/Arrays.hx",1011,0x537e0999)
            			HX_STACK_ARG(t,"t")
HXLINE(1012)			a1->push( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)));
HXLINE(1013)			a2->push( ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
HXLINE(1014)			a3->push( ::Dynamic(t->__Field(HX_("_2",f3,52,00,00),hx::paccDynamic)));
HXLINE(1015)			a4->push( ::Dynamic(t->__Field(HX_("_3",f4,52,00,00),hx::paccDynamic)));
HXLINE(1016)			a5->push( ::Dynamic(t->__Field(HX_("_4",f5,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Arrays","unzip5",0x9cedf0b7,"thx.Arrays.unzip5","thx/Arrays.hx",1009,0x537e0999)
            	HX_STACK_ARG(array,"array")
HXLINE(1010)		HX_VARI( ::cpp::VirtualArray,a1) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN(1010)		HX_VARI( ::cpp::VirtualArray,a2) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN(1010)		HX_VARI( ::cpp::VirtualArray,a3) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN(1010)		HX_VARI( ::cpp::VirtualArray,a4) = ::cpp::VirtualArray_obj::__new(0);
HXDLIN(1010)		HX_VARI( ::cpp::VirtualArray,a5) = ::cpp::VirtualArray_obj::__new(0);
HXLINE(1011)		array->map( ::Dynamic(new _hx_Closure_0(a2,a5,a1,a4,a3)));
HXLINE(1018)		return  ::Dynamic(hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("_0",f1,52,00,00),a1)
            			->setFixed(1,HX_("_1",f2,52,00,00),a2)
            			->setFixed(2,HX_("_2",f3,52,00,00),a3)
            			->setFixed(3,HX_("_3",f4,52,00,00),a4)
            			->setFixed(4,HX_("_4",f5,52,00,00),a5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Arrays_obj,unzip5,return )

::Array< ::Dynamic> Arrays_obj::zip(::cpp::VirtualArray array1,::cpp::VirtualArray array2){
            	HX_STACK_FRAME("thx.Arrays","zip",0x39f98cf7,"thx.Arrays.zip","thx/Arrays.hx",1024,0x537e0999)
            	HX_STACK_ARG(array1,"array1")
            	HX_STACK_ARG(array2,"array2")
HXLINE(1025)		HX_VARI( Int,a) = array1->get_length();
HXDLIN(1025)		HX_VARI( Int,b) = array2->get_length();
HXDLIN(1025)		HX_VAR( Int,length);
HXDLIN(1025)		if ((a < b)) {
HXLINE(1025)			length = a;
            		}
            		else {
HXLINE(1025)			length = b;
            		}
HXDLIN(1025)		HX_VARI( ::Array< ::Dynamic>,array) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1027)		{
HXLINE(1027)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1027)			HX_VARI( Int,_g) = length;
HXDLIN(1027)			while((_g1 < _g)){
HXLINE(1027)				HX_VARI( Int,i) = _g1++;
HXLINE(1028)				array->push( ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("_0",f1,52,00,00),array1->__get(i))
            					->setFixed(1,HX_("_1",f2,52,00,00),array2->__get(i))));
            			}
            		}
HXLINE(1029)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,zip,return )

::Array< ::Dynamic> Arrays_obj::zip3(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3){
            	HX_STACK_FRAME("thx.Arrays","zip3",0x8061cb5c,"thx.Arrays.zip3","thx/Arrays.hx",1035,0x537e0999)
            	HX_STACK_ARG(array1,"array1")
            	HX_STACK_ARG(array2,"array2")
            	HX_STACK_ARG(array3,"array3")
HXLINE(1036)		HX_VARI(  ::Dynamic,length) = ::thx::ArrayInts_obj::min(::Array_obj< Int >::__new(3)->init(0,array1->get_length())->init(1,array2->get_length())->init(2,array3->get_length()));
HXDLIN(1036)		HX_VARI( ::Array< ::Dynamic>,array) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1038)		{
HXLINE(1038)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1038)			HX_VARI( Int,_g) = length;
HXDLIN(1038)			while((_g1 < _g)){
HXLINE(1038)				HX_VARI( Int,i) = _g1++;
HXLINE(1039)				array->push( ::Dynamic(hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("_0",f1,52,00,00),array1->__get(i))
            					->setFixed(1,HX_("_1",f2,52,00,00),array2->__get(i))
            					->setFixed(2,HX_("_2",f3,52,00,00),array3->__get(i))));
            			}
            		}
HXLINE(1040)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,zip3,return )

::Array< ::Dynamic> Arrays_obj::zip4(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3,::cpp::VirtualArray array4){
            	HX_STACK_FRAME("thx.Arrays","zip4",0x8061cb5d,"thx.Arrays.zip4","thx/Arrays.hx",1046,0x537e0999)
            	HX_STACK_ARG(array1,"array1")
            	HX_STACK_ARG(array2,"array2")
            	HX_STACK_ARG(array3,"array3")
            	HX_STACK_ARG(array4,"array4")
HXLINE(1047)		HX_VARI(  ::Dynamic,length) = ::thx::ArrayInts_obj::min(::Array_obj< Int >::__new(4)->init(0,array1->get_length())->init(1,array2->get_length())->init(2,array3->get_length())->init(3,array4->get_length()));
HXDLIN(1047)		HX_VARI( ::Array< ::Dynamic>,array) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1049)		{
HXLINE(1049)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1049)			HX_VARI( Int,_g) = length;
HXDLIN(1049)			while((_g1 < _g)){
HXLINE(1049)				HX_VARI( Int,i) = _g1++;
HXLINE(1050)				array->push( ::Dynamic(hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("_0",f1,52,00,00),array1->__get(i))
            					->setFixed(1,HX_("_1",f2,52,00,00),array2->__get(i))
            					->setFixed(2,HX_("_2",f3,52,00,00),array3->__get(i))
            					->setFixed(3,HX_("_3",f4,52,00,00),array4->__get(i))));
            			}
            		}
HXLINE(1051)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Arrays_obj,zip4,return )

::Array< ::Dynamic> Arrays_obj::zip5(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3,::cpp::VirtualArray array4,::cpp::VirtualArray array5){
            	HX_STACK_FRAME("thx.Arrays","zip5",0x8061cb5e,"thx.Arrays.zip5","thx/Arrays.hx",1057,0x537e0999)
            	HX_STACK_ARG(array1,"array1")
            	HX_STACK_ARG(array2,"array2")
            	HX_STACK_ARG(array3,"array3")
            	HX_STACK_ARG(array4,"array4")
            	HX_STACK_ARG(array5,"array5")
HXLINE(1058)		HX_VARI(  ::Dynamic,length) = ::thx::ArrayInts_obj::min(::Array_obj< Int >::__new(5)->init(0,array1->get_length())->init(1,array2->get_length())->init(2,array3->get_length())->init(3,array4->get_length())->init(4,array5->get_length()));
HXDLIN(1058)		HX_VARI( ::Array< ::Dynamic>,array) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1060)		{
HXLINE(1060)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1060)			HX_VARI( Int,_g) = length;
HXDLIN(1060)			while((_g1 < _g)){
HXLINE(1060)				HX_VARI( Int,i) = _g1++;
HXLINE(1061)				array->push( ::Dynamic(hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("_0",f1,52,00,00),array1->__get(i))
            					->setFixed(1,HX_("_1",f2,52,00,00),array2->__get(i))
            					->setFixed(2,HX_("_2",f3,52,00,00),array3->__get(i))
            					->setFixed(3,HX_("_3",f4,52,00,00),array4->__get(i))
            					->setFixed(4,HX_("_4",f5,52,00,00),array5->__get(i))));
            			}
            		}
HXLINE(1062)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Arrays_obj,zip5,return )

::cpp::VirtualArray Arrays_obj::zipAp(::cpp::VirtualArray ax,::Array< ::Dynamic> fx){
            	HX_STACK_FRAME("thx.Arrays","zipAp",0xd53031c6,"thx.Arrays.zipAp","thx/Arrays.hx",1068,0x537e0999)
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(fx,"fx")
HXLINE(1069)		HX_VARI( ::cpp::VirtualArray,result) = ::cpp::VirtualArray_obj::__new(0);
HXLINE(1070)		{
HXLINE(1070)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1070)			HX_VARI( Int,a) = ax->get_length();
HXDLIN(1070)			HX_VARI( Int,b) = fx->length;
HXDLIN(1070)			HX_VAR( Int,_g);
HXDLIN(1070)			if ((a < b)) {
HXLINE(1070)				_g = a;
            			}
            			else {
HXLINE(1070)				_g = b;
            			}
HXDLIN(1070)			while((_g1 < _g)){
HXLINE(1070)				HX_VARI( Int,i) = _g1++;
HXLINE(1071)				 ::Dynamic _hx_tmp = fx->__get(i)(ax->__get(i));
HXDLIN(1071)				result->push(_hx_tmp);
            			}
            		}
HXLINE(1073)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,zipAp,return )

::cpp::VirtualArray Arrays_obj::zip2Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx){
            	HX_STACK_FRAME("thx.Arrays","zip2Ap",0xb4efd12a,"thx.Arrays.zip2Ap","thx/Arrays.hx",1080,0x537e0999)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
HXLINE(1080)		 ::Dynamic _hx_tmp = ::thx::Functions2_obj::curry(f);
HXDLIN(1080)		::Array< ::Dynamic> _hx_tmp1 = ax->map(_hx_tmp);
HXDLIN(1080)		return ::thx::Arrays_obj::zipAp(bx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,zip2Ap,return )

::cpp::VirtualArray Arrays_obj::zip3Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b){
            			HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,b, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic c){
            				HX_STACK_FRAME("thx.Arrays","zip3Ap",0xb4f0936b,"thx.Arrays.zip3Ap","thx/Arrays.hx",1086,0x537e0999)
            				HX_STACK_ARG(c,"c")
HXLINE(1086)				return f1(a,b,c);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Arrays","zip3Ap",0xb4f0936b,"thx.Arrays.zip3Ap","thx/Arrays.hx",1086,0x537e0999)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE(1086)			return  ::Dynamic(new _hx_Closure_0(a,b,f1));
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Arrays","zip3Ap",0xb4f0936b,"thx.Arrays.zip3Ap","thx/Arrays.hx",1086,0x537e0999)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
HXLINE(1086)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN(1086)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN(1086)		::Array< ::Dynamic> _hx_tmp1 = ::thx::Arrays_obj::zip2Ap(_hx_tmp,ax,bx);
HXDLIN(1086)		return ::thx::Arrays_obj::zipAp(cx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Arrays_obj,zip3Ap,return )

::cpp::VirtualArray Arrays_obj::zip4Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx,::cpp::VirtualArray dx){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(3)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b, ::Dynamic c){
            			HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,b, ::Dynamic,c, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic d){
            				HX_STACK_FRAME("thx.Arrays","zip4Ap",0xb4f155ac,"thx.Arrays.zip4Ap","thx/Arrays.hx",1092,0x537e0999)
            				HX_STACK_ARG(d,"d")
HXLINE(1092)				return f1(a,b,c,d);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Arrays","zip4Ap",0xb4f155ac,"thx.Arrays.zip4Ap","thx/Arrays.hx",1092,0x537e0999)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
            			HX_STACK_ARG(c,"c")
HXLINE(1092)			return  ::Dynamic(new _hx_Closure_0(a,b,c,f1));
            		}
            		HX_END_LOCAL_FUNC3(return)

            	HX_STACK_FRAME("thx.Arrays","zip4Ap",0xb4f155ac,"thx.Arrays.zip4Ap","thx/Arrays.hx",1092,0x537e0999)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
            	HX_STACK_ARG(dx,"dx")
HXLINE(1092)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN(1092)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN(1092)		::Array< ::Dynamic> _hx_tmp1 = ::thx::Arrays_obj::zip3Ap(_hx_tmp,ax,bx,cx);
HXDLIN(1092)		return ::thx::Arrays_obj::zipAp(dx,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Arrays_obj,zip4Ap,return )

::cpp::VirtualArray Arrays_obj::zip5Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx,::cpp::VirtualArray dx,::cpp::VirtualArray ex){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f1) HXARGC(4)
            		 ::Dynamic _hx_run( ::Dynamic a, ::Dynamic b, ::Dynamic c, ::Dynamic d){
            			HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,d, ::Dynamic,b, ::Dynamic,c, ::Dynamic,f1) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic e){
            				HX_STACK_FRAME("thx.Arrays","zip5Ap",0xb4f217ed,"thx.Arrays.zip5Ap","thx/Arrays.hx",1098,0x537e0999)
            				HX_STACK_ARG(e,"e")
HXLINE(1098)				return f1(a,b,c,d,e);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Arrays","zip5Ap",0xb4f217ed,"thx.Arrays.zip5Ap","thx/Arrays.hx",1098,0x537e0999)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
            			HX_STACK_ARG(c,"c")
            			HX_STACK_ARG(d,"d")
HXLINE(1098)			return  ::Dynamic(new _hx_Closure_0(a,d,b,c,f1));
            		}
            		HX_END_LOCAL_FUNC4(return)

            	HX_STACK_FRAME("thx.Arrays","zip5Ap",0xb4f217ed,"thx.Arrays.zip5Ap","thx/Arrays.hx",1098,0x537e0999)
            	HX_STACK_ARG(f,"f")
            	HX_STACK_ARG(ax,"ax")
            	HX_STACK_ARG(bx,"bx")
            	HX_STACK_ARG(cx,"cx")
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(ex,"ex")
HXLINE(1098)		HX_VARI_NAME(  ::Dynamic,f1,"f") = f;
HXDLIN(1098)		 ::Dynamic _hx_tmp =  ::Dynamic(new _hx_Closure_1(f1));
HXDLIN(1098)		::Array< ::Dynamic> _hx_tmp1 = ::thx::Arrays_obj::zip4Ap(_hx_tmp,ax,bx,cx,dx);
HXDLIN(1098)		return ::thx::Arrays_obj::zipAp(ex,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Arrays_obj,zip5Ap,return )

::cpp::VirtualArray Arrays_obj::withPrepend(::cpp::VirtualArray arr, ::Dynamic el){
            	HX_STACK_FRAME("thx.Arrays","withPrepend",0xf22c59be,"thx.Arrays.withPrepend","thx/Arrays.hx",1104,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(el,"el")
HXLINE(1104)		return ::cpp::VirtualArray_obj::__new(1)->init(0,el)->concat(arr);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,withPrepend,return )

::cpp::VirtualArray Arrays_obj::with(::cpp::VirtualArray arr, ::Dynamic el){
            	HX_STACK_FRAME("thx.Arrays","with",0x7e662b30,"thx.Arrays.with","thx/Arrays.hx",1110,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(el,"el")
HXLINE(1110)		return arr->concat(::cpp::VirtualArray_obj::__new(1)->init(0,el));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,with,return )

::cpp::VirtualArray Arrays_obj::withSlice(::cpp::VirtualArray arr,::cpp::VirtualArray other,Int start, ::Dynamic __o_length){
 ::Dynamic length = __o_length.Default(0);
            	HX_STACK_FRAME("thx.Arrays","withSlice",0x2b747b02,"thx.Arrays.withSlice","thx/Arrays.hx",1116,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(start,"start")
            	HX_STACK_ARG(length,"length")
HXLINE(1116)		::cpp::VirtualArray _hx_tmp = arr->slice((int)0,start)->concat(other);
HXDLIN(1116)		::cpp::VirtualArray _hx_tmp1 = arr->slice((start + length),null());
HXDLIN(1116)		return _hx_tmp->concat(_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Arrays_obj,withSlice,return )

::cpp::VirtualArray Arrays_obj::withInsert(::cpp::VirtualArray arr, ::Dynamic el,Int pos){
            	HX_STACK_FRAME("thx.Arrays","withInsert",0x08506689,"thx.Arrays.withInsert","thx/Arrays.hx",1122,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(el,"el")
            	HX_STACK_ARG(pos,"pos")
HXLINE(1122)		::cpp::VirtualArray _hx_tmp = arr->slice((int)0,pos)->concat(::cpp::VirtualArray_obj::__new(1)->init(0,el));
HXDLIN(1122)		::cpp::VirtualArray _hx_tmp1 = arr->slice(pos,null());
HXDLIN(1122)		return _hx_tmp->concat(_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Arrays_obj,withInsert,return )

::hx::EnumBase Arrays_obj::maxBy(::cpp::VirtualArray arr, ::Dynamic ord){
            	HX_STACK_FRAME("thx.Arrays","maxBy",0x53b70531,"thx.Arrays.maxBy","thx/Arrays.hx",1128,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(ord,"ord")
HXLINE(1128)		Bool _hx_tmp = (arr->get_length() == (int)0);
HXDLIN(1128)		if (_hx_tmp) {
HXLINE(1128)			return ::haxe::ds::Option_obj::None_dyn();
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,_e) HXARGC(2)
            			 ::Dynamic _hx_run( ::Dynamic a0, ::Dynamic a1){
            				HX_STACK_FRAME("thx.Arrays","maxBy",0x53b70531,"thx.Arrays.maxBy","thx/Arrays.hx",1128,0x537e0999)
            				HX_STACK_ARG(a0,"a0")
            				HX_STACK_ARG(a1,"a1")
HXLINE(1128)				return ::thx::_Ord::Ord_Impl__obj::max(_e,a0,a1);
            			}
            			HX_END_LOCAL_FUNC2(return)

HXLINE(1128)			HX_VARI(  ::Dynamic,_e) = ord;
HXDLIN(1128)			 ::Dynamic _hx_tmp1 =  ::Dynamic(new _hx_Closure_0(_e));
HXDLIN(1128)			 ::Dynamic _hx_tmp2 = ::thx::Arrays_obj::reduce(arr,_hx_tmp1,arr->__get((int)0));
HXDLIN(1128)			return ::haxe::ds::Option_obj::Some(_hx_tmp2);
            		}
HXDLIN(1128)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,maxBy,return )

::hx::EnumBase Arrays_obj::minBy(::cpp::VirtualArray arr, ::Dynamic ord){
            	HX_STACK_FRAME("thx.Arrays","minBy",0x58f9239f,"thx.Arrays.minBy","thx/Arrays.hx",1134,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(ord,"ord")
HXLINE(1134)		Bool _hx_tmp = (arr->get_length() == (int)0);
HXDLIN(1134)		if (_hx_tmp) {
HXLINE(1134)			return ::haxe::ds::Option_obj::None_dyn();
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,_e) HXARGC(2)
            			 ::Dynamic _hx_run( ::Dynamic a0, ::Dynamic a1){
            				HX_STACK_FRAME("thx.Arrays","minBy",0x58f9239f,"thx.Arrays.minBy","thx/Arrays.hx",1134,0x537e0999)
            				HX_STACK_ARG(a0,"a0")
            				HX_STACK_ARG(a1,"a1")
HXLINE(1134)				return ::thx::_Ord::Ord_Impl__obj::min(_e,a0,a1);
            			}
            			HX_END_LOCAL_FUNC2(return)

HXLINE(1134)			HX_VARI(  ::Dynamic,_e) = ord;
HXDLIN(1134)			 ::Dynamic _hx_tmp1 =  ::Dynamic(new _hx_Closure_0(_e));
HXDLIN(1134)			 ::Dynamic _hx_tmp2 = ::thx::Arrays_obj::reduce(arr,_hx_tmp1,arr->__get((int)0));
HXDLIN(1134)			return ::haxe::ds::Option_obj::Some(_hx_tmp2);
            		}
HXDLIN(1134)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,minBy,return )

::hx::EnumBase Arrays_obj::toMap(::Array< ::Dynamic> arr, ::Dynamic keyOrder){
            	HX_STACK_FRAME("thx.Arrays","toMap",0x64a58b77,"thx.Arrays.toMap","thx/Arrays.hx",1140,0x537e0999)
            	HX_STACK_ARG(arr,"arr")
            	HX_STACK_ARG(keyOrder,"keyOrder")
HXLINE(1141)		HX_VARI( ::hx::EnumBase,m) = ::thx::fp::MapImpl_obj::Tip_dyn();
HXLINE(1142)		HX_VARI( ::cpp::VirtualArray,collisions) = ::cpp::VirtualArray_obj::__new(0);
HXLINE(1143)		{
HXLINE(1143)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(1143)			HX_VARI( Int,_g) = arr->length;
HXDLIN(1143)			while((_g1 < _g)){
HXLINE(1143)				HX_VARI( Int,i) = _g1++;
HXLINE(1144)				HX_VARI(  ::Dynamic,tuple) = arr->__get(i);
HXLINE(1145)				::hx::EnumBase _hx_tmp = ::thx::fp::_Map::Map_Impl__obj::lookup(m, ::Dynamic(tuple->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)),keyOrder);
HXDLIN(1145)				Bool _hx_tmp1 = ::thx::Options_obj::isNone(_hx_tmp);
HXDLIN(1145)				if (_hx_tmp1) {
HXLINE(1146)					m = ::thx::fp::_Map::Map_Impl__obj::insert(m, ::Dynamic(tuple->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(tuple->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)),keyOrder);
            				}
            				else {
HXLINE(1148)					collisions->push( ::Dynamic(tuple->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)));
            				}
            			}
            		}
HXLINE(1152)		::hx::EnumBase _hx_tmp2 = ::thx::_Nel::Nel_Impl__obj::fromArray(collisions);
HXDLIN(1152)		return ::thx::Options_obj::toFailure(_hx_tmp2,m);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Arrays_obj,toMap,return )


Arrays_obj::Arrays_obj()
{
}

bool Arrays_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { outValue = at_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"all") ) { outValue = all_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"any") ) { outValue = any_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nel") ) { outValue = nel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip") ) { outValue = zip_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"each") ) { outValue = each_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"find") ) { outValue = find_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"from") ) { outValue = from_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"head") ) { outValue = head_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"last") ) { outValue = last_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mapi") ) { outValue = mapi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pull") ) { outValue = pull_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rank") ) { outValue = rank_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fold") ) { outValue = fold_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rest") ) { outValue = rest_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"tail") ) { outValue = tail_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"take") ) { outValue = take_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip3") ) { outValue = zip3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip4") ) { outValue = zip4_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip5") ) { outValue = zip5_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"with") ) { outValue = with_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"after") ) { outValue = after_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eachi") ) { outValue = eachi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cross") ) { outValue = cross_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"findi") ) { outValue = findi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"first") ) { outValue = first_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"order") ) { outValue = order_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"foldS") ) { outValue = foldS_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"split") ) { outValue = split_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unzip") ) { outValue = unzip_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zipAp") ) { outValue = zipAp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"maxBy") ) { outValue = maxBy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"minBy") ) { outValue = minBy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toMap") ) { outValue = toMap_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"append") ) { outValue = append_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"monoid") ) { outValue = monoid_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"before") ) { outValue = before_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pushIf") ) { outValue = pushIf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reduce") ) { outValue = reduce_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"resize") ) { outValue = resize_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sample") ) { outValue = sample_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"string") ) { outValue = string_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rotate") ) { outValue = rotate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unzip3") ) { outValue = unzip3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unzip4") ) { outValue = unzip4_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unzip5") ) { outValue = unzip5_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip2Ap") ) { outValue = zip2Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip3Ap") ) { outValue = zip3Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip4Ap") ) { outValue = zip4Ap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zip5Ap") ) { outValue = zip5Ap_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"atIndex") ) { outValue = atIndex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compact") ) { outValue = compact_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compare") ) { outValue = compare_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"extract") ) { outValue = extract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flatMap") ) { outValue = flatMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flatten") ) { outValue = flatten_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ifEmpty") ) { outValue = ifEmpty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"initial") ) { outValue = initial_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEmpty") ) { outValue = isEmpty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"foldMap") ) { outValue = foldMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reducei") ) { outValue = reducei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shuffle") ) { outValue = shuffle_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"splitBy") ) { outValue = splitBy_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"appendIf") ) { outValue = appendIf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"contains") ) { outValue = contains_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"distinct") ) { outValue = distinct_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eachPair") ) { outValue = eachPair_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"findLast") ) { outValue = findLast_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mapRight") ) { outValue = mapRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"foldLeft") ) { outValue = foldLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reversed") ) { outValue = reversed_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"takeLast") ) { outValue = takeLast_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sliding2") ) { outValue = sliding2_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"count_Int") ) { outValue = count_Int_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getOption") ) { outValue = getOption_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"findIndex") ) { outValue = findIndex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"removeAll") ) { outValue = removeAll_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sampleOne") ) { outValue = sampleOne_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withSlice") ) { outValue = withSlice_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"crossMulti") ) { outValue = crossMulti_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"filterNull") ) { outValue = filterNull_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"findOption") ) { outValue = findOption_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"splitByPad") ) { outValue = splitByPad_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withInsert") ) { outValue = withInsert_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"containsAll") ) { outValue = containsAll_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"containsAny") ) { outValue = containsAny_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"findiOption") ) { outValue = findiOption_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"spanByIndex") ) { outValue = spanByIndex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hasElements") ) { outValue = hasElements_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intersperse") ) { outValue = intersperse_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reduceRight") ) { outValue = reduceRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withPrepend") ) { outValue = withPrepend_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"applyIndexes") ) { outValue = applyIndexes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"filterOption") ) { outValue = filterOption_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"groupByAppend") ) { outValue = groupByAppend_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"foldLeftEither") ) { outValue = foldLeftEither_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"traverseOption") ) { outValue = traverseOption_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"commonsFromStart") ) { outValue = commonsFromStart_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"groupBy_Int_Float") ) { outValue = groupBy_Int_Float_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"traverseValidation") ) { outValue = traverseValidation_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"groupBy_Int_Array_Int") ) { outValue = groupBy_Int_Array_Int_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"traverseValidationIndexed") ) { outValue = traverseValidationIndexed_dyn(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"groupBy_Int_thx__TestArrays_Sample") ) { outValue = groupBy_Int_thx__TestArrays_Sample_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Arrays_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Arrays_obj_sStaticStorageInfo = 0;
#endif

static void Arrays_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Arrays_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Arrays_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Arrays_obj::__mClass,"__mClass");
};

#endif

hx::Class Arrays_obj::__mClass;

static ::String Arrays_obj_sStaticFields[] = {
	HX_HCSTRING("groupBy_Int_thx__TestArrays_Sample","\x12","\x80","\xca","\x8a"),
	HX_HCSTRING("groupBy_Int_Array_Int","\xd0","\xfe","\x74","\x9f"),
	HX_HCSTRING("groupBy_Int_Float","\x03","\xcd","\x1a","\xd6"),
	HX_HCSTRING("count_Int","\x1f","\x62","\x4a","\x66"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("appendIf","\x57","\xcc","\xf3","\x15"),
	HX_HCSTRING("applyIndexes","\x32","\xa8","\x2c","\x20"),
	HX_HCSTRING("monoid","\xbe","\xc6","\x6a","\xc7"),
	HX_HCSTRING("after","\x1c","\x66","\xa2","\x1d"),
	HX_HCSTRING("atIndex","\x1f","\xe5","\x49","\x74"),
	HX_HCSTRING("getOption","\xab","\x5c","\xd1","\xa7"),
	HX_HCSTRING("each","\x01","\x7e","\x0c","\x43"),
	HX_HCSTRING("eachi","\x48","\xc3","\xe1","\x67"),
	HX_HCSTRING("all","\x21","\xf9","\x49","\x00"),
	HX_HCSTRING("any","\xec","\xfa","\x49","\x00"),
	HX_HCSTRING("at","\xf3","\x54","\x00","\x00"),
	HX_HCSTRING("before","\x7f","\x54","\x32","\x9a"),
	HX_HCSTRING("commonsFromStart","\x90","\xd0","\xe9","\x54"),
	HX_HCSTRING("compact","\xa3","\x0b","\x69","\x83"),
	HX_HCSTRING("compare","\xa5","\x18","\x69","\x83"),
	HX_HCSTRING("contains","\x1f","\x5a","\x7b","\x2c"),
	HX_HCSTRING("containsAll","\x42","\x34","\x48","\x24"),
	HX_HCSTRING("containsAny","\x0d","\x36","\x48","\x24"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("cross","\x80","\x5f","\x5a","\x4c"),
	HX_HCSTRING("crossMulti","\xd9","\x6a","\xde","\x65"),
	HX_HCSTRING("distinct","\x3c","\x48","\x43","\x71"),
	HX_HCSTRING("eachPair","\xbb","\x1a","\xb5","\xfe"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("extract","\x41","\xb5","\xea","\x78"),
	HX_HCSTRING("filterNull","\x5f","\x26","\x53","\x55"),
	HX_HCSTRING("filterOption","\x4d","\x01","\xd3","\x37"),
	HX_HCSTRING("find","\x39","\xd0","\xbb","\x43"),
	HX_HCSTRING("findi","\x10","\x62","\x9a","\x00"),
	HX_HCSTRING("findiOption","\xa5","\x95","\xf6","\xa0"),
	HX_HCSTRING("findOption","\x8e","\x88","\xce","\x54"),
	HX_HCSTRING("findIndex","\x19","\xcc","\x0b","\xad"),
	HX_HCSTRING("findLast","\x2f","\x17","\x41","\x9a"),
	HX_HCSTRING("first","\x30","\x78","\x9d","\x00"),
	HX_HCSTRING("flatMap","\x63","\x10","\xde","\xe6"),
	HX_HCSTRING("flatten","\xc4","\xab","\xfb","\xe6"),
	HX_HCSTRING("from","\x6a","\xa5","\xc2","\x43"),
	HX_HCSTRING("groupByAppend","\x70","\x6d","\xd7","\x8e"),
	HX_HCSTRING("spanByIndex","\x11","\xc4","\x9d","\xf0"),
	HX_HCSTRING("hasElements","\xb1","\x1b","\x7b","\x56"),
	HX_HCSTRING("head","\x20","\x29","\x0b","\x45"),
	HX_HCSTRING("ifEmpty","\x70","\x2d","\xbc","\xd9"),
	HX_HCSTRING("initial","\x84","\x10","\x9f","\xcb"),
	HX_HCSTRING("intersperse","\x78","\xe5","\x17","\xe1"),
	HX_HCSTRING("isEmpty","\x43","\xde","\x5f","\x0c"),
	HX_HCSTRING("last","\x56","\x0a","\xad","\x47"),
	HX_HCSTRING("mapi","\x4d","\x3e","\x56","\x48"),
	HX_HCSTRING("mapRight","\xa0","\x7b","\xa6","\x60"),
	HX_HCSTRING("order","\x8e","\xf0","\x20","\x35"),
	HX_HCSTRING("pull","\xc5","\x0b","\x61","\x4a"),
	HX_HCSTRING("pushIf","\x57","\xfc","\x2c","\x72"),
	HX_HCSTRING("rank","\xac","\x4d","\xa4","\x4b"),
	HX_HCSTRING("reduce","\xa6","\x2d","\x9a","\xfe"),
	HX_HCSTRING("foldLeft","\xa8","\x24","\x0e","\xc7"),
	HX_HCSTRING("foldLeftEither","\x0d","\xe4","\x05","\x2d"),
	HX_HCSTRING("foldMap","\x1b","\x1d","\xc5","\x64"),
	HX_HCSTRING("fold","\x01","\x5c","\xc0","\x43"),
	HX_HCSTRING("nel","\x55","\xd0","\x53","\x00"),
	HX_HCSTRING("foldS","\x32","\x25","\x90","\x04"),
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("reducei","\x03","\xc4","\x4d","\xc8"),
	HX_HCSTRING("reduceRight","\x56","\x14","\x32","\xbe"),
	HX_HCSTRING("removeAll","\x3d","\x17","\xe5","\xca"),
	HX_HCSTRING("rest","\x14","\x5b","\xa7","\x4b"),
	HX_HCSTRING("reversed","\x02","\xc5","\xb5","\x81"),
	HX_HCSTRING("sample","\x2a","\x60","\x4a","\x1d"),
	HX_HCSTRING("sampleOne","\x5c","\xe8","\x70","\x5d"),
	HX_HCSTRING("string","\xd1","\x28","\x30","\x11"),
	HX_HCSTRING("shuffle","\xf9","\x45","\xdd","\xe4"),
	HX_HCSTRING("split","\xda","\xea","\x6e","\x81"),
	HX_HCSTRING("splitBy","\x51","\x0f","\x23","\xeb"),
	HX_HCSTRING("splitByPad","\x82","\xa2","\xb7","\x8c"),
	HX_HCSTRING("tail","\x90","\xb6","\xf6","\x4c"),
	HX_HCSTRING("take","\x47","\xb8","\xf6","\x4c"),
	HX_HCSTRING("takeLast","\x3d","\x1e","\xac","\xce"),
	HX_HCSTRING("traverseOption","\xc7","\x16","\xe2","\xdc"),
	HX_HCSTRING("traverseValidation","\x8b","\x60","\x8d","\xe2"),
	HX_HCSTRING("traverseValidationIndexed","\xa6","\x1a","\x53","\xe0"),
	HX_HCSTRING("rotate","\x5b","\x46","\x20","\xcb"),
	HX_HCSTRING("sliding2","\xc4","\x7b","\xfd","\x11"),
	HX_HCSTRING("unzip","\x28","\x46","\xf4","\xa6"),
	HX_HCSTRING("unzip3","\x0b","\x1d","\xc9","\x6e"),
	HX_HCSTRING("unzip4","\x0c","\x1d","\xc9","\x6e"),
	HX_HCSTRING("unzip5","\x0d","\x1d","\xc9","\x6e"),
	HX_HCSTRING("zip","\xe1","\xee","\x5c","\x00"),
	HX_HCSTRING("zip3","\x32","\x16","\xf4","\x50"),
	HX_HCSTRING("zip4","\x33","\x16","\xf4","\x50"),
	HX_HCSTRING("zip5","\x34","\x16","\xf4","\x50"),
	HX_HCSTRING("zipAp","\x30","\x62","\x9f","\x84"),
	HX_HCSTRING("zip2Ap","\x80","\xfd","\xca","\x86"),
	HX_HCSTRING("zip3Ap","\xc1","\xbf","\xcb","\x86"),
	HX_HCSTRING("zip4Ap","\x02","\x82","\xcc","\x86"),
	HX_HCSTRING("zip5Ap","\x43","\x44","\xcd","\x86"),
	HX_HCSTRING("withPrepend","\xa8","\xb5","\x02","\x9d"),
	HX_HCSTRING("with","\x06","\x76","\xf8","\x4e"),
	HX_HCSTRING("withSlice","\x6c","\x28","\xb5","\x02"),
	HX_HCSTRING("withInsert","\xdf","\x75","\xa7","\x89"),
	HX_HCSTRING("maxBy","\x9b","\x35","\x26","\x03"),
	HX_HCSTRING("minBy","\x09","\x54","\x68","\x08"),
	HX_HCSTRING("toMap","\xe1","\xbb","\x14","\x14"),
	::String(null())
};

void Arrays_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Arrays","\x84","\xbb","\xd6","\x08");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Arrays_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Arrays_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Arrays_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Arrays_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Arrays_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Arrays_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Arrays_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
