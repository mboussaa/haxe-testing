// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_ResourceDir
#include <thx/ResourceDir.h>
#endif
#ifndef INCLUDED_thx_ResourceTest
#include <thx/ResourceTest.h>
#endif
#ifndef INCLUDED_thx_StaticResource
#include <thx/StaticResource.h>
#endif
#ifndef INCLUDED_thx_TestStaticResource
#include <thx/TestStaticResource.h>
#endif
#ifndef INCLUDED_utest_Assert
#include <utest/Assert.h>
#endif

namespace thx{

void TestStaticResource_obj::__construct(){
            	HX_STACK_FRAME("thx.TestStaticResource","new",0x60af524a,"thx.TestStaticResource.new","thx/TestStaticResource.hx",6,0xf5874ec5)
            	HX_STACK_THIS(this)
            	}

Dynamic TestStaticResource_obj::__CreateEmpty() { return new TestStaticResource_obj; }

hx::ObjectPtr< TestStaticResource_obj > TestStaticResource_obj::__new()
{
	hx::ObjectPtr< TestStaticResource_obj > _hx_result = new TestStaticResource_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic TestStaticResource_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TestStaticResource_obj > _hx_result = new TestStaticResource_obj();
	_hx_result->__construct();
	return _hx_result;
}

void TestStaticResource_obj::testBasics(){
            	HX_STACK_FRAME("thx.TestStaticResource","testBasics",0x52c2634d,"thx.TestStaticResource.testBasics","thx/TestStaticResource.hx",8,0xf5874ec5)
            	HX_STACK_THIS(this)
HXLINE(   9)		::utest::Assert_obj::equals((int)1,::thx::ResourceTest_obj::a,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),9,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  10)		::utest::Assert_obj::notNull(::thx::ResourceTest_obj::b,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),10,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  11)		::utest::Assert_obj::equals(HX_("thx",84,60,58,00), ::Dynamic(::thx::ResourceTest_obj::b->__Field(HX_("s",73,00,00,00),hx::paccDynamic)),null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),11,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  12)		::utest::Assert_obj::isTrue(::thx::ResourceTest_obj::c,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),12,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  13)		::utest::Assert_obj::equals(HX_("haxe",26,34,08,45),::thx::ResourceTest_obj::d,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),13,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  14)		::utest::Assert_obj::equals(HX_("value",71,7f,b8,31), ::Dynamic(::thx::ResourceTest_obj::fileJson->__Field(HX_("some",f4,22,58,4c),hx::paccDynamic)),null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),14,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  15)		::utest::Assert_obj::equals(HX_("some text\n",91,a8,97,73),::thx::ResourceTest_obj::fileText,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),15,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testBasics",f7,73,1f,6e)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestStaticResource_obj,testBasics,(void))

void TestStaticResource_obj::testDir(){
            	HX_STACK_FRAME("thx.TestStaticResource","testDir",0x542e6b05,"thx.TestStaticResource.testDir","thx/TestStaticResource.hx",18,0xf5874ec5)
            	HX_STACK_THIS(this)
HXLINE(  19)		::utest::Assert_obj::equals(HX_("some text\n",91,a8,97,73),::thx::ResourceDir_obj::text,null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),19,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testDir",1b,ac,ba,bd)));
HXLINE(  20)		::utest::Assert_obj::equals(HX_("value",71,7f,b8,31), ::Dynamic(::thx::ResourceDir_obj::object->__Field(HX_("some",f4,22,58,4c),hx::paccDynamic)),null(),hx::SourceInfo(HX_("TestStaticResource.hx",d0,c3,57,43),20,HX_("thx.TestStaticResource",58,25,3a,1e),HX_("testDir",1b,ac,ba,bd)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestStaticResource_obj,testDir,(void))


TestStaticResource_obj::TestStaticResource_obj()
{
}

hx::Val TestStaticResource_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"testDir") ) { return hx::Val( testDir_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"testBasics") ) { return hx::Val( testBasics_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *TestStaticResource_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *TestStaticResource_obj_sStaticStorageInfo = 0;
#endif

static ::String TestStaticResource_obj_sMemberFields[] = {
	HX_HCSTRING("testBasics","\xf7","\x73","\x1f","\x6e"),
	HX_HCSTRING("testDir","\x1b","\xac","\xba","\xbd"),
	::String(null()) };

static void TestStaticResource_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TestStaticResource_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TestStaticResource_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TestStaticResource_obj::__mClass,"__mClass");
};

#endif

hx::Class TestStaticResource_obj::__mClass;

void TestStaticResource_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.TestStaticResource","\x58","\x25","\x3a","\x1e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TestStaticResource_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TestStaticResource_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TestStaticResource_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TestStaticResource_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TestStaticResource_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TestStaticResource_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
