// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_TestNulls
#include <thx/TestNulls.h>
#endif
#ifndef INCLUDED_utest_Assert
#include <utest/Assert.h>
#endif

namespace thx{

void TestNulls_obj::__construct(){
            	HX_STACK_FRAME("thx.TestNulls","new",0x658136c2,"thx.TestNulls.new","thx/TestNulls.hx",7,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 196)		this->ensureField = null();
HXLINE(   8)		this->withValue = HX_("A",41,00,00,00);
            	}

Dynamic TestNulls_obj::__CreateEmpty() { return new TestNulls_obj; }

hx::ObjectPtr< TestNulls_obj > TestNulls_obj::__new()
{
	hx::ObjectPtr< TestNulls_obj > _hx_result = new TestNulls_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic TestNulls_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TestNulls_obj > _hx_result = new TestNulls_obj();
	_hx_result->__construct();
	return _hx_result;
}

::String TestNulls_obj::get_getter(){
            	HX_STACK_FRAME("thx.TestNulls","get_getter",0xdd0258b2,"thx.TestNulls.get_getter","thx/TestNulls.hx",12,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE(  12)		return HX_("A",41,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,get_getter,return )

::String TestNulls_obj::get_setter(){
            	HX_STACK_FRAME("thx.TestNulls","get_setter",0xa94aad26,"thx.TestNulls.get_setter","thx/TestNulls.hx",15,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE(  15)		return this->v;
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,get_setter,return )

::String TestNulls_obj::set_setter(::String v){
            	HX_STACK_FRAME("thx.TestNulls","set_setter",0xacc84b9a,"thx.TestNulls.set_setter","thx/TestNulls.hx",16,0x51afd46f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE(  16)		return (this->v = v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TestNulls_obj,set_setter,return )

void TestNulls_obj::setup(){
            	HX_STACK_FRAME("thx.TestNulls","setup",0x924cf15f,"thx.TestNulls.setup","thx/TestNulls.hx",23,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE(  24)		this->v = null();
HXLINE(  25)		this->nested =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("a",61,00,00,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("b",62,00,00,00),HX_("A",41,00,00,00)))));
HXLINE(  26)		this->empty = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,setup,(void))

void TestNulls_obj::testOr(){
            	HX_STACK_FRAME("thx.TestNulls","testOr",0xd6b788f3,"thx.TestNulls.testOr","thx/TestNulls.hx",29,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE(  29)		HX_VARI(  ::thx::TestNulls,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  30)		HX_VARI( ::String,s) = null();
HXLINE(  31)		HX_VARI( ::String,_0) = s;
HXDLIN(  31)		::String _hx_tmp;
HXDLIN(  31)		if (hx::IsNull( _0 )) {
HXLINE(  31)			_hx_tmp = null();
            		}
            		else {
HXLINE(  31)			_hx_tmp = _0;
            		}
HXLINE( 139)		HX_VARI( ::String,t) = _hx_tmp;
HXDLIN( 139)		 ::Dynamic _hx_tmp1;
HXDLIN( 139)		if (hx::IsNotNull( t )) {
HXLINE( 139)			_hx_tmp1 = t;
            		}
            		else {
HXLINE( 139)			_hx_tmp1 = HX_("B",42,00,00,00);
            		}
HXLINE(  31)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp1,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),31,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  32)		s = HX_("A",41,00,00,00);
HXLINE(  33)		::String _hx_tmp2;
HXDLIN(  33)		if (false) {
HXLINE(  33)			_hx_tmp2 = null();
            		}
            		else {
HXLINE(  33)			_hx_tmp2 = HX_("A",41,00,00,00);
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t1,"t") = _hx_tmp2;
HXDLIN( 139)		 ::Dynamic _hx_tmp3;
HXDLIN( 139)		if (hx::IsNotNull( t1 )) {
HXLINE( 139)			_hx_tmp3 = t1;
            		}
            		else {
HXLINE( 139)			_hx_tmp3 = HX_("B",42,00,00,00);
            		}
HXLINE(  33)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp3,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),33,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  35)		HX_VARI_NAME( ::String,s1,"s") = null();
HXLINE(  36)		HX_VARI_NAME( ::String,_01,"_0") = s1;
HXDLIN(  36)		::String _hx_tmp4;
HXDLIN(  36)		if (hx::IsNull( _01 )) {
HXLINE(  36)			_hx_tmp4 = null();
            		}
            		else {
HXLINE(  36)			_hx_tmp4 = _01;
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t2,"t") = _hx_tmp4;
HXDLIN( 139)		 ::Dynamic _hx_tmp5;
HXDLIN( 139)		if (hx::IsNotNull( t2 )) {
HXLINE( 139)			_hx_tmp5 = t2;
            		}
            		else {
HXLINE( 139)			_hx_tmp5 = HX_("B",42,00,00,00);
            		}
HXLINE(  36)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp5,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),36,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  37)		s1 = HX_("A",41,00,00,00);
HXLINE(  38)		::String _hx_tmp6;
HXDLIN(  38)		if (false) {
HXLINE(  38)			_hx_tmp6 = null();
            		}
            		else {
HXLINE(  38)			_hx_tmp6 = HX_("A",41,00,00,00);
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t3,"t") = _hx_tmp6;
HXDLIN( 139)		 ::Dynamic _hx_tmp7;
HXDLIN( 139)		if (hx::IsNotNull( t3 )) {
HXLINE( 139)			_hx_tmp7 = t3;
            		}
            		else {
HXLINE( 139)			_hx_tmp7 = HX_("B",42,00,00,00);
            		}
HXLINE(  38)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp7,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),38,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  40)		::String _hx_tmp8;
HXDLIN(  40)		if (hx::IsNull( _gthis )) {
HXLINE(  40)			_hx_tmp8 = null();
            		}
            		else {
HXLINE(  40)			HX_VARI( ::String,_1) = _gthis->withValue;
HXDLIN(  40)			if (hx::IsNull( _1 )) {
HXLINE(  40)				_hx_tmp8 = null();
            			}
            			else {
HXLINE(  40)				_hx_tmp8 = _1;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t4,"t") = _hx_tmp8;
HXDLIN( 139)		 ::Dynamic _hx_tmp9;
HXDLIN( 139)		if (hx::IsNotNull( t4 )) {
HXLINE( 139)			_hx_tmp9 = t4;
            		}
            		else {
HXLINE( 139)			_hx_tmp9 = HX_("B",42,00,00,00);
            		}
HXLINE(  40)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp9,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),40,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  41)		::String _hx_tmp10;
HXDLIN(  41)		if (hx::IsNull( _gthis )) {
HXLINE(  41)			_hx_tmp10 = null();
            		}
            		else {
HXLINE(  41)			HX_VARI_NAME( ::String,_11,"_1") = _gthis->withValue;
HXDLIN(  41)			if (hx::IsNull( _11 )) {
HXLINE(  41)				_hx_tmp10 = null();
            			}
            			else {
HXLINE(  41)				_hx_tmp10 = _11;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t5,"t") = _hx_tmp10;
HXDLIN( 139)		 ::Dynamic _hx_tmp11;
HXDLIN( 139)		if (hx::IsNotNull( t5 )) {
HXLINE( 139)			_hx_tmp11 = t5;
            		}
            		else {
HXLINE( 139)			_hx_tmp11 = HX_("B",42,00,00,00);
            		}
HXLINE(  41)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp11,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),41,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  43)		::String _hx_tmp12;
HXDLIN(  43)		if (hx::IsNull( _gthis )) {
HXLINE(  43)			_hx_tmp12 = null();
            		}
            		else {
HXLINE(  43)			HX_VARI_NAME( ::String,_12,"_1") = _gthis->withoutValue;
HXDLIN(  43)			if (hx::IsNull( _12 )) {
HXLINE(  43)				_hx_tmp12 = null();
            			}
            			else {
HXLINE(  43)				_hx_tmp12 = _12;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t6,"t") = _hx_tmp12;
HXDLIN( 139)		 ::Dynamic _hx_tmp13;
HXDLIN( 139)		if (hx::IsNotNull( t6 )) {
HXLINE( 139)			_hx_tmp13 = t6;
            		}
            		else {
HXLINE( 139)			_hx_tmp13 = HX_("B",42,00,00,00);
            		}
HXLINE(  43)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp13,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),43,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  44)		::String _hx_tmp14;
HXDLIN(  44)		if (hx::IsNull( _gthis )) {
HXLINE(  44)			_hx_tmp14 = null();
            		}
            		else {
HXLINE(  44)			HX_VARI_NAME( ::String,_13,"_1") = _gthis->withoutValue;
HXDLIN(  44)			if (hx::IsNull( _13 )) {
HXLINE(  44)				_hx_tmp14 = null();
            			}
            			else {
HXLINE(  44)				_hx_tmp14 = _13;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t7,"t") = _hx_tmp14;
HXDLIN( 139)		 ::Dynamic _hx_tmp15;
HXDLIN( 139)		if (hx::IsNotNull( t7 )) {
HXLINE( 139)			_hx_tmp15 = t7;
            		}
            		else {
HXLINE( 139)			_hx_tmp15 = HX_("B",42,00,00,00);
            		}
HXLINE(  44)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp15,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),44,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  46)		HX_VARI(  ::Dynamic,o) =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("a",61,00,00,00),HX_("A",41,00,00,00))
            			->setFixed(1,HX_("b",62,00,00,00),null()));
HXLINE(  48)		::String _hx_tmp16;
HXDLIN(  48)		if (hx::IsNull( o )) {
HXLINE(  48)			_hx_tmp16 = null();
            		}
            		else {
HXLINE(  48)			HX_VARI_NAME( ::String,_14,"_1") = ( (::String)(o->__Field(HX_("a",61,00,00,00),hx::paccDynamic)) );
HXDLIN(  48)			if (hx::IsNull( _14 )) {
HXLINE(  48)				_hx_tmp16 = null();
            			}
            			else {
HXLINE(  48)				_hx_tmp16 = _14;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t8,"t") = _hx_tmp16;
HXDLIN( 139)		 ::Dynamic _hx_tmp17;
HXDLIN( 139)		if (hx::IsNotNull( t8 )) {
HXLINE( 139)			_hx_tmp17 = t8;
            		}
            		else {
HXLINE( 139)			_hx_tmp17 = HX_("B",42,00,00,00);
            		}
HXLINE(  48)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp17,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),48,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  49)		::String _hx_tmp18;
HXDLIN(  49)		if (hx::IsNull( o )) {
HXLINE(  49)			_hx_tmp18 = null();
            		}
            		else {
HXLINE(  49)			HX_VARI_NAME( ::String,_15,"_1") = ( (::String)(o->__Field(HX_("a",61,00,00,00),hx::paccDynamic)) );
HXDLIN(  49)			if (hx::IsNull( _15 )) {
HXLINE(  49)				_hx_tmp18 = null();
            			}
            			else {
HXLINE(  49)				_hx_tmp18 = _15;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t9,"t") = _hx_tmp18;
HXDLIN( 139)		 ::Dynamic _hx_tmp19;
HXDLIN( 139)		if (hx::IsNotNull( t9 )) {
HXLINE( 139)			_hx_tmp19 = t9;
            		}
            		else {
HXLINE( 139)			_hx_tmp19 = HX_("B",42,00,00,00);
            		}
HXLINE(  49)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp19,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),49,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  51)		::String _hx_tmp20;
HXDLIN(  51)		if (hx::IsNull( o )) {
HXLINE(  51)			_hx_tmp20 = null();
            		}
            		else {
HXLINE(  51)			HX_VARI_NAME( ::String,_16,"_1") = ( (::String)(o->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  51)			if (hx::IsNull( _16 )) {
HXLINE(  51)				_hx_tmp20 = null();
            			}
            			else {
HXLINE(  51)				_hx_tmp20 = _16;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t10,"t") = _hx_tmp20;
HXDLIN( 139)		 ::Dynamic _hx_tmp21;
HXDLIN( 139)		if (hx::IsNotNull( t10 )) {
HXLINE( 139)			_hx_tmp21 = t10;
            		}
            		else {
HXLINE( 139)			_hx_tmp21 = HX_("B",42,00,00,00);
            		}
HXLINE(  51)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp21,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),51,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  52)		::String _hx_tmp22;
HXDLIN(  52)		if (hx::IsNull( o )) {
HXLINE(  52)			_hx_tmp22 = null();
            		}
            		else {
HXLINE(  52)			HX_VARI_NAME( ::String,_17,"_1") = ( (::String)(o->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  52)			if (hx::IsNull( _17 )) {
HXLINE(  52)				_hx_tmp22 = null();
            			}
            			else {
HXLINE(  52)				_hx_tmp22 = _17;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t11,"t") = _hx_tmp22;
HXDLIN( 139)		 ::Dynamic _hx_tmp23;
HXDLIN( 139)		if (hx::IsNotNull( t11 )) {
HXLINE( 139)			_hx_tmp23 = t11;
            		}
            		else {
HXLINE( 139)			_hx_tmp23 = HX_("B",42,00,00,00);
            		}
HXLINE(  52)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp23,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),52,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  54)		::String _hx_tmp24;
HXDLIN(  54)		if (hx::IsNull( _gthis )) {
HXLINE(  54)			_hx_tmp24 = null();
            		}
            		else {
HXLINE(  54)			HX_VARI_NAME( ::String,_18,"_1") = _gthis->get_getter();
HXDLIN(  54)			if (hx::IsNull( _18 )) {
HXLINE(  54)				_hx_tmp24 = null();
            			}
            			else {
HXLINE(  54)				_hx_tmp24 = _18;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t12,"t") = _hx_tmp24;
HXDLIN( 139)		 ::Dynamic _hx_tmp25;
HXDLIN( 139)		if (hx::IsNotNull( t12 )) {
HXLINE( 139)			_hx_tmp25 = t12;
            		}
            		else {
HXLINE( 139)			_hx_tmp25 = HX_("B",42,00,00,00);
            		}
HXLINE(  54)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp25,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),54,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  55)		::String _hx_tmp26;
HXDLIN(  55)		if (hx::IsNull( _gthis )) {
HXLINE(  55)			_hx_tmp26 = null();
            		}
            		else {
HXLINE(  55)			HX_VARI_NAME( ::String,_19,"_1") = _gthis->get_getter();
HXDLIN(  55)			if (hx::IsNull( _19 )) {
HXLINE(  55)				_hx_tmp26 = null();
            			}
            			else {
HXLINE(  55)				_hx_tmp26 = _19;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t13,"t") = _hx_tmp26;
HXDLIN( 139)		 ::Dynamic _hx_tmp27;
HXDLIN( 139)		if (hx::IsNotNull( t13 )) {
HXLINE( 139)			_hx_tmp27 = t13;
            		}
            		else {
HXLINE( 139)			_hx_tmp27 = HX_("B",42,00,00,00);
            		}
HXLINE(  55)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp27,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),55,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  57)		::String _hx_tmp28;
HXDLIN(  57)		if (hx::IsNull( _gthis )) {
HXLINE(  57)			_hx_tmp28 = null();
            		}
            		else {
HXLINE(  57)			HX_VARI_NAME( ::String,_110,"_1") = _gthis->get_setter();
HXDLIN(  57)			if (hx::IsNull( _110 )) {
HXLINE(  57)				_hx_tmp28 = null();
            			}
            			else {
HXLINE(  57)				_hx_tmp28 = _110;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t14,"t") = _hx_tmp28;
HXDLIN( 139)		 ::Dynamic _hx_tmp29;
HXDLIN( 139)		if (hx::IsNotNull( t14 )) {
HXLINE( 139)			_hx_tmp29 = t14;
            		}
            		else {
HXLINE( 139)			_hx_tmp29 = HX_("B",42,00,00,00);
            		}
HXLINE(  57)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp29,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),57,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  58)		::String _hx_tmp30;
HXDLIN(  58)		if (hx::IsNull( _gthis )) {
HXLINE(  58)			_hx_tmp30 = null();
            		}
            		else {
HXLINE(  58)			HX_VARI_NAME( ::String,_111,"_1") = _gthis->get_setter();
HXDLIN(  58)			if (hx::IsNull( _111 )) {
HXLINE(  58)				_hx_tmp30 = null();
            			}
            			else {
HXLINE(  58)				_hx_tmp30 = _111;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t15,"t") = _hx_tmp30;
HXDLIN( 139)		 ::Dynamic _hx_tmp31;
HXDLIN( 139)		if (hx::IsNotNull( t15 )) {
HXLINE( 139)			_hx_tmp31 = t15;
            		}
            		else {
HXLINE( 139)			_hx_tmp31 = HX_("B",42,00,00,00);
            		}
HXLINE(  58)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp31,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),58,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  60)		this->set_setter(HX_("A",41,00,00,00));
HXLINE(  61)		::String _hx_tmp32;
HXDLIN(  61)		if (hx::IsNull( _gthis )) {
HXLINE(  61)			_hx_tmp32 = null();
            		}
            		else {
HXLINE(  61)			HX_VARI_NAME( ::String,_112,"_1") = _gthis->get_setter();
HXDLIN(  61)			if (hx::IsNull( _112 )) {
HXLINE(  61)				_hx_tmp32 = null();
            			}
            			else {
HXLINE(  61)				_hx_tmp32 = _112;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t16,"t") = _hx_tmp32;
HXDLIN( 139)		 ::Dynamic _hx_tmp33;
HXDLIN( 139)		if (hx::IsNotNull( t16 )) {
HXLINE( 139)			_hx_tmp33 = t16;
            		}
            		else {
HXLINE( 139)			_hx_tmp33 = HX_("B",42,00,00,00);
            		}
HXLINE(  61)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp33,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),61,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
HXLINE(  62)		::String _hx_tmp34;
HXDLIN(  62)		if (hx::IsNull( _gthis )) {
HXLINE(  62)			_hx_tmp34 = null();
            		}
            		else {
HXLINE(  62)			HX_VARI_NAME( ::String,_113,"_1") = _gthis->get_setter();
HXDLIN(  62)			if (hx::IsNull( _113 )) {
HXLINE(  62)				_hx_tmp34 = null();
            			}
            			else {
HXLINE(  62)				_hx_tmp34 = _113;
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t17,"t") = _hx_tmp34;
HXDLIN( 139)		 ::Dynamic _hx_tmp35;
HXDLIN( 139)		if (hx::IsNotNull( t17 )) {
HXLINE( 139)			_hx_tmp35 = t17;
            		}
            		else {
HXLINE( 139)			_hx_tmp35 = HX_("B",42,00,00,00);
            		}
HXLINE(  62)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp35,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),62,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOr",15,46,3a,d5)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testOr,(void))

void TestNulls_obj::testOpt(){
            	HX_STACK_FRAME("thx.TestNulls","testOpt",0x09e04a63,"thx.TestNulls.testOpt","thx/TestNulls.hx",65,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE(  65)		HX_VARI(  ::thx::TestNulls,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  66)		HX_VARI(  ::Dynamic,o) = null();
HXLINE(  68)		HX_VARI(  ::Dynamic,_0) = o;
HXDLIN(  68)		::String _hx_tmp;
HXDLIN(  68)		if (hx::IsNull( _0 )) {
HXLINE(  68)			_hx_tmp = null();
            		}
            		else {
HXLINE(  68)			HX_VARI(  ::Dynamic,_1) = _0->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  68)			if (hx::IsNull( _1 )) {
HXLINE(  68)				_hx_tmp = null();
            			}
            			else {
HXLINE(  68)				HX_VARI(  ::Dynamic,_2) = _1->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  68)				if (hx::IsNull( _2 )) {
HXLINE(  68)					_hx_tmp = null();
            				}
            				else {
HXLINE(  68)					HX_VARI( ::String,_3) = ( (::String)(_2->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  68)					if (hx::IsNull( _3 )) {
HXLINE(  68)						_hx_tmp = null();
            					}
            					else {
HXLINE(  68)						_hx_tmp = _3;
            					}
            				}
            			}
            		}
HXDLIN(  68)		::utest::Assert_obj::isNull(_hx_tmp,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),68,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  69)		HX_VARI_NAME(  ::Dynamic,_01,"_0") = o;
HXDLIN(  69)		::String _hx_tmp1;
HXDLIN(  69)		if (hx::IsNull( _01 )) {
HXLINE(  69)			_hx_tmp1 = null();
            		}
            		else {
HXLINE(  69)			HX_VARI_NAME(  ::Dynamic,_11,"_1") = _01->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  69)			if (hx::IsNull( _11 )) {
HXLINE(  69)				_hx_tmp1 = null();
            			}
            			else {
HXLINE(  69)				HX_VARI_NAME(  ::Dynamic,_21,"_2") = _11->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  69)				if (hx::IsNull( _21 )) {
HXLINE(  69)					_hx_tmp1 = null();
            				}
            				else {
HXLINE(  69)					HX_VARI_NAME( ::String,_31,"_3") = ( (::String)(_21->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  69)					if (hx::IsNull( _31 )) {
HXLINE(  69)						_hx_tmp1 = null();
            					}
            					else {
HXLINE(  69)						_hx_tmp1 = _31;
            					}
            				}
            			}
            		}
HXDLIN(  69)		::utest::Assert_obj::isNull(_hx_tmp1,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),69,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  70)		HX_VARI_NAME(  ::Dynamic,_02,"_0") = o;
HXDLIN(  70)		::String _hx_tmp2;
HXDLIN(  70)		if (hx::IsNull( _02 )) {
HXLINE(  70)			_hx_tmp2 = null();
            		}
            		else {
HXLINE(  70)			HX_VARI_NAME(  ::Dynamic,_12,"_1") = _02->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  70)			if (hx::IsNull( _12 )) {
HXLINE(  70)				_hx_tmp2 = null();
            			}
            			else {
HXLINE(  70)				HX_VARI_NAME(  ::Dynamic,_22,"_2") = _12->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  70)				if (hx::IsNull( _22 )) {
HXLINE(  70)					_hx_tmp2 = null();
            				}
            				else {
HXLINE(  70)					HX_VARI_NAME( ::String,_32,"_3") = ( (::String)(_22->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  70)					if (hx::IsNull( _32 )) {
HXLINE(  70)						_hx_tmp2 = null();
            					}
            					else {
HXLINE(  70)						_hx_tmp2 = _32;
            					}
            				}
            			}
            		}
HXDLIN(  70)		::utest::Assert_obj::isNull(_hx_tmp2,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),70,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  71)		HX_VARI_NAME(  ::Dynamic,_03,"_0") = o;
HXDLIN(  71)		::String _hx_tmp3;
HXDLIN(  71)		if (hx::IsNull( _03 )) {
HXLINE(  71)			_hx_tmp3 = null();
            		}
            		else {
HXLINE(  71)			HX_VARI_NAME(  ::Dynamic,_13,"_1") = _03->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  71)			if (hx::IsNull( _13 )) {
HXLINE(  71)				_hx_tmp3 = null();
            			}
            			else {
HXLINE(  71)				HX_VARI_NAME(  ::Dynamic,_23,"_2") = _13->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  71)				if (hx::IsNull( _23 )) {
HXLINE(  71)					_hx_tmp3 = null();
            				}
            				else {
HXLINE(  71)					HX_VARI_NAME( ::String,_33,"_3") = ( (::String)(_23->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  71)					if (hx::IsNull( _33 )) {
HXLINE(  71)						_hx_tmp3 = null();
            					}
            					else {
HXLINE(  71)						_hx_tmp3 = _33;
            					}
            				}
            			}
            		}
HXDLIN(  71)		::utest::Assert_obj::isNull(_hx_tmp3,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),71,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  73)		HX_VARI_NAME(  ::Dynamic,_04,"_0") = o;
HXDLIN(  73)		::String _hx_tmp4;
HXDLIN(  73)		if (hx::IsNull( _04 )) {
HXLINE(  73)			_hx_tmp4 = null();
            		}
            		else {
HXLINE(  73)			HX_VARI_NAME(  ::Dynamic,_14,"_1") = _04->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  73)			if (hx::IsNull( _14 )) {
HXLINE(  73)				_hx_tmp4 = null();
            			}
            			else {
HXLINE(  73)				HX_VARI_NAME(  ::Dynamic,_24,"_2") = _14->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  73)				if (hx::IsNull( _24 )) {
HXLINE(  73)					_hx_tmp4 = null();
            				}
            				else {
HXLINE(  73)					HX_VARI_NAME( ::String,_34,"_3") = ( (::String)(_24->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  73)					if (hx::IsNull( _34 )) {
HXLINE(  73)						_hx_tmp4 = null();
            					}
            					else {
HXLINE(  73)						_hx_tmp4 = _34;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI( ::String,t) = _hx_tmp4;
HXDLIN( 139)		 ::Dynamic _hx_tmp5;
HXDLIN( 139)		if (hx::IsNotNull( t )) {
HXLINE( 139)			_hx_tmp5 = t;
            		}
            		else {
HXLINE( 139)			_hx_tmp5 = HX_("B",42,00,00,00);
            		}
HXLINE(  73)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp5,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),73,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  75)		o =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("a",61,00,00,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("b",62,00,00,00), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("c",63,00,00,00),HX_("A",41,00,00,00)))))));
HXLINE(  76)		HX_VARI_NAME(  ::Dynamic,_05,"_0") = o;
HXDLIN(  76)		::String _hx_tmp6;
HXDLIN(  76)		if (hx::IsNull( _05 )) {
HXLINE(  76)			_hx_tmp6 = null();
            		}
            		else {
HXLINE(  76)			HX_VARI_NAME(  ::Dynamic,_15,"_1") = _05->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  76)			if (hx::IsNull( _15 )) {
HXLINE(  76)				_hx_tmp6 = null();
            			}
            			else {
HXLINE(  76)				HX_VARI_NAME(  ::Dynamic,_25,"_2") = _15->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  76)				if (hx::IsNull( _25 )) {
HXLINE(  76)					_hx_tmp6 = null();
            				}
            				else {
HXLINE(  76)					HX_VARI_NAME( ::String,_35,"_3") = ( (::String)(_25->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  76)					if (hx::IsNull( _35 )) {
HXLINE(  76)						_hx_tmp6 = null();
            					}
            					else {
HXLINE(  76)						_hx_tmp6 = _35;
            					}
            				}
            			}
            		}
HXDLIN(  76)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp6,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),76,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  77)		HX_VARI_NAME(  ::Dynamic,_06,"_0") = o;
HXDLIN(  77)		::String _hx_tmp7;
HXDLIN(  77)		if (hx::IsNull( _06 )) {
HXLINE(  77)			_hx_tmp7 = null();
            		}
            		else {
HXLINE(  77)			HX_VARI_NAME(  ::Dynamic,_16,"_1") = _06->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  77)			if (hx::IsNull( _16 )) {
HXLINE(  77)				_hx_tmp7 = null();
            			}
            			else {
HXLINE(  77)				HX_VARI_NAME(  ::Dynamic,_26,"_2") = _16->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  77)				if (hx::IsNull( _26 )) {
HXLINE(  77)					_hx_tmp7 = null();
            				}
            				else {
HXLINE(  77)					HX_VARI_NAME( ::String,_36,"_3") = ( (::String)(_26->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  77)					if (hx::IsNull( _36 )) {
HXLINE(  77)						_hx_tmp7 = null();
            					}
            					else {
HXLINE(  77)						_hx_tmp7 = _36;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t1,"t") = _hx_tmp7;
HXDLIN( 139)		 ::Dynamic _hx_tmp8;
HXDLIN( 139)		if (hx::IsNotNull( t1 )) {
HXLINE( 139)			_hx_tmp8 = t1;
            		}
            		else {
HXLINE( 139)			_hx_tmp8 = HX_("B",42,00,00,00);
            		}
HXLINE(  77)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp8,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),77,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  79)		HX_VARI_NAME(  ::Dynamic,_07,"_0") = o;
HXDLIN(  79)		 ::Dynamic _hx_tmp9;
HXDLIN(  79)		if (hx::IsNull( _07 )) {
HXLINE(  79)			_hx_tmp9 = null();
            		}
            		else {
HXLINE(  79)			HX_VARI_NAME(  ::Dynamic,_17,"_1") = _07->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  79)			if (hx::IsNull( _17 )) {
HXLINE(  79)				_hx_tmp9 = null();
            			}
            			else {
HXLINE(  79)				HX_VARI_NAME(  ::Dynamic,_27,"_2") = _17->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  79)				if (hx::IsNull( _27 )) {
HXLINE(  79)					_hx_tmp9 = null();
            				}
            				else {
HXLINE(  79)					_hx_tmp9 = _27;
            				}
            			}
            		}
HXDLIN(  79)		::utest::Assert_obj::same( ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("c",63,00,00,00),HX_("A",41,00,00,00))),_hx_tmp9,null(),null(),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),79,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  80)		HX_VARI_NAME(  ::Dynamic,_08,"_0") = o;
HXDLIN(  80)		 ::Dynamic _hx_tmp10;
HXDLIN(  80)		if (hx::IsNull( _08 )) {
HXLINE(  80)			_hx_tmp10 = null();
            		}
            		else {
HXLINE(  80)			HX_VARI_NAME(  ::Dynamic,_18,"_1") = _08->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  80)			if (hx::IsNull( _18 )) {
HXLINE(  80)				_hx_tmp10 = null();
            			}
            			else {
HXLINE(  80)				HX_VARI_NAME(  ::Dynamic,_28,"_2") = _18->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  80)				if (hx::IsNull( _28 )) {
HXLINE(  80)					_hx_tmp10 = null();
            				}
            				else {
HXLINE(  80)					_hx_tmp10 = _28;
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME(  ::Dynamic,t2,"t") = _hx_tmp10;
HXDLIN( 139)		 ::Dynamic _hx_tmp11;
HXDLIN( 139)		if (hx::IsNotNull( t2 )) {
HXLINE( 139)			_hx_tmp11 = t2;
            		}
            		else {
HXLINE( 139)			_hx_tmp11 =  ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("c",63,00,00,00),HX_("B",42,00,00,00)));
            		}
HXLINE(  80)		::utest::Assert_obj::same( ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("c",63,00,00,00),HX_("A",41,00,00,00))),_hx_tmp11,null(),null(),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),80,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  82)		o =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("a",61,00,00,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("b",62,00,00,00),null()))));
HXLINE(  83)		HX_VARI_NAME(  ::Dynamic,_09,"_0") = o;
HXDLIN(  83)		::String _hx_tmp12;
HXDLIN(  83)		if (hx::IsNull( _09 )) {
HXLINE(  83)			_hx_tmp12 = null();
            		}
            		else {
HXLINE(  83)			HX_VARI_NAME(  ::Dynamic,_19,"_1") = _09->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  83)			if (hx::IsNull( _19 )) {
HXLINE(  83)				_hx_tmp12 = null();
            			}
            			else {
HXLINE(  83)				HX_VARI_NAME(  ::Dynamic,_29,"_2") = _19->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  83)				if (hx::IsNull( _29 )) {
HXLINE(  83)					_hx_tmp12 = null();
            				}
            				else {
HXLINE(  83)					HX_VARI_NAME( ::String,_37,"_3") = ( (::String)(_29->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  83)					if (hx::IsNull( _37 )) {
HXLINE(  83)						_hx_tmp12 = null();
            					}
            					else {
HXLINE(  83)						_hx_tmp12 = _37;
            					}
            				}
            			}
            		}
HXDLIN(  83)		::utest::Assert_obj::isNull(_hx_tmp12,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),83,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  84)		HX_VARI_NAME(  ::Dynamic,_010,"_0") = o;
HXDLIN(  84)		::String _hx_tmp13;
HXDLIN(  84)		if (hx::IsNull( _010 )) {
HXLINE(  84)			_hx_tmp13 = null();
            		}
            		else {
HXLINE(  84)			HX_VARI_NAME(  ::Dynamic,_110,"_1") = _010->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  84)			if (hx::IsNull( _110 )) {
HXLINE(  84)				_hx_tmp13 = null();
            			}
            			else {
HXLINE(  84)				HX_VARI_NAME(  ::Dynamic,_210,"_2") = _110->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  84)				if (hx::IsNull( _210 )) {
HXLINE(  84)					_hx_tmp13 = null();
            				}
            				else {
HXLINE(  84)					HX_VARI_NAME( ::String,_38,"_3") = ( (::String)(_210->__Field(HX_("c",63,00,00,00),hx::paccDynamic)) );
HXDLIN(  84)					if (hx::IsNull( _38 )) {
HXLINE(  84)						_hx_tmp13 = null();
            					}
            					else {
HXLINE(  84)						_hx_tmp13 = _38;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t3,"t") = _hx_tmp13;
HXDLIN( 139)		 ::Dynamic _hx_tmp14;
HXDLIN( 139)		if (hx::IsNotNull( t3 )) {
HXLINE( 139)			_hx_tmp14 = t3;
            		}
            		else {
HXLINE( 139)			_hx_tmp14 = HX_("B",42,00,00,00);
            		}
HXLINE(  84)		::utest::Assert_obj::equals(HX_("B",42,00,00,00),_hx_tmp14,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),84,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  86)		HX_VARI_NAME(  ::Dynamic,_011,"_0") = o;
HXDLIN(  86)		 ::Dynamic _hx_tmp15;
HXDLIN(  86)		if (hx::IsNull( _011 )) {
HXLINE(  86)			_hx_tmp15 = null();
            		}
            		else {
HXLINE(  86)			HX_VARI_NAME(  ::Dynamic,_111,"_1") = _011->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  86)			if (hx::IsNull( _111 )) {
HXLINE(  86)				_hx_tmp15 = null();
            			}
            			else {
HXLINE(  86)				HX_VARI_NAME(  ::Dynamic,_211,"_2") = _111->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  86)				if (hx::IsNull( _211 )) {
HXLINE(  86)					_hx_tmp15 = null();
            				}
            				else {
HXLINE(  86)					_hx_tmp15 = _211;
            				}
            			}
            		}
HXDLIN(  86)		::utest::Assert_obj::isNull(_hx_tmp15,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),86,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  87)		HX_VARI_NAME(  ::Dynamic,_012,"_0") = o;
HXDLIN(  87)		 ::Dynamic _hx_tmp16;
HXDLIN(  87)		if (hx::IsNull( _012 )) {
HXLINE(  87)			_hx_tmp16 = null();
            		}
            		else {
HXLINE(  87)			HX_VARI_NAME(  ::Dynamic,_112,"_1") = _012->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  87)			if (hx::IsNull( _112 )) {
HXLINE(  87)				_hx_tmp16 = null();
            			}
            			else {
HXLINE(  87)				HX_VARI_NAME(  ::Dynamic,_212,"_2") = _112->__Field(HX_("b",62,00,00,00),hx::paccDynamic);
HXDLIN(  87)				if (hx::IsNull( _212 )) {
HXLINE(  87)					_hx_tmp16 = null();
            				}
            				else {
HXLINE(  87)					_hx_tmp16 = _212;
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME(  ::Dynamic,t4,"t") = _hx_tmp16;
HXDLIN( 139)		 ::Dynamic _hx_tmp17;
HXDLIN( 139)		if (hx::IsNotNull( t4 )) {
HXLINE( 139)			_hx_tmp17 = t4;
            		}
            		else {
HXLINE( 139)			_hx_tmp17 =  ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("c",63,00,00,00),HX_("B",42,00,00,00)));
            		}
HXLINE(  87)		::utest::Assert_obj::same( ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("c",63,00,00,00),HX_("B",42,00,00,00))),_hx_tmp17,null(),null(),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),87,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  89)		::String _hx_tmp18;
HXDLIN(  89)		if (hx::IsNull( _gthis )) {
HXLINE(  89)			_hx_tmp18 = null();
            		}
            		else {
HXLINE(  89)			HX_VARI_NAME(  ::Dynamic,_113,"_1") = _gthis->nested;
HXDLIN(  89)			if (hx::IsNull( _113 )) {
HXLINE(  89)				_hx_tmp18 = null();
            			}
            			else {
HXLINE(  89)				HX_VARI_NAME(  ::Dynamic,_213,"_2") = _113->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  89)				if (hx::IsNull( _213 )) {
HXLINE(  89)					_hx_tmp18 = null();
            				}
            				else {
HXLINE(  89)					HX_VARI_NAME( ::String,_39,"_3") = ( (::String)(_213->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  89)					if (hx::IsNull( _39 )) {
HXLINE(  89)						_hx_tmp18 = null();
            					}
            					else {
HXLINE(  89)						_hx_tmp18 = _39;
            					}
            				}
            			}
            		}
HXDLIN(  89)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp18,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),89,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  90)		::String _hx_tmp19;
HXDLIN(  90)		if (hx::IsNull( _gthis )) {
HXLINE(  90)			_hx_tmp19 = null();
            		}
            		else {
HXLINE(  90)			HX_VARI_NAME(  ::Dynamic,_114,"_1") = _gthis->nested;
HXDLIN(  90)			if (hx::IsNull( _114 )) {
HXLINE(  90)				_hx_tmp19 = null();
            			}
            			else {
HXLINE(  90)				HX_VARI_NAME(  ::Dynamic,_214,"_2") = _114->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  90)				if (hx::IsNull( _214 )) {
HXLINE(  90)					_hx_tmp19 = null();
            				}
            				else {
HXLINE(  90)					HX_VARI_NAME( ::String,_310,"_3") = ( (::String)(_214->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  90)					if (hx::IsNull( _310 )) {
HXLINE(  90)						_hx_tmp19 = null();
            					}
            					else {
HXLINE(  90)						_hx_tmp19 = _310;
            					}
            				}
            			}
            		}
HXDLIN(  90)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp19,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),90,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  92)		::String _hx_tmp20;
HXDLIN(  92)		if (hx::IsNull( _gthis )) {
HXLINE(  92)			_hx_tmp20 = null();
            		}
            		else {
HXLINE(  92)			HX_VARI_NAME(  ::Dynamic,_115,"_1") = _gthis->empty;
HXDLIN(  92)			if (hx::IsNull( _115 )) {
HXLINE(  92)				_hx_tmp20 = null();
            			}
            			else {
HXLINE(  92)				HX_VARI_NAME(  ::Dynamic,_215,"_2") = _115->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  92)				if (hx::IsNull( _215 )) {
HXLINE(  92)					_hx_tmp20 = null();
            				}
            				else {
HXLINE(  92)					HX_VARI_NAME( ::String,_311,"_3") = ( (::String)(_215->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  92)					if (hx::IsNull( _311 )) {
HXLINE(  92)						_hx_tmp20 = null();
            					}
            					else {
HXLINE(  92)						_hx_tmp20 = _311;
            					}
            				}
            			}
            		}
HXDLIN(  92)		::utest::Assert_obj::isNull(_hx_tmp20,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),92,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  93)		::String _hx_tmp21;
HXDLIN(  93)		if (hx::IsNull( _gthis )) {
HXLINE(  93)			_hx_tmp21 = null();
            		}
            		else {
HXLINE(  93)			HX_VARI_NAME(  ::Dynamic,_116,"_1") = _gthis->empty;
HXDLIN(  93)			if (hx::IsNull( _116 )) {
HXLINE(  93)				_hx_tmp21 = null();
            			}
            			else {
HXLINE(  93)				HX_VARI_NAME(  ::Dynamic,_216,"_2") = _116->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN(  93)				if (hx::IsNull( _216 )) {
HXLINE(  93)					_hx_tmp21 = null();
            				}
            				else {
HXLINE(  93)					HX_VARI_NAME( ::String,_312,"_3") = ( (::String)(_216->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  93)					if (hx::IsNull( _312 )) {
HXLINE(  93)						_hx_tmp21 = null();
            					}
            					else {
HXLINE(  93)						_hx_tmp21 = _312;
            					}
            				}
            			}
            		}
HXDLIN(  93)		::utest::Assert_obj::isNull(_hx_tmp21,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),93,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  95)		HX_VARI(  ::Dynamic,arr) = null();
HXLINE(  96)		HX_VARI_NAME(  ::Dynamic,_013,"_0") = arr;
HXDLIN(  96)		::String _hx_tmp22;
HXDLIN(  96)		if (hx::IsNull( _013 )) {
HXLINE(  96)			_hx_tmp22 = null();
            		}
            		else {
HXLINE(  96)			HX_VARI_NAME( ::Array< ::Dynamic>,_117,"_1") = ( (::Array< ::Dynamic>)(_013->__Field(HX_("a",61,00,00,00),hx::paccDynamic)) );
HXDLIN(  96)			if (hx::IsNull( _117 )) {
HXLINE(  96)				_hx_tmp22 = null();
            			}
            			else {
HXLINE(  96)				HX_VARI_NAME(  ::Dynamic,_217,"_2") = _117->__get((int)0);
HXDLIN(  96)				if (hx::IsNull( _217 )) {
HXLINE(  96)					_hx_tmp22 = null();
            				}
            				else {
HXLINE(  96)					HX_VARI_NAME( ::String,_313,"_3") = ( (::String)(_217->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  96)					if (hx::IsNull( _313 )) {
HXLINE(  96)						_hx_tmp22 = null();
            					}
            					else {
HXLINE(  96)						_hx_tmp22 = _313;
            					}
            				}
            			}
            		}
HXDLIN(  96)		::utest::Assert_obj::isNull(_hx_tmp22,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),96,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  97)		arr =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("a",61,00,00,00),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("b",62,00,00,00),HX_("A",41,00,00,00))))));
HXLINE(  98)		HX_VARI_NAME(  ::Dynamic,_014,"_0") = arr;
HXDLIN(  98)		::String _hx_tmp23;
HXDLIN(  98)		if (hx::IsNull( _014 )) {
HXLINE(  98)			_hx_tmp23 = null();
            		}
            		else {
HXLINE(  98)			HX_VARI_NAME( ::Array< ::Dynamic>,_118,"_1") = ( (::Array< ::Dynamic>)(_014->__Field(HX_("a",61,00,00,00),hx::paccDynamic)) );
HXDLIN(  98)			if (hx::IsNull( _118 )) {
HXLINE(  98)				_hx_tmp23 = null();
            			}
            			else {
HXLINE(  98)				HX_VARI_NAME(  ::Dynamic,_218,"_2") = _118->__get((int)1);
HXDLIN(  98)				if (hx::IsNull( _218 )) {
HXLINE(  98)					_hx_tmp23 = null();
            				}
            				else {
HXLINE(  98)					HX_VARI_NAME( ::String,_314,"_3") = ( (::String)(_218->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  98)					if (hx::IsNull( _314 )) {
HXLINE(  98)						_hx_tmp23 = null();
            					}
            					else {
HXLINE(  98)						_hx_tmp23 = _314;
            					}
            				}
            			}
            		}
HXDLIN(  98)		::utest::Assert_obj::isNull(_hx_tmp23,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),98,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE(  99)		HX_VARI_NAME(  ::Dynamic,_015,"_0") = arr;
HXDLIN(  99)		::String _hx_tmp24;
HXDLIN(  99)		if (hx::IsNull( _015 )) {
HXLINE(  99)			_hx_tmp24 = null();
            		}
            		else {
HXLINE(  99)			HX_VARI_NAME( ::Array< ::Dynamic>,_119,"_1") = ( (::Array< ::Dynamic>)(_015->__Field(HX_("a",61,00,00,00),hx::paccDynamic)) );
HXDLIN(  99)			if (hx::IsNull( _119 )) {
HXLINE(  99)				_hx_tmp24 = null();
            			}
            			else {
HXLINE(  99)				HX_VARI_NAME(  ::Dynamic,_219,"_2") = _119->__get((int)0);
HXDLIN(  99)				if (hx::IsNull( _219 )) {
HXLINE(  99)					_hx_tmp24 = null();
            				}
            				else {
HXLINE(  99)					HX_VARI_NAME( ::String,_315,"_3") = ( (::String)(_219->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN(  99)					if (hx::IsNull( _315 )) {
HXLINE(  99)						_hx_tmp24 = null();
            					}
            					else {
HXLINE(  99)						_hx_tmp24 = _315;
            					}
            				}
            			}
            		}
HXDLIN(  99)		::utest::Assert_obj::equals(HX_("A",41,00,00,00),_hx_tmp24,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),99,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE( 101)		HX_VARI_NAME( ::Array< ::Dynamic>,arr1,"arr") = null();
HXLINE( 102)		HX_VARI_NAME( ::Array< ::Dynamic>,_016,"_0") = arr1;
HXDLIN( 102)		::Array< ::Dynamic> _hx_tmp25;
HXDLIN( 102)		if (hx::IsNull( _016 )) {
HXLINE( 102)			_hx_tmp25 = null();
            		}
            		else {
HXLINE( 102)			HX_VARI_NAME( ::Array< ::Dynamic>,_120,"_1") = _016->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 102)			if (hx::IsNull( _120 )) {
HXLINE( 102)				_hx_tmp25 = null();
            			}
            			else {
HXLINE( 102)				_hx_tmp25 = _120;
            			}
            		}
HXDLIN( 102)		::utest::Assert_obj::isNull(_hx_tmp25,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),102,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE( 103)		HX_VARI_NAME( ::Array< ::Dynamic>,_017,"_0") = arr1;
HXDLIN( 103)		::Array< ::Dynamic> _hx_tmp26;
HXDLIN( 103)		if (hx::IsNull( _017 )) {
HXLINE( 103)			_hx_tmp26 = null();
            		}
            		else {
HXLINE( 103)			HX_VARI_NAME( ::Array< ::Dynamic>,_121,"_1") = _017->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 103)			if (hx::IsNull( _121 )) {
HXLINE( 103)				_hx_tmp26 = null();
            			}
            			else {
HXLINE( 103)				HX_VARI_NAME( ::Array< ::Dynamic>,_220,"_2") = _121->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 103)				if (hx::IsNull( _220 )) {
HXLINE( 103)					_hx_tmp26 = null();
            				}
            				else {
HXLINE( 103)					_hx_tmp26 = _220;
            				}
            			}
            		}
HXDLIN( 103)		::utest::Assert_obj::isNull(_hx_tmp26,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),103,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE( 104)		HX_VARI_NAME( ::Array< ::Dynamic>,_018,"_0") = arr1;
HXDLIN( 104)		 ::Dynamic _hx_tmp27;
HXDLIN( 104)		if (hx::IsNull( _018 )) {
HXLINE( 104)			_hx_tmp27 = null();
            		}
            		else {
HXLINE( 104)			HX_VARI_NAME( ::Array< ::Dynamic>,_122,"_1") = _018->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 104)			if (hx::IsNull( _122 )) {
HXLINE( 104)				_hx_tmp27 = null();
            			}
            			else {
HXLINE( 104)				HX_VARI_NAME( ::Array< ::Dynamic>,_221,"_2") = _122->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 104)				if (hx::IsNull( _221 )) {
HXLINE( 104)					_hx_tmp27 = null();
            				}
            				else {
HXLINE( 104)					HX_VARI_NAME(  ::Dynamic,_316,"_3") = _221->__get((int)3);
HXDLIN( 104)					if (hx::IsNull( _316 )) {
HXLINE( 104)						_hx_tmp27 = null();
            					}
            					else {
HXLINE( 104)						_hx_tmp27 = _316;
            					}
            				}
            			}
            		}
HXDLIN( 104)		::utest::Assert_obj::isNull(_hx_tmp27,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),104,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE( 106)		arr1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,::Array_obj< ::Dynamic>::__new(2)->init(0,::Array_obj< ::Dynamic>::__new(3)->init(0,(int)1)->init(1,(int)2)->init(2,(int)3))->init(1,::Array_obj< ::Dynamic>::__new(3)->init(0,(int)4)->init(1,(int)5)->init(2,(int)6)));
HXLINE( 107)		HX_VARI_NAME( ::Array< ::Dynamic>,_019,"_0") = arr1;
HXDLIN( 107)		 ::Dynamic _hx_tmp28;
HXDLIN( 107)		if (hx::IsNull( _019 )) {
HXLINE( 107)			_hx_tmp28 = null();
            		}
            		else {
HXLINE( 107)			HX_VARI_NAME( ::Array< ::Dynamic>,_123,"_1") = _019->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 107)			if (hx::IsNull( _123 )) {
HXLINE( 107)				_hx_tmp28 = null();
            			}
            			else {
HXLINE( 107)				HX_VARI_NAME( ::Array< ::Dynamic>,_222,"_2") = _123->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 107)				if (hx::IsNull( _222 )) {
HXLINE( 107)					_hx_tmp28 = null();
            				}
            				else {
HXLINE( 107)					HX_VARI_NAME(  ::Dynamic,_317,"_3") = _222->__get((int)0);
HXDLIN( 107)					if (hx::IsNull( _317 )) {
HXLINE( 107)						_hx_tmp28 = null();
            					}
            					else {
HXLINE( 107)						_hx_tmp28 = _317;
            					}
            				}
            			}
            		}
HXDLIN( 107)		::utest::Assert_obj::equals((int)1,_hx_tmp28,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),107,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
HXLINE( 108)		HX_VARI_NAME( ::Array< ::Dynamic>,_020,"_0") = arr1;
HXDLIN( 108)		 ::Dynamic _hx_tmp29;
HXDLIN( 108)		if (hx::IsNull( _020 )) {
HXLINE( 108)			_hx_tmp29 = null();
            		}
            		else {
HXLINE( 108)			HX_VARI_NAME( ::Array< ::Dynamic>,_124,"_1") = _020->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 108)			if (hx::IsNull( _124 )) {
HXLINE( 108)				_hx_tmp29 = null();
            			}
            			else {
HXLINE( 108)				HX_VARI_NAME( ::Array< ::Dynamic>,_223,"_2") = _124->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 108)				if (hx::IsNull( _223 )) {
HXLINE( 108)					_hx_tmp29 = null();
            				}
            				else {
HXLINE( 108)					HX_VARI_NAME(  ::Dynamic,_318,"_3") = _223->__get((int)2);
HXDLIN( 108)					if (hx::IsNull( _318 )) {
HXLINE( 108)						_hx_tmp29 = null();
            					}
            					else {
HXLINE( 108)						_hx_tmp29 = _318;
            					}
            				}
            			}
            		}
HXDLIN( 108)		::utest::Assert_obj::equals((int)6,_hx_tmp29,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),108,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOpt",01,0b,c3,bd)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testOpt,(void))

void TestNulls_obj::testOrWithIndex(){
            	HX_STACK_FRAME("thx.TestNulls","testOrWithIndex",0x149c1fb9,"thx.TestNulls.testOrWithIndex","thx/TestNulls.hx",111,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 112)		HX_VARI( ::Array< ::Dynamic>,arr) = null();
HXLINE( 139)		HX_VAR(  ::Dynamic,t);
HXLINE( 114)		if (hx::IsNull( arr )) {
HXLINE( 139)			t = null();
            		}
            		else {
HXLINE( 114)			HX_VARI( ::Array< ::Dynamic>,_1) = arr->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 114)			if (hx::IsNull( _1 )) {
HXLINE( 139)				t = null();
            			}
            			else {
HXLINE( 114)				HX_VARI( ::Array< ::Dynamic>,_2) = _1->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 114)				if (hx::IsNull( _2 )) {
HXLINE( 139)					t = null();
            				}
            				else {
HXLINE( 114)					HX_VARI(  ::Dynamic,_3) = _2->__get((int)3);
HXDLIN( 114)					if (hx::IsNull( _3 )) {
HXLINE( 139)						t = null();
            					}
            					else {
HXLINE( 139)						t = _3;
            					}
            				}
            			}
            		}
HXDLIN( 139)		 ::Dynamic _hx_tmp;
HXDLIN( 139)		if (hx::IsNotNull( t )) {
HXLINE( 139)			_hx_tmp = t;
            		}
            		else {
HXLINE( 139)			_hx_tmp = (int)7;
            		}
HXLINE( 114)		::utest::Assert_obj::equals((int)7,_hx_tmp,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),114,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrWithIndex",57,ae,3d,ba)));
HXLINE( 139)		HX_VAR_NAME(  ::Dynamic,t1,"t");
HXLINE( 115)		if (hx::IsNull( arr )) {
HXLINE( 139)			t1 = null();
            		}
            		else {
HXLINE( 115)			HX_VARI_NAME( ::Array< ::Dynamic>,_11,"_1") = arr->__get((int)4).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 115)			if (hx::IsNull( _11 )) {
HXLINE( 139)				t1 = null();
            			}
            			else {
HXLINE( 115)				HX_VARI_NAME( ::Array< ::Dynamic>,_21,"_2") = _11->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 115)				if (hx::IsNull( _21 )) {
HXLINE( 139)					t1 = null();
            				}
            				else {
HXLINE( 115)					HX_VARI_NAME(  ::Dynamic,_31,"_3") = _21->__get((int)3);
HXDLIN( 115)					if (hx::IsNull( _31 )) {
HXLINE( 139)						t1 = null();
            					}
            					else {
HXLINE( 139)						t1 = _31;
            					}
            				}
            			}
            		}
HXDLIN( 139)		 ::Dynamic _hx_tmp1;
HXDLIN( 139)		if (hx::IsNotNull( t1 )) {
HXLINE( 139)			_hx_tmp1 = t1;
            		}
            		else {
HXLINE( 139)			_hx_tmp1 = (int)7;
            		}
HXLINE( 115)		::utest::Assert_obj::equals((int)7,_hx_tmp1,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),115,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrWithIndex",57,ae,3d,ba)));
HXLINE( 139)		HX_VAR_NAME(  ::Dynamic,t2,"t");
HXLINE( 116)		if (hx::IsNull( arr )) {
HXLINE( 139)			t2 = null();
            		}
            		else {
HXLINE( 116)			HX_VARI_NAME( ::Array< ::Dynamic>,_12,"_1") = arr->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 116)			if (hx::IsNull( _12 )) {
HXLINE( 139)				t2 = null();
            			}
            			else {
HXLINE( 116)				HX_VARI_NAME( ::Array< ::Dynamic>,_22,"_2") = _12->__get((int)4).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 116)				if (hx::IsNull( _22 )) {
HXLINE( 139)					t2 = null();
            				}
            				else {
HXLINE( 116)					HX_VARI_NAME(  ::Dynamic,_32,"_3") = _22->__get((int)3);
HXDLIN( 116)					if (hx::IsNull( _32 )) {
HXLINE( 139)						t2 = null();
            					}
            					else {
HXLINE( 139)						t2 = _32;
            					}
            				}
            			}
            		}
HXDLIN( 139)		 ::Dynamic _hx_tmp2;
HXDLIN( 139)		if (hx::IsNotNull( t2 )) {
HXLINE( 139)			_hx_tmp2 = t2;
            		}
            		else {
HXLINE( 139)			_hx_tmp2 = (int)7;
            		}
HXLINE( 116)		::utest::Assert_obj::equals((int)7,_hx_tmp2,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),116,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrWithIndex",57,ae,3d,ba)));
HXLINE( 139)		HX_VAR_NAME(  ::Dynamic,t3,"t");
HXLINE( 117)		if (hx::IsNull( arr )) {
HXLINE( 139)			t3 = null();
            		}
            		else {
HXLINE( 117)			HX_VARI_NAME( ::Array< ::Dynamic>,_13,"_1") = arr->__get((int)0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 117)			if (hx::IsNull( _13 )) {
HXLINE( 139)				t3 = null();
            			}
            			else {
HXLINE( 117)				HX_VARI_NAME( ::Array< ::Dynamic>,_23,"_2") = _13->__get((int)1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 117)				if (hx::IsNull( _23 )) {
HXLINE( 139)					t3 = null();
            				}
            				else {
HXLINE( 117)					HX_VARI_NAME(  ::Dynamic,_33,"_3") = _23->__get((int)4);
HXDLIN( 117)					if (hx::IsNull( _33 )) {
HXLINE( 139)						t3 = null();
            					}
            					else {
HXLINE( 139)						t3 = _33;
            					}
            				}
            			}
            		}
HXDLIN( 139)		 ::Dynamic _hx_tmp3;
HXDLIN( 139)		if (hx::IsNotNull( t3 )) {
HXLINE( 139)			_hx_tmp3 = t3;
            		}
            		else {
HXLINE( 139)			_hx_tmp3 = (int)7;
            		}
HXLINE( 117)		::utest::Assert_obj::equals((int)7,_hx_tmp3,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),117,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrWithIndex",57,ae,3d,ba)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testOrWithIndex,(void))

void TestNulls_obj::testOrMethod(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1,::Array< Bool >,first) HXARGC(1)
            		 ::Dynamic _hx_run(::String s){
            			HX_STACK_FRAME("thx.TestNulls","testOrMethod",0x57dcac34,"thx.TestNulls.testOrMethod","thx/TestNulls.hx",133,0x51afd46f)
            			HX_STACK_ARG(s,"s")
HXLINE( 133)			if (first->__get((int)0)) {
            				HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::String,s) HXARGC(0)
            				::String _hx_run(){
            					HX_STACK_FRAME("thx.TestNulls","testOrMethod",0x57dcac34,"thx.TestNulls.testOrMethod","thx/TestNulls.hx",136,0x51afd46f)
HXLINE( 136)					return s.toLowerCase();
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE( 134)				first[(int)0] = false;
HXLINE( 135)				return  ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("change",70,91,72,b7), ::Dynamic(new _hx_Closure_0(s))));
            			}
            			else {
HXLINE( 140)				HX_STACK_DO_THROW(HX_("method called multiple times",7a,85,18,d1));
            			}
HXLINE( 133)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.TestNulls","testOrMethod",0x57dcac34,"thx.TestNulls.testOrMethod","thx/TestNulls.hx",128,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 128)		HX_VARI(  ::thx::TestNulls,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 129)		::String _hx_tmp;
HXDLIN( 129)		if (hx::IsNull( _gthis )) {
HXLINE( 129)			_hx_tmp = null();
            		}
            		else {
HXLINE( 129)			HX_VARI(  ::Dynamic,_1) = _gthis->m;
HXDLIN( 129)			if (hx::IsNull( _1 )) {
HXLINE( 129)				_hx_tmp = null();
            			}
            			else {
HXLINE( 129)				HX_VARI(  ::Dynamic,_2) =  ::Dynamic(_1->__Field(HX_("f",66,00,00,00),hx::paccDynamic))(HX_("Y",59,00,00,00));
HXDLIN( 129)				if (hx::IsNull( _2 )) {
HXLINE( 129)					_hx_tmp = null();
            				}
            				else {
HXLINE( 129)					HX_VARI( ::String,_3) = ( (::String)( ::Dynamic(_2->__Field(HX_("change",70,91,72,b7),hx::paccDynamic))()) );
HXDLIN( 129)					if (hx::IsNull( _3 )) {
HXLINE( 129)						_hx_tmp = null();
            					}
            					else {
HXLINE( 129)						_hx_tmp = _3;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI( ::String,t) = _hx_tmp;
HXDLIN( 139)		 ::Dynamic _hx_tmp1;
HXDLIN( 139)		if (hx::IsNotNull( t )) {
HXLINE( 139)			_hx_tmp1 = t;
            		}
            		else {
HXLINE( 139)			_hx_tmp1 = HX_("x",78,00,00,00);
            		}
HXLINE( 129)		::utest::Assert_obj::equals(HX_("x",78,00,00,00),_hx_tmp1,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),129,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrMethod",d6,ee,64,02)));
HXLINE( 130)		HX_VARI( ::Array< Bool >,first) = ::Array_obj< Bool >::__new(1)->init(0,true);
HXLINE( 131)		this->m =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("f",66,00,00,00), ::Dynamic(new _hx_Closure_1(first))));
HXLINE( 144)		::String _hx_tmp2;
HXDLIN( 144)		if (hx::IsNull( _gthis )) {
HXLINE( 144)			_hx_tmp2 = null();
            		}
            		else {
HXLINE( 144)			HX_VARI_NAME(  ::Dynamic,_11,"_1") = _gthis->m;
HXDLIN( 144)			if (hx::IsNull( _11 )) {
HXLINE( 144)				_hx_tmp2 = null();
            			}
            			else {
HXLINE( 144)				HX_VARI_NAME(  ::Dynamic,_21,"_2") =  ::Dynamic(_11->__Field(HX_("f",66,00,00,00),hx::paccDynamic))(HX_("Y",59,00,00,00));
HXDLIN( 144)				if (hx::IsNull( _21 )) {
HXLINE( 144)					_hx_tmp2 = null();
            				}
            				else {
HXLINE( 144)					HX_VARI_NAME( ::String,_31,"_3") = ( (::String)( ::Dynamic(_21->__Field(HX_("change",70,91,72,b7),hx::paccDynamic))()) );
HXDLIN( 144)					if (hx::IsNull( _31 )) {
HXLINE( 144)						_hx_tmp2 = null();
            					}
            					else {
HXLINE( 144)						_hx_tmp2 = _31;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t1,"t") = _hx_tmp2;
HXDLIN( 139)		 ::Dynamic _hx_tmp3;
HXDLIN( 139)		if (hx::IsNotNull( t1 )) {
HXLINE( 139)			_hx_tmp3 = t1;
            		}
            		else {
HXLINE( 139)			_hx_tmp3 = HX_("x",78,00,00,00);
            		}
HXLINE( 144)		::utest::Assert_obj::equals(HX_("y",79,00,00,00),_hx_tmp3,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),144,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrMethod",d6,ee,64,02)));
HXLINE( 146)		::String _hx_tmp4;
HXDLIN( 146)		if (hx::IsNull( _gthis )) {
HXLINE( 146)			_hx_tmp4 = null();
            		}
            		else {
HXLINE( 146)			HX_VARI_NAME(  ::Dynamic,_12,"_1") = _gthis->m2;
HXDLIN( 146)			if (hx::IsNull( _12 )) {
HXLINE( 146)				_hx_tmp4 = null();
            			}
            			else {
HXLINE( 146)				HX_VARI_NAME( ::String,_22,"_2") = ( (::String)( ::Dynamic(_12->__Field(HX_("f",66,00,00,00),hx::paccDynamic))(HX_("Y",59,00,00,00))) );
HXDLIN( 146)				if (hx::IsNull( _22 )) {
HXLINE( 146)					_hx_tmp4 = null();
            				}
            				else {
HXLINE( 146)					HX_VARI_NAME( ::String,_32,"_3") = _22.toLowerCase();
HXDLIN( 146)					if (hx::IsNull( _32 )) {
HXLINE( 146)						_hx_tmp4 = null();
            					}
            					else {
HXLINE( 146)						_hx_tmp4 = _32;
            					}
            				}
            			}
            		}
HXLINE( 139)		HX_VARI_NAME( ::String,t2,"t") = _hx_tmp4;
HXDLIN( 139)		 ::Dynamic _hx_tmp5;
HXDLIN( 139)		if (hx::IsNotNull( t2 )) {
HXLINE( 139)			_hx_tmp5 = t2;
            		}
            		else {
HXLINE( 139)			_hx_tmp5 = HX_("x",78,00,00,00);
            		}
HXLINE( 146)		::utest::Assert_obj::equals(HX_("x",78,00,00,00),_hx_tmp5,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),146,HX_("thx.TestNulls",d0,6d,32,55),HX_("testOrMethod",d6,ee,64,02)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testOrMethod,(void))

void TestNulls_obj::testIsNull(){
            	HX_STACK_FRAME("thx.TestNulls","testIsNull",0xc8a4b361,"thx.TestNulls.testIsNull","thx/TestNulls.hx",150,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 150)		HX_VARI(  ::thx::TestNulls,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 151)		 ::Dynamic _hx_tmp;
HXDLIN( 151)		if (hx::IsNull( _gthis )) {
HXLINE( 151)			_hx_tmp = null();
            		}
            		else {
HXLINE( 151)			HX_VARI(  ::Dynamic,_1) = _gthis->empty;
HXDLIN( 151)			if (hx::IsNull( _1 )) {
HXLINE( 151)				_hx_tmp = null();
            			}
            			else {
HXLINE( 151)				_hx_tmp = _1;
            			}
            		}
HXDLIN( 151)		::utest::Assert_obj::isTrue(hx::IsNull( _hx_tmp ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),151,HX_("thx.TestNulls",d0,6d,32,55),HX_("testIsNull",83,a9,69,7f)));
HXLINE( 152)		 ::Dynamic _hx_tmp1;
HXDLIN( 152)		if (hx::IsNull( _gthis )) {
HXLINE( 152)			_hx_tmp1 = null();
            		}
            		else {
HXLINE( 152)			HX_VARI_NAME(  ::Dynamic,_11,"_1") = _gthis->empty;
HXDLIN( 152)			if (hx::IsNull( _11 )) {
HXLINE( 152)				_hx_tmp1 = null();
            			}
            			else {
HXLINE( 152)				HX_VARI(  ::Dynamic,_2) = _11->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN( 152)				if (hx::IsNull( _2 )) {
HXLINE( 152)					_hx_tmp1 = null();
            				}
            				else {
HXLINE( 152)					_hx_tmp1 = _2;
            				}
            			}
            		}
HXDLIN( 152)		::utest::Assert_obj::isTrue(hx::IsNull( _hx_tmp1 ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),152,HX_("thx.TestNulls",d0,6d,32,55),HX_("testIsNull",83,a9,69,7f)));
HXLINE( 153)		::String _hx_tmp2;
HXDLIN( 153)		if (hx::IsNull( _gthis )) {
HXLINE( 153)			_hx_tmp2 = null();
            		}
            		else {
HXLINE( 153)			HX_VARI_NAME(  ::Dynamic,_12,"_1") = _gthis->empty;
HXDLIN( 153)			if (hx::IsNull( _12 )) {
HXLINE( 153)				_hx_tmp2 = null();
            			}
            			else {
HXLINE( 153)				HX_VARI_NAME(  ::Dynamic,_21,"_2") = _12->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN( 153)				if (hx::IsNull( _21 )) {
HXLINE( 153)					_hx_tmp2 = null();
            				}
            				else {
HXLINE( 153)					HX_VARI( ::String,_3) = ( (::String)(_21->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN( 153)					if (hx::IsNull( _3 )) {
HXLINE( 153)						_hx_tmp2 = null();
            					}
            					else {
HXLINE( 153)						_hx_tmp2 = _3;
            					}
            				}
            			}
            		}
HXDLIN( 153)		::utest::Assert_obj::isTrue(hx::IsNull( _hx_tmp2 ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),153,HX_("thx.TestNulls",d0,6d,32,55),HX_("testIsNull",83,a9,69,7f)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testIsNull,(void))

void TestNulls_obj::testNotNull(){
            	HX_STACK_FRAME("thx.TestNulls","testNotNull",0xc56faf6a,"thx.TestNulls.testNotNull","thx/TestNulls.hx",156,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 156)		HX_VARI(  ::thx::TestNulls,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 157)		 ::Dynamic _hx_tmp;
HXDLIN( 157)		if (hx::IsNull( _gthis )) {
HXLINE( 157)			_hx_tmp = null();
            		}
            		else {
HXLINE( 157)			HX_VARI(  ::Dynamic,_1) = _gthis->nested;
HXDLIN( 157)			if (hx::IsNull( _1 )) {
HXLINE( 157)				_hx_tmp = null();
            			}
            			else {
HXLINE( 157)				_hx_tmp = _1;
            			}
            		}
HXDLIN( 157)		::utest::Assert_obj::isTrue(hx::IsNotNull( _hx_tmp ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),157,HX_("thx.TestNulls",d0,6d,32,55),HX_("testNotNull",08,17,02,fb)));
HXLINE( 158)		 ::Dynamic _hx_tmp1;
HXDLIN( 158)		if (hx::IsNull( _gthis )) {
HXLINE( 158)			_hx_tmp1 = null();
            		}
            		else {
HXLINE( 158)			HX_VARI_NAME(  ::Dynamic,_11,"_1") = _gthis->nested;
HXDLIN( 158)			if (hx::IsNull( _11 )) {
HXLINE( 158)				_hx_tmp1 = null();
            			}
            			else {
HXLINE( 158)				HX_VARI(  ::Dynamic,_2) = _11->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN( 158)				if (hx::IsNull( _2 )) {
HXLINE( 158)					_hx_tmp1 = null();
            				}
            				else {
HXLINE( 158)					_hx_tmp1 = _2;
            				}
            			}
            		}
HXDLIN( 158)		::utest::Assert_obj::isTrue(hx::IsNotNull( _hx_tmp1 ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),158,HX_("thx.TestNulls",d0,6d,32,55),HX_("testNotNull",08,17,02,fb)));
HXLINE( 159)		::String _hx_tmp2;
HXDLIN( 159)		if (hx::IsNull( _gthis )) {
HXLINE( 159)			_hx_tmp2 = null();
            		}
            		else {
HXLINE( 159)			HX_VARI_NAME(  ::Dynamic,_12,"_1") = _gthis->nested;
HXDLIN( 159)			if (hx::IsNull( _12 )) {
HXLINE( 159)				_hx_tmp2 = null();
            			}
            			else {
HXLINE( 159)				HX_VARI_NAME(  ::Dynamic,_21,"_2") = _12->__Field(HX_("a",61,00,00,00),hx::paccDynamic);
HXDLIN( 159)				if (hx::IsNull( _21 )) {
HXLINE( 159)					_hx_tmp2 = null();
            				}
            				else {
HXLINE( 159)					HX_VARI( ::String,_3) = ( (::String)(_21->__Field(HX_("b",62,00,00,00),hx::paccDynamic)) );
HXDLIN( 159)					if (hx::IsNull( _3 )) {
HXLINE( 159)						_hx_tmp2 = null();
            					}
            					else {
HXLINE( 159)						_hx_tmp2 = _3;
            					}
            				}
            			}
            		}
HXDLIN( 159)		::utest::Assert_obj::isTrue(hx::IsNotNull( _hx_tmp2 ),null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),159,HX_("thx.TestNulls",d0,6d,32,55),HX_("testNotNull",08,17,02,fb)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testNotNull,(void))

void TestNulls_obj::testEnsure(){
            	HX_STACK_FRAME("thx.TestNulls","testEnsure",0x66ab458e,"thx.TestNulls.testEnsure","thx/TestNulls.hx",162,0x51afd46f)
            	HX_STACK_THIS(this)
HXLINE( 163)		HX_VARI( ::String,nops) = null();
HXDLIN( 163)		HX_VARI( ::String,yups) = HX_("some content",0d,08,28,c2);
HXLINE( 166)		::utest::Assert_obj::isNull(this->ensureField,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),166,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE( 167)		::utest::Assert_obj::isNull(::thx::TestNulls_obj::ensureStaticField,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),167,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE(  24)		Bool _hx_tmp = hx::IsNull( nops );
HXDLIN(  24)		if (_hx_tmp) {
HXLINE(  24)			nops = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (false) {
HXLINE(  24)			yups = HX_("alt",29,f9,49,00);
            		}
HXLINE( 172)		::utest::Assert_obj::equals(HX_("alt",29,f9,49,00),nops,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),172,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE( 173)		::utest::Assert_obj::equals(HX_("some content",0d,08,28,c2),yups,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),173,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE( 175)		nops = null();
HXLINE(  24)		Bool _hx_tmp1 = hx::IsNull( nops );
HXDLIN(  24)		if (_hx_tmp1) {
HXLINE(  24)			nops = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		Bool _hx_tmp2 = hx::IsNull( yups );
HXDLIN(  24)		if (_hx_tmp2) {
HXLINE(  24)			yups = HX_("alt",29,f9,49,00);
            		}
HXLINE( 179)		::utest::Assert_obj::equals(HX_("alt",29,f9,49,00),nops,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),179,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE( 180)		::utest::Assert_obj::equals(HX_("some content",0d,08,28,c2),yups,null(),hx::SourceInfo(HX_("TestNulls.hx",c4,2c,0e,7a),180,HX_("thx.TestNulls",d0,6d,32,55),HX_("testEnsure",b0,3b,70,1d)));
HXLINE(  24)		if (hx::IsNull( this->ensureField )) {
HXLINE(  24)			this->ensureField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( ::thx::TestNulls_obj::ensureStaticField )) {
HXLINE(  24)			::thx::TestNulls_obj::ensureStaticField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( this->ensureField )) {
HXLINE(  24)			this->ensureField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( ::thx::TestNulls_obj::ensureStaticField )) {
HXLINE(  24)			::thx::TestNulls_obj::ensureStaticField = HX_("alt",29,f9,49,00);
            		}
HXLINE( 187)		this->ensureField = null();
HXLINE( 188)		::thx::TestNulls_obj::ensureStaticField = null();
HXLINE(  24)		if (hx::IsNull( this->ensureField )) {
HXLINE(  24)			this->ensureField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( ::thx::TestNulls_obj::ensureStaticField )) {
HXLINE(  24)			::thx::TestNulls_obj::ensureStaticField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( this->ensureField )) {
HXLINE(  24)			this->ensureField = HX_("alt",29,f9,49,00);
            		}
HXDLIN(  24)		if (hx::IsNull( ::thx::TestNulls_obj::ensureStaticField )) {
HXLINE(  24)			::thx::TestNulls_obj::ensureStaticField = HX_("alt",29,f9,49,00);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestNulls_obj,testEnsure,(void))

::String TestNulls_obj::ensureStaticField;


TestNulls_obj::TestNulls_obj()
{
}

void TestNulls_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TestNulls);
	HX_MARK_MEMBER_NAME(withValue,"withValue");
	HX_MARK_MEMBER_NAME(withoutValue,"withoutValue");
	HX_MARK_MEMBER_NAME(getter,"getter");
	HX_MARK_MEMBER_NAME(v,"v");
	HX_MARK_MEMBER_NAME(nested,"nested");
	HX_MARK_MEMBER_NAME(empty,"empty");
	HX_MARK_MEMBER_NAME(m,"m");
	HX_MARK_MEMBER_NAME(m2,"m2");
	HX_MARK_MEMBER_NAME(ensureField,"ensureField");
	HX_MARK_END_CLASS();
}

void TestNulls_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(withValue,"withValue");
	HX_VISIT_MEMBER_NAME(withoutValue,"withoutValue");
	HX_VISIT_MEMBER_NAME(getter,"getter");
	HX_VISIT_MEMBER_NAME(v,"v");
	HX_VISIT_MEMBER_NAME(nested,"nested");
	HX_VISIT_MEMBER_NAME(empty,"empty");
	HX_VISIT_MEMBER_NAME(m,"m");
	HX_VISIT_MEMBER_NAME(m2,"m2");
	HX_VISIT_MEMBER_NAME(ensureField,"ensureField");
}

hx::Val TestNulls_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"v") ) { return hx::Val( v); }
		if (HX_FIELD_EQ(inName,"m") ) { return hx::Val( m); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"m2") ) { return hx::Val( m2); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty); }
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getter") ) { return hx::Val( inCallProp == hx::paccAlways ? get_getter() : getter); }
		if (HX_FIELD_EQ(inName,"setter") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_setter()); }
		if (HX_FIELD_EQ(inName,"nested") ) { return hx::Val( nested); }
		if (HX_FIELD_EQ(inName,"testOr") ) { return hx::Val( testOr_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"testOpt") ) { return hx::Val( testOpt_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"withValue") ) { return hx::Val( withValue); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_getter") ) { return hx::Val( get_getter_dyn()); }
		if (HX_FIELD_EQ(inName,"get_setter") ) { return hx::Val( get_setter_dyn()); }
		if (HX_FIELD_EQ(inName,"set_setter") ) { return hx::Val( set_setter_dyn()); }
		if (HX_FIELD_EQ(inName,"testIsNull") ) { return hx::Val( testIsNull_dyn()); }
		if (HX_FIELD_EQ(inName,"testEnsure") ) { return hx::Val( testEnsure_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"testNotNull") ) { return hx::Val( testNotNull_dyn()); }
		if (HX_FIELD_EQ(inName,"ensureField") ) { return hx::Val( ensureField); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"withoutValue") ) { return hx::Val( withoutValue); }
		if (HX_FIELD_EQ(inName,"testOrMethod") ) { return hx::Val( testOrMethod_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"testOrWithIndex") ) { return hx::Val( testOrWithIndex_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool TestNulls_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"ensureStaticField") ) { outValue = ensureStaticField; return true; }
	}
	return false;
}

hx::Val TestNulls_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"v") ) { v=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m") ) { m=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"m2") ) { m2=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { empty=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getter") ) { getter=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"setter") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_setter(inValue) ); }
		if (HX_FIELD_EQ(inName,"nested") ) { nested=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"withValue") ) { withValue=inValue.Cast< ::String >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ensureField") ) { ensureField=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"withoutValue") ) { withoutValue=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool TestNulls_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"ensureStaticField") ) { ensureStaticField=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void TestNulls_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("withValue","\x8b","\xe3","\xa5","\xb5"));
	outFields->push(HX_HCSTRING("withoutValue","\x09","\x78","\x81","\x33"));
	outFields->push(HX_HCSTRING("getter","\x0b","\xdf","\x3f","\xa3"));
	outFields->push(HX_HCSTRING("setter","\x7f","\x33","\x88","\x6f"));
	outFields->push(HX_HCSTRING("v","\x76","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("nested","\xf7","\x2e","\x16","\x6f"));
	outFields->push(HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"));
	outFields->push(HX_HCSTRING("m","\x6d","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("m2","\x25","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("ensureField","\x1c","\x7e","\x9b","\xd8"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TestNulls_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(TestNulls_obj,withValue),HX_HCSTRING("withValue","\x8b","\xe3","\xa5","\xb5")},
	{hx::fsString,(int)offsetof(TestNulls_obj,withoutValue),HX_HCSTRING("withoutValue","\x09","\x78","\x81","\x33")},
	{hx::fsString,(int)offsetof(TestNulls_obj,getter),HX_HCSTRING("getter","\x0b","\xdf","\x3f","\xa3")},
	{hx::fsString,(int)offsetof(TestNulls_obj,v),HX_HCSTRING("v","\x76","\x00","\x00","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TestNulls_obj,nested),HX_HCSTRING("nested","\xf7","\x2e","\x16","\x6f")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TestNulls_obj,empty),HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TestNulls_obj,m),HX_HCSTRING("m","\x6d","\x00","\x00","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TestNulls_obj,m2),HX_HCSTRING("m2","\x25","\x5f","\x00","\x00")},
	{hx::fsString,(int)offsetof(TestNulls_obj,ensureField),HX_HCSTRING("ensureField","\x1c","\x7e","\x9b","\xd8")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo TestNulls_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &TestNulls_obj::ensureStaticField,HX_HCSTRING("ensureStaticField","\x0e","\x90","\xf4","\x20")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String TestNulls_obj_sMemberFields[] = {
	HX_HCSTRING("withValue","\x8b","\xe3","\xa5","\xb5"),
	HX_HCSTRING("withoutValue","\x09","\x78","\x81","\x33"),
	HX_HCSTRING("getter","\x0b","\xdf","\x3f","\xa3"),
	HX_HCSTRING("get_getter","\xd4","\x4e","\xc7","\x93"),
	HX_HCSTRING("v","\x76","\x00","\x00","\x00"),
	HX_HCSTRING("get_setter","\x48","\xa3","\x0f","\x60"),
	HX_HCSTRING("set_setter","\xbc","\x41","\x8d","\x63"),
	HX_HCSTRING("nested","\xf7","\x2e","\x16","\x6f"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("testOr","\x15","\x46","\x3a","\xd5"),
	HX_HCSTRING("testOpt","\x01","\x0b","\xc3","\xbd"),
	HX_HCSTRING("testOrWithIndex","\x57","\xae","\x3d","\xba"),
	HX_HCSTRING("m","\x6d","\x00","\x00","\x00"),
	HX_HCSTRING("m2","\x25","\x5f","\x00","\x00"),
	HX_HCSTRING("testOrMethod","\xd6","\xee","\x64","\x02"),
	HX_HCSTRING("testIsNull","\x83","\xa9","\x69","\x7f"),
	HX_HCSTRING("testNotNull","\x08","\x17","\x02","\xfb"),
	HX_HCSTRING("testEnsure","\xb0","\x3b","\x70","\x1d"),
	HX_HCSTRING("ensureField","\x1c","\x7e","\x9b","\xd8"),
	::String(null()) };

static void TestNulls_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TestNulls_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(TestNulls_obj::ensureStaticField,"ensureStaticField");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TestNulls_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TestNulls_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(TestNulls_obj::ensureStaticField,"ensureStaticField");
};

#endif

hx::Class TestNulls_obj::__mClass;

static ::String TestNulls_obj_sStaticFields[] = {
	HX_HCSTRING("ensureStaticField","\x0e","\x90","\xf4","\x20"),
	::String(null())
};

void TestNulls_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.TestNulls","\xd0","\x6d","\x32","\x55");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TestNulls_obj::__GetStatic;
	__mClass->mSetStaticField = &TestNulls_obj::__SetStatic;
	__mClass->mMarkFunc = TestNulls_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(TestNulls_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TestNulls_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TestNulls_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TestNulls_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TestNulls_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TestNulls_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TestNulls_obj::__boot()
{
{
            	HX_STACK_FRAME("thx.TestNulls","boot",0x63a7b390,"thx.TestNulls.boot","thx/TestNulls.hx",197,0x51afd46f)
HXLINE( 197)		ensureStaticField = null();
            	}
}

} // end namespace thx
