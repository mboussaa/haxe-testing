// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_CollectBehavior
#define INCLUDED_thx_CollectBehavior

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_IAssertBehavior
#include <thx/IAssertBehavior.h>
#endif
HX_DECLARE_CLASS1(thx,CollectBehavior)
HX_DECLARE_CLASS1(thx,IAssertBehavior)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES CollectBehavior_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CollectBehavior_obj OBJ_;
		CollectBehavior_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.CollectBehavior")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.CollectBehavior"); }
		static hx::ObjectPtr< CollectBehavior_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CollectBehavior_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("CollectBehavior","\x3c","\xb4","\x2d","\x3f"); }

		Int successes;
		Int warnings;
		Int failures;
		void success( ::Dynamic pos);
		::Dynamic success_dyn();

		void warn(::String message, ::Dynamic pos);
		::Dynamic warn_dyn();

		void fail(::String message, ::Dynamic pos);
		::Dynamic fail_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_CollectBehavior */ 
