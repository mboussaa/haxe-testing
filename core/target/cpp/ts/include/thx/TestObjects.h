// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TestObjects
#define INCLUDED_thx_TestObjects

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TestObjects)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES TestObjects_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestObjects_obj OBJ_;
		TestObjects_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.TestObjects")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.TestObjects"); }
		static hx::ObjectPtr< TestObjects_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestObjects_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestObjects","\x82","\xee","\x4a","\x23"); }

		void testIssue20151201();
		::Dynamic testIssue20151201_dyn();

		void testObjects();
		::Dynamic testObjects_dyn();

		void testAssign();
		::Dynamic testAssign_dyn();

		void testCombine();
		::Dynamic testCombine_dyn();

		void testMergeWithNullable();
		::Dynamic testMergeWithNullable_dyn();

		void testMergeWithTypedef();
		::Dynamic testMergeWithTypedef_dyn();

		void testHasPath();
		::Dynamic testHasPath_dyn();

		void testHasPathValue();
		::Dynamic testHasPathValue_dyn();

		void testGetPath();
		::Dynamic testGetPath_dyn();

		void testSetPath();
		::Dynamic testSetPath_dyn();

		void testRemovePath();
		::Dynamic testRemovePath_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_TestObjects */ 
