// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TestOrderedMap
#define INCLUDED_thx_TestOrderedMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TestOrderedMap)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES TestOrderedMap_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestOrderedMap_obj OBJ_;
		TestOrderedMap_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.TestOrderedMap")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.TestOrderedMap"); }
		static hx::ObjectPtr< TestOrderedMap_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestOrderedMap_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestOrderedMap","\x41","\xb7","\x3b","\x58"); }

		void testBasics();
		::Dynamic testBasics_dyn();

		void testGetOption();
		::Dynamic testGetOption_dyn();

		void testToTuples();
		::Dynamic testToTuples_dyn();

		void testAbstract();
		::Dynamic testAbstract_dyn();

		void testEmpty();
		::Dynamic testEmpty_dyn();

		void testCopyTo();
		::Dynamic testCopyTo_dyn();

		void testClone();
		::Dynamic testClone_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_TestOrderedMap */ 
