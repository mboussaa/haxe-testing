// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TestChar
#define INCLUDED_thx_TestChar

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TestChar)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES TestChar_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestChar_obj OBJ_;
		TestChar_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.TestChar")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.TestChar"); }
		static hx::ObjectPtr< TestChar_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestChar_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestChar","\x68","\xa0","\xa3","\x1e"); }

		void testChar();
		::Dynamic testChar_dyn();

		void testControl();
		::Dynamic testControl_dyn();

		void testUtf8();
		::Dynamic testUtf8_dyn();

		void testArrayToString();
		::Dynamic testArrayToString_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_TestChar */ 
