// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TestTime
#define INCLUDED_thx_TestTime

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TestTime)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES TestTime_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestTime_obj OBJ_;
		TestTime_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.TestTime")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.TestTime"); }
		static hx::ObjectPtr< TestTime_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestTime_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestTime","\x9f","\x0d","\xe1","\x29"); }

		void testBasics();
		::Dynamic testBasics_dyn();

		void testFromString();
		::Dynamic testFromString_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_TestTime */ 
