// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Convert
#define INCLUDED_thx_Convert

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#include <cpp/Int64.h>
HX_DECLARE_CLASS0(Date)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(thx,Convert)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Convert_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Convert_obj OBJ_;
		Convert_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Convert")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Convert"); }
		static hx::ObjectPtr< Convert_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Convert_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Convert","\xd3","\x25","\x1b","\xe8"); }

		static ::String toString( ::Dynamic value);
		static ::Dynamic toString_dyn();

		static ::String toStringOr( ::Dynamic value,::String alt);
		static ::Dynamic toStringOr_dyn();

		static Int toInt( ::Dynamic value);
		static ::Dynamic toInt_dyn();

		static Int toIntOr( ::Dynamic value,Int alt);
		static ::Dynamic toIntOr_dyn();

		static Float toFloat( ::Dynamic value);
		static ::Dynamic toFloat_dyn();

		static Float toFloatOr( ::Dynamic value,Float alt);
		static ::Dynamic toFloatOr_dyn();

		static Bool toBool( ::Dynamic value);
		static ::Dynamic toBool_dyn();

		static Bool toBoolOr( ::Dynamic value,Bool alt);
		static ::Dynamic toBoolOr_dyn();

		static  ::Date toDate( ::Dynamic value);
		static ::Dynamic toDate_dyn();

		static  ::Date toDateOr( ::Dynamic value, ::Date alt);
		static ::Dynamic toDateOr_dyn();

		static ::Array< ::Dynamic> toDateTime( ::Dynamic value);
		static ::Dynamic toDateTime_dyn();

		static ::Array< ::Dynamic> toDateTimeOr( ::Dynamic value,::Array< ::Dynamic> alt);
		static ::Dynamic toDateTimeOr_dyn();

		static  ::Dynamic toDateTimeUtc( ::Dynamic value);
		static ::Dynamic toDateTimeUtc_dyn();

		static  ::Dynamic toDateTimeUtcOr( ::Dynamic value, ::cpp::Int64Struct alt);
		static ::Dynamic toDateTimeUtcOr_dyn();

		static  ::Dynamic toObject( ::Dynamic value);
		static ::Dynamic toObject_dyn();

		static  ::Dynamic toObjectOr( ::Dynamic value, ::Dynamic alt);
		static ::Dynamic toObjectOr_dyn();

		static ::Array< ::String > toArrayString( ::Dynamic value);
		static ::Dynamic toArrayString_dyn();

		static ::Array< ::String > toArrayStringOr( ::Dynamic value,::Array< ::String > alt);
		static ::Dynamic toArrayStringOr_dyn();

		static ::Array< Int > toArrayInt( ::Dynamic value);
		static ::Dynamic toArrayInt_dyn();

		static ::Array< Int > toArrayIntOr( ::Dynamic value,::Array< Int > alt);
		static ::Dynamic toArrayIntOr_dyn();

		static ::Array< Float > toArrayFloat( ::Dynamic value);
		static ::Dynamic toArrayFloat_dyn();

		static ::Array< Float > toArrayFloatOr( ::Dynamic value,::Array< Float > alt);
		static ::Dynamic toArrayFloatOr_dyn();

		static ::Array< Bool > toArrayBool( ::Dynamic value);
		static ::Dynamic toArrayBool_dyn();

		static ::Array< Bool > toArrayBoolOr( ::Dynamic value,::Array< Bool > alt);
		static ::Dynamic toArrayBoolOr_dyn();

		static ::Array< ::Dynamic> toArrayDate( ::Dynamic value);
		static ::Dynamic toArrayDate_dyn();

		static ::Array< ::Dynamic> toArrayDateOr( ::Dynamic value,::Array< ::Dynamic> alt);
		static ::Dynamic toArrayDateOr_dyn();

		static ::Array< ::Dynamic> toArrayDateTime( ::Dynamic value);
		static ::Dynamic toArrayDateTime_dyn();

		static ::Array< ::Dynamic> toArrayDateTimeOr( ::Dynamic value,::Array< ::Dynamic> alt);
		static ::Dynamic toArrayDateTimeOr_dyn();

		static ::Array< ::Dynamic> toArrayObject( ::Dynamic value);
		static ::Dynamic toArrayObject_dyn();

		static ::Array< ::Dynamic> toArrayObjectOr( ::Dynamic value,::Array< ::Dynamic> alt);
		static ::Dynamic toArrayObjectOr_dyn();

		static ::cpp::VirtualArray toArray( ::Dynamic value, ::Dynamic convert);
		static ::Dynamic toArray_dyn();

		static  ::haxe::ds::StringMap toMap( ::Dynamic value, ::Dynamic convert);
		static ::Dynamic toMap_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Convert */ 
