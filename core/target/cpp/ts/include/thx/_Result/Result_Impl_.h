// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__Result_Result_Impl_
#define INCLUDED_thx__Result_Result_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,ds,Option)
HX_DECLARE_CLASS1(thx,Either)
HX_DECLARE_CLASS2(thx,_Result,Result_Impl_)

namespace thx{
namespace _Result{


class HXCPP_CLASS_ATTRIBUTES Result_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Result_Impl__obj OBJ_;
		Result_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._Result.Result_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._Result.Result_Impl_"); }
		static hx::ObjectPtr< Result_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Result_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Result_Impl_","\x5d","\x75","\x65","\xf6"); }

		static ::hx::EnumBase success( ::Dynamic value);
		static ::Dynamic success_dyn();

		static ::hx::EnumBase failure( ::Dynamic error);
		static ::Dynamic failure_dyn();

		static ::hx::EnumBase optionValue(::hx::EnumBase this1);
		static ::Dynamic optionValue_dyn();

		static ::hx::EnumBase optionError(::hx::EnumBase this1);
		static ::Dynamic optionError_dyn();

		static  ::Dynamic value(::hx::EnumBase this1);
		static ::Dynamic value_dyn();

		static  ::Dynamic error(::hx::EnumBase this1);
		static ::Dynamic error_dyn();

		static Bool get_isSuccess(::hx::EnumBase this1);
		static ::Dynamic get_isSuccess_dyn();

		static Bool get_isFailure(::hx::EnumBase this1);
		static ::Dynamic get_isFailure_dyn();

};

} // end namespace thx
} // end namespace _Result

#endif /* INCLUDED_thx__Result_Result_Impl_ */ 
