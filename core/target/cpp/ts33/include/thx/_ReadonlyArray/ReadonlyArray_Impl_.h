// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__ReadonlyArray_ReadonlyArray_Impl_
#define INCLUDED_thx__ReadonlyArray_ReadonlyArray_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,_ReadonlyArray,ReadonlyArray_Impl_)

namespace thx{
namespace _ReadonlyArray{


class HXCPP_CLASS_ATTRIBUTES ReadonlyArray_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ReadonlyArray_Impl__obj OBJ_;
		ReadonlyArray_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._ReadonlyArray.ReadonlyArray_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._ReadonlyArray.ReadonlyArray_Impl_"); }
		static hx::ObjectPtr< ReadonlyArray_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ReadonlyArray_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("ReadonlyArray_Impl_","\x37","\x32","\x83","\xf6"); }

		static ::cpp::VirtualArray empty();
		static ::Dynamic empty_dyn();

		static ::cpp::VirtualArray flatten(::Array< ::Dynamic> array);
		static ::Dynamic flatten_dyn();

		static Int indexOf(::cpp::VirtualArray this1, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic indexOf_dyn();

		static Int lastIndexOf(::cpp::VirtualArray this1, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic lastIndexOf_dyn();

		static  ::Dynamic get(::cpp::VirtualArray this1,Int index);
		static ::Dynamic get_dyn();

		static  ::Dynamic head(::cpp::VirtualArray this1);
		static ::Dynamic head_dyn();

		static ::cpp::VirtualArray tail(::cpp::VirtualArray this1);
		static ::Dynamic tail_dyn();

		static  ::Dynamic reduce(::cpp::VirtualArray this1,::cpp::VirtualArray arr, ::Dynamic f, ::Dynamic initial);
		static ::Dynamic reduce_dyn();

		static  ::Dynamic reducei(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial);
		static ::Dynamic reducei_dyn();

		static ::cpp::VirtualArray reverse(::cpp::VirtualArray this1);
		static ::Dynamic reverse_dyn();

		static ::cpp::VirtualArray toArray(::cpp::VirtualArray this1);
		static ::Dynamic toArray_dyn();

		static ::cpp::VirtualArray unsafe(::cpp::VirtualArray this1);
		static ::Dynamic unsafe_dyn();

		static ::cpp::VirtualArray concat(::cpp::VirtualArray this1,::cpp::VirtualArray that);
		static ::Dynamic concat_dyn();

		static ::cpp::VirtualArray insertAt(::cpp::VirtualArray this1,Int pos, ::Dynamic el);
		static ::Dynamic insertAt_dyn();

		static ::cpp::VirtualArray insertAfter(::cpp::VirtualArray this1, ::Dynamic ref, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic insertAfter_dyn();

		static ::cpp::VirtualArray insertBefore(::cpp::VirtualArray this1, ::Dynamic ref, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic insertBefore_dyn();

		static ::cpp::VirtualArray replace(::cpp::VirtualArray this1, ::Dynamic ref, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic replace_dyn();

		static ::cpp::VirtualArray replaceAt(::cpp::VirtualArray this1,Int pos, ::Dynamic el);
		static ::Dynamic replaceAt_dyn();

		static ::cpp::VirtualArray remove(::cpp::VirtualArray this1, ::Dynamic el, ::Dynamic eq);
		static ::Dynamic remove_dyn();

		static ::cpp::VirtualArray removeAt(::cpp::VirtualArray this1,Int pos);
		static ::Dynamic removeAt_dyn();

		static ::cpp::VirtualArray prepend(::cpp::VirtualArray this1, ::Dynamic el);
		static ::Dynamic prepend_dyn();

		static ::cpp::VirtualArray append(::cpp::VirtualArray this1, ::Dynamic el);
		static ::Dynamic append_dyn();

		static ::cpp::VirtualArray unshift(::cpp::VirtualArray this1, ::Dynamic el);
		static ::Dynamic unshift_dyn();

		static  ::Dynamic shift(::cpp::VirtualArray this1);
		static ::Dynamic shift_dyn();

		static ::cpp::VirtualArray push(::cpp::VirtualArray this1, ::Dynamic el);
		static ::Dynamic push_dyn();

		static  ::Dynamic pop(::cpp::VirtualArray this1);
		static ::Dynamic pop_dyn();

};

} // end namespace thx
} // end namespace _ReadonlyArray

#endif /* INCLUDED_thx__ReadonlyArray_ReadonlyArray_Impl_ */ 
