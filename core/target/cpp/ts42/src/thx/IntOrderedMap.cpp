// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_thx_IntOrderedMap
#include <thx/IntOrderedMap.h>
#endif
#ifndef INCLUDED_thx_OrderedMapImpl
#include <thx/OrderedMapImpl.h>
#endif

namespace thx{

void IntOrderedMap_obj::__construct(){
            	HX_STACK_FRAME("thx.IntOrderedMap","new",0xf8e82366,"thx.IntOrderedMap.new","thx/OrderedMap.hx",59,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE(  59)		super::__construct( ::haxe::ds::IntMap_obj::__new());
            	}

Dynamic IntOrderedMap_obj::__CreateEmpty() { return new IntOrderedMap_obj; }

hx::ObjectPtr< IntOrderedMap_obj > IntOrderedMap_obj::__new()
{
	hx::ObjectPtr< IntOrderedMap_obj > _hx_result = new IntOrderedMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic IntOrderedMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntOrderedMap_obj > _hx_result = new IntOrderedMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::thx::OrderedMapImpl IntOrderedMap_obj::empty(){
            	HX_STACK_FRAME("thx.IntOrderedMap","empty",0xf46ddb13,"thx.IntOrderedMap.empty","thx/OrderedMap.hx",62,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE(  62)		return  ::thx::IntOrderedMap_obj::__new();
            	}



IntOrderedMap_obj::IntOrderedMap_obj()
{
}

hx::Val IntOrderedMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *IntOrderedMap_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *IntOrderedMap_obj_sStaticStorageInfo = 0;
#endif

static ::String IntOrderedMap_obj_sMemberFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	::String(null()) };

static void IntOrderedMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntOrderedMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntOrderedMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntOrderedMap_obj::__mClass,"__mClass");
};

#endif

hx::Class IntOrderedMap_obj::__mClass;

void IntOrderedMap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.IntOrderedMap","\x74","\x38","\xb5","\xa0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntOrderedMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntOrderedMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntOrderedMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntOrderedMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntOrderedMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntOrderedMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
