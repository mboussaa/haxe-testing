// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds__HashMap_HashMapData
#include <haxe/ds/_HashMap/HashMapData.h>
#endif
#ifndef INCLUDED_thx__HashSet_HashSet_Impl_
#include <thx/_HashSet/HashSet_Impl_.h>
#endif

namespace thx{
namespace _HashSet{

void HashSet_Impl__obj::__construct() { }

Dynamic HashSet_Impl__obj::__CreateEmpty() { return new HashSet_Impl__obj; }

hx::ObjectPtr< HashSet_Impl__obj > HashSet_Impl__obj::__new()
{
	hx::ObjectPtr< HashSet_Impl__obj > _hx_result = new HashSet_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic HashSet_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HashSet_Impl__obj > _hx_result = new HashSet_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::_new( ::haxe::ds::_HashMap::HashMapData map){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","_new",0xbaa8342a,"thx._HashSet.HashSet_Impl_._new","thx/HashSet.hx",18,0x440165d5)
            	HX_STACK_ARG(map,"map")
HXLINE(  18)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,_new,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::create( ::Dynamic arr){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","create",0xc3348a05,"thx._HashSet.HashSet_Impl_.create","thx/HashSet.hx",24,0x440165d5)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  26)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,hashSet) =  ::haxe::ds::_HashMap::HashMapData_obj::__new();
HXLINE(  27)		if (hx::IsNotNull( arr )) {
HXLINE(  28)			::thx::_HashSet::HashSet_Impl__obj::pushMany(hashSet,arr);
            		}
HXLINE(  29)		return hashSet;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,create,return )

Bool HashSet_Impl__obj::add( ::haxe::ds::_HashMap::HashMapData this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","add",0x20fc7f78,"thx._HashSet.HashSet_Impl_.add","thx/HashSet.hx",38,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE(  38)		Int _hx_tmp = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  38)		Bool _hx_tmp1 = this1->values->exists(_hx_tmp);
HXDLIN(  38)		if (_hx_tmp1) {
HXLINE(  38)			return false;
            		}
            		else {
HXLINE(  41)			{
HXLINE(  41)				Int _hx_tmp2 = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  41)				this1->keys->set(_hx_tmp2,v);
HXDLIN(  41)				Int _hx_tmp3 = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  41)				this1->values->set(_hx_tmp3,true);
            			}
HXLINE(  38)			return true;
            		}
HXDLIN(  38)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,add,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::copy( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","copy",0xbd4dda7e,"thx._HashSet.HashSet_Impl_.copy","thx/HashSet.hx",48,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  49)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,inst) = ::thx::_HashSet::HashSet_Impl__obj::empty(this1);
HXLINE(  50)		{
HXLINE(  50)			HX_VARI(  ::Dynamic,tmp) = this1->keys->iterator();
HXDLIN(  50)			while(true){
HXLINE(  50)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  50)				if (_hx_tmp) {
HXLINE(  50)					goto _hx_goto_0;
            				}
HXDLIN(  50)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE(  51)				Int _hx_tmp1 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  51)				inst->keys->set(_hx_tmp1,k);
HXDLIN(  51)				Int _hx_tmp2 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  51)				inst->values->set(_hx_tmp2,true);
            			}
            			_hx_goto_0:;
            		}
HXLINE(  52)		return inst;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,copy,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::empty( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","empty",0x0c4c0ba4,"thx._HashSet.HashSet_Impl_.empty","thx/HashSet.hx",58,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  59)		hx::Class _hx_tmp = ::Type_obj::getClass(this1);
HXDLIN(  59)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,map) = ( ( ::haxe::ds::_HashMap::HashMapData)(::Type_obj::createInstance(_hx_tmp,::cpp::VirtualArray_obj::__new(0))) );
HXLINE(  60)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,empty,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::difference( ::haxe::ds::_HashMap::HashMapData this1, ::haxe::ds::_HashMap::HashMapData set){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","difference",0xb91f7786,"thx._HashSet.HashSet_Impl_.difference","thx/HashSet.hx",67,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE(  68)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,result) = ::thx::_HashSet::HashSet_Impl__obj::copy(this1);
HXLINE(  69)		{
HXLINE(  69)			HX_VARI(  ::Dynamic,tmp) = ::thx::_HashSet::HashSet_Impl__obj::iterator(set);
HXDLIN(  69)			while(true){
HXLINE(  69)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  69)				if (_hx_tmp) {
HXLINE(  69)					goto _hx_goto_1;
            				}
HXDLIN(  69)				HX_VARI(  ::Dynamic,item) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE(  70)				Int _hx_tmp1 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  70)				result->values->remove(_hx_tmp1);
HXDLIN(  70)				Int _hx_tmp2 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  70)				result->keys->remove(_hx_tmp2);
            			}
            			_hx_goto_1:;
            		}
HXLINE(  71)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,difference,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::symmetricDifference( ::haxe::ds::_HashMap::HashMapData this1, ::haxe::ds::_HashMap::HashMapData set){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","symmetricDifference",0x8ff89aab,"thx._HashSet.HashSet_Impl_.symmetricDifference","thx/HashSet.hx",79,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE(  80)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,self) = ::thx::_HashSet::HashSet_Impl__obj::copy(this1);
HXLINE(  81)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,newset) = ::thx::_HashSet::HashSet_Impl__obj::copy(self);
HXDLIN(  81)		{
HXLINE(  81)			HX_VARI(  ::Dynamic,tmp) = ::thx::_HashSet::HashSet_Impl__obj::iterator(set);
HXDLIN(  81)			while(true){
HXLINE(  81)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  81)				if (_hx_tmp) {
HXLINE(  81)					goto _hx_goto_2;
            				}
HXDLIN(  81)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXDLIN(  81)				Int _hx_tmp1 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)				newset->keys->set(_hx_tmp1,k);
HXDLIN(  81)				Int _hx_tmp2 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)				newset->values->set(_hx_tmp2,true);
            			}
            			_hx_goto_2:;
            		}
HXDLIN(  81)		HX_VARI_NAME(  ::haxe::ds::_HashMap::HashMapData,this2,"this") = newset;
HXDLIN(  81)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,result) = ::thx::_HashSet::HashSet_Impl__obj::empty(self);
HXDLIN(  81)		{
HXLINE(  81)			HX_VARI_NAME(  ::Dynamic,tmp1,"tmp") = ::thx::_HashSet::HashSet_Impl__obj::iterator(self);
HXDLIN(  81)			while(true){
HXLINE(  81)				Bool _hx_tmp3 = !(( (Bool)( ::Dynamic(tmp1->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  81)				if (_hx_tmp3) {
HXLINE(  81)					goto _hx_goto_3;
            				}
HXDLIN(  81)				HX_VARI(  ::Dynamic,item) =  ::Dynamic(tmp1->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXDLIN(  81)				Int _hx_tmp4 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)				Bool _hx_tmp5 = set->values->exists(_hx_tmp4);
HXDLIN(  81)				if (_hx_tmp5) {
HXLINE(  81)					Int _hx_tmp6 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)					result->keys->set(_hx_tmp6,item);
HXDLIN(  81)					Int _hx_tmp7 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)					result->values->set(_hx_tmp7,true);
            				}
            			}
            			_hx_goto_3:;
            		}
HXDLIN(  81)		HX_VARI_NAME(  ::haxe::ds::_HashMap::HashMapData,result1,"result") = ::thx::_HashSet::HashSet_Impl__obj::copy(this2);
HXDLIN(  81)		{
HXLINE(  81)			HX_VARI_NAME(  ::Dynamic,tmp2,"tmp") = ::thx::_HashSet::HashSet_Impl__obj::iterator(result);
HXDLIN(  81)			while(true){
HXLINE(  81)				Bool _hx_tmp8 = !(( (Bool)( ::Dynamic(tmp2->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  81)				if (_hx_tmp8) {
HXLINE(  81)					goto _hx_goto_4;
            				}
HXDLIN(  81)				HX_VARI_NAME(  ::Dynamic,item1,"item") =  ::Dynamic(tmp2->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXDLIN(  81)				Int _hx_tmp9 = ( (Int)( ::Dynamic(item1->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)				result1->values->remove(_hx_tmp9);
HXDLIN(  81)				Int _hx_tmp10 = ( (Int)( ::Dynamic(item1->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  81)				result1->keys->remove(_hx_tmp10);
            			}
            			_hx_goto_4:;
            		}
HXDLIN(  81)		return result1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,symmetricDifference,return )

Bool HashSet_Impl__obj::exists( ::haxe::ds::_HashMap::HashMapData this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","exists",0x070540e5,"thx._HashSet.HashSet_Impl_.exists","thx/HashSet.hx",88,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE(  88)		Int _hx_tmp = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  88)		return this1->values->exists(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,exists,return )

Bool HashSet_Impl__obj::remove( ::haxe::ds::_HashMap::HashMapData this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","remove",0x4badbf4d,"thx._HashSet.HashSet_Impl_.remove","thx/HashSet.hx",94,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE(  94)		Int _hx_tmp = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  94)		this1->values->remove(_hx_tmp);
HXDLIN(  94)		Int _hx_tmp1 = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN(  94)		return this1->keys->remove(_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,remove,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::intersection( ::haxe::ds::_HashMap::HashMapData this1, ::haxe::ds::_HashMap::HashMapData set){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","intersection",0x1ec43212,"thx._HashSet.HashSet_Impl_.intersection","thx/HashSet.hx",99,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE( 100)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,result) = ::thx::_HashSet::HashSet_Impl__obj::empty(this1);
HXLINE( 101)		{
HXLINE( 101)			HX_VARI(  ::Dynamic,tmp) = ::thx::_HashSet::HashSet_Impl__obj::iterator(this1);
HXDLIN( 101)			while(true){
HXLINE( 101)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 101)				if (_hx_tmp) {
HXLINE( 101)					goto _hx_goto_5;
            				}
HXDLIN( 101)				HX_VARI(  ::Dynamic,item) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 102)				Int _hx_tmp1 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 102)				Bool _hx_tmp2 = set->values->exists(_hx_tmp1);
HXDLIN( 102)				if (_hx_tmp2) {
HXLINE( 103)					Int _hx_tmp3 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 103)					result->keys->set(_hx_tmp3,item);
HXDLIN( 103)					Int _hx_tmp4 = ( (Int)( ::Dynamic(item->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 103)					result->values->set(_hx_tmp4,true);
            				}
            			}
            			_hx_goto_5:;
            		}
HXLINE( 104)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,intersection,return )

void HashSet_Impl__obj::push( ::haxe::ds::_HashMap::HashMapData this1, ::Dynamic v){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","push",0xc5ea30a3,"thx._HashSet.HashSet_Impl_.push","thx/HashSet.hx",111,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(v,"v")
HXLINE( 111)		Int _hx_tmp = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 111)		this1->keys->set(_hx_tmp,v);
HXDLIN( 111)		Int _hx_tmp1 = ( (Int)( ::Dynamic(v->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 111)		this1->values->set(_hx_tmp1,true);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,push,(void))

void HashSet_Impl__obj::pushMany( ::haxe::ds::_HashMap::HashMapData this1, ::Dynamic values){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","pushMany",0x4c4226e2,"thx._HashSet.HashSet_Impl_.pushMany","thx/HashSet.hx",117,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(values,"values")
HXLINE( 117)		HX_VARI(  ::Dynamic,tmp) =  ::Dynamic(values->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic))();
HXDLIN( 117)		while(true){
HXLINE( 117)			Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 117)			if (_hx_tmp) {
HXLINE( 117)				goto _hx_goto_6;
            			}
HXDLIN( 117)			HX_VARI(  ::Dynamic,value) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 118)			Int _hx_tmp1 = ( (Int)( ::Dynamic(value->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 118)			this1->keys->set(_hx_tmp1,value);
HXDLIN( 118)			Int _hx_tmp2 = ( (Int)( ::Dynamic(value->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 118)			this1->values->set(_hx_tmp2,true);
            		}
            		_hx_goto_6:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,pushMany,(void))

 ::Dynamic HashSet_Impl__obj::iterator( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","iterator",0xc8950137,"thx._HashSet.HashSet_Impl_.iterator","thx/HashSet.hx",124,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 124)		return this1->keys->iterator();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,iterator,return )

 ::haxe::ds::_HashMap::HashMapData HashSet_Impl__obj::_hx_union( ::haxe::ds::_HashMap::HashMapData this1, ::haxe::ds::_HashMap::HashMapData set){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","union",0x43593626,"thx._HashSet.HashSet_Impl_.union","thx/HashSet.hx",129,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(set,"set")
HXLINE( 130)		HX_VARI(  ::haxe::ds::_HashMap::HashMapData,newset) = ::thx::_HashSet::HashSet_Impl__obj::copy(this1);
HXLINE( 131)		{
HXLINE( 131)			HX_VARI(  ::Dynamic,tmp) = ::thx::_HashSet::HashSet_Impl__obj::iterator(set);
HXDLIN( 131)			while(true){
HXLINE( 131)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 131)				if (_hx_tmp) {
HXLINE( 131)					goto _hx_goto_7;
            				}
HXDLIN( 131)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 132)				Int _hx_tmp1 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 132)				newset->keys->set(_hx_tmp1,k);
HXDLIN( 132)				Int _hx_tmp2 = ( (Int)( ::Dynamic(k->__Field(HX_("hashCode",1b,0c,75,07),hx::paccDynamic))()) );
HXDLIN( 132)				newset->values->set(_hx_tmp2,true);
            			}
            			_hx_goto_7:;
            		}
HXLINE( 133)		return newset;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HashSet_Impl__obj,_hx_union,return )

::cpp::VirtualArray HashSet_Impl__obj::toArray( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","toArray",0xeb6d3ef5,"thx._HashSet.HashSet_Impl_.toArray","thx/HashSet.hx",141,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 142)		HX_VARI( ::cpp::VirtualArray,arr) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 143)		{
HXLINE( 143)			HX_VARI(  ::Dynamic,tmp) = this1->keys->iterator();
HXDLIN( 143)			while(true){
HXLINE( 143)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 143)				if (_hx_tmp) {
HXLINE( 143)					goto _hx_goto_8;
            				}
HXDLIN( 143)				HX_VARI(  ::Dynamic,k) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 144)				arr->push(k);
            			}
            			_hx_goto_8:;
            		}
HXLINE( 145)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,toArray,return )

::String HashSet_Impl__obj::toString( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","toString",0x6d6987f5,"thx._HashSet.HashSet_Impl_.toString","thx/HashSet.hx",153,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 153)		::String _hx_tmp = ::thx::_HashSet::HashSet_Impl__obj::toArray(this1)->join(HX_(", ",74,26,00,00));
HXDLIN( 153)		return ((HX_("{",7b,00,00,00) + _hx_tmp) + HX_("}",7d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,toString,return )

Int HashSet_Impl__obj::get_length( ::haxe::ds::_HashMap::HashMapData this1){
            	HX_STACK_FRAME("thx._HashSet.HashSet_Impl_","get_length",0x021ce038,"thx._HashSet.HashSet_Impl_.get_length","thx/HashSet.hx",155,0x440165d5)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 156)		HX_VARI( Int,l) = (int)0;
HXLINE( 157)		{
HXLINE( 157)			HX_VARI(  ::Dynamic,tmp) = this1->values->iterator();
HXDLIN( 157)			while(true){
HXLINE( 157)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 157)				if (_hx_tmp) {
HXLINE( 157)					goto _hx_goto_9;
            				}
HXDLIN( 157)				 ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 158)				++l;
            			}
            			_hx_goto_9:;
            		}
HXLINE( 159)		return l;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HashSet_Impl__obj,get_length,return )


HashSet_Impl__obj::HashSet_Impl__obj()
{
}

bool HashSet_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"push") ) { outValue = push_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"union") ) { outValue = _hx_union_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"pushMany") ) { outValue = pushMany_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"difference") ) { outValue = difference_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"intersection") ) { outValue = intersection_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"symmetricDifference") ) { outValue = symmetricDifference_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *HashSet_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HashSet_Impl__obj_sStaticStorageInfo = 0;
#endif

static void HashSet_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HashSet_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HashSet_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HashSet_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class HashSet_Impl__obj::__mClass;

static ::String HashSet_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("difference","\xfd","\x9b","\x91","\x46"),
	HX_HCSTRING("symmetricDifference","\x54","\xaf","\xbf","\x9f"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("intersection","\x49","\xa2","\x61","\x88"),
	HX_HCSTRING("push","\xda","\x11","\x61","\x4a"),
	HX_HCSTRING("pushMany","\x99","\x6f","\x47","\x17"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("union","\x0f","\x65","\xe7","\xa6"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	::String(null())
};

void HashSet_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._HashSet.HashSet_Impl_","\x45","\xb6","\x91","\xbd");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &HashSet_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = HashSet_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(HashSet_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< HashSet_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HashSet_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HashSet_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HashSet_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _HashSet
