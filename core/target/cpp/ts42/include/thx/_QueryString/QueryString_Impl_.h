// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__QueryString_QueryString_Impl_
#define INCLUDED_thx__QueryString_QueryString_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(thx,_QueryString,QueryString_Impl_)

namespace thx{
namespace _QueryString{


class HXCPP_CLASS_ATTRIBUTES QueryString_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef QueryString_Impl__obj OBJ_;
		QueryString_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._QueryString.QueryString_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._QueryString.QueryString_Impl_"); }
		static hx::ObjectPtr< QueryString_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~QueryString_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("QueryString_Impl_","\x39","\x5b","\xf8","\x5f"); }

		static void __boot();
		static ::String separator;
		static ::String assignment;
		static ::Dynamic encodeURIComponent;
		static inline ::Dynamic &encodeURIComponent_dyn() {return encodeURIComponent; }

		static ::Dynamic decodeURIComponent;
		static inline ::Dynamic &decodeURIComponent_dyn() {return decodeURIComponent; }

		static  ::haxe::ds::StringMap empty();
		static ::Dynamic empty_dyn();

		static  ::haxe::ds::StringMap parseWithSymbols(::String s,::String separator,::String assignment, ::Dynamic decodeURIComponent);
		static ::Dynamic parseWithSymbols_dyn();

		static  ::haxe::ds::StringMap parse(::String s);
		static ::Dynamic parse_dyn();

		static  ::haxe::ds::StringMap fromObject( ::Dynamic o);
		static ::Dynamic fromObject_dyn();

		static  ::Dynamic toObject( ::haxe::ds::StringMap this1);
		static ::Dynamic toObject_dyn();

		static Bool isEmpty( ::haxe::ds::StringMap this1);
		static ::Dynamic isEmpty_dyn();

		static Bool isEmptyOrMono( ::haxe::ds::StringMap this1);
		static ::Dynamic isEmptyOrMono_dyn();

		static Bool exist( ::haxe::ds::StringMap this1,::String name);
		static ::Dynamic exist_dyn();

		static Bool remove( ::haxe::ds::StringMap this1,::String name);
		static ::Dynamic remove_dyn();

		static Bool removeValue( ::haxe::ds::StringMap this1,::String name,::String value);
		static ::Dynamic removeValue_dyn();

		static ::Array< ::String > get( ::haxe::ds::StringMap this1,::String name);
		static ::Dynamic get_dyn();

		static  ::haxe::ds::StringMap set( ::haxe::ds::StringMap this1,::String name,::String value);
		static ::Dynamic set_dyn();

		static  ::haxe::ds::StringMap add( ::haxe::ds::StringMap this1,::String name,::String value);
		static ::Dynamic add_dyn();

		static  ::haxe::ds::StringMap clone( ::haxe::ds::StringMap this1);
		static ::Dynamic clone_dyn();

		static  ::haxe::ds::StringMap setMany( ::haxe::ds::StringMap this1,::String name,::Array< ::String > values);
		static ::Dynamic setMany_dyn();

		static ::String toStringWithSymbols( ::haxe::ds::StringMap this1,::String separator,::String assignment, ::Dynamic encodeURIComponent);
		static ::Dynamic toStringWithSymbols_dyn();

		static Bool equals( ::haxe::ds::StringMap this1, ::haxe::ds::StringMap other);
		static ::Dynamic equals_dyn();

		static ::String toString( ::haxe::ds::StringMap this1);
		static ::Dynamic toString_dyn();

};

} // end namespace thx
} // end namespace _QueryString

#endif /* INCLUDED_thx__QueryString_QueryString_Impl_ */ 
