// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_error_NullArgument
#define INCLUDED_thx_error_NullArgument

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
HX_DECLARE_CLASS1(thx,Error)
HX_DECLARE_CLASS2(thx,error,NullArgument)

namespace thx{
namespace error{


class HXCPP_CLASS_ATTRIBUTES NullArgument_obj : public  ::thx::Error_obj
{
	public:
		typedef  ::thx::Error_obj super;
		typedef NullArgument_obj OBJ_;
		NullArgument_obj();

	public:
		void __construct(::String message, ::Dynamic posInfo);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.error.NullArgument")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.error.NullArgument"); }
		static hx::ObjectPtr< NullArgument_obj > __new(::String message, ::Dynamic posInfo);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NullArgument_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		::String __ToString() const { return HX_HCSTRING("NullArgument","\x44","\x74","\x98","\xea"); }

};

} // end namespace thx
} // end namespace error

#endif /* INCLUDED_thx_error_NullArgument */ 
