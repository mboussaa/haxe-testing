// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__Chars_Chars_Impl_
#define INCLUDED_thx__Chars_Chars_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,_Chars,Chars_Impl_)

namespace thx{
namespace _Chars{


class HXCPP_CLASS_ATTRIBUTES Chars_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Chars_Impl__obj OBJ_;
		Chars_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._Chars.Chars_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._Chars.Chars_Impl_"); }
		static hx::ObjectPtr< Chars_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Chars_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Chars_Impl_","\x1d","\xf5","\x13","\x39"); }

		static ::Array< Int > fromString(::String s);
		static ::Dynamic fromString_dyn();

		static ::Array< Int > fromArray(::Array< Int > arr);
		static ::Dynamic fromArray_dyn();

		static ::Array< Int > fromChars(::Array< Int > arr);
		static ::Dynamic fromChars_dyn();

		static ::Array< Int > _new(::Array< Int > chars);
		static ::Dynamic _new_dyn();

		static ::String toString(::Array< Int > this1);
		static ::Dynamic toString_dyn();

};

} // end namespace thx
} // end namespace _Chars

#endif /* INCLUDED_thx__Chars_Chars_Impl_ */ 
