// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest__Dispatcher_EventException
#define INCLUDED_utest__Dispatcher_EventException

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(utest,_Dispatcher,EventException)
namespace utest{
namespace _Dispatcher{


class EventException_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef EventException_obj OBJ_;

	public:
		EventException_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("utest._Dispatcher.EventException","\x44","\xd9","\x0a","\x12"); }
		::String __ToString() const { return HX_HCSTRING("EventException.","\x99","\xed","\x96","\x21") + _hx_tag; }

		static ::utest::_Dispatcher::EventException StopPropagation;
		static inline ::utest::_Dispatcher::EventException StopPropagation_dyn() { return StopPropagation; }
};

} // end namespace utest
} // end namespace _Dispatcher

#endif /* INCLUDED_utest__Dispatcher_EventException */ 
