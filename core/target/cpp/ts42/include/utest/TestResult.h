// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_TestResult
#define INCLUDED_utest_TestResult

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(List)
HX_DECLARE_CLASS1(utest,TestHandler)
HX_DECLARE_CLASS1(utest,TestResult)

namespace utest{


class HXCPP_CLASS_ATTRIBUTES TestResult_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestResult_obj OBJ_;
		TestResult_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="utest.TestResult")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"utest.TestResult"); }
		static hx::ObjectPtr< TestResult_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestResult_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("TestResult","\xef","\xb2","\x29","\x18"); }

		static  ::utest::TestResult ofHandler( ::utest::TestHandler handler);
		static ::Dynamic ofHandler_dyn();

		::String pack;
		::String cls;
		::String method;
		::String setup;
		::String teardown;
		 ::List assertations;
		Bool allOk();
		::Dynamic allOk_dyn();

};

} // end namespace utest

#endif /* INCLUDED_utest_TestResult */ 
