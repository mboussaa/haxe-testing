// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_thx_ERegs
#include <thx/ERegs.h>
#endif

namespace thx{

void ERegs_obj::__construct() { }

Dynamic ERegs_obj::__CreateEmpty() { return new ERegs_obj; }

hx::ObjectPtr< ERegs_obj > ERegs_obj::__new()
{
	hx::ObjectPtr< ERegs_obj > _hx_result = new ERegs_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic ERegs_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ERegs_obj > _hx_result = new ERegs_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::EReg ERegs_obj::ESCAPE_PATTERN;

::String ERegs_obj::escape(::String text){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::String _hx_run( ::EReg ereg){
            			HX_STACK_FRAME("thx.ERegs","escape",0x53997955,"thx.ERegs.escape","thx/ERegs.hx",14,0xbb447fe5)
            			HX_STACK_ARG(ereg,"ereg")
HXLINE(  14)			::String _hx_tmp = ereg->matched((int)1);
HXDLIN(  14)			return (HX_("\\",5c,00,00,00) + _hx_tmp);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.ERegs","escape",0x53997955,"thx.ERegs.escape","thx/ERegs.hx",13,0xbb447fe5)
            	HX_STACK_ARG(text,"text")
HXLINE(  13)		return ::thx::ERegs_obj::ESCAPE_PATTERN->map(text, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ERegs_obj,escape,return )


ERegs_obj::ERegs_obj()
{
}

bool ERegs_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"escape") ) { outValue = escape_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ESCAPE_PATTERN") ) { outValue = ESCAPE_PATTERN; return true; }
	}
	return false;
}

bool ERegs_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"ESCAPE_PATTERN") ) { ESCAPE_PATTERN=ioValue.Cast<  ::EReg >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ERegs_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ERegs_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::EReg*/ ,(void *) &ERegs_obj::ESCAPE_PATTERN,HX_HCSTRING("ESCAPE_PATTERN","\x32","\x0c","\x0d","\xc1")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ERegs_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ERegs_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ERegs_obj::ESCAPE_PATTERN,"ESCAPE_PATTERN");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ERegs_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ERegs_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ERegs_obj::ESCAPE_PATTERN,"ESCAPE_PATTERN");
};

#endif

hx::Class ERegs_obj::__mClass;

static ::String ERegs_obj_sStaticFields[] = {
	HX_HCSTRING("ESCAPE_PATTERN","\x32","\x0c","\x0d","\xc1"),
	HX_HCSTRING("escape","\x81","\x43","\xda","\xda"),
	::String(null())
};

void ERegs_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.ERegs","\x1a","\xb8","\x82","\xa5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ERegs_obj::__GetStatic;
	__mClass->mSetStaticField = &ERegs_obj::__SetStatic;
	__mClass->mMarkFunc = ERegs_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ERegs_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ERegs_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ERegs_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ERegs_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ERegs_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ERegs_obj::__boot()
{
{
            	HX_STACK_FRAME("thx.ERegs","boot",0xf073dd06,"thx.ERegs.boot","thx/ERegs.hx",7,0xbb447fe5)
HXLINE(   7)		ESCAPE_PATTERN =  ::EReg_obj::__new(HX_("([-\\[\\]{}()*+?\\.,\\\\^$|# \t\r\n])",d8,ca,17,2b),HX_("g",67,00,00,00));
            	}
}

} // end namespace thx
