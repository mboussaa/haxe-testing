// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_Assertation
#define INCLUDED_utest_Assertation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,StackItem)
HX_DECLARE_CLASS1(utest,Assertation)
namespace utest{


class Assertation_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Assertation_obj OBJ_;

	public:
		Assertation_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("utest.Assertation","\x68","\xbe","\x18","\x3c"); }
		::String __ToString() const { return HX_HCSTRING("Assertation.","\x3f","\x37","\x3d","\x59") + _hx_tag; }

		static ::utest::Assertation AsyncError( ::Dynamic e,::Array< ::Dynamic> stack);
		static ::Dynamic AsyncError_dyn();
		static ::utest::Assertation Error( ::Dynamic e,::Array< ::Dynamic> stack);
		static ::Dynamic Error_dyn();
		static ::utest::Assertation Failure(::String msg, ::Dynamic pos);
		static ::Dynamic Failure_dyn();
		static ::utest::Assertation SetupError( ::Dynamic e,::Array< ::Dynamic> stack);
		static ::Dynamic SetupError_dyn();
		static ::utest::Assertation Success( ::Dynamic pos);
		static ::Dynamic Success_dyn();
		static ::utest::Assertation TeardownError( ::Dynamic e,::Array< ::Dynamic> stack);
		static ::Dynamic TeardownError_dyn();
		static ::utest::Assertation TimeoutError(Int missedAsyncs,::Array< ::Dynamic> stack);
		static ::Dynamic TimeoutError_dyn();
		static ::utest::Assertation Warning(::String msg);
		static ::Dynamic Warning_dyn();
};

} // end namespace utest

#endif /* INCLUDED_utest_Assertation */ 
