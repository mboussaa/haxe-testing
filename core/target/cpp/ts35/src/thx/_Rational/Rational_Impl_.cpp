// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif
#ifndef INCLUDED_thx__BigInt_BigInt_Impl_
#include <thx/_BigInt/BigInt_Impl_.h>
#endif
#ifndef INCLUDED_thx__Decimal_Decimal_Impl_
#include <thx/_Decimal/Decimal_Impl_.h>
#endif
#ifndef INCLUDED_thx__Rational_Rational_Impl_
#include <thx/_Rational/Rational_Impl_.h>
#endif
#ifndef INCLUDED_thx_bigint_BigIntImpl
#include <thx/bigint/BigIntImpl.h>
#endif
#ifndef INCLUDED_thx_bigint_Bigs
#include <thx/bigint/Bigs.h>
#endif
#ifndef INCLUDED_thx_bigint_DecimalImpl
#include <thx/bigint/DecimalImpl.h>
#endif

namespace thx{
namespace _Rational{

void Rational_Impl__obj::__construct() { }

Dynamic Rational_Impl__obj::__CreateEmpty() { return new Rational_Impl__obj; }

hx::ObjectPtr< Rational_Impl__obj > Rational_Impl__obj::__new()
{
	hx::ObjectPtr< Rational_Impl__obj > _hx_result = new Rational_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Rational_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Rational_Impl__obj > _hx_result = new Rational_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Rational_Impl__obj::zero;

 ::Dynamic Rational_Impl__obj::fromString(::String s){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","fromString",0xcbb057f0,"thx._Rational.Rational_Impl_.fromString","thx/Rational.hx",9,0xafcd2165)
            	HX_STACK_ARG(s,"s")
HXLINE(  10)		HX_VARI( ::Array< ::String >,parts) = s.split(HX_("/",2f,00,00,00))->map(::StringTools_obj::trim_dyn());
HXLINE(  11)		Bool _hx_tmp = (parts->length > (int)2);
HXDLIN(  11)		if (_hx_tmp) {
HXLINE(  12)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(((HX_("string \"",13,db,28,dc) + s) + HX_("\" cannot be parsed to a Rational",01,eb,60,b6)),null(),hx::SourceInfo(HX_("Rational.hx",b0,ea,fe,52),12,HX_("thx._Rational.Rational_Impl_",39,04,b1,3d),HX_("fromString",db,2d,74,54))));
            		}
HXLINE(  13)		Bool _hx_tmp1 = (parts->length == (int)1);
HXDLIN(  13)		if (_hx_tmp1) {
HXLINE(  14)			return ::thx::_Rational::Rational_Impl__obj::create(::thx::bigint::Bigs_obj::parseBase(parts->__get((int)0),(int)10),::thx::_BigInt::BigInt_Impl__obj::one);
            		}
HXLINE(  15)		::Dynamic _hx_tmp2 = ::thx::bigint::Bigs_obj::parseBase(parts->__get((int)0),(int)10);
HXDLIN(  15)		return ::thx::_Rational::Rational_Impl__obj::create(_hx_tmp2,::thx::bigint::Bigs_obj::parseBase(parts->__get((int)1),(int)10));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,fromString,return )

 ::Dynamic Rational_Impl__obj::fromBigInt(::Dynamic i){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","fromBigInt",0xa2d9332e,"thx._Rational.Rational_Impl_.fromBigInt","thx/Rational.hx",19,0xafcd2165)
            	HX_STACK_ARG(i,"i")
HXLINE(  19)		return ::thx::_Rational::Rational_Impl__obj::create(i,::thx::_BigInt::BigInt_Impl__obj::one);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,fromBigInt,return )

 ::Dynamic Rational_Impl__obj::fromInt(Int i){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","fromInt",0x3320c470,"thx._Rational.Rational_Impl_.fromInt","thx/Rational.hx",22,0xafcd2165)
            	HX_STACK_ARG(i,"i")
HXLINE(  22)		return ::thx::_Rational::Rational_Impl__obj::create(::thx::bigint::Bigs_obj::fromInt(i),::thx::_BigInt::BigInt_Impl__obj::one);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,fromInt,return )

 ::Dynamic Rational_Impl__obj::create(::Dynamic num,::Dynamic den){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","create",0xc55da291,"thx._Rational.Rational_Impl_.create","thx/Rational.hx",24,0xafcd2165)
            	HX_STACK_ARG(num,"num")
            	HX_STACK_ARG(den,"den")
HXLINE(  25)		Bool _hx_tmp = ::thx::_BigInt::BigInt_Impl__obj::equals(den,::thx::bigint::Bigs_obj::fromInt((int)0));
HXDLIN(  25)		if (_hx_tmp) {
HXLINE(  26)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("division by zero",1e,d4,91,da),null(),hx::SourceInfo(HX_("Rational.hx",b0,ea,fe,52),26,HX_("thx._Rational.Rational_Impl_",39,04,b1,3d),HX_("create",fc,66,0f,7c))));
            		}
HXLINE(  27)		Int _hx_tmp1 = ::thx::bigint::BigIntImpl_obj::toInt(num);
HXDLIN(  27)		HX_VARI( Int,g) = ::thx::Ints_obj::gcd(_hx_tmp1,::thx::bigint::BigIntImpl_obj::toInt(den));
HXLINE(  28)		HX_VARI( ::Dynamic,that) = ::thx::bigint::Bigs_obj::fromInt(g);
HXDLIN(  28)		HX_VARI_NAME( ::Dynamic,this1,"this") = ::thx::bigint::BigIntImpl_obj::divide(num,that);
HXDLIN(  28)		Float _hx_tmp2 = ::thx::bigint::BigIntImpl_obj::toInt(this1);
HXDLIN(  28)		HX_VARI( Int,value) = ::Std_obj::_hx_int(_hx_tmp2);
HXDLIN(  28)		num = ::thx::bigint::Bigs_obj::fromInt(value);
HXLINE(  29)		HX_VARI_NAME( ::Dynamic,that1,"that") = ::thx::bigint::Bigs_obj::fromInt(g);
HXDLIN(  29)		HX_VARI_NAME( ::Dynamic,this2,"this") = ::thx::bigint::BigIntImpl_obj::divide(den,that1);
HXDLIN(  29)		Float _hx_tmp3 = ::thx::bigint::BigIntImpl_obj::toInt(this2);
HXDLIN(  29)		HX_VARI_NAME( Int,value1,"value") = ::Std_obj::_hx_int(_hx_tmp3);
HXDLIN(  29)		den = ::thx::bigint::Bigs_obj::fromInt(value1);
HXLINE(  30)		Bool _hx_tmp4 = ::thx::_BigInt::BigInt_Impl__obj::less(den,::thx::bigint::Bigs_obj::fromInt((int)0));
HXDLIN(  30)		if (_hx_tmp4) {
HXLINE(  31)			num = ::thx::bigint::BigIntImpl_obj::negate(num);
HXLINE(  32)			den = ::thx::bigint::BigIntImpl_obj::negate(den);
            		}
HXLINE(  34)		Bool _hx_tmp5 = ::thx::_BigInt::BigInt_Impl__obj::equals(num,::thx::bigint::Bigs_obj::fromInt((int)0));
HXDLIN(  34)		if (_hx_tmp5) {
HXLINE(  35)			den = ::thx::bigint::Bigs_obj::fromInt((int)1);
            		}
HXLINE(  36)		HX_VARI_NAME( Int,num1,"num") = ::thx::bigint::BigIntImpl_obj::toInt(num);
HXDLIN(  36)		HX_VARI_NAME( Int,den1,"den") = ::thx::bigint::BigIntImpl_obj::toInt(den);
HXDLIN(  36)		HX_VAR_NAME(  ::Dynamic,this3,"this");
HXDLIN(  36)		::Dynamic _hx_tmp6 = ::thx::bigint::Bigs_obj::fromInt(num1);
HXDLIN(  36)		this3 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("den",cd,39,4c,00),::thx::bigint::Bigs_obj::fromInt(den1))
            			->setFixed(1,HX_("num",46,de,53,00),_hx_tmp6));
HXDLIN(  36)		return this3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,create,return )

 ::Dynamic Rational_Impl__obj::_new(Int num,Int den){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","_new",0x7405d1b6,"thx._Rational.Rational_Impl_._new","thx/Rational.hx",39,0xafcd2165)
            	HX_STACK_ARG(num,"num")
            	HX_STACK_ARG(den,"den")
HXLINE(  39)		HX_VAR_NAME(  ::Dynamic,this1,"this");
HXLINE(  40)		::Dynamic _hx_tmp = ::thx::bigint::Bigs_obj::fromInt(num);
HXDLIN(  40)		this1 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("den",cd,39,4c,00),::thx::bigint::Bigs_obj::fromInt(den))
            			->setFixed(1,HX_("num",46,de,53,00),_hx_tmp));
HXLINE(  39)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,_new,return )

 ::Dynamic Rational_Impl__obj::abs( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","abs",0xf50bd5bd,"thx._Rational.Rational_Impl_.abs","thx/Rational.hx",43,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  43)		HX_VARI_NAME( ::Dynamic,this2,"this") = ::thx::bigint::BigIntImpl_obj::abs( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN(  43)		HX_VARI( Int,num) = ::thx::bigint::BigIntImpl_obj::toInt(this2);
HXDLIN(  43)		HX_VARI( Int,den) = ::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN(  43)		HX_VAR_NAME(  ::Dynamic,this3,"this");
HXDLIN(  43)		::Dynamic _hx_tmp = ::thx::bigint::Bigs_obj::fromInt(num);
HXDLIN(  43)		this3 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("den",cd,39,4c,00),::thx::bigint::Bigs_obj::fromInt(den))
            			->setFixed(1,HX_("num",46,de,53,00),_hx_tmp));
HXDLIN(  43)		return this3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,abs,return )

 ::Dynamic Rational_Impl__obj::negate( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","negate",0xb0677d57,"thx._Rational.Rational_Impl_.negate","thx/Rational.hx",47,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  47)		HX_VARI_NAME( ::Dynamic,this2,"this") = ::thx::bigint::BigIntImpl_obj::negate( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN(  47)		HX_VARI( Int,num) = ::thx::bigint::BigIntImpl_obj::toInt(this2);
HXDLIN(  47)		HX_VARI( Int,den) = ::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN(  47)		HX_VAR_NAME(  ::Dynamic,this3,"this");
HXDLIN(  47)		::Dynamic _hx_tmp = ::thx::bigint::Bigs_obj::fromInt(num);
HXDLIN(  47)		this3 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("den",cd,39,4c,00),::thx::bigint::Bigs_obj::fromInt(den))
            			->setFixed(1,HX_("num",46,de,53,00),_hx_tmp));
HXDLIN(  47)		return this3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,negate,return )

 ::Dynamic Rational_Impl__obj::add( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","add",0xf50bd76c,"thx._Rational.Rational_Impl_.add","thx/Rational.hx",50,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  51)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,::thx::_Rational::Rational_Impl__obj::zero);
HXDLIN(  51)		if ((_hx_tmp == (int)0)) {
HXLINE(  51)			return that;
            		}
HXLINE(  52)		Int _hx_tmp1 = ::thx::_Rational::Rational_Impl__obj::compareTo(that,::thx::_Rational::Rational_Impl__obj::zero);
HXDLIN(  52)		if ((_hx_tmp1 == (int)0)) {
HXLINE(  52)			return this1;
            		}
HXLINE(  53)		Int _hx_tmp2 = ::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN(  53)		HX_VARI( Int,f) = ::thx::Ints_obj::gcd(_hx_tmp2,::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(that->__Field(HX_("num",46,de,53,00),hx::paccDynamic))));
HXLINE(  54)		Int _hx_tmp3 = ::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXLINE(  53)		HX_VARI( Int,g) = ::thx::Ints_obj::gcd(_hx_tmp3,::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(that->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic))));
HXLINE(  56)		HX_VARI_NAME( ::Dynamic,that1,"that") = ::thx::bigint::Bigs_obj::fromInt(f);
HXDLIN(  56)		HX_VARI_NAME( ::Dynamic,this2,"this") = ::thx::bigint::BigIntImpl_obj::divide( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)),that1);
HXDLIN(  56)		Float _hx_tmp4 = ::thx::bigint::BigIntImpl_obj::toInt(this2);
HXDLIN(  56)		Int _hx_tmp5 = ::Std_obj::_hx_int(_hx_tmp4);
HXDLIN(  56)		HX_VARI_NAME( ::Dynamic,that2,"that") = ::thx::bigint::Bigs_obj::fromInt(g);
HXDLIN(  56)		HX_VARI_NAME( ::Dynamic,this3,"this") = ::thx::bigint::BigIntImpl_obj::divide( ::Dynamic(that->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)),that2);
HXDLIN(  56)		Float _hx_tmp6 = ::thx::bigint::BigIntImpl_obj::toInt(this3);
HXDLIN(  56)		Int _hx_tmp7 = ::Std_obj::_hx_int(_hx_tmp6);
HXDLIN(  56)		Int _hx_tmp8 = (_hx_tmp5 * _hx_tmp7);
HXLINE(  57)		HX_VARI_NAME( ::Dynamic,that3,"that") = ::thx::bigint::Bigs_obj::fromInt(f);
HXDLIN(  57)		HX_VARI_NAME( ::Dynamic,this4,"this") = ::thx::bigint::BigIntImpl_obj::divide( ::Dynamic(that->__Field(HX_("num",46,de,53,00),hx::paccDynamic)),that3);
HXDLIN(  57)		Float _hx_tmp9 = ::thx::bigint::BigIntImpl_obj::toInt(this4);
HXDLIN(  57)		Int _hx_tmp10 = ::Std_obj::_hx_int(_hx_tmp9);
HXDLIN(  57)		HX_VARI_NAME( ::Dynamic,that4,"that") = ::thx::bigint::Bigs_obj::fromInt(g);
HXDLIN(  57)		HX_VARI_NAME( ::Dynamic,this5,"this") = ::thx::bigint::BigIntImpl_obj::divide( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)),that4);
HXDLIN(  57)		Float _hx_tmp11 = ::thx::bigint::BigIntImpl_obj::toInt(this5);
HXDLIN(  57)		Int _hx_tmp12 = ::Std_obj::_hx_int(_hx_tmp11);
HXLINE(  56)		::Dynamic _hx_tmp13 = ::thx::bigint::Bigs_obj::fromInt((_hx_tmp8 + (_hx_tmp10 * _hx_tmp12)));
HXLINE(  58)		Int _hx_tmp14 = ::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN(  58)		HX_VARI( Int,value) = ::thx::Ints_obj::lcm(_hx_tmp14,::thx::bigint::BigIntImpl_obj::toInt( ::Dynamic(that->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic))));
HXDLIN(  58)		::Dynamic _hx_tmp15 = ::thx::bigint::Bigs_obj::fromInt(value);
HXLINE(  53)		HX_VARI(  ::Dynamic,s) = ::thx::_Rational::Rational_Impl__obj::create(_hx_tmp13,_hx_tmp15);
HXLINE(  61)		HX_VARI_NAME( ::Dynamic,that5,"that") = ::thx::bigint::Bigs_obj::fromInt(f);
HXDLIN(  61)		::Dynamic _hx_tmp16 = ::thx::bigint::BigIntImpl_obj::multiply( ::Dynamic(s->__Field(HX_("num",46,de,53,00),hx::paccDynamic)),that5);
HXDLIN(  61)		s->__SetField(HX_("num",46,de,53,00),_hx_tmp16,hx::paccDynamic);
HXLINE(  62)		return s;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,add,return )

 ::Dynamic Rational_Impl__obj::subtract( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","subtract",0xde157fe9,"thx._Rational.Rational_Impl_.subtract","thx/Rational.hx",67,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  67)		 ::Dynamic _hx_tmp = ::thx::_Rational::Rational_Impl__obj::negate(that);
HXDLIN(  67)		return ::thx::_Rational::Rational_Impl__obj::add(this1,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,subtract,return )

 ::Dynamic Rational_Impl__obj::multiply( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","multiply",0x8090ecf9,"thx._Rational.Rational_Impl_.multiply","thx/Rational.hx",71,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  72)		HX_VARI(  ::Dynamic,c) = ::thx::_Rational::Rational_Impl__obj::create( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)), ::Dynamic(that->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN(  72)		HX_VARI(  ::Dynamic,d) = ::thx::_Rational::Rational_Impl__obj::create( ::Dynamic(that->__Field(HX_("num",46,de,53,00),hx::paccDynamic)), ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXLINE(  74)		::Dynamic _hx_tmp = ::thx::bigint::BigIntImpl_obj::multiply( ::Dynamic(c->__Field(HX_("num",46,de,53,00),hx::paccDynamic)), ::Dynamic(d->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN(  74)		return ::thx::_Rational::Rational_Impl__obj::create(_hx_tmp,::thx::bigint::BigIntImpl_obj::multiply( ::Dynamic(c->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)), ::Dynamic(d->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,multiply,return )

 ::Dynamic Rational_Impl__obj::divide( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","divide",0x08606b0e,"thx._Rational.Rational_Impl_.divide","thx/Rational.hx",79,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  79)		 ::Dynamic _hx_tmp = ::thx::_Rational::Rational_Impl__obj::reciprocal(that);
HXDLIN(  79)		return ::thx::_Rational::Rational_Impl__obj::multiply(this1,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,divide,return )

 ::Dynamic Rational_Impl__obj::reciprocal( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","reciprocal",0x33c47def,"thx._Rational.Rational_Impl_.reciprocal","thx/Rational.hx",82,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  82)		return ::thx::_Rational::Rational_Impl__obj::create( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)), ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,reciprocal,return )

Bool Rational_Impl__obj::isZero( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","isZero",0xb7a60fc7,"thx._Rational.Rational_Impl_.isZero","thx/Rational.hx",85,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  85)		return ::thx::bigint::BigIntImpl_obj::isZero( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,isZero,return )

Bool Rational_Impl__obj::isNegative( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","isNegative",0x432d6294,"thx._Rational.Rational_Impl_.isNegative","thx/Rational.hx",88,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  88)		return ( (Bool)( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic))->__Field(HX_("sign",3d,90,53,4c),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,isNegative,return )

Int Rational_Impl__obj::compareTo( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","compareTo",0x5fe2050b,"thx._Rational.Rational_Impl_.compareTo","thx/Rational.hx",90,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  91)		HX_VARI( ::Dynamic,lhs) = ::thx::bigint::BigIntImpl_obj::multiply( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)), ::Dynamic(that->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN(  91)		HX_VARI( ::Dynamic,rhs) = ::thx::bigint::BigIntImpl_obj::multiply( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)), ::Dynamic(that->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXLINE(  93)		return ::thx::bigint::BigIntImpl_obj::compareTo(lhs,rhs);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,compareTo,return )

Bool Rational_Impl__obj::greaterThan( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","greaterThan",0x52b369c6,"thx._Rational.Rational_Impl_.greaterThan","thx/Rational.hx",97,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE(  97)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN(  97)		return (_hx_tmp > (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,greaterThan,return )

Bool Rational_Impl__obj::greater( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","greater",0x92e677c5,"thx._Rational.Rational_Impl_.greater","thx/Rational.hx",101,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 101)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 101)		return (_hx_tmp > (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,greater,return )

Bool Rational_Impl__obj::greaterEqualsTo( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","greaterEqualsTo",0x2367867f,"thx._Rational.Rational_Impl_.greaterEqualsTo","thx/Rational.hx",104,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 104)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN( 104)		return (_hx_tmp >= (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,greaterEqualsTo,return )

Bool Rational_Impl__obj::greaterEquals( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","greaterEquals",0x32257be4,"thx._Rational.Rational_Impl_.greaterEquals","thx/Rational.hx",108,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 108)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 108)		return (_hx_tmp >= (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,greaterEquals,return )

Bool Rational_Impl__obj::lessThan( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","lessThan",0xd9386a2f,"thx._Rational.Rational_Impl_.lessThan","thx/Rational.hx",111,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 111)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN( 111)		return (_hx_tmp < (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,lessThan,return )

Bool Rational_Impl__obj::less( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","less",0x7c96cfae,"thx._Rational.Rational_Impl_.less","thx/Rational.hx",115,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 115)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 115)		return (_hx_tmp < (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,less,return )

Bool Rational_Impl__obj::lessEqualsTo( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","lessEqualsTo",0x457f6f68,"thx._Rational.Rational_Impl_.lessEqualsTo","thx/Rational.hx",118,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 118)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN( 118)		return (_hx_tmp <= (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,lessEqualsTo,return )

Bool Rational_Impl__obj::lessEquals( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","lessEquals",0x243a288d,"thx._Rational.Rational_Impl_.lessEquals","thx/Rational.hx",122,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 122)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 122)		return (_hx_tmp <= (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,lessEquals,return )

Bool Rational_Impl__obj::equalsTo( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","equalsTo",0xbb3e906f,"thx._Rational.Rational_Impl_.equalsTo","thx/Rational.hx",125,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 125)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN( 125)		return (_hx_tmp == (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,equalsTo,return )

Bool Rational_Impl__obj::equals( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","equals",0x094129d4,"thx._Rational.Rational_Impl_.equals","thx/Rational.hx",129,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 129)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 129)		return (_hx_tmp == (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,equals,return )

Bool Rational_Impl__obj::notEqualsTo( ::Dynamic this1, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","notEqualsTo",0xe1948e18,"thx._Rational.Rational_Impl_.notEqualsTo","thx/Rational.hx",132,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 132)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(this1,that);
HXDLIN( 132)		return (_hx_tmp != (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,notEqualsTo,return )

Bool Rational_Impl__obj::notEquals( ::Dynamic self, ::Dynamic that){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","notEquals",0x9a613b3d,"thx._Rational.Rational_Impl_.notEquals","thx/Rational.hx",136,0xafcd2165)
            	HX_STACK_ARG(self,"self")
            	HX_STACK_ARG(that,"that")
HXLINE( 136)		Int _hx_tmp = ::thx::_Rational::Rational_Impl__obj::compareTo(self,that);
HXDLIN( 136)		return (_hx_tmp != (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,notEquals,return )

Float Rational_Impl__obj::toFloat( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","toFloat",0xaa40f8ec,"thx._Rational.Rational_Impl_.toFloat","thx/Rational.hx",139,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 139)		Float _hx_tmp = ::thx::bigint::BigIntImpl_obj::toFloat( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN( 139)		Float _hx_tmp1 = ::thx::bigint::BigIntImpl_obj::toFloat( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN( 139)		return ((Float)_hx_tmp / (Float)_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,toFloat,return )

 ::thx::bigint::DecimalImpl Rational_Impl__obj::toDecimal( ::Dynamic this1, ::Dynamic __o_extraScale){
 ::Dynamic extraScale = __o_extraScale.Default(0);
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","toDecimal",0x73ed5be1,"thx._Rational.Rational_Impl_.toDecimal","thx/Rational.hx",142,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(extraScale,"extraScale")
HXLINE( 142)		return ::thx::_Decimal::Decimal_Impl__obj::fromBigInt( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)))->divide(::thx::_Decimal::Decimal_Impl__obj::fromBigInt( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Rational_Impl__obj,toDecimal,return )

::String Rational_Impl__obj::toString( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","toString",0x1e72db81,"thx._Rational.Rational_Impl_.toString","thx/Rational.hx",145,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 145)		Bool _hx_tmp = ::thx::_BigInt::BigInt_Impl__obj::equals( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)),::thx::bigint::Bigs_obj::fromInt((int)1));
HXDLIN( 145)		if (_hx_tmp) {
HXLINE( 146)			::String _hx_tmp1 = ::thx::bigint::BigIntImpl_obj::toString( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN( 146)			return (HX_("",00,00,00,00) + _hx_tmp1);
            		}
            		else {
HXLINE( 148)			::String _hx_tmp2 = ::thx::bigint::BigIntImpl_obj::toString( ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic)));
HXDLIN( 148)			::String _hx_tmp3 = ((HX_("",00,00,00,00) + _hx_tmp2) + HX_("/",2f,00,00,00));
HXDLIN( 148)			::String _hx_tmp4 = ::thx::bigint::BigIntImpl_obj::toString( ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic)));
HXDLIN( 148)			return (_hx_tmp3 + _hx_tmp4);
            		}
HXLINE( 145)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,toString,return )

::Dynamic Rational_Impl__obj::get_num( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","get_num",0x01ee8da8,"thx._Rational.Rational_Impl_.get_num","thx/Rational.hx",151,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 151)		return  ::Dynamic(this1->__Field(HX_("num",46,de,53,00),hx::paccDynamic));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,get_num,return )

::Dynamic Rational_Impl__obj::get_den( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","get_den",0x01e6e92f,"thx._Rational.Rational_Impl_.get_den","thx/Rational.hx",152,0xafcd2165)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 152)		return  ::Dynamic(this1->__Field(HX_("den",cd,39,4c,00),hx::paccDynamic));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Rational_Impl__obj,get_den,return )


Rational_Impl__obj::Rational_Impl__obj()
{
}

bool Rational_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"abs") ) { outValue = abs_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"less") ) { outValue = less_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"divide") ) { outValue = divide_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isZero") ) { outValue = isZero_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greater") ) { outValue = greater_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toFloat") ) { outValue = toFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_num") ) { outValue = get_num_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_den") ) { outValue = get_den_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"subtract") ) { outValue = subtract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"multiply") ) { outValue = multiply_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessThan") ) { outValue = lessThan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equalsTo") ) { outValue = equalsTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"compareTo") ) { outValue = compareTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"notEquals") ) { outValue = notEquals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toDecimal") ) { outValue = toDecimal_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromBigInt") ) { outValue = fromBigInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reciprocal") ) { outValue = reciprocal_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isNegative") ) { outValue = isNegative_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessEquals") ) { outValue = lessEquals_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"greaterThan") ) { outValue = greaterThan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"notEqualsTo") ) { outValue = notEqualsTo_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"lessEqualsTo") ) { outValue = lessEqualsTo_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"greaterEquals") ) { outValue = greaterEquals_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"greaterEqualsTo") ) { outValue = greaterEqualsTo_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Rational_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Rational_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &Rational_Impl__obj::zero,HX_HCSTRING("zero","\x28","\x0f","\xf1","\x50")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Rational_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Rational_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Rational_Impl__obj::zero,"zero");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Rational_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Rational_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Rational_Impl__obj::zero,"zero");
};

#endif

hx::Class Rational_Impl__obj::__mClass;

static ::String Rational_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("zero","\x28","\x0f","\xf1","\x50"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("fromBigInt","\x19","\x09","\x9d","\x2b"),
	HX_HCSTRING("fromInt","\xa5","\xdd","\xfa","\x57"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("abs","\x72","\xf0","\x49","\x00"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("subtract","\x14","\x75","\x11","\xf8"),
	HX_HCSTRING("multiply","\x24","\xe2","\x8c","\x9a"),
	HX_HCSTRING("divide","\x79","\x2f","\x12","\xbf"),
	HX_HCSTRING("reciprocal","\xda","\x53","\x88","\xbc"),
	HX_HCSTRING("isZero","\x32","\xd4","\x57","\x6e"),
	HX_HCSTRING("isNegative","\x7f","\x38","\xf1","\xcb"),
	HX_HCSTRING("compareTo","\x80","\x95","\x5c","\x02"),
	HX_HCSTRING("greaterThan","\x7b","\xc1","\x4a","\x75"),
	HX_HCSTRING("greater","\xfa","\x90","\xc0","\xb7"),
	HX_HCSTRING("greaterEqualsTo","\xb4","\x5c","\x7d","\xf1"),
	HX_HCSTRING("greaterEquals","\xd9","\xea","\x09","\xab"),
	HX_HCSTRING("lessThan","\x5a","\x5f","\x34","\xf3"),
	HX_HCSTRING("less","\x59","\x13","\xb0","\x47"),
	HX_HCSTRING("lessEqualsTo","\x13","\xd6","\x54","\x67"),
	HX_HCSTRING("lessEquals","\x78","\xfe","\xfd","\xac"),
	HX_HCSTRING("equalsTo","\x9a","\x85","\x3a","\xd5"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("notEqualsTo","\xcd","\xe5","\x2b","\x04"),
	HX_HCSTRING("notEquals","\xb2","\xcb","\xdb","\x3c"),
	HX_HCSTRING("toFloat","\x21","\x12","\x1b","\xcf"),
	HX_HCSTRING("toDecimal","\x56","\xec","\x67","\x16"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("get_num","\xdd","\xa6","\xc8","\x26"),
	HX_HCSTRING("get_den","\x64","\x02","\xc1","\x26"),
	::String(null())
};

void Rational_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._Rational.Rational_Impl_","\x39","\x04","\xb1","\x3d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Rational_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Rational_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Rational_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Rational_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Rational_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Rational_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Rational_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Rational_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("thx._Rational.Rational_Impl_","boot",0x76024087,"thx._Rational.Rational_Impl_.boot","thx/Rational.hx",4,0xafcd2165)
HXLINE(   4)		zero =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("den",cd,39,4c,00),::thx::_BigInt::BigInt_Impl__obj::zero)
            			->setFixed(1,HX_("num",46,de,53,00),::thx::_BigInt::BigInt_Impl__obj::one));
            	}
}

} // end namespace thx
} // end namespace _Rational
