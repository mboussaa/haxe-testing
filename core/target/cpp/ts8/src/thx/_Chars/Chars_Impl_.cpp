// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif
#ifndef INCLUDED_thx_Assert
#include <thx/Assert.h>
#endif
#ifndef INCLUDED_thx_Strings
#include <thx/Strings.h>
#endif
#ifndef INCLUDED_thx__Char_Char_Impl_
#include <thx/_Char/Char_Impl_.h>
#endif
#ifndef INCLUDED_thx__Chars_Chars_Impl_
#include <thx/_Chars/Chars_Impl_.h>
#endif

namespace thx{
namespace _Chars{

void Chars_Impl__obj::__construct() { }

Dynamic Chars_Impl__obj::__CreateEmpty() { return new Chars_Impl__obj; }

hx::ObjectPtr< Chars_Impl__obj > Chars_Impl__obj::__new()
{
	hx::ObjectPtr< Chars_Impl__obj > _hx_result = new Chars_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Chars_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Chars_Impl__obj > _hx_result = new Chars_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::Array< Int > Chars_Impl__obj::fromString(::String s){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		Int _hx_run(::String s1){
            			HX_STACK_FRAME("thx._Chars.Chars_Impl_","fromString",0xc5ce4e92,"thx._Chars.Chars_Impl_.fromString","thx/Chars.hx",18,0x97b2c04c)
            			HX_STACK_ARG(s1,"s1")
HXLINE(  18)			HX_VARI( Int,i) = ::haxe::Utf8_obj::charCodeAt(s1,(int)0);
HXDLIN(  18)			::thx::Assert_obj::isTrue((i >= (int)0),(HX_("Char value should be greater than zero: ",de,84,0e,b2) + i),hx::SourceInfo(HX_("Char.hx",88,75,97,9c),19,HX_("thx._Char.Char_Impl_",39,80,a1,f8),HX_("fromInt",a5,dd,fa,57)));
HXDLIN(  18)			return i;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._Chars.Chars_Impl_","fromString",0xc5ce4e92,"thx._Chars.Chars_Impl_.fromString","thx/Chars.hx",17,0x97b2c04c)
            	HX_STACK_ARG(s,"s")
HXLINE(  17)		HX_VARI( ::Array< Int >,arr) = ::thx::Strings_obj::map(s, ::Dynamic(new _hx_Closure_0()));
HXDLIN(  17)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Chars_Impl__obj,fromString,return )

::Array< Int > Chars_Impl__obj::fromArray(::Array< Int > arr){
            	HX_STACK_FRAME("thx._Chars.Chars_Impl_","fromArray",0x86ccfaf8,"thx._Chars.Chars_Impl_.fromArray","thx/Chars.hx",24,0x97b2c04c)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  24)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Chars_Impl__obj,fromArray,return )

::Array< Int > Chars_Impl__obj::fromChars(::Array< Int > arr){
            	HX_STACK_FRAME("thx._Chars.Chars_Impl_","fromChars",0xa6f12a3c,"thx._Chars.Chars_Impl_.fromChars","thx/Chars.hx",30,0x97b2c04c)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  30)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Chars_Impl__obj,fromChars,return )

::Array< Int > Chars_Impl__obj::_new(::Array< Int > chars){
            	HX_STACK_FRAME("thx._Chars.Chars_Impl_","_new",0xd61f42d8,"thx._Chars.Chars_Impl_._new","thx/Chars.hx",32,0x97b2c04c)
            	HX_STACK_ARG(chars,"chars")
HXLINE(  32)		return chars;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Chars_Impl__obj,_new,return )

::String Chars_Impl__obj::toString(::Array< Int > this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::String _hx_run(Int c){
            			HX_STACK_FRAME("thx._Chars.Chars_Impl_","toString",0xdc3885a3,"thx._Chars.Chars_Impl_.toString","thx/Chars.hx",39,0x97b2c04c)
            			HX_STACK_ARG(c,"c")
HXLINE(  39)			return ::thx::_Char::Char_Impl__obj::toString(c);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._Chars.Chars_Impl_","toString",0xdc3885a3,"thx._Chars.Chars_Impl_.toString","thx/Chars.hx",39,0x97b2c04c)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  39)		return this1->map( ::Dynamic(new _hx_Closure_0()))->join(HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Chars_Impl__obj,toString,return )


Chars_Impl__obj::Chars_Impl__obj()
{
}

bool Chars_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromChars") ) { outValue = fromChars_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Chars_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Chars_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Chars_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Chars_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Chars_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Chars_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Chars_Impl__obj::__mClass;

static ::String Chars_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("fromChars","\x13","\x87","\x3c","\xfa"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void Chars_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._Chars.Chars_Impl_","\x57","\x26","\x91","\x90");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Chars_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Chars_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Chars_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Chars_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Chars_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Chars_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Chars_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _Chars
