// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx__Monoid_Monoid_Impl_
#include <thx/_Monoid/Monoid_Impl_.h>
#endif

namespace thx{
namespace _Monoid{

void Monoid_Impl__obj::__construct() { }

Dynamic Monoid_Impl__obj::__CreateEmpty() { return new Monoid_Impl__obj; }

hx::ObjectPtr< Monoid_Impl__obj > Monoid_Impl__obj::__new()
{
	hx::ObjectPtr< Monoid_Impl__obj > _hx_result = new Monoid_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Monoid_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Monoid_Impl__obj > _hx_result = new Monoid_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Monoid_Impl__obj::get_semigroup( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Monoid.Monoid_Impl_","get_semigroup",0x559c6573,"thx._Monoid.Monoid_Impl_.get_semigroup","thx/Monoid.hx",12,0x3d8d5615)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  12)		return this1->__Field(HX_("append",da,e1,d3,8f),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Monoid_Impl__obj,get_semigroup,return )

 ::Dynamic Monoid_Impl__obj::get_zero( ::Dynamic this1){
            	HX_STACK_FRAME("thx._Monoid.Monoid_Impl_","get_zero",0xc4fdfd06,"thx._Monoid.Monoid_Impl_.get_zero","thx/Monoid.hx",15,0x3d8d5615)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  15)		return  ::Dynamic(this1->__Field(HX_("zero",28,0f,f1,50),hx::paccDynamic));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Monoid_Impl__obj,get_zero,return )

 ::Dynamic Monoid_Impl__obj::append( ::Dynamic this1, ::Dynamic a0, ::Dynamic a1){
            	HX_STACK_FRAME("thx._Monoid.Monoid_Impl_","append",0xa3ef64ef,"thx._Monoid.Monoid_Impl_.append","thx/Monoid.hx",18,0x3d8d5615)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a0,"a0")
            	HX_STACK_ARG(a1,"a1")
HXLINE(  18)		return  ::Dynamic(this1->__Field(HX_("append",da,e1,d3,8f),hx::paccDynamic))(a0,a1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Monoid_Impl__obj,append,return )


Monoid_Impl__obj::Monoid_Impl__obj()
{
}

bool Monoid_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"append") ) { outValue = append_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_zero") ) { outValue = get_zero_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_semigroup") ) { outValue = get_semigroup_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Monoid_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Monoid_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Monoid_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Monoid_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Monoid_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Monoid_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Monoid_Impl__obj::__mClass;

static ::String Monoid_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("get_semigroup","\xe8","\x2b","\xce","\x5e"),
	HX_HCSTRING("get_zero","\xb1","\xca","\xab","\xd0"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	::String(null())
};

void Monoid_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._Monoid.Monoid_Impl_","\xb9","\xcc","\xc5","\x9f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Monoid_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Monoid_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Monoid_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Monoid_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Monoid_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Monoid_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Monoid_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _Monoid
