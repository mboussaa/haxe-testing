// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_ui_common_HeaderDisplayMode
#define INCLUDED_utest_ui_common_HeaderDisplayMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(utest,ui,common,HeaderDisplayMode)
namespace utest{
namespace ui{
namespace common{


class HeaderDisplayMode_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef HeaderDisplayMode_obj OBJ_;

	public:
		HeaderDisplayMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("utest.ui.common.HeaderDisplayMode","\xc8","\x55","\xf8","\xb1"); }
		::String __ToString() const { return HX_HCSTRING("HeaderDisplayMode.","\x16","\x13","\xb4","\x40") + _hx_tag; }

		static ::utest::ui::common::HeaderDisplayMode AlwaysShowHeader;
		static inline ::utest::ui::common::HeaderDisplayMode AlwaysShowHeader_dyn() { return AlwaysShowHeader; }
		static ::utest::ui::common::HeaderDisplayMode NeverShowHeader;
		static inline ::utest::ui::common::HeaderDisplayMode NeverShowHeader_dyn() { return NeverShowHeader; }
		static ::utest::ui::common::HeaderDisplayMode ShowHeaderWithResults;
		static inline ::utest::ui::common::HeaderDisplayMode ShowHeaderWithResults_dyn() { return ShowHeaderWithResults; }
};

} // end namespace utest
} // end namespace ui
} // end namespace common

#endif /* INCLUDED_utest_ui_common_HeaderDisplayMode */ 
