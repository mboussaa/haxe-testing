// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Types
#define INCLUDED_thx_Types

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ValueType)
HX_DECLARE_CLASS1(thx,Types)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Types_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Types_obj OBJ_;
		Types_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Types")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Types"); }
		static hx::ObjectPtr< Types_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Types_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Types","\x59","\xe0","\xf8","\xad"); }

		static Bool isAnonymousObject( ::Dynamic v);
		static ::Dynamic isAnonymousObject_dyn();

		static Bool isPrimitive( ::Dynamic v);
		static ::Dynamic isPrimitive_dyn();

		static Bool isEnumValue( ::Dynamic v);
		static ::Dynamic isEnumValue_dyn();

		static Bool hasSuperClass(hx::Class cls,hx::Class sup);
		static ::Dynamic hasSuperClass_dyn();

		static Bool sameType( ::Dynamic a, ::Dynamic b);
		static ::Dynamic sameType_dyn();

		static ::Array< ::String > typeInheritance(::hx::EnumBase type);
		static ::Dynamic typeInheritance_dyn();

		static ::String toString(::hx::EnumBase type);
		static ::Dynamic toString_dyn();

		static ::Array< ::String > valueTypeInheritance( ::Dynamic value);
		static ::Dynamic valueTypeInheritance_dyn();

		static ::String valueTypeToString( ::Dynamic value);
		static ::Dynamic valueTypeToString_dyn();

		static ::String anyValueToString( ::Dynamic value);
		static ::Dynamic anyValueToString_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Types */ 
