// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TestEffects
#define INCLUDED_thx_TestEffects

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TestEffects)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES TestEffects_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestEffects_obj OBJ_;
		TestEffects_obj();

	public:
		void __construct(Int i);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.TestEffects")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.TestEffects"); }
		static hx::ObjectPtr< TestEffects_obj > __new(Int i);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestEffects_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("TestEffects","\x70","\x6a","\x47","\xcf"); }

		Int x;
		 ::Dynamic logged;
		 ::Dynamic oldLogger;
		 ::Dynamic &oldLogger_dyn() { return oldLogger;}
		void logger( ::Dynamic msg, ::Dynamic infos);
		::Dynamic logger_dyn();

		void setup();
		::Dynamic setup_dyn();

		void teardown();
		::Dynamic teardown_dyn();

		void testEffectsLog();
		::Dynamic testEffectsLog_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_TestEffects */ 
