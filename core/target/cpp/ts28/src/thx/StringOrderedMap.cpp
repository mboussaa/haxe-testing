// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_thx_OrderedMapImpl
#include <thx/OrderedMapImpl.h>
#endif
#ifndef INCLUDED_thx_StringOrderedMap
#include <thx/StringOrderedMap.h>
#endif

namespace thx{

void StringOrderedMap_obj::__construct(){
            	HX_STACK_FRAME("thx.StringOrderedMap","new",0xbebcd99c,"thx.StringOrderedMap.new","thx/OrderedMap.hx",75,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE(  75)		super::__construct( ::haxe::ds::StringMap_obj::__new());
            	}

Dynamic StringOrderedMap_obj::__CreateEmpty() { return new StringOrderedMap_obj; }

hx::ObjectPtr< StringOrderedMap_obj > StringOrderedMap_obj::__new()
{
	hx::ObjectPtr< StringOrderedMap_obj > _hx_result = new StringOrderedMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic StringOrderedMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StringOrderedMap_obj > _hx_result = new StringOrderedMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::thx::OrderedMapImpl StringOrderedMap_obj::empty(){
            	HX_STACK_FRAME("thx.StringOrderedMap","empty",0x61850ac9,"thx.StringOrderedMap.empty","thx/OrderedMap.hx",78,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE(  78)		return  ::thx::StringOrderedMap_obj::__new();
            	}



StringOrderedMap_obj::StringOrderedMap_obj()
{
}

hx::Val StringOrderedMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StringOrderedMap_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *StringOrderedMap_obj_sStaticStorageInfo = 0;
#endif

static ::String StringOrderedMap_obj_sMemberFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	::String(null()) };

static void StringOrderedMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StringOrderedMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StringOrderedMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StringOrderedMap_obj::__mClass,"__mClass");
};

#endif

hx::Class StringOrderedMap_obj::__mClass;

void StringOrderedMap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.StringOrderedMap","\xaa","\x1b","\xb9","\x1b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StringOrderedMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(StringOrderedMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< StringOrderedMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StringOrderedMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringOrderedMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringOrderedMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
