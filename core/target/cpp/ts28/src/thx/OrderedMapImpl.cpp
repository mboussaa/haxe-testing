// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_OrderedMapImpl
#include <thx/OrderedMapImpl.h>
#endif
#ifndef INCLUDED_thx_error_AbstractMethod
#include <thx/error/AbstractMethod.h>
#endif

namespace thx{

void OrderedMapImpl_obj::__construct(::Dynamic map){
            	HX_STACK_FRAME("thx.OrderedMapImpl","new",0x83c658eb,"thx.OrderedMapImpl.new","thx/OrderedMap.hx",87,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(map,"map")
HXLINE(  88)		this->map = map;
HXLINE(  89)		this->arr = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  90)		this->length = (int)0;
            	}

Dynamic OrderedMapImpl_obj::__CreateEmpty() { return new OrderedMapImpl_obj; }

hx::ObjectPtr< OrderedMapImpl_obj > OrderedMapImpl_obj::__new(::Dynamic map)
{
	hx::ObjectPtr< OrderedMapImpl_obj > _hx_result = new OrderedMapImpl_obj();
	_hx_result->__construct(map);
	return _hx_result;
}

Dynamic OrderedMapImpl_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< OrderedMapImpl_obj > _hx_result = new OrderedMapImpl_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

static ::haxe::IMap_obj _hx_thx_OrderedMapImpl__hx_haxe_IMap= {
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::OrderedMapImpl_obj::get,
	( void (hx::Object::*)( ::Dynamic, ::Dynamic))&::thx::OrderedMapImpl_obj::set,
	( Bool (hx::Object::*)( ::Dynamic))&::thx::OrderedMapImpl_obj::exists,
	( Bool (hx::Object::*)( ::Dynamic))&::thx::OrderedMapImpl_obj::remove,
	(  ::Dynamic (hx::Object::*)())&::thx::OrderedMapImpl_obj::keys,
	(  ::Dynamic (hx::Object::*)())&::thx::OrderedMapImpl_obj::iterator,
};

void *OrderedMapImpl_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x09c2bd39: return &_hx_thx_OrderedMapImpl__hx_haxe_IMap;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

 ::Dynamic OrderedMapImpl_obj::get( ::Dynamic k){
            	HX_STACK_FRAME("thx.OrderedMapImpl","get",0x83c10921,"thx.OrderedMapImpl.get","thx/OrderedMap.hx",94,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE(  94)		return ::haxe::IMap_obj::get(this->map,k);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,get,return )

 ::Dynamic OrderedMapImpl_obj::keyAt(Int index){
            	HX_STACK_FRAME("thx.OrderedMapImpl","keyAt",0x0a8ca9bd,"thx.OrderedMapImpl.keyAt","thx/OrderedMap.hx",97,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(index,"index")
HXLINE(  97)		return this->arr->__get(index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,keyAt,return )

Int OrderedMapImpl_obj::keyIndex( ::Dynamic k){
            	HX_STACK_FRAME("thx.OrderedMapImpl","keyIndex",0xde79e088,"thx.OrderedMapImpl.keyIndex","thx/OrderedMap.hx",99,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE( 100)		{
HXLINE( 100)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 100)			HX_VARI( Int,_g) = this->arr->get_length();
HXDLIN( 100)			while((_g1 < _g)){
HXLINE( 100)				HX_VARI( Int,i) = _g1++;
HXLINE( 101)				if (hx::IsEq( this->arr->__get(i),k )) {
HXLINE( 102)					return i;
            				}
            			}
            		}
HXLINE( 103)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,keyIndex,return )

Int OrderedMapImpl_obj::valueIndex( ::Dynamic v){
            	HX_STACK_FRAME("thx.OrderedMapImpl","valueIndex",0xef8360b6,"thx.OrderedMapImpl.valueIndex","thx/OrderedMap.hx",106,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE( 107)		{
HXLINE( 107)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 107)			HX_VARI( Int,_g) = this->arr->get_length();
HXDLIN( 107)			while((_g1 < _g)){
HXLINE( 107)				HX_VARI( Int,i) = _g1++;
HXLINE( 108)				 ::Dynamic _hx_tmp = ::haxe::IMap_obj::get(this->map,this->arr->__get(i));
HXDLIN( 108)				if (hx::IsEq( _hx_tmp,v )) {
HXLINE( 109)					return i;
            				}
            			}
            		}
HXLINE( 110)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,valueIndex,return )

 ::Dynamic OrderedMapImpl_obj::at(Int index){
            	HX_STACK_FRAME("thx.OrderedMapImpl","at",0x39fd66c8,"thx.OrderedMapImpl.at","thx/OrderedMap.hx",114,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(index,"index")
HXLINE( 114)		 ::Dynamic _hx_tmp = this->keyAt(index);
HXDLIN( 114)		return ::haxe::IMap_obj::get(this->map,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,at,return )

void OrderedMapImpl_obj::set( ::Dynamic k, ::Dynamic v){
            	HX_STACK_FRAME("thx.OrderedMapImpl","set",0x83ca242d,"thx.OrderedMapImpl.set","thx/OrderedMap.hx",116,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
HXLINE( 117)		Bool _hx_tmp = !(::haxe::IMap_obj::exists(this->map,k));
HXDLIN( 117)		if (_hx_tmp) {
HXLINE( 118)			this->arr->push(k);
HXLINE( 119)			this->length++;
            		}
HXLINE( 121)		::haxe::IMap_obj::set(this->map,k,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(OrderedMapImpl_obj,set,(void))

 ::thx::OrderedMapImpl OrderedMapImpl_obj::empty(){
            	HX_STACK_FRAME("thx.OrderedMapImpl","empty",0x9b683bd8,"thx.OrderedMapImpl.empty","thx/OrderedMap.hx",125,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 125)		HX_STACK_DO_THROW( ::thx::error::AbstractMethod_obj::__new(hx::SourceInfo(HX_("OrderedMap.hx",cf,1d,37,ae),125,HX_("thx.OrderedMapImpl",79,07,ff,7f),HX_("empty",8d,3a,da,6f))));
HXDLIN( 125)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,empty,return )

 ::Dynamic OrderedMapImpl_obj::setValue( ::Dynamic k, ::Dynamic v){
            	HX_STACK_FRAME("thx.OrderedMapImpl","setValue",0x1be88804,"thx.OrderedMapImpl.setValue","thx/OrderedMap.hx",128,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
HXLINE( 129)		this->set(k,v);
HXLINE( 130)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(OrderedMapImpl_obj,setValue,return )

void OrderedMapImpl_obj::insert(Int index, ::Dynamic k, ::Dynamic v){
            	HX_STACK_FRAME("thx.OrderedMapImpl","insert",0x8e90638e,"thx.OrderedMapImpl.insert","thx/OrderedMap.hx",133,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
HXLINE( 134)		this->remove(k);
HXLINE( 135)		this->arr->insert(index,k);
HXLINE( 136)		::haxe::IMap_obj::set(this->map,k,v);
HXLINE( 137)		this->length++;
            	}


HX_DEFINE_DYNAMIC_FUNC3(OrderedMapImpl_obj,insert,(void))

Bool OrderedMapImpl_obj::exists( ::Dynamic k){
            	HX_STACK_FRAME("thx.OrderedMapImpl","exists",0xb0933e31,"thx.OrderedMapImpl.exists","thx/OrderedMap.hx",141,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE( 141)		return ::haxe::IMap_obj::exists(this->map,k);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,exists,return )

Bool OrderedMapImpl_obj::remove( ::Dynamic k){
            	HX_STACK_FRAME("thx.OrderedMapImpl","remove",0xf53bbc99,"thx.OrderedMapImpl.remove","thx/OrderedMap.hx",143,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE( 144)		Bool _hx_tmp = !(::haxe::IMap_obj::exists(this->map,k));
HXDLIN( 144)		if (_hx_tmp) {
HXLINE( 144)			return false;
            		}
HXLINE( 145)		::haxe::IMap_obj::remove(this->map,k);
HXLINE( 146)		this->arr->remove(k);
HXLINE( 147)		this->length--;
HXLINE( 148)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,remove,return )

Bool OrderedMapImpl_obj::removeAt(Int index){
            	HX_STACK_FRAME("thx.OrderedMapImpl","removeAt",0x89170dec,"thx.OrderedMapImpl.removeAt","thx/OrderedMap.hx",151,0x84082bc4)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(index,"index")
HXLINE( 152)		HX_VARI(  ::Dynamic,key) = this->arr->__get(index);
HXLINE( 153)		if (hx::IsNull( key )) {
HXLINE( 154)			return false;
            		}
HXLINE( 155)		::haxe::IMap_obj::remove(this->map,key);
HXLINE( 156)		this->arr->remove(key);
HXLINE( 157)		this->length--;
HXLINE( 158)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMapImpl_obj,removeAt,return )

 ::Dynamic OrderedMapImpl_obj::keys(){
            	HX_STACK_FRAME("thx.OrderedMapImpl","keys",0xc7cbd309,"thx.OrderedMapImpl.keys","thx/OrderedMap.hx",162,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 162)		return this->arr->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,keys,return )

 ::Dynamic OrderedMapImpl_obj::iterator(){
            	HX_STACK_FRAME("thx.OrderedMapImpl","iterator",0x6f95e983,"thx.OrderedMapImpl.iterator","thx/OrderedMap.hx",165,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 165)		return this->toArray()->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,iterator,return )

::Array< ::Dynamic> OrderedMapImpl_obj::tuples(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::thx::OrderedMapImpl,_gthis) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic key){
            			HX_STACK_FRAME("thx.OrderedMapImpl","tuples",0xfa550bc0,"thx.OrderedMapImpl.tuples","thx/OrderedMap.hx",169,0x84082bc4)
            			HX_STACK_ARG(key,"key")
HXLINE( 169)			HX_VARI(  ::Dynamic,_1) = ::haxe::IMap_obj::get(_gthis->map,key);
HXDLIN( 169)			return  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("_0",f1,52,00,00),key)
            				->setFixed(1,HX_("_1",f2,52,00,00),_1));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.OrderedMapImpl","tuples",0xfa550bc0,"thx.OrderedMapImpl.tuples","thx/OrderedMap.hx",167,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 167)		HX_VARI(  ::thx::OrderedMapImpl,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 168)		return this->arr->map( ::Dynamic(new _hx_Closure_0(_gthis)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,tuples,return )

::String OrderedMapImpl_obj::toString(){
            	HX_STACK_FRAME("thx.OrderedMapImpl","toString",0x146a7041,"thx.OrderedMapImpl.toString","thx/OrderedMap.hx",171,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 172)		HX_VARI( ::String,s) = HX_("",00,00,00,00);
HXLINE( 173)		s = HX_("[",5b,00,00,00);
HXLINE( 174)		HX_VARI(  ::Dynamic,it) = this->keys();
HXLINE( 175)		while(true){
HXLINE( 175)			Bool _hx_tmp = !(( (Bool)( ::Dynamic(it->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 175)			if (_hx_tmp) {
HXLINE( 175)				goto _hx_goto_2;
            			}
HXDLIN( 175)			HX_VARI(  ::Dynamic,k) =  ::Dynamic(it->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 176)			::String _hx_tmp1 = ::Std_obj::string(k);
HXDLIN( 176)			hx::AddEq(s,_hx_tmp1);
HXLINE( 177)			hx::AddEq(s,HX_(" => ",7f,53,55,15));
HXLINE( 178)			 ::Dynamic _hx_tmp2 = ::haxe::IMap_obj::get(this->map,k);
HXDLIN( 178)			::String _hx_tmp3 = ::Std_obj::string(_hx_tmp2);
HXDLIN( 178)			hx::AddEq(s,_hx_tmp3);
HXLINE( 179)			Bool _hx_tmp4 = ( (Bool)( ::Dynamic(it->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) );
HXDLIN( 179)			if (_hx_tmp4) {
HXLINE( 180)				hx::AddEq(s,HX_(", ",74,26,00,00));
            			}
            		}
            		_hx_goto_2:;
HXLINE( 182)		hx::AddEq(s,HX_("]",5d,00,00,00));
HXLINE( 183)		return s;
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,toString,return )

::cpp::VirtualArray OrderedMapImpl_obj::toArray(){
            	HX_STACK_FRAME("thx.OrderedMapImpl","toArray",0x9e1ce429,"thx.OrderedMapImpl.toArray","thx/OrderedMap.hx",186,0x84082bc4)
            	HX_STACK_THIS(this)
HXLINE( 187)		HX_VARI( ::cpp::VirtualArray,values) = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 188)		{
HXLINE( 188)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 188)			HX_VARI( ::cpp::VirtualArray,_g1) = this->arr;
HXDLIN( 188)			while((_g < _g1->get_length())){
HXLINE( 188)				HX_VARI(  ::Dynamic,k) = _g1->__get(_g);
HXDLIN( 188)				++_g;
HXLINE( 189)				 ::Dynamic _hx_tmp = ::haxe::IMap_obj::get(this->map,k);
HXDLIN( 189)				values->push(_hx_tmp);
            			}
            		}
HXLINE( 190)		return values;
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMapImpl_obj,toArray,return )


OrderedMapImpl_obj::OrderedMapImpl_obj()
{
}

void OrderedMapImpl_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(OrderedMapImpl);
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(arr,"arr");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void OrderedMapImpl_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(arr,"arr");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val OrderedMapImpl_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map); }
		if (HX_FIELD_EQ(inName,"arr") ) { return hx::Val( arr); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return hx::Val( keys_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"keyAt") ) { return hx::Val( keyAt_dyn()); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn()); }
		if (HX_FIELD_EQ(inName,"exists") ) { return hx::Val( exists_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		if (HX_FIELD_EQ(inName,"tuples") ) { return hx::Val( tuples_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toArray") ) { return hx::Val( toArray_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"keyIndex") ) { return hx::Val( keyIndex_dyn()); }
		if (HX_FIELD_EQ(inName,"setValue") ) { return hx::Val( setValue_dyn()); }
		if (HX_FIELD_EQ(inName,"removeAt") ) { return hx::Val( removeAt_dyn()); }
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"valueIndex") ) { return hx::Val( valueIndex_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val OrderedMapImpl_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"arr") ) { arr=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void OrderedMapImpl_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"));
	outFields->push(HX_HCSTRING("arr","\x61","\xfe","\x49","\x00"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo OrderedMapImpl_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::IMap*/ ,(int)offsetof(OrderedMapImpl_obj,map),HX_HCSTRING("map","\x9c","\x0a","\x53","\x00")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(OrderedMapImpl_obj,arr),HX_HCSTRING("arr","\x61","\xfe","\x49","\x00")},
	{hx::fsInt,(int)offsetof(OrderedMapImpl_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *OrderedMapImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String OrderedMapImpl_obj_sMemberFields[] = {
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("arr","\x61","\xfe","\x49","\x00"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("keyAt","\x72","\xa8","\xfe","\xde"),
	HX_HCSTRING("keyIndex","\xf3","\x40","\x7e","\x02"),
	HX_HCSTRING("valueIndex","\xe1","\xf1","\xb0","\x65"),
	HX_HCSTRING("at","\xf3","\x54","\x00","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("setValue","\x6f","\xe8","\xec","\x3f"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("removeAt","\x57","\x6e","\x1b","\xad"),
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("tuples","\x6b","\xeb","\xa1","\x09"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	::String(null()) };

static void OrderedMapImpl_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(OrderedMapImpl_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void OrderedMapImpl_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(OrderedMapImpl_obj::__mClass,"__mClass");
};

#endif

hx::Class OrderedMapImpl_obj::__mClass;

void OrderedMapImpl_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.OrderedMapImpl","\x79","\x07","\xff","\x7f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = OrderedMapImpl_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(OrderedMapImpl_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< OrderedMapImpl_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = OrderedMapImpl_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OrderedMapImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OrderedMapImpl_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
