// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_bigint_BigIntImpl
#define INCLUDED_thx_bigint_BigIntImpl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,bigint,BigIntImpl)

namespace thx{
namespace bigint{


class HXCPP_CLASS_ATTRIBUTES BigIntImpl_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		::Dynamic (hx::Object :: *_hx_abs)(); 
		static inline ::Dynamic abs( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_abs)();
		}
		::Dynamic (hx::Object :: *_hx_add)(::Dynamic that); 
		static inline ::Dynamic add( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_add)(that);
		}
		::Dynamic (hx::Object :: *_hx_subtract)(::Dynamic that); 
		static inline ::Dynamic subtract( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_subtract)(that);
		}
		::Dynamic (hx::Object :: *_hx_divide)(::Dynamic that); 
		static inline ::Dynamic divide( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_divide)(that);
		}
		::Dynamic (hx::Object :: *_hx_multiply)(::Dynamic that); 
		static inline ::Dynamic multiply( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_multiply)(that);
		}
		::Dynamic (hx::Object :: *_hx_modulo)(::Dynamic that); 
		static inline ::Dynamic modulo( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_modulo)(that);
		}
		::Dynamic (hx::Object :: *_hx_random)(); 
		static inline ::Dynamic random( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_random)();
		}
		::Dynamic (hx::Object :: *_hx_negate)(); 
		static inline ::Dynamic negate( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_negate)();
		}
		::Dynamic (hx::Object :: *_hx_next)(); 
		static inline ::Dynamic next( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_next)();
		}
		::Dynamic (hx::Object :: *_hx_prev)(); 
		static inline ::Dynamic prev( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_prev)();
		}
		::Dynamic (hx::Object :: *_hx_pow)(::Dynamic exp); 
		static inline ::Dynamic pow( ::Dynamic _hx_,::Dynamic exp) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_pow)(exp);
		}
		::Dynamic (hx::Object :: *_hx_shiftLeft)(Int value); 
		static inline ::Dynamic shiftLeft( ::Dynamic _hx_,Int value) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_shiftLeft)(value);
		}
		::Dynamic (hx::Object :: *_hx_shiftRight)(Int value); 
		static inline ::Dynamic shiftRight( ::Dynamic _hx_,Int value) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_shiftRight)(value);
		}
		::Dynamic (hx::Object :: *_hx_square)(); 
		static inline ::Dynamic square( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_square)();
		}
		Bool (hx::Object :: *_hx_isEven)(); 
		static inline Bool isEven( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_isEven)();
		}
		Bool (hx::Object :: *_hx_isOdd)(); 
		static inline Bool isOdd( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_isOdd)();
		}
		Bool (hx::Object :: *_hx_isUnit)(); 
		static inline Bool isUnit( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_isUnit)();
		}
		Bool (hx::Object :: *_hx_isZero)(); 
		static inline Bool isZero( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_isZero)();
		}
		Int (hx::Object :: *_hx_compareTo)(::Dynamic that); 
		static inline Int compareTo( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_compareTo)(that);
		}
		Int (hx::Object :: *_hx_compareToAbs)(::Dynamic that); 
		static inline Int compareToAbs( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_compareToAbs)(that);
		}
		::Dynamic (hx::Object :: *_hx__hx_not)(); 
		static inline ::Dynamic _hx_not( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx__hx_not)();
		}
		::Dynamic (hx::Object :: *_hx__hx_and)(::Dynamic that); 
		static inline ::Dynamic _hx_and( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx__hx_and)(that);
		}
		::Dynamic (hx::Object :: *_hx__hx_or)(::Dynamic that); 
		static inline ::Dynamic _hx_or( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx__hx_or)(that);
		}
		::Dynamic (hx::Object :: *_hx__hx_xor)(::Dynamic that); 
		static inline ::Dynamic _hx_xor( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx__hx_xor)(that);
		}
		Float (hx::Object :: *_hx_toFloat)(); 
		static inline Float toFloat( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_toFloat)();
		}
		Int (hx::Object :: *_hx_toInt)(); 
		static inline Int toInt( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_toInt)();
		}
		::String (hx::Object :: *_hx_toString)(); 
		static inline ::String toString( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_toString)();
		}
		::String (hx::Object :: *_hx_toStringWithBase)(Int base); 
		static inline ::String toStringWithBase( ::Dynamic _hx_,Int base) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_toStringWithBase)(base);
		}
		 ::Dynamic (hx::Object :: *_hx_divMod)(::Dynamic that); 
		static inline  ::Dynamic divMod( ::Dynamic _hx_,::Dynamic that) {
			return (_hx_.mPtr->*( static_cast< ::thx::bigint::BigIntImpl_obj *>(_hx_.mPtr->_hx_getInterface(0xbdacfd62)))->_hx_divMod)(that);
		}
};

} // end namespace thx
} // end namespace bigint

#endif /* INCLUDED_thx_bigint_BigIntImpl */ 
