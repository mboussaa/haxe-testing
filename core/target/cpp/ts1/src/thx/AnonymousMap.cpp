// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_thx_AnonymousMap
#include <thx/AnonymousMap.h>
#endif
#ifndef INCLUDED_thx_Iterators
#include <thx/Iterators.h>
#endif
#ifndef INCLUDED_thx_Maps
#include <thx/Maps.h>
#endif

namespace thx{

void AnonymousMap_obj::__construct( ::Dynamic o){
            	HX_STACK_FRAME("thx.AnonymousMap","new",0xe56eb7eb,"thx.AnonymousMap.new","thx/AnonymousMap.hx",31,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE(  31)		this->o = o;
            	}

Dynamic AnonymousMap_obj::__CreateEmpty() { return new AnonymousMap_obj; }

hx::ObjectPtr< AnonymousMap_obj > AnonymousMap_obj::__new( ::Dynamic o)
{
	hx::ObjectPtr< AnonymousMap_obj > _hx_result = new AnonymousMap_obj();
	_hx_result->__construct(o);
	return _hx_result;
}

Dynamic AnonymousMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AnonymousMap_obj > _hx_result = new AnonymousMap_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

static ::haxe::IMap_obj _hx_thx_AnonymousMap__hx_haxe_IMap= {
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::thx::AnonymousMap_obj::get_dc94b8fa,
	( void (hx::Object::*)( ::Dynamic, ::Dynamic))&::thx::AnonymousMap_obj::set_41d0cb46,
	( Bool (hx::Object::*)( ::Dynamic))&::thx::AnonymousMap_obj::exists_9314b24f,
	( Bool (hx::Object::*)( ::Dynamic))&::thx::AnonymousMap_obj::remove_9314b24f,
	(  ::Dynamic (hx::Object::*)())&::thx::AnonymousMap_obj::keys,
	(  ::Dynamic (hx::Object::*)())&::thx::AnonymousMap_obj::iterator,
};

Bool AnonymousMap_obj::remove_9314b24f( ::Dynamic k) {
			return remove(k);
}

Bool AnonymousMap_obj::exists_9314b24f( ::Dynamic k) {
			return exists(k);
}

void AnonymousMap_obj::set_41d0cb46( ::Dynamic k, ::Dynamic v) {
			set(k,v);
}

 ::Dynamic AnonymousMap_obj::get_dc94b8fa( ::Dynamic k) {
			return get(k);
}
void *AnonymousMap_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x09c2bd39: return &_hx_thx_AnonymousMap__hx_haxe_IMap;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

 ::Dynamic AnonymousMap_obj::get(::String k){
            	HX_STACK_FRAME("thx.AnonymousMap","get",0xe5696821,"thx.AnonymousMap.get","thx/AnonymousMap.hx",37,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE(  37)		return ::Reflect_obj::field(this->o,k);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AnonymousMap_obj,get,return )

::hx::EnumBase AnonymousMap_obj::getOption(::String k){
            	HX_STACK_FRAME("thx.AnonymousMap","getOption",0xcebafe76,"thx.AnonymousMap.getOption","thx/AnonymousMap.hx",43,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE(  43)		HX_VARI(  ::Dynamic,value) = this->get(k);
HXDLIN(  43)		if (hx::IsNull( value )) {
HXLINE(  43)			return ::haxe::ds::Option_obj::None_dyn();
            		}
            		else {
HXLINE(  43)			return ::haxe::ds::Option_obj::Some(value);
            		}
HXDLIN(  43)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(AnonymousMap_obj,getOption,return )

 ::Dynamic AnonymousMap_obj::getObject(){
            	HX_STACK_FRAME("thx.AnonymousMap","getObject",0xb87fa9c0,"thx.AnonymousMap.getObject","thx/AnonymousMap.hx",49,0xaef61704)
            	HX_STACK_THIS(this)
HXLINE(  49)		return this->o;
            	}


HX_DEFINE_DYNAMIC_FUNC0(AnonymousMap_obj,getObject,return )

void AnonymousMap_obj::set(::String k, ::Dynamic v){
            	HX_STACK_FRAME("thx.AnonymousMap","set",0xe572832d,"thx.AnonymousMap.set","thx/AnonymousMap.hx",55,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
HXLINE(  55)		::Reflect_obj::setField(this->o,k,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(AnonymousMap_obj,set,(void))

Bool AnonymousMap_obj::exists(::String k){
            	HX_STACK_FRAME("thx.AnonymousMap","exists",0x93303f31,"thx.AnonymousMap.exists","thx/AnonymousMap.hx",61,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE(  61)		return ::Reflect_obj::hasField(this->o,k);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AnonymousMap_obj,exists,return )

Bool AnonymousMap_obj::remove(::String k){
            	HX_STACK_FRAME("thx.AnonymousMap","remove",0xd7d8bd99,"thx.AnonymousMap.remove","thx/AnonymousMap.hx",68,0xaef61704)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(k,"k")
HXLINE(  68)		return ::Reflect_obj::deleteField(this->o,k);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AnonymousMap_obj,remove,return )

 ::Dynamic AnonymousMap_obj::keys(){
            	HX_STACK_FRAME("thx.AnonymousMap","keys",0xd9769409,"thx.AnonymousMap.keys","thx/AnonymousMap.hx",74,0xaef61704)
            	HX_STACK_THIS(this)
HXLINE(  74)		return ::Reflect_obj::fields(this->o)->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(AnonymousMap_obj,keys,return )

 ::Dynamic AnonymousMap_obj::iterator(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,o) HXARGC(1)
            		 ::Dynamic _hx_run(::String a1){
            			HX_STACK_FRAME("thx.AnonymousMap","iterator",0xf4352a83,"thx.AnonymousMap.iterator","thx/AnonymousMap.hx",80,0xaef61704)
            			HX_STACK_ARG(a1,"a1")
HXLINE(  80)			return ::Reflect_obj::field(o,a1);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.AnonymousMap","iterator",0xf4352a83,"thx.AnonymousMap.iterator","thx/AnonymousMap.hx",80,0xaef61704)
            	HX_STACK_THIS(this)
HXLINE(  80)		 ::Dynamic _hx_tmp = this->keys();
HXDLIN(  80)		HX_VARI(  ::Dynamic,o) = this->o;
HXDLIN(  80)		 ::Dynamic _hx_tmp1 =  ::Dynamic(new _hx_Closure_0(o));
HXDLIN(  80)		return ::thx::Iterators_obj::fmap(_hx_tmp,_hx_tmp1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(AnonymousMap_obj,iterator,return )

::String AnonymousMap_obj::toString(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::String _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.AnonymousMap","toString",0x9909b141,"thx.AnonymousMap.toString","thx/AnonymousMap.hx",86,0xaef61704)
            			HX_STACK_ARG(t,"t")
HXLINE(  86)			::String _hx_tmp1 = (( (::String)(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)) ) + HX_(" => ",7f,53,55,15));
HXDLIN(  86)			::String _hx_tmp2 = ::Std_obj::string( ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
HXDLIN(  86)			return (_hx_tmp1 + _hx_tmp2);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.AnonymousMap","toString",0x9909b141,"thx.AnonymousMap.toString","thx/AnonymousMap.hx",86,0xaef61704)
            	HX_STACK_THIS(this)
HXLINE(  86)		::String _hx_tmp = ::thx::Maps_obj::tuples(hx::ObjectPtr<OBJ_>(this))->map( ::Dynamic(new _hx_Closure_0()))->join(HX_(", ",74,26,00,00));
HXDLIN(  86)		return ((HX_("{ ",45,6b,00,00) + _hx_tmp) + HX_(" }",5d,1c,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(AnonymousMap_obj,toString,return )


AnonymousMap_obj::AnonymousMap_obj()
{
}

void AnonymousMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AnonymousMap);
	HX_MARK_MEMBER_NAME(o,"o");
	HX_MARK_END_CLASS();
}

void AnonymousMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(o,"o");
}

hx::Val AnonymousMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"o") ) { return hx::Val( o); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return hx::Val( keys_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { return hx::Val( exists_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getOption") ) { return hx::Val( getOption_dyn()); }
		if (HX_FIELD_EQ(inName,"getObject") ) { return hx::Val( getObject_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val AnonymousMap_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AnonymousMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("o","\x6f","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo AnonymousMap_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(AnonymousMap_obj,o),HX_HCSTRING("o","\x6f","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *AnonymousMap_obj_sStaticStorageInfo = 0;
#endif

static ::String AnonymousMap_obj_sMemberFields[] = {
	HX_HCSTRING("o","\x6f","\x00","\x00","\x00"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("getOption","\xab","\x5c","\xd1","\xa7"),
	HX_HCSTRING("getObject","\xf5","\x07","\x96","\x91"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void AnonymousMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AnonymousMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AnonymousMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AnonymousMap_obj::__mClass,"__mClass");
};

#endif

hx::Class AnonymousMap_obj::__mClass;

void AnonymousMap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.AnonymousMap","\x79","\xe6","\x4b","\x70");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AnonymousMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(AnonymousMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< AnonymousMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AnonymousMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AnonymousMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AnonymousMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
