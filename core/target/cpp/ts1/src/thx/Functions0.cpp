// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_Functions
#include <thx/Functions.h>
#endif
#ifndef INCLUDED_thx_Functions0
#include <thx/Functions0.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif

namespace thx{

void Functions0_obj::__construct() { }

Dynamic Functions0_obj::__CreateEmpty() { return new Functions0_obj; }

hx::ObjectPtr< Functions0_obj > Functions0_obj::__new()
{
	hx::ObjectPtr< Functions0_obj > _hx_result = new Functions0_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Functions0_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Functions0_obj > _hx_result = new Functions0_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Functions0_obj::after( ::Dynamic callback,Int n){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0,::Array< Int >,n1, ::Dynamic,callback) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("thx.Functions0","after",0x71616dad,"thx.Functions0.after","thx/Functions.hx",17,0xe7fcd70e)
HXLINE(  17)			Bool _hx_tmp = (--n1[(int)0] == (int)0);
HXDLIN(  17)			if (_hx_tmp) {
HXLINE(  18)				callback();
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACK_FRAME("thx.Functions0","after",0x71616dad,"thx.Functions0.after","thx/Functions.hx",15,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(n,"n")
HXLINE(  15)		HX_VARI_NAME( ::Array< Int >,n1,"n") = ::Array_obj< Int >::__new(1)->init(0,n);
HXLINE(  16)		return  ::Dynamic(new _hx_Closure_0(n1,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions0_obj,after,return )

 ::Dynamic Functions0_obj::join( ::Dynamic fa, ::Dynamic fb){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,fb, ::Dynamic,fa) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("thx.Functions0","join",0xfb010979,"thx.Functions0.join","thx/Functions.hx",23,0xe7fcd70e)
HXLINE(  24)			fa();
HXLINE(  25)			fb();
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACK_FRAME("thx.Functions0","join",0xfb010979,"thx.Functions0.join","thx/Functions.hx",23,0xe7fcd70e)
            	HX_STACK_ARG(fa,"fa")
            	HX_STACK_ARG(fb,"fb")
HXLINE(  23)		return  ::Dynamic(new _hx_Closure_0(fb,fa));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions0_obj,join,return )

 ::Dynamic Functions0_obj::once( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,f1) HXARGC(0)
            		void _hx_run(){
            			HX_STACK_FRAME("thx.Functions0","once",0xfe4e5310,"thx.Functions0.once","thx/Functions.hx",33,0xe7fcd70e)
HXLINE(  34)			HX_VARI(  ::Dynamic,t) = f1->__get((int)0);
HXLINE(  35)			f1[(int)0] = ::thx::Functions_obj::noop_dyn();
HXLINE(  36)			t();
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACK_FRAME("thx.Functions0","once",0xfe4e5310,"thx.Functions0.once","thx/Functions.hx",32,0xe7fcd70e)
            	HX_STACK_ARG(f,"f")
HXLINE(  32)		HX_VARI_NAME( ::Array< ::Dynamic>,f1,"f") = ::Array_obj< ::Dynamic>::__new(1)->init(0,f);
HXLINE(  33)		return  ::Dynamic(new _hx_Closure_0(f1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions0_obj,once,return )

 ::Dynamic Functions0_obj::negate( ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(0)
            		Bool _hx_run(){
            			HX_STACK_FRAME("thx.Functions0","negate",0x5a80d911,"thx.Functions0.negate","thx/Functions.hx",44,0xe7fcd70e)
HXLINE(  44)			return !(( (Bool)(callback()) ));
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACK_FRAME("thx.Functions0","negate",0x5a80d911,"thx.Functions0.negate","thx/Functions.hx",43,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
HXLINE(  43)		return  ::Dynamic(new _hx_Closure_0(callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions0_obj,negate,return )

 ::Dynamic Functions0_obj::times(Int n, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,Int,n, ::Dynamic,callback) HXARGC(0)
            		::cpp::VirtualArray _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            			 ::Dynamic _hx_run(Int _){
            				HX_STACK_FRAME("thx.Functions0","times",0x63f4c757,"thx.Functions0.times","thx/Functions.hx",51,0xe7fcd70e)
            				HX_STACK_ARG(_,"_")
HXLINE(  51)				return callback();
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Functions0","times",0x63f4c757,"thx.Functions0.times","thx/Functions.hx",51,0xe7fcd70e)
HXLINE(  51)			return ::thx::Ints_obj::range(n,null(),null())->map( ::Dynamic(new _hx_Closure_0(callback)));
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACK_FRAME("thx.Functions0","times",0x63f4c757,"thx.Functions0.times","thx/Functions.hx",50,0xe7fcd70e)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(callback,"callback")
HXLINE(  50)		return  ::Dynamic(new _hx_Closure_1(n,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions0_obj,times,return )

 ::Dynamic Functions0_obj::timesi(Int n, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,Int,n, ::Dynamic,callback) HXARGC(0)
            		::cpp::VirtualArray _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            			 ::Dynamic _hx_run(Int i){
            				HX_STACK_FRAME("thx.Functions0","timesi",0x1239a532,"thx.Functions0.timesi","thx/Functions.hx",60,0xe7fcd70e)
            				HX_STACK_ARG(i,"i")
HXLINE(  60)				return callback(i);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Functions0","timesi",0x1239a532,"thx.Functions0.timesi","thx/Functions.hx",60,0xe7fcd70e)
HXLINE(  60)			return ::thx::Ints_obj::range(n,null(),null())->map( ::Dynamic(new _hx_Closure_0(callback)));
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACK_FRAME("thx.Functions0","timesi",0x1239a532,"thx.Functions0.timesi","thx/Functions.hx",59,0xe7fcd70e)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(callback,"callback")
HXLINE(  59)		return  ::Dynamic(new _hx_Closure_1(n,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions0_obj,timesi,return )


Functions0_obj::Functions0_obj()
{
}

bool Functions0_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"once") ) { outValue = once_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"after") ) { outValue = after_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"times") ) { outValue = times_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"timesi") ) { outValue = timesi_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Functions0_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Functions0_obj_sStaticStorageInfo = 0;
#endif

static void Functions0_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Functions0_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Functions0_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Functions0_obj::__mClass,"__mClass");
};

#endif

hx::Class Functions0_obj::__mClass;

static ::String Functions0_obj_sStaticFields[] = {
	HX_HCSTRING("after","\x1c","\x66","\xa2","\x1d"),
	HX_HCSTRING("join","\xea","\x33","\x65","\x46"),
	HX_HCSTRING("once","\x81","\x7d","\xb2","\x49"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("times","\xc6","\xbf","\x35","\x10"),
	HX_HCSTRING("timesi","\xe3","\x0d","\xd2","\x1e"),
	::String(null())
};

void Functions0_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Functions0","\x3f","\x75","\xc6","\x4b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Functions0_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Functions0_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Functions0_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Functions0_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Functions0_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Functions0_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Functions0_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
