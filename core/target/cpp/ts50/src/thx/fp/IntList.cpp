// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif
#ifndef INCLUDED_thx_fp_IntList
#include <thx/fp/IntList.h>
#endif
#ifndef INCLUDED_thx_fp_ListImpl
#include <thx/fp/ListImpl.h>
#endif
#ifndef INCLUDED_thx_fp__List_List_Impl_
#include <thx/fp/_List/List_Impl_.h>
#endif

namespace thx{
namespace fp{

void IntList_obj::__construct() { }

Dynamic IntList_obj::__CreateEmpty() { return new IntList_obj; }

hx::ObjectPtr< IntList_obj > IntList_obj::__new()
{
	hx::ObjectPtr< IntList_obj > _hx_result = new IntList_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic IntList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntList_obj > _hx_result = new IntList_obj();
	_hx_result->__construct();
	return _hx_result;
}

::String IntList_obj::toString(::hx::EnumBase l){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::String _hx_run(Int a1){
            			HX_STACK_FRAME("thx.fp.IntList","toString",0xf582ab27,"thx.fp.IntList.toString","thx/fp/Lists.hx",18,0xab47d703)
            			HX_STACK_ARG(a1,"a1")
HXLINE(  18)			return ::thx::Ints_obj::toString(a1,(int)10);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.fp.IntList","toString",0xf582ab27,"thx.fp.IntList.toString","thx/fp/Lists.hx",18,0xab47d703)
            	HX_STACK_ARG(l,"l")
HXLINE(  18)		return ::thx::fp::_List::List_Impl__obj::toStringWithShow(l, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntList_obj,toString,return )


IntList_obj::IntList_obj()
{
}

bool IntList_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *IntList_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *IntList_obj_sStaticStorageInfo = 0;
#endif

static void IntList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntList_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntList_obj::__mClass,"__mClass");
};

#endif

hx::Class IntList_obj::__mClass;

static ::String IntList_obj_sStaticFields[] = {
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void IntList_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp.IntList","\x53","\xc1","\xb1","\x88");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IntList_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(IntList_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< IntList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace fp
