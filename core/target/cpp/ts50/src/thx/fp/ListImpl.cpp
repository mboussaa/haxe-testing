// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_fp_ListImpl
#include <thx/fp/ListImpl.h>
#endif
namespace thx{
namespace fp{

::thx::fp::ListImpl ListImpl_obj::Cons( ::Dynamic x,::hx::EnumBase xs)
{
	return hx::CreateEnum< ListImpl_obj >(HX_("Cons",11,e6,9d,2c),1,2)->_hx_init(0,x)->_hx_init(1,xs);
}

::thx::fp::ListImpl ListImpl_obj::Nil;

bool ListImpl_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Cons",11,e6,9d,2c)) { outValue = ListImpl_obj::Cons_dyn(); return true; }
	if (inName==HX_("Nil",b1,8b,3b,00)) { outValue = ListImpl_obj::Nil; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ListImpl_obj)

int ListImpl_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Cons",11,e6,9d,2c)) return 1;
	if (inName==HX_("Nil",b1,8b,3b,00)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(ListImpl_obj,Cons,return)

int ListImpl_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Cons",11,e6,9d,2c)) return 2;
	if (inName==HX_("Nil",b1,8b,3b,00)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val ListImpl_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Cons",11,e6,9d,2c)) return Cons_dyn();
	if (inName==HX_("Nil",b1,8b,3b,00)) return Nil;
	return super::__Field(inName,inCallProp);
}

static ::String ListImpl_obj_sStaticFields[] = {
	HX_("Nil",b1,8b,3b,00),
	HX_("Cons",11,e6,9d,2c),
	::String(null())
};

static void ListImpl_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ListImpl_obj::Nil,"Nil");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ListImpl_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ListImpl_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ListImpl_obj::Nil,"Nil");
};
#endif

hx::Class ListImpl_obj::__mClass;

Dynamic __Create_ListImpl_obj() { return new ListImpl_obj; }

void ListImpl_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.fp.ListImpl","\x38","\xdf","\x03","\x7b"), hx::TCanCast< ListImpl_obj >,ListImpl_obj_sStaticFields,0,
	&__Create_ListImpl_obj, &__Create,
	&super::__SGetClass(), &CreateListImpl_obj, ListImpl_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , ListImpl_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ListImpl_obj::__GetStatic;
}

void ListImpl_obj::__boot()
{
Nil = hx::CreateEnum< ListImpl_obj >(HX_HCSTRING("Nil","\xb1","\x8b","\x3b","\x00"),0,0);
}


} // end namespace thx
} // end namespace fp
