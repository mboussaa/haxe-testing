// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_OrderingImpl
#include <thx/OrderingImpl.h>
#endif
#ifndef INCLUDED_thx__Ord_Ordering_Impl_
#include <thx/_Ord/Ordering_Impl_.h>
#endif
#ifndef INCLUDED_thx_fp_ComparableSet
#include <thx/fp/ComparableSet.h>
#endif
#ifndef INCLUDED_thx_fp_SetImpl
#include <thx/fp/SetImpl.h>
#endif
#ifndef INCLUDED_thx_fp__Set_Set_Impl_
#include <thx/fp/_Set/Set_Impl_.h>
#endif

namespace thx{
namespace fp{

void ComparableSet_obj::__construct() { }

Dynamic ComparableSet_obj::__CreateEmpty() { return new ComparableSet_obj; }

hx::ObjectPtr< ComparableSet_obj > ComparableSet_obj::__new()
{
	hx::ObjectPtr< ComparableSet_obj > _hx_result = new ComparableSet_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic ComparableSet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ComparableSet_obj > _hx_result = new ComparableSet_obj();
	_hx_result->__construct();
	return _hx_result;
}

Bool ComparableSet_obj::exists(::hx::EnumBase set, ::Dynamic value){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::hx::EnumBase _hx_run( ::Dynamic a, ::Dynamic b){
            			HX_STACK_FRAME("thx.fp.ComparableSet","exists",0x2acdd6fc,"thx.fp.ComparableSet.exists","thx/fp/Sets.hx",39,0x62fd8693)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE(  39)			Int _hx_tmp = ( (Int)( ::Dynamic(a->__Field(HX_("compareTo",80,95,5c,02),hx::paccDynamic))(b)) );
HXDLIN(  39)			return ::thx::_Ord::Ordering_Impl__obj::fromInt(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp.ComparableSet","exists",0x2acdd6fc,"thx.fp.ComparableSet.exists","thx/fp/Sets.hx",39,0x62fd8693)
            	HX_STACK_ARG(set,"set")
            	HX_STACK_ARG(value,"value")
HXLINE(  39)		return ::thx::fp::_Set::Set_Impl__obj::member(set,value, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ComparableSet_obj,exists,return )

::hx::EnumBase ComparableSet_obj::set(::hx::EnumBase set, ::Dynamic value){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::hx::EnumBase _hx_run( ::Dynamic a, ::Dynamic b){
            			HX_STACK_FRAME("thx.fp.ComparableSet","set",0x1b98ee82,"thx.fp.ComparableSet.set","thx/fp/Sets.hx",42,0x62fd8693)
            			HX_STACK_ARG(a,"a")
            			HX_STACK_ARG(b,"b")
HXLINE(  42)			Int _hx_tmp = ( (Int)( ::Dynamic(a->__Field(HX_("compareTo",80,95,5c,02),hx::paccDynamic))(b)) );
HXDLIN(  42)			return ::thx::_Ord::Ordering_Impl__obj::fromInt(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp.ComparableSet","set",0x1b98ee82,"thx.fp.ComparableSet.set","thx/fp/Sets.hx",42,0x62fd8693)
            	HX_STACK_ARG(set,"set")
            	HX_STACK_ARG(value,"value")
HXLINE(  42)		return ::thx::fp::_Set::Set_Impl__obj::insert(set,value, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ComparableSet_obj,set,return )


ComparableSet_obj::ComparableSet_obj()
{
}

bool ComparableSet_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ComparableSet_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ComparableSet_obj_sStaticStorageInfo = 0;
#endif

static void ComparableSet_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ComparableSet_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ComparableSet_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ComparableSet_obj::__mClass,"__mClass");
};

#endif

hx::Class ComparableSet_obj::__mClass;

static ::String ComparableSet_obj_sStaticFields[] = {
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	::String(null())
};

void ComparableSet_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp.ComparableSet","\x4e","\xc3","\x7a","\xab");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ComparableSet_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ComparableSet_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ComparableSet_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ComparableSet_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ComparableSet_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ComparableSet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ComparableSet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace fp
