// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_fp_SetImpl
#define INCLUDED_thx_fp_SetImpl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,fp,SetImpl)
namespace thx{
namespace fp{


class SetImpl_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef SetImpl_obj OBJ_;

	public:
		SetImpl_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.fp.SetImpl","\x08","\x88","\x59","\x8d"); }
		::String __ToString() const { return HX_HCSTRING("SetImpl.","\x6c","\xaa","\x5a","\xa5") + _hx_tag; }

		static ::thx::fp::SetImpl Bin(Int size, ::Dynamic x,::hx::EnumBase l,::hx::EnumBase r);
		static ::Dynamic Bin_dyn();
		static ::thx::fp::SetImpl Tip;
		static inline ::thx::fp::SetImpl Tip_dyn() { return Tip; }
};

} // end namespace thx
} // end namespace fp

#endif /* INCLUDED_thx_fp_SetImpl */ 
