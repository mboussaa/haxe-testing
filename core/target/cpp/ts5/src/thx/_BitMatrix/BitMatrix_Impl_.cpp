// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Arrays
#include <thx/Arrays.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif
#ifndef INCLUDED_thx__BitMatrix_BitMatrix_Impl_
#include <thx/_BitMatrix/BitMatrix_Impl_.h>
#endif
#ifndef INCLUDED_thx__BitSet_BitSet_Impl_
#include <thx/_BitSet/BitSet_Impl_.h>
#endif

namespace thx{
namespace _BitMatrix{

void BitMatrix_Impl__obj::__construct() { }

Dynamic BitMatrix_Impl__obj::__CreateEmpty() { return new BitMatrix_Impl__obj; }

hx::ObjectPtr< BitMatrix_Impl__obj > BitMatrix_Impl__obj::__new()
{
	hx::ObjectPtr< BitMatrix_Impl__obj > _hx_result = new BitMatrix_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic BitMatrix_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BitMatrix_Impl__obj > _hx_result = new BitMatrix_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::Array< ::Dynamic> BitMatrix_Impl__obj::_new( ::Dynamic __o_bitSetCount, ::Dynamic __o_length){
 ::Dynamic bitSetCount = __o_bitSetCount.Default(0);
 ::Dynamic length = __o_length.Default(0);
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","_new",0xffc65836,"thx._BitMatrix.BitMatrix_Impl_._new","thx/BitMatrix.hx",14,0x179ec45b)
            	HX_STACK_ARG(bitSetCount,"bitSetCount")
            	HX_STACK_ARG(length,"length")
HXLINE(  14)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::empty(bitSetCount,length);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,_new,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::empty( ::Dynamic __o_bitSetCount, ::Dynamic __o_length){
 ::Dynamic bitSetCount = __o_bitSetCount.Default(0);
 ::Dynamic length = __o_length.Default(0);
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","empty",0x418d7218,"thx._BitMatrix.BitMatrix_Impl_.empty","thx/BitMatrix.hx",17,0x179ec45b)
            	HX_STACK_ARG(bitSetCount,"bitSetCount")
            	HX_STACK_ARG(length,"length")
HXLINE(  18)		HX_VARI( ::Array< ::Dynamic>,bitMatrix) = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  19)		{
HXLINE(  19)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(  19)			HX_VARI( Int,_g) = bitSetCount;
HXDLIN(  19)			while((_g1 < _g)){
HXLINE(  19)				HX_VARI( Int,bitSetIndex) = _g1++;
HXLINE(  20)				HX_VARI_NAME( Int,length1,"length") = length;
HXDLIN(  20)				HX_VARI_NAME( ::Array< Int >,this1,"this") = ::Array_obj< Int >::__new(1)->init(0,length1);
HXDLIN(  20)				Int _hx_tmp = ::Std_obj::_hx_int(((Float)length1 / (Float)(int)32));
HXDLIN(  20)				::thx::Arrays_obj::resize(this1,((_hx_tmp + (int)1) + (int)1),(int)0);
HXDLIN(  20)				::thx::_BitMatrix::BitMatrix_Impl__obj::setBitSetAt(bitMatrix,bitSetIndex,this1);
            			}
            		}
HXLINE(  22)		return bitMatrix;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,empty,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::fromBitSets(::Array< ::Dynamic> bitSets){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","fromBitSets",0xcb33b77f,"thx._BitMatrix.BitMatrix_Impl_.fromBitSets","thx/BitMatrix.hx",25,0x179ec45b)
            	HX_STACK_ARG(bitSets,"bitSets")
HXLINE(  26)		HX_VARI( ::Array< ::Dynamic>,bitMatrix) = ::thx::_BitMatrix::BitMatrix_Impl__obj::_new(null(),null());
HXLINE(  27)		{
HXLINE(  27)			HX_VARI( Int,_g1) = (int)0;
HXDLIN(  27)			HX_VARI( Int,_g) = bitSets->length;
HXDLIN(  27)			while((_g1 < _g)){
HXLINE(  27)				HX_VARI( Int,bitSetIndex) = _g1++;
HXLINE(  28)				::thx::_BitMatrix::BitMatrix_Impl__obj::setBitSetAt(bitMatrix,bitSetIndex,bitSets->__get(bitSetIndex).StaticCast< ::Array< Int > >());
            			}
            		}
HXLINE(  30)		return bitMatrix;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,fromBitSets,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::fromBools(::Array< ::Dynamic> input){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		::Array< Int > _hx_run(::Array< Bool > _){
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(3)
            			::Array< Int > _hx_run(::Array< Int > acc,Bool value,Int i){
            				HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","fromBools",0xa54e644a,"thx._BitMatrix.BitMatrix_Impl_.fromBools","thx/BitMatrix.hx",35,0x179ec45b)
            				HX_STACK_ARG(acc,"acc")
            				HX_STACK_ARG(value,"value")
            				HX_STACK_ARG(i,"i")
HXLINE(  35)				::thx::_BitSet::BitSet_Impl__obj::setAt(acc,i,value);
HXDLIN(  35)				return acc;
            			}
            			HX_END_LOCAL_FUNC3(return)

            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","fromBools",0xa54e644a,"thx._BitMatrix.BitMatrix_Impl_.fromBools","thx/macro/lambda/SlambdaMacro.hx",86,0x8ba75432)
            			HX_STACK_ARG(_,"_")
HXLINE(  35)			HX_VARI_NAME( ::Array< Int >,this1,"this") = ::Array_obj< Int >::__new(1)->init(0,(int)0);
HXDLIN(  35)			::thx::Arrays_obj::resize(this1,(int)2,(int)0);
HXLINE(  86)			return ( (::Array< Int >)(::thx::Arrays_obj::reducei(_, ::Dynamic(new _hx_Closure_0()),this1)) );
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","fromBools",0xa54e644a,"thx._BitMatrix.BitMatrix_Impl_.fromBools","thx/BitMatrix.hx",34,0x179ec45b)
            	HX_STACK_ARG(input,"input")
HXLINE(  35)		HX_VARI( ::Array< ::Dynamic>,bitSets) = input->map( ::Dynamic(new _hx_Closure_1()));
HXLINE(  36)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::fromBitSets(bitSets);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,fromBools,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::fromString(::String input,::String __o_delimiter){
::String delimiter = __o_delimiter.Default(HX_HCSTRING(",","\x2c","\x00","\x00","\x00"));
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","fromString",0xae54be70,"thx._BitMatrix.BitMatrix_Impl_.fromString","thx/BitMatrix.hx",39,0x179ec45b)
            	HX_STACK_ARG(input,"input")
            	HX_STACK_ARG(delimiter,"delimiter")
HXLINE(  40)		HX_VARI( ::Array< ::String >,bitSetStrings) = input.split(delimiter);
HXLINE(  41)		HX_VARI( ::Array< ::Dynamic>,bitSets) = bitSetStrings->map(::thx::_BitSet::BitSet_Impl__obj::fromString_dyn());
HXLINE(  42)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::fromBitSets(bitSets);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,fromString,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::toBools(::Array< ::Dynamic> this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		::Array< Bool > _hx_run(::Array< Int > bitSet){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Array< Int >,this2) HXARGC(1)
            			Bool _hx_run(Int index){
            				HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","toBools",0x9214ddd9,"thx._BitMatrix.BitMatrix_Impl_.toBools","thx/BitMatrix.hx",48,0x179ec45b)
            				HX_STACK_ARG(index,"index")
HXLINE(  48)				return ::thx::_BitSet::BitSet_Impl__obj::at(this2,index);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","toBools",0x9214ddd9,"thx._BitMatrix.BitMatrix_Impl_.toBools","thx/BitMatrix.hx",48,0x179ec45b)
            			HX_STACK_ARG(bitSet,"bitSet")
HXLINE(  48)			HX_VARI_NAME( ::Array< Int >,this2,"this") = bitSet;
HXDLIN(  48)			return ::thx::Ints_obj::range(::thx::_BitSet::BitSet_Impl__obj::get_length(this2),null(),null())->map( ::Dynamic(new _hx_Closure_0(this2)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","toBools",0x9214ddd9,"thx._BitMatrix.BitMatrix_Impl_.toBools","thx/BitMatrix.hx",47,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  47)		return this1->map( ::Dynamic(new _hx_Closure_1()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,toBools,return )

Bool BitMatrix_Impl__obj::bitAt(::Array< ::Dynamic> this1,Int bitSetIndex,Int bitIndex){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","bitAt",0x84b7b6ab,"thx._BitMatrix.BitMatrix_Impl_.bitAt","thx/BitMatrix.hx",52,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(bitSetIndex,"bitSetIndex")
            	HX_STACK_ARG(bitIndex,"bitIndex")
HXLINE(  53)		HX_VARI( ::Array< Int >,bitSet) = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(this1,bitSetIndex);
HXLINE(  54)		return ::thx::_BitSet::BitSet_Impl__obj::at(bitSet,bitIndex);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(BitMatrix_Impl__obj,bitAt,return )

Bool BitMatrix_Impl__obj::setBitAt(::Array< ::Dynamic> this1,Int bitSetIndex,Int bitIndex,Bool value){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","setBitAt",0x7802b973,"thx._BitMatrix.BitMatrix_Impl_.setBitAt","thx/BitMatrix.hx",57,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(bitSetIndex,"bitSetIndex")
            	HX_STACK_ARG(bitIndex,"bitIndex")
            	HX_STACK_ARG(value,"value")
HXLINE(  58)		if ((bitIndex >= ::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1))) {
HXLINE(  59)			HX_VARI( Int,_g) = (int)0;
HXDLIN(  59)			while((_g < this1->length)){
HXLINE(  59)				HX_VARI( ::Array< Int >,bitSet) = this1->__get(_g).StaticCast< ::Array< Int > >();
HXDLIN(  59)				++_g;
HXLINE(  60)				::thx::_BitSet::BitSet_Impl__obj::setAt(bitSet,bitIndex,false);
            			}
            		}
HXLINE(  63)		HX_VARI_NAME( ::Array< Int >,bitSet1,"bitSet") = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(this1,bitSetIndex);
HXLINE(  64)		return ::thx::_BitSet::BitSet_Impl__obj::setAt(bitSet1,bitIndex,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(BitMatrix_Impl__obj,setBitAt,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::clone(::Array< ::Dynamic> this1){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1,::Array< ::Dynamic>,this1) HXARGC(2)
            		::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> acc,Int i){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Array< Int >,this2) HXARGC(2)
            			::Array< Int > _hx_run(::Array< Int > acc1,Int i1){
            				HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","clone",0x1a164ae8,"thx._BitMatrix.BitMatrix_Impl_.clone","thx/BitMatrix.hx",69,0x179ec45b)
            				HX_STACK_ARG(acc1,"acc1")
            				HX_STACK_ARG(i1,"i1")
HXLINE(  69)				Bool _hx_tmp4 = ::thx::_BitSet::BitSet_Impl__obj::at(this2,i1);
HXDLIN(  69)				::thx::_BitSet::BitSet_Impl__obj::setAt(acc1,i1,_hx_tmp4);
HXDLIN(  69)				return acc1;
            			}
            			HX_END_LOCAL_FUNC2(return)

            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","clone",0x1a164ae8,"thx._BitMatrix.BitMatrix_Impl_.clone","thx/BitMatrix.hx",68,0x179ec45b)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(i,"i")
HXLINE(  69)			HX_VARI_NAME( ::Array< Int >,this2,"this") = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(this1,i);
HXDLIN(  69)			::Array< Int > _hx_tmp2 = ::thx::Ints_obj::range(::thx::_BitSet::BitSet_Impl__obj::get_length(this2),null(),null());
HXDLIN(  69)			HX_VARI_NAME( ::Array< Int >,this3,"this") = ::Array_obj< Int >::__new(1)->init(0,(int)0);
HXDLIN(  69)			::thx::Arrays_obj::resize(this3,(int)2,(int)0);
HXDLIN(  69)			::Array< Int > _hx_tmp3 = ( (::Array< Int >)(::thx::Arrays_obj::reduce(_hx_tmp2, ::Dynamic(new _hx_Closure_0(this2)),this3)) );
HXDLIN(  69)			::thx::_BitMatrix::BitMatrix_Impl__obj::setBitSetAt(acc,i,_hx_tmp3);
HXLINE(  70)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","clone",0x1a164ae8,"thx._BitMatrix.BitMatrix_Impl_.clone","thx/BitMatrix.hx",68,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  68)		::Array< Int > _hx_tmp = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1),null(),null());
HXLINE(  71)		::Array< ::Dynamic> _hx_tmp1 = ::thx::_BitMatrix::BitMatrix_Impl__obj::_new(null(),null());
HXLINE(  68)		return ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp, ::Dynamic(new _hx_Closure_1(this1)),_hx_tmp1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,clone,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::concat(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,right,::Array< ::Dynamic>,left) HXARGC(2)
            		::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> bitSets1,Int bitSetIndex){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","concat",0x72ed6b29,"thx._BitMatrix.BitMatrix_Impl_.concat","thx/BitMatrix.hx",79,0x179ec45b)
            			HX_STACK_ARG(bitSets1,"bitSets1")
            			HX_STACK_ARG(bitSetIndex,"bitSetIndex")
HXLINE(  80)			HX_VARI_NAME( ::Array< Int >,this2,"this") = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(left,bitSetIndex);
HXDLIN(  80)			HX_VARI_NAME( ::Array< Int >,right1,"right") = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(right,bitSetIndex);
HXDLIN(  80)			HX_VARI_NAME( ::Array< Int >,left1,"left") = this2;
HXDLIN(  80)			HX_VARI( Int,length) = (::thx::_BitSet::BitSet_Impl__obj::get_length(left1) + ::thx::_BitSet::BitSet_Impl__obj::get_length(right1));
HXDLIN(  80)			HX_VARI_NAME( ::Array< Int >,this3,"this") = ::Array_obj< Int >::__new(1)->init(0,length);
HXDLIN(  80)			Int _hx_tmp1 = ::Std_obj::_hx_int(((Float)length / (Float)(int)32));
HXDLIN(  80)			::thx::Arrays_obj::resize(this3,((_hx_tmp1 + (int)1) + (int)1),(int)0);
HXDLIN(  80)			HX_VARI( ::Array< Int >,result) = this3;
HXDLIN(  80)			HX_VARI( Int,index) = (int)0;
HXDLIN(  80)			{
HXLINE(  80)				HX_VARI( Int,_g1) = (int)0;
HXDLIN(  80)				HX_VARI( Int,_g) = ::thx::_BitSet::BitSet_Impl__obj::get_length(left1);
HXDLIN(  80)				while((_g1 < _g)){
HXLINE(  80)					HX_VARI( Int,leftIndex) = _g1++;
HXDLIN(  80)					Int _hx_tmp2 = index++;
HXDLIN(  80)					Bool _hx_tmp3 = ::thx::_BitSet::BitSet_Impl__obj::at(left1,leftIndex);
HXDLIN(  80)					::thx::_BitSet::BitSet_Impl__obj::setAt(result,_hx_tmp2,_hx_tmp3);
            				}
            			}
HXDLIN(  80)			{
HXLINE(  80)				HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN(  80)				HX_VARI_NAME( Int,_g2,"_g") = ::thx::_BitSet::BitSet_Impl__obj::get_length(right1);
HXDLIN(  80)				while((_g11 < _g2)){
HXLINE(  80)					HX_VARI( Int,rightIndex) = _g11++;
HXDLIN(  80)					Int _hx_tmp4 = index++;
HXDLIN(  80)					Bool _hx_tmp5 = ::thx::_BitSet::BitSet_Impl__obj::at(right1,rightIndex);
HXDLIN(  80)					::thx::_BitSet::BitSet_Impl__obj::setAt(result,_hx_tmp4,_hx_tmp5);
            				}
            			}
HXDLIN(  80)			bitSets1[bitSetIndex] = result;
HXLINE(  81)			return bitSets1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","concat",0x72ed6b29,"thx._BitMatrix.BitMatrix_Impl_.concat","thx/BitMatrix.hx",74,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE(  75)		HX_VARI( ::Array< ::Dynamic>,left) = this1;
HXLINE(  76)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(left) != ::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(right))) {
HXLINE(  77)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("cannot concat bit matrices with different bit set counts",32,01,5e,da),null(),hx::SourceInfo(HX_("BitMatrix.hx",b0,1c,fd,3f),77,HX_("thx._BitMatrix.BitMatrix_Impl_",b9,0d,be,26),HX_("concat",14,09,d0,c7))));
            		}
HXLINE(  79)		::Array< Int > _hx_tmp = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(left),null(),null());
HXDLIN(  79)		HX_VARI( ::Array< ::Dynamic>,bitSets) = ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp, ::Dynamic(new _hx_Closure_0(right,left)),::Array_obj< ::Dynamic>::__new(0))) );
HXLINE(  83)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::fromBitSets(bitSets);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,concat,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::expand(::Array< ::Dynamic> this1,Int count){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,Int,count) HXARGC(1)
            		::Array< Int > _hx_run(::Array< Int > bitSet){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","expand",0x6f90506f,"thx._BitMatrix.BitMatrix_Impl_.expand","thx/BitMatrix.hx",88,0x179ec45b)
            			HX_STACK_ARG(bitSet,"bitSet")
HXLINE(  88)			return ::thx::_BitSet::BitSet_Impl__obj::expand(bitSet,count);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","expand",0x6f90506f,"thx._BitMatrix.BitMatrix_Impl_.expand","thx/BitMatrix.hx",87,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(count,"count")
HXLINE(  87)		::Array< ::Dynamic> _hx_tmp = this1->map( ::Dynamic(new _hx_Closure_0(count)));
HXDLIN(  87)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::fromBitSets(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,expand,return )

::String BitMatrix_Impl__obj::toString(::Array< ::Dynamic> this1,::String __o_delimiter){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		::String _hx_run(::Array< Int > _){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","toString",0xef38a201,"thx._BitMatrix.BitMatrix_Impl_.toString","thx/macro/lambda/SlambdaMacro.hx",86,0x8ba75432)
            			HX_STACK_ARG(_,"_")
HXLINE(  86)			return ::thx::_BitSet::BitSet_Impl__obj::toString(_);
            		}
            		HX_END_LOCAL_FUNC1(return)

::String delimiter = __o_delimiter.Default(HX_HCSTRING(",","\x2c","\x00","\x00","\x00"));
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","toString",0xef38a201,"thx._BitMatrix.BitMatrix_Impl_.toString","thx/BitMatrix.hx",93,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(delimiter,"delimiter")
HXLINE(  93)		return this1->map( ::Dynamic(new _hx_Closure_0()))->join(delimiter);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,toString,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::_hx_and(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		Bool _hx_run(Bool l,Bool r){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","and",0x371ba9a2,"thx._BitMatrix.BitMatrix_Impl_.and","thx/BitMatrix.hx",102,0x179ec45b)
            			HX_STACK_ARG(l,"l")
            			HX_STACK_ARG(r,"r")
HXLINE( 102)			if (l) {
HXLINE( 102)				return r;
            			}
            			else {
HXLINE( 102)				return false;
            			}
HXDLIN( 102)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","and",0x371ba9a2,"thx._BitMatrix.BitMatrix_Impl_.and","thx/BitMatrix.hx",102,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE( 102)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::combine(this1,right, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,_hx_and,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::_hx_or(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		Bool _hx_run(Bool l,Bool r){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","or",0x3633d4b8,"thx._BitMatrix.BitMatrix_Impl_.or","thx/BitMatrix.hx",111,0x179ec45b)
            			HX_STACK_ARG(l,"l")
            			HX_STACK_ARG(r,"r")
HXLINE( 111)			if (!(l)) {
HXLINE( 111)				return r;
            			}
            			else {
HXLINE( 111)				return true;
            			}
HXDLIN( 111)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","or",0x3633d4b8,"thx._BitMatrix.BitMatrix_Impl_.or","thx/BitMatrix.hx",111,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE( 111)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::combine(this1,right, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,_hx_or,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::_hx_xor(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		Bool _hx_run(Bool l,Bool r){
            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","xor",0x372d1e66,"thx._BitMatrix.BitMatrix_Impl_.xor","thx/BitMatrix.hx",120,0x179ec45b)
            			HX_STACK_ARG(l,"l")
            			HX_STACK_ARG(r,"r")
HXLINE( 120)			Bool _hx_tmp;
HXDLIN( 120)			if (l) {
HXLINE( 120)				_hx_tmp = !(r);
            			}
            			else {
HXLINE( 120)				_hx_tmp = false;
            			}
HXDLIN( 120)			if (!(_hx_tmp)) {
HXLINE( 120)				if (!(l)) {
HXLINE( 120)					return r;
            				}
            				else {
HXLINE( 120)					return false;
            				}
            			}
            			else {
HXLINE( 120)				return true;
            			}
HXDLIN( 120)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","xor",0x372d1e66,"thx._BitMatrix.BitMatrix_Impl_.xor","thx/BitMatrix.hx",120,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE( 120)		return ::thx::_BitMatrix::BitMatrix_Impl__obj::combine(this1,right, ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,_hx_xor,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::negate(::Array< ::Dynamic> this1){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::Array< ::Dynamic>,this1,::Array< ::Dynamic>,bits) HXARGC(2)
            		::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> acc,Int bitSetIndex){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0,Int,bitSetIndex,::Array< ::Dynamic>,bits) HXARGC(2)
            			::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> acc1,Int bitIndex){
            				HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","negate",0x1236a3d7,"thx._BitMatrix.BitMatrix_Impl_.negate","thx/BitMatrix.hx",131,0x179ec45b)
            				HX_STACK_ARG(acc1,"acc1")
            				HX_STACK_ARG(bitIndex,"bitIndex")
HXLINE( 132)				::thx::_BitMatrix::BitMatrix_Impl__obj::setBitAt(acc1,bitSetIndex,bitIndex,!(::thx::_BitMatrix::BitMatrix_Impl__obj::bitAt(bits,bitSetIndex,bitIndex)));
HXLINE( 133)				return acc1;
            			}
            			HX_END_LOCAL_FUNC2(return)

            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","negate",0x1236a3d7,"thx._BitMatrix.BitMatrix_Impl_.negate","thx/BitMatrix.hx",131,0x179ec45b)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(bitSetIndex,"bitSetIndex")
HXLINE( 131)			::Array< Int > _hx_tmp2 = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1),null(),null());
HXDLIN( 131)			return ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp2, ::Dynamic(new _hx_Closure_0(bitSetIndex,bits)),acc)) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","negate",0x1236a3d7,"thx._BitMatrix.BitMatrix_Impl_.negate","thx/BitMatrix.hx",128,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 129)		HX_VARI( ::Array< ::Dynamic>,bits) = this1;
HXLINE( 130)		::Array< Int > _hx_tmp = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1),null(),null());
HXLINE( 135)		::Array< ::Dynamic> _hx_tmp1 = ::thx::_BitMatrix::BitMatrix_Impl__obj::_new(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1),::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1));
HXLINE( 130)		return ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp, ::Dynamic(new _hx_Closure_1(this1,bits)),_hx_tmp1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,negate,return )

Bool BitMatrix_Impl__obj::equals(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","equals",0x6b105054,"thx._BitMatrix.BitMatrix_Impl_.equals","thx/BitMatrix.hx",139,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE( 140)		HX_VARI( ::Array< ::Dynamic>,left) = this1;
HXLINE( 141)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(left) != ::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(right))) {
HXLINE( 141)			return false;
            		}
HXLINE( 142)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(left) != ::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(right))) {
HXLINE( 142)			return false;
            		}
HXLINE( 143)		{
HXLINE( 143)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 143)			HX_VARI( Int,_g) = ::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1);
HXDLIN( 143)			while((_g1 < _g)){
HXLINE( 143)				HX_VARI( Int,i) = _g1++;
HXLINE( 144)				::Array< Int > _hx_tmp = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(left,i);
HXDLIN( 144)				::Array< Int > _hx_tmp1 = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitSetAt(right,i);
HXDLIN( 144)				Bool _hx_tmp2 = !(::thx::_BitSet::BitSet_Impl__obj::equals(_hx_tmp,_hx_tmp1));
HXDLIN( 144)				if (_hx_tmp2) {
HXLINE( 144)					return false;
            				}
            			}
            		}
HXLINE( 146)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,equals,return )

Bool BitMatrix_Impl__obj::notEquals(::Array< ::Dynamic> this1,::Array< ::Dynamic> right){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","notEquals",0x76a924bd,"thx._BitMatrix.BitMatrix_Impl_.notEquals","thx/BitMatrix.hx",150,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
HXLINE( 151)		HX_VARI( ::Array< ::Dynamic>,left) = this1;
HXLINE( 152)		return !(::thx::_BitMatrix::BitMatrix_Impl__obj::equals(left,right));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,notEquals,return )

Int BitMatrix_Impl__obj::get_bitSetCount(::Array< ::Dynamic> this1){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","get_bitSetCount",0x8d81229c,"thx._BitMatrix.BitMatrix_Impl_.get_bitSetCount","thx/BitMatrix.hx",156,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 156)		return this1->length;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,get_bitSetCount,return )

Int BitMatrix_Impl__obj::get_length(::Array< ::Dynamic> this1){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","get_length",0xe96f9544,"thx._BitMatrix.BitMatrix_Impl_.get_length","thx/BitMatrix.hx",159,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 160)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1) == (int)0)) {
HXLINE( 160)			return (int)0;
            		}
HXLINE( 161)		return ::thx::_BitSet::BitSet_Impl__obj::get_length(this1->__get((int)0).StaticCast< ::Array< Int > >());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BitMatrix_Impl__obj,get_length,return )

::Array< Int > BitMatrix_Impl__obj::bitSetAt(::Array< ::Dynamic> this1,Int index){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","bitSetAt",0x192a027d,"thx._BitMatrix.BitMatrix_Impl_.bitSetAt","thx/BitMatrix.hx",164,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(index,"index")
HXLINE( 165)		Bool _hx_tmp;
HXDLIN( 165)		if ((index >= (int)0)) {
HXLINE( 165)			_hx_tmp = (index >= ::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1));
            		}
            		else {
HXLINE( 165)			_hx_tmp = true;
            		}
HXDLIN( 165)		if (_hx_tmp) {
HXLINE( 166)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(((HX_("BitMatrix: index ",c2,a0,40,9d) + index) + HX_(" is out of bounds",b6,c5,8b,e6)),null(),hx::SourceInfo(HX_("BitMatrix.hx",b0,1c,fd,3f),166,HX_("thx._BitMatrix.BitMatrix_Impl_",b9,0d,be,26),HX_("bitSetAt",28,31,60,62))));
            		}
HXLINE( 168)		return this1->__get(index).StaticCast< ::Array< Int > >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BitMatrix_Impl__obj,bitSetAt,return )

::Array< Int > BitMatrix_Impl__obj::setBitSetAt(::Array< ::Dynamic> this1,Int index,::Array< Int > bitSet){
            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","setBitSetAt",0xdd5eecb5,"thx._BitMatrix.BitMatrix_Impl_.setBitSetAt","thx/BitMatrix.hx",171,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(bitSet,"bitSet")
HXLINE( 172)		Bool _hx_tmp;
HXDLIN( 172)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1) > (int)0)) {
HXLINE( 172)			_hx_tmp = (::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1) != ::thx::_BitSet::BitSet_Impl__obj::get_length(bitSet));
            		}
            		else {
HXLINE( 172)			_hx_tmp = false;
            		}
HXDLIN( 172)		if (_hx_tmp) {
HXLINE( 173)			HX_STACK_DO_THROW( ::thx::Error_obj::__new((HX_("BitMatrix: added BitSet must have same length as BitMatrix length ",12,6f,09,1b) + ::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1)),null(),hx::SourceInfo(HX_("BitMatrix.hx",b0,1c,fd,3f),173,HX_("thx._BitMatrix.BitMatrix_Impl_",b9,0d,be,26),HX_("setBitSetAt",ea,fa,c0,92))));
            		}
HXLINE( 175)		return (this1[index] = bitSet);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(BitMatrix_Impl__obj,setBitSetAt,return )

::Array< ::Dynamic> BitMatrix_Impl__obj::combine(::Array< ::Dynamic> this1,::Array< ::Dynamic> right, ::Dynamic combiner){
            		HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_1,::Array< ::Dynamic>,this1,::Array< ::Dynamic>,right,::Array< ::Dynamic>,left, ::Dynamic,combiner) HXARGC(2)
            		::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> acc,Int bitSetIndex){
            			HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,right,::Array< ::Dynamic>,left,Int,bitSetIndex, ::Dynamic,combiner) HXARGC(2)
            			::Array< ::Dynamic> _hx_run(::Array< ::Dynamic> acc1,Int bitIndex){
            				HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","combine",0x88c69aca,"thx._BitMatrix.BitMatrix_Impl_.combine","thx/BitMatrix.hx",183,0x179ec45b)
            				HX_STACK_ARG(acc1,"acc1")
            				HX_STACK_ARG(bitIndex,"bitIndex")
HXLINE( 184)				Bool _hx_tmp3 = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitAt(left,bitSetIndex,bitIndex);
HXDLIN( 184)				Bool _hx_tmp4 = ::thx::_BitMatrix::BitMatrix_Impl__obj::bitAt(right,bitSetIndex,bitIndex);
HXDLIN( 184)				Bool _hx_tmp5 = ( (Bool)(combiner(_hx_tmp3,_hx_tmp4)) );
HXDLIN( 184)				::thx::_BitMatrix::BitMatrix_Impl__obj::setBitAt(acc1,bitSetIndex,bitIndex,_hx_tmp5);
HXLINE( 185)				return acc1;
            			}
            			HX_END_LOCAL_FUNC2(return)

            			HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","combine",0x88c69aca,"thx._BitMatrix.BitMatrix_Impl_.combine","thx/BitMatrix.hx",183,0x179ec45b)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(bitSetIndex,"bitSetIndex")
HXLINE( 183)			::Array< Int > _hx_tmp2 = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(this1),null(),null());
HXDLIN( 183)			return ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp2, ::Dynamic(new _hx_Closure_0(right,left,bitSetIndex,combiner)),acc)) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx._BitMatrix.BitMatrix_Impl_","combine",0x88c69aca,"thx._BitMatrix.BitMatrix_Impl_.combine","thx/BitMatrix.hx",178,0x179ec45b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(right,"right")
            	HX_STACK_ARG(combiner,"combiner")
HXLINE( 179)		HX_VARI( ::Array< ::Dynamic>,left) = this1;
HXLINE( 180)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(left) != ::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(right))) {
HXLINE( 180)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("cannot \"and\" BitMatrices of different BitSet counts",28,3a,9d,e8),null(),hx::SourceInfo(HX_("BitMatrix.hx",b0,1c,fd,3f),180,HX_("thx._BitMatrix.BitMatrix_Impl_",b9,0d,be,26),HX_("combine",7f,2a,2e,7a))));
            		}
HXLINE( 181)		if ((::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(left) != ::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(right))) {
HXLINE( 181)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("cannot \"and\" BitMatrices of different lengths",a6,91,a5,47),null(),hx::SourceInfo(HX_("BitMatrix.hx",b0,1c,fd,3f),181,HX_("thx._BitMatrix.BitMatrix_Impl_",b9,0d,be,26),HX_("combine",7f,2a,2e,7a))));
            		}
HXLINE( 182)		::Array< Int > _hx_tmp = ::thx::Ints_obj::range(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(this1),null(),null());
HXLINE( 187)		::Array< ::Dynamic> _hx_tmp1 = ::thx::_BitMatrix::BitMatrix_Impl__obj::_new(::thx::_BitMatrix::BitMatrix_Impl__obj::get_bitSetCount(left),::thx::_BitMatrix::BitMatrix_Impl__obj::get_length(left));
HXLINE( 182)		return ( (::Array< ::Dynamic>)(::thx::Arrays_obj::reduce(_hx_tmp, ::Dynamic(new _hx_Closure_1(this1,right,left,combiner)),_hx_tmp1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(BitMatrix_Impl__obj,combine,return )


BitMatrix_Impl__obj::BitMatrix_Impl__obj()
{
}

bool BitMatrix_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"or") ) { outValue = _hx_or_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"and") ) { outValue = _hx_and_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"xor") ) { outValue = _hx_xor_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bitAt") ) { outValue = bitAt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clone") ) { outValue = clone_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"concat") ) { outValue = concat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"expand") ) { outValue = expand_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toBools") ) { outValue = toBools_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"combine") ) { outValue = combine_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setBitAt") ) { outValue = setBitAt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bitSetAt") ) { outValue = bitSetAt_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBools") ) { outValue = fromBools_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"notEquals") ) { outValue = notEquals_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fromBitSets") ) { outValue = fromBitSets_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setBitSetAt") ) { outValue = setBitSetAt_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_bitSetCount") ) { outValue = get_bitSetCount_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *BitMatrix_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *BitMatrix_Impl__obj_sStaticStorageInfo = 0;
#endif

static void BitMatrix_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BitMatrix_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BitMatrix_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BitMatrix_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class BitMatrix_Impl__obj::__mClass;

static ::String BitMatrix_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("fromBitSets","\xb4","\xc5","\x95","\x80"),
	HX_HCSTRING("fromBools","\x3f","\x0b","\x81","\x6b"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("toBools","\x8e","\x6d","\x7c","\x83"),
	HX_HCSTRING("bitAt","\x20","\x7f","\x04","\xb3"),
	HX_HCSTRING("setBitAt","\x1e","\xe8","\x38","\xc1"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("concat","\x14","\x09","\xd0","\xc7"),
	HX_HCSTRING("expand","\x5a","\xee","\x72","\xc4"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("and","\xd7","\xfa","\x49","\x00"),
	HX_HCSTRING("or","\x23","\x61","\x00","\x00"),
	HX_HCSTRING("xor","\x9b","\x6f","\x5b","\x00"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("notEquals","\xb2","\xcb","\xdb","\x3c"),
	HX_HCSTRING("get_bitSetCount","\x51","\xef","\x3e","\xbc"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("bitSetAt","\x28","\x31","\x60","\x62"),
	HX_HCSTRING("setBitSetAt","\xea","\xfa","\xc0","\x92"),
	HX_HCSTRING("combine","\x7f","\x2a","\x2e","\x7a"),
	::String(null())
};

void BitMatrix_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._BitMatrix.BitMatrix_Impl_","\xb9","\x0d","\xbe","\x26");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &BitMatrix_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BitMatrix_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(BitMatrix_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< BitMatrix_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BitMatrix_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BitMatrix_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BitMatrix_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _BitMatrix
