// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_Nil
#include <thx/Nil.h>
#endif
namespace thx{

::thx::Nil Nil_obj::nil;

bool Nil_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("nil",d1,d3,53,00)) { outValue = Nil_obj::nil; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Nil_obj)

int Nil_obj::__FindIndex(::String inName)
{
	if (inName==HX_("nil",d1,d3,53,00)) return 0;
	return super::__FindIndex(inName);
}

int Nil_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("nil",d1,d3,53,00)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val Nil_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("nil",d1,d3,53,00)) return nil;
	return super::__Field(inName,inCallProp);
}

static ::String Nil_obj_sStaticFields[] = {
	HX_("nil",d1,d3,53,00),
	::String(null())
};

static void Nil_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Nil_obj::nil,"nil");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Nil_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Nil_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Nil_obj::nil,"nil");
};
#endif

hx::Class Nil_obj::__mClass;

Dynamic __Create_Nil_obj() { return new Nil_obj; }

void Nil_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.Nil","\xc7","\x4e","\x90","\xa3"), hx::TCanCast< Nil_obj >,Nil_obj_sStaticFields,0,
	&__Create_Nil_obj, &__Create,
	&super::__SGetClass(), &CreateNil_obj, Nil_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Nil_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Nil_obj::__GetStatic;
}

void Nil_obj::__boot()
{
nil = hx::CreateEnum< Nil_obj >(HX_HCSTRING("nil","\xd1","\xd3","\x53","\x00"),0,0);
}


} // end namespace thx
