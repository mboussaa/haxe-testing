// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__QueryString_QueryStringValue_Impl_
#define INCLUDED_thx__QueryString_QueryStringValue_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,_QueryString,QueryStringValue_Impl_)

namespace thx{
namespace _QueryString{


class HXCPP_CLASS_ATTRIBUTES QueryStringValue_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef QueryStringValue_Impl__obj OBJ_;
		QueryStringValue_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._QueryString.QueryStringValue_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._QueryString.QueryStringValue_Impl_"); }
		static hx::ObjectPtr< QueryStringValue_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~QueryStringValue_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("QueryStringValue_Impl_","\x78","\x55","\xf5","\xf8"); }

		static ::String toString(::Array< ::String > this1);
		static ::Dynamic toString_dyn();

};

} // end namespace thx
} // end namespace _QueryString

#endif /* INCLUDED_thx__QueryString_QueryStringValue_Impl_ */ 
