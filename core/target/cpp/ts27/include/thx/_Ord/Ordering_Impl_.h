// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__Ord_Ordering_Impl_
#define INCLUDED_thx__Ord_Ordering_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,OrderingImpl)
HX_DECLARE_CLASS2(thx,_Ord,Ordering_Impl_)

namespace thx{
namespace _Ord{


class HXCPP_CLASS_ATTRIBUTES Ordering_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Ordering_Impl__obj OBJ_;
		Ordering_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._Ord.Ordering_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._Ord.Ordering_Impl_"); }
		static hx::ObjectPtr< Ordering_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Ordering_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Ordering_Impl_","\xd4","\x40","\x42","\x6b"); }

		static ::hx::EnumBase fromInt(Int value);
		static ::Dynamic fromInt_dyn();

		static ::hx::EnumBase fromFloat(Float value);
		static ::Dynamic fromFloat_dyn();

		static Int toInt(::hx::EnumBase this1);
		static ::Dynamic toInt_dyn();

};

} // end namespace thx
} // end namespace _Ord

#endif /* INCLUDED_thx__Ord_Ordering_Impl_ */ 
