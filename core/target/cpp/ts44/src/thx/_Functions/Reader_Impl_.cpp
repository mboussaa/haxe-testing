// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx__Functions_Reader_Impl_
#include <thx/_Functions/Reader_Impl_.h>
#endif

namespace thx{
namespace _Functions{

void Reader_Impl__obj::__construct() { }

Dynamic Reader_Impl__obj::__CreateEmpty() { return new Reader_Impl__obj; }

hx::ObjectPtr< Reader_Impl__obj > Reader_Impl__obj::__new()
{
	hx::ObjectPtr< Reader_Impl__obj > _hx_result = new Reader_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Reader_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Reader_Impl__obj > _hx_result = new Reader_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Reader_Impl__obj::flatMap( ::Dynamic this1, ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,this1, ::Dynamic,f) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic a){
            			HX_STACK_FRAME("thx._Functions.Reader_Impl_","flatMap",0x95854300,"thx._Functions.Reader_Impl_.flatMap","thx/Functions.hx",275,0xe7fcd70e)
            			HX_STACK_ARG(a,"a")
HXLINE( 275)			 ::Dynamic _hx_tmp = this1(a);
HXDLIN( 275)			 ::Dynamic _hx_tmp1 = f(_hx_tmp);
HXDLIN( 275)			return _hx_tmp1(a);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx._Functions.Reader_Impl_","flatMap",0x95854300,"thx._Functions.Reader_Impl_.flatMap","thx/Functions.hx",274,0xe7fcd70e)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE( 274)		return  ::Dynamic(new _hx_Closure_0(this1,f));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Reader_Impl__obj,flatMap,return )


Reader_Impl__obj::Reader_Impl__obj()
{
}

bool Reader_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"flatMap") ) { outValue = flatMap_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Reader_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Reader_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Reader_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Reader_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Reader_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Reader_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Reader_Impl__obj::__mClass;

static ::String Reader_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("flatMap","\x63","\x10","\xde","\xe6"),
	::String(null())
};

void Reader_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx._Functions.Reader_Impl_","\x0b","\x2e","\x59","\x75");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Reader_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Reader_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Reader_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Reader_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Reader_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Reader_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Reader_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace _Functions
