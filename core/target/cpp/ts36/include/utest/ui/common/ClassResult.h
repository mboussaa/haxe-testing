// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_ui_common_ClassResult
#define INCLUDED_utest_ui_common_ClassResult

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS3(utest,ui,common,ClassResult)
HX_DECLARE_CLASS3(utest,ui,common,FixtureResult)
HX_DECLARE_CLASS3(utest,ui,common,ResultStats)

namespace utest{
namespace ui{
namespace common{


class HXCPP_CLASS_ATTRIBUTES ClassResult_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ClassResult_obj OBJ_;
		ClassResult_obj();

	public:
		void __construct(::String className,::String setupName,::String teardownName);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="utest.ui.common.ClassResult")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"utest.ui.common.ClassResult"); }
		static hx::ObjectPtr< ClassResult_obj > __new(::String className,::String setupName,::String teardownName);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ClassResult_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("ClassResult","\x15","\xe7","\xff","\x63"); }

		 ::haxe::ds::StringMap fixtures;
		::String className;
		::String setupName;
		::String teardownName;
		Bool hasSetup;
		Bool hasTeardown;
		Int methods;
		 ::utest::ui::common::ResultStats stats;
		void add( ::utest::ui::common::FixtureResult result);
		::Dynamic add_dyn();

		 ::utest::ui::common::FixtureResult get(::String method);
		::Dynamic get_dyn();

		Bool exists(::String method);
		::Dynamic exists_dyn();

		::Array< ::String > methodNames(hx::Null< Bool >  errorsHavePriority);
		::Dynamic methodNames_dyn();

};

} // end namespace utest
} // end namespace ui
} // end namespace common

#endif /* INCLUDED_utest_ui_common_ClassResult */ 
