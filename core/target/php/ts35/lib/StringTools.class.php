<?php

// Generated by Haxe 3.3.0
class StringTools {
	public function __construct(){}
	static function htmlEscape($s, $quotes = null) {
		$s = _hx_explode(">", _hx_explode("<", _hx_explode("&", $s)->join("&amp;"))->join("&lt;"))->join("&gt;");
		if($quotes) {
			return _hx_explode("'", _hx_explode("\"", $s)->join("&quot;"))->join("&#039;");
		} else {
			return $s;
		}
	}
	static function startsWith($s, $start) {
		$tmp = strlen($s) >= strlen($start);
		if($tmp) {
			$tmp1 = _hx_substr($s, 0, strlen($start));
			return $tmp1 === $start;
		} else {
			return false;
		}
	}
	static function endsWith($s, $end) {
		$elen = strlen($end);
		$slen = strlen($s);
		if($slen >= $elen) {
			$tmp = _hx_substr($s, $slen - $elen, $elen);
			return $tmp === $end;
		} else {
			return false;
		}
	}
	static function isSpace($s, $pos) {
		$c = _hx_char_code_at($s, $pos);
		$tmp = null;
		if($c >= 9) {
			$tmp = $c <= 13;
		} else {
			$tmp = false;
		}
		if(!$tmp) {
			return $c === 32;
		} else {
			return true;
		}
	}
	static function trim($s) {
		return trim($s);
	}
	function __toString() { return 'StringTools'; }
}
