<?php

// Generated by Haxe 3.3.0
class thx_TestAnonymousMap {
	public function __construct() {}
	public function testFeatures() {
		$map = new thx_AnonymousMap(_hx_anonymous(array("name" => "thx", "type" => "library")));
		$tmp = $map->get("name");
		utest_Assert::equals("thx", $tmp, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 19, "className" => "thx.TestAnonymousMap", "methodName" => "testFeatures")));
		$tmp1 = $map->exists("type");
		utest_Assert::isTrue($tmp1, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 20, "className" => "thx.TestAnonymousMap", "methodName" => "testFeatures")));
		$map->remove("type");
		$tmp2 = $map->exists("type");
		utest_Assert::isFalse($tmp2, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 22, "className" => "thx.TestAnonymousMap", "methodName" => "testFeatures")));
		$tmp3 = $map->keys();
		$tmp4 = thx_Iterators::toArray($tmp3);
		utest_Assert::same((new _hx_array(array("name"))), $tmp4, null, null, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 23, "className" => "thx.TestAnonymousMap", "methodName" => "testFeatures")));
		$tmp5 = $map->iterator();
		$tmp6 = thx_Iterators::toArray($tmp5);
		utest_Assert::same((new _hx_array(array("thx"))), $tmp6, null, null, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 24, "className" => "thx.TestAnonymousMap", "methodName" => "testFeatures")));
	}
	public function testGetOption() {
		$map = new thx_AnonymousMap(_hx_anonymous(array("key1" => 1)));
		$tmp = $map->getOption("key1");
		utest_Assert::same(thx_Options::get($tmp), 1, null, null, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 30, "className" => "thx.TestAnonymousMap", "methodName" => "testGetOption")));
		$tmp1 = $map->getOption("key2");
		utest_Assert::same(thx_Options::toBool($tmp1), false, null, null, null, _hx_anonymous(array("fileName" => "TestAnonymousMap.hx", "lineNumber" => 31, "className" => "thx.TestAnonymousMap", "methodName" => "testGetOption")));
	}
	function __toString() { return 'thx.TestAnonymousMap'; }
}
