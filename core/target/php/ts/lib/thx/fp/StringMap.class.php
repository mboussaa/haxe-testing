<?php

// Generated by Haxe 3.3.0
class thx_fp_StringMap {
	public function __construct(){}
	static function exists($map, $key) {
		$tmp = thx_fp__Map_Map_Impl_::lookup($map, $key, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
		return thx_Options::toBool($tmp);
	}
	static function get($map, $key) {
		return thx_fp__Map_Map_Impl_::lookup($map, $key, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
	}
	static function getAlt($map, $key, $alt) {
		$tmp = thx_fp__Map_Map_Impl_::lookup($map, $key, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
		return thx_Options::getOrElse($tmp, $alt);
	}
	static function set($map, $key, $value) {
		return thx_fp__Map_Map_Impl_::insert($map, $key, $value, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
	}
	static function remove($map, $key) {
		return thx_fp__Map_Map_Impl_::delete($map, $key, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
	}
	static function fromNative($map) {
		return thx_fp__Map_Map_Impl_::fromNative($map, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
	}
	static function toNative($map) {
		return thx_fp__Map_Map_Impl_::foldLeftTuples($map, new haxe_ds_StringMap(), array(new _hx_lambda(array(), "thx_fp_StringMap_0"), 'execute'));
	}
	static function merge($a, $b) {
		return thx_fp__Map_Map_Impl_::foldLeftTuples($b, $a, array(new _hx_lambda(array(), "thx_fp_StringMap_1"), 'execute'));
	}
	function __toString() { return 'thx.fp.StringMap'; }
}
function thx_fp_StringMap_0($acc, $t) {
	{
		$acc->set($t->_0, $t->_1);
		return $acc;
	}
}
function thx_fp_StringMap_1($acc, $t) {
	{
		return thx_fp__Map_Map_Impl_::insert($acc, $t->_0, $t->_1, (isset(thx_Strings::$order) ? thx_Strings::$order: array("thx_Strings", "order")));
	}
}
