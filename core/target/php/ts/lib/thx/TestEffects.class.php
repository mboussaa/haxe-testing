<?php

// Generated by Haxe 3.3.0
class thx_TestEffects {
	public function __construct() {}
	public $logged;
	public $oldLogger;
	public function logger($msg, $infos = null) {
		$this->logged = $msg;
	}
	public function setup() {
		$this->logged = null;
		$this->oldLogger = (isset(thx_Effects::$logger) ? thx_Effects::$logger: array("thx_Effects", "logger"));
		thx_Effects::$logger = (isset($this->logger) ? $this->logger: array($this, "logger"));
	}
	public function teardown() {
		thx_Effects::$logger = (isset($this->oldLogger) ? $this->oldLogger: array($this, "oldLogger"));
	}
	public function testEffectsLog() {
		utest_Assert::isNull($this->logged, null, _hx_anonymous(array("fileName" => "TestEffects.hx", "lineNumber" => 26, "className" => "thx.TestEffects", "methodName" => "testEffectsLog")));
		$a2 = _hx_anonymous(array("fileName" => "TestEffects.hx", "lineNumber" => 28, "className" => "thx.TestEffects", "methodName" => "testEffectsLog"));
		call_user_func_array((array(new _hx_lambda(array(&$a2), "thx_TestEffects_0"), 'execute')), array(2));
		utest_Assert::equals(2, 2, null, _hx_anonymous(array("fileName" => "TestEffects.hx", "lineNumber" => 29, "className" => "thx.TestEffects", "methodName" => "testEffectsLog")));
		utest_Assert::equals(2, $this->logged, null, _hx_anonymous(array("fileName" => "TestEffects.hx", "lineNumber" => 30, "className" => "thx.TestEffects", "methodName" => "testEffectsLog")));
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'thx.TestEffects'; }
}
function thx_TestEffects_0(&$a2, $a1) {
	{
		thx_Effects::logger($a1, $a2);
	}
}
