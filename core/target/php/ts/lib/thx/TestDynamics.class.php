<?php

// Generated by Haxe 3.3.0
class thx_TestDynamics {
	public function __construct() {}
	public function testDynamics() {
		$tmp = thx_Dynamics::hclone(null, null);
		utest_Assert::equals(null, $tmp, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 11, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp1 = thx_Dynamics::hclone(true, null);
		utest_Assert::equals(true, $tmp1, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 12, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp2 = thx_Dynamics::hclone("hello", null);
		utest_Assert::equals("hello", $tmp2, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 13, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp3 = thx_Dynamics::hclone(3, null);
		utest_Assert::equals(3, $tmp3, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 14, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp4 = thx_Dynamics::hclone(3.14, null);
		utest_Assert::equals(3.14, $tmp4, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 15, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp5 = thx_Dynamics::hclone(ValueType::$TBool, null);
		utest_Assert::equals(ValueType::$TBool, $tmp5, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 16, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp6 = ValueType::TClass(_hx_qtype("thx.TestDynamics"));
		$tmp7 = ValueType::TClass(_hx_qtype("thx.TestDynamics"));
		$tmp8 = thx_Dynamics::hclone($tmp7, null);
		$tmp9 = Type::enumEq($tmp6, $tmp8);
		utest_Assert::isTrue($tmp9, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 17, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$date = Date::now();
		$tmp10 = thx_Dynamics::hclone($date, null);
		utest_Assert::equals($date, $tmp10, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 19, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$tmp11 = thx_Dynamics::hclone((isset($this->testDynamics) ? $this->testDynamics: array($this, "testDynamics")), null);
		utest_Assert::same((isset($this->testDynamics) ? $this->testDynamics: array($this, "testDynamics")), $tmp11, null, null, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 20, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$arr1 = (new _hx_array(array(0, 1, 2)));
		$arr2 = thx_Dynamics::hclone($arr1, null);
		utest_Assert::notEquals($arr1, $arr2, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 24, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		utest_Assert::same($arr1, $arr2, null, null, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 25, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$obj1 = _hx_anonymous(array("name" => "Franco", "number" => 0));
		$obj2 = thx_Dynamics::hclone($obj1, null);
		utest_Assert::notEquals($obj1, $obj2, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 29, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		utest_Assert::same($obj1, $obj2, null, null, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 30, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$inst1 = new thx_Point(5, 6);
		$inst2 = thx_Dynamics::hclone($inst1, null);
		utest_Assert::equals($inst1, $inst2, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 34, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		$inst3 = thx_Dynamics::hclone($inst1, true);
		utest_Assert::notEquals($inst1, $inst3, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 36, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
		utest_Assert::same($inst1->x, $inst3->x, null, null, null, _hx_anonymous(array("fileName" => "TestDynamics.hx", "lineNumber" => 37, "className" => "thx.TestDynamics", "methodName" => "testDynamics")));
	}
	function __toString() { return 'thx.TestDynamics'; }
}
