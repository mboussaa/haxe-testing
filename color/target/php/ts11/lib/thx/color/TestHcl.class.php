<?php

// Generated by Haxe 3.3.0
class thx_color_TestHcl extends nanotest_NanoTestCase {
	public function __construct($posInfos = null) { if(!php_Boot::$skip_constructor) {
		parent::__construct($posInfos);
	}}
	public function testParse() {
		$hcl = thx_color__LCh_LCh_Impl_::fromString("hcl(0.5,0,1)");
		$tmp = Std::int($hcl[2]);
		$this->assertEquals(0.5, $tmp, _hx_anonymous(array("fileName" => "TestHcl.hx", "lineNumber" => 12, "className" => "thx.color.TestHcl", "methodName" => "testParse")));
		$tmp1 = Std::int($hcl[1]);
		$this->assertEquals(0, $tmp1, _hx_anonymous(array("fileName" => "TestHcl.hx", "lineNumber" => 13, "className" => "thx.color.TestHcl", "methodName" => "testParse")));
		$tmp2 = Std::int($hcl[0]);
		$this->assertEquals(1, $tmp2, _hx_anonymous(array("fileName" => "TestHcl.hx", "lineNumber" => 14, "className" => "thx.color.TestHcl", "methodName" => "testParse")));
	}
	public function testStrings() {
		$this->assertEquals("hcl(0,0.5,1)", thx_color__LCh_LCh_Impl_::toHclString((new _hx_array(array(1, 0.5, 0)))), _hx_anonymous(array("fileName" => "TestHcl.hx", "lineNumber" => 19, "className" => "thx.color.TestHcl", "methodName" => "testStrings")));
	}
	function __toString() { return 'thx.color.TestHcl'; }
}
