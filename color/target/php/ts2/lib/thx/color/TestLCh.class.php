<?php

// Generated by Haxe 3.3.0
class thx_color_TestLCh {
	public function __construct() {}
	public function testBasics() {
		$color = thx_color__LCh_LCh_Impl_::normalize((new _hx_array(array(0.5, 0.4, -10))));
		utest_Assert::equals(0.5, $color[0], null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 10, "className" => "thx.color.TestLCh", "methodName" => "testBasics")));
		utest_Assert::equals(0.4, $color[1], null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 11, "className" => "thx.color.TestLCh", "methodName" => "testBasics")));
		utest_Assert::equals(350, $color[2], null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 12, "className" => "thx.color.TestLCh", "methodName" => "testBasics")));
	}
	public function testString() {
		utest_Assert::equals("lch(0.5,0.4,350)", thx_color__LCh_LCh_Impl_::toString(thx_color__LCh_LCh_Impl_::normalize((new _hx_array(array(0.5, 0.4, -10))))), null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 17, "className" => "thx.color.TestLCh", "methodName" => "testString")));
	}
	public function testParse() {
		$color = thx_color__LCh_LCh_Impl_::fromString("cielch(100,10,-10)");
		utest_Assert::equals("lch(100,10,-10)", thx_color__LCh_LCh_Impl_::toString($color), null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 22, "className" => "thx.color.TestLCh", "methodName" => "testParse")));
	}
	public function testFromFloat() {
		$s = thx_color__LCh_LCh_Impl_::fromString("cielch(100,10,-10)");
		$f = thx_color__LCh_LCh_Impl_::fromFloats((new _hx_array(array(100.0, 10.0, -10.0))));
		$tmp = thx_color__LCh_LCh_Impl_::equals($s, $f);
		utest_Assert::isTrue($tmp, null, _hx_anonymous(array("fileName" => "TestLCh.hx", "lineNumber" => 28, "className" => "thx.color.TestLCh", "methodName" => "testFromFloat")));
	}
	function __toString() { return 'thx.color.TestLCh'; }
}
