<?php

// Generated by Haxe 3.3.0
class thx_color_TestHsv {
	public function __construct() {}
	public function testBasics() {
		$hsv = (new _hx_array(array(1, 0, 0)));
		utest_Assert::equals(1, $hsv[0], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 11, "className" => "thx.color.TestHsv", "methodName" => "testBasics")));
		utest_Assert::equals(0, $hsv[1], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 12, "className" => "thx.color.TestHsv", "methodName" => "testBasics")));
		utest_Assert::equals(0, $hsv[2], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 13, "className" => "thx.color.TestHsv", "methodName" => "testBasics")));
	}
	public function testHsb() {
		$hsb = (new _hx_array(array(1, 0, 0)));
		utest_Assert::equals(1, $hsb[0], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 18, "className" => "thx.color.TestHsv", "methodName" => "testHsb")));
		utest_Assert::equals(0, $hsb[1], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 19, "className" => "thx.color.TestHsv", "methodName" => "testHsb")));
		utest_Assert::equals(0, $hsb[2], null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 20, "className" => "thx.color.TestHsv", "methodName" => "testHsb")));
	}
	public function testStrings() {
		utest_Assert::equals("hsv(0,0%,100%)", thx_color__Hsv_Hsv_Impl_::toString((new _hx_array(array(0, 0, 1)))), null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 25, "className" => "thx.color.TestHsv", "methodName" => "testStrings")));
	}
	public function testFromString() {
		$tmp = thx_color__Hsv_Hsv_Impl_::equals((new _hx_array(array(0.5, 0.2, 0.1))), thx_color__Hsv_Hsv_Impl_::fromString("hsv(50%,0.2,10%)"));
		utest_Assert::isTrue($tmp, null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 29, "className" => "thx.color.TestHsv", "methodName" => "testFromString")));
		$tmp1 = thx_color__Hsva_Hsva_Impl_::equals((new _hx_array(array(0.5, 0.2, 0.1, 0.3))), thx_color__Hsva_Hsva_Impl_::fromString("hsva(50%,0.2,10%,0.3)"));
		utest_Assert::isTrue($tmp1, null, _hx_anonymous(array("fileName" => "TestHsv.hx", "lineNumber" => 30, "className" => "thx.color.TestHsv", "methodName" => "testFromString")));
	}
	function __toString() { return 'thx.color.TestHsv'; }
}
