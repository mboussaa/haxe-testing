<?php

// Generated by Haxe 3.3.0
class thx_color_TestRgb {
	public function __construct() {}
	public function testBasics() {
		$red = 16711680;
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_red($red), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 11, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_green($red), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 12, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_blue($red), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 13, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$green = 65280;
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_red($green), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 16, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_green($green), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 17, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_blue($green), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 18, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$blue = 255;
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_red($blue), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 21, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_green($blue), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 22, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_blue($blue), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 23, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$cyan = 65535;
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_red($cyan), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 26, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_green($cyan), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 27, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_blue($cyan), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 28, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$yellow = 16776960;
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_red($yellow), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 31, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_green($yellow), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 32, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_blue($yellow), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 33, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$magenta = 16711935;
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_red($magenta), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 36, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_green($magenta), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 37, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_blue($magenta), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 38, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$white = 16777215;
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_red($white), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 41, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_green($white), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 42, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(255, thx_color__Rgb_Rgb_Impl_::get_blue($white), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 43, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		$black = 0;
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_red($black), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 46, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_green($black), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 47, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
		utest_Assert::equals(0, thx_color__Rgb_Rgb_Impl_::get_blue($black), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 48, "className" => "thx.color.TestRgb", "methodName" => "testBasics")));
	}
	public function testStrings() {
		$color = 43775;
		$tmp = thx_color__Rgb_Rgb_Impl_::toHex($color, null);
		utest_Assert::equals("#00AAFF", $tmp, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 53, "className" => "thx.color.TestRgb", "methodName" => "testStrings")));
		$tmp1 = thx_color__Rgb_Rgb_Impl_::toString($color);
		utest_Assert::equals("#00AAFF", $tmp1, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 54, "className" => "thx.color.TestRgb", "methodName" => "testStrings")));
		utest_Assert::equals("rgb(0,170,255)", thx_color__Rgb_Rgb_Impl_::toCss3($color), null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 55, "className" => "thx.color.TestRgb", "methodName" => "testStrings")));
	}
	public function testFromString() {
		$tmp = thx_color__Rgb_Rgb_Impl_::equals(16711680, thx_color__Rgb_Rgb_Impl_::fromString("#ff0000"));
		utest_Assert::isTrue($tmp, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 59, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp1 = thx_color__Rgb_Rgb_Impl_::equals(16711680, thx_color__Rgb_Rgb_Impl_::fromString("#f00"));
		utest_Assert::isTrue($tmp1, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 60, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp2 = thx_color__Rgb_Rgb_Impl_::equals(16711680, thx_color__Rgb_Rgb_Impl_::fromString("rgb(255,0,0)"));
		utest_Assert::isTrue($tmp2, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 61, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp3 = thx_color__Rgb_Rgb_Impl_::equals(16711680, thx_color__Rgb_Rgb_Impl_::fromString("rgb(100%,0,0)"));
		utest_Assert::isTrue($tmp3, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 62, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp4 = thx_color__Rgba_Rgba_Impl_::equals(16711935, thx_color__Rgba_Rgba_Impl_::fromString("#ff00ff00"));
		utest_Assert::isTrue($tmp4, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 64, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp5 = thx_color__Rgba_Rgba_Impl_::equals(16711935, thx_color__Rgba_Rgba_Impl_::fromString("#f0f0"));
		utest_Assert::isTrue($tmp5, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 65, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp6 = thx_color__Rgba_Rgba_Impl_::equals(16711935, thx_color__Rgba_Rgba_Impl_::fromString("rgba(0,255,0,1)"));
		utest_Assert::isTrue($tmp6, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 66, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
		$tmp7 = thx_color__Rgba_Rgba_Impl_::equals(16711935, thx_color__Rgba_Rgba_Impl_::fromString("rgba(0,100%,0,1)"));
		utest_Assert::isTrue($tmp7, null, _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 67, "className" => "thx.color.TestRgb", "methodName" => "testFromString")));
	}
	public function testCombineColor() {
		$tmp = thx_color__Rgb_Rgb_Impl_::fromInts((new _hx_array(array(255, 0, 0))));
		$rgba = thx_color__Rgb_Rgb_Impl_::withAlphaf($tmp, .42);
		$bg = thx_color__Rgb_Rgb_Impl_::fromInts((new _hx_array(array(153, 200, 224))));
		$combined = thx_color__Rgba_Rgba_Impl_::combineColor($rgba, $bg);
		$result = thx_color__Rgb_Rgb_Impl_::fromInts((new _hx_array(array(196, 116, 130))));
		$tmp1 = thx_color__Rgb_Rgb_Impl_::equals($result, $combined);
		$tmp2 = thx_color__Rgb_Rgb_Impl_::toString($result);
		$tmp3 = "expected " . _hx_string_or_null($tmp2) . " but it is ";
		$tmp4 = thx_color__Rgb_Rgb_Impl_::toString($combined);
		utest_Assert::isTrue($tmp1, _hx_string_or_null($tmp3) . _hx_string_or_null($tmp4), _hx_anonymous(array("fileName" => "TestRgb.hx", "lineNumber" => 76, "className" => "thx.color.TestRgb", "methodName" => "testCombineColor")));
	}
	function __toString() { return 'thx.color.TestRgb'; }
}
