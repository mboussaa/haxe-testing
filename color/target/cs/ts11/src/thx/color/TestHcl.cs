// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color {
	public class TestHcl : global::haxe.lang.HxObject {
		
		public TestHcl(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestHcl() {
			global::thx.color.TestHcl.__hx_ctor_thx_color_TestHcl(this);
		}
		
		
		public static void __hx_ctor_thx_color_TestHcl(global::thx.color.TestHcl __temp_me160) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.color.TestHcl(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.color.TestHcl();
		}
		
		
		public virtual void testParse() {
			unchecked {
				global::Array<double> hcl = global::thx.color._LCh.LCh_Impl_.fromString("hcl(0.5,0,1)");
				global::utest.Assert.@equals(0.5, ((global::Array<double>) (hcl) )[2], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParse", "thx.color.TestHcl", "TestHcl.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				global::utest.Assert.@equals(0, ((global::Array<double>) (hcl) )[1], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParse", "thx.color.TestHcl", "TestHcl.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				global::utest.Assert.@equals(1, ((global::Array<double>) (hcl) )[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParse", "thx.color.TestHcl", "TestHcl.hx"}, new int[]{1981972957}, new double[]{((double) (13) )}));
			}
		}
		
		
		public virtual void testStrings() {
			unchecked {
				global::utest.Assert.@equals("hcl(0,0.5,1)", global::thx.color._LCh.LCh_Impl_.toHclString(((global::Array<double>) (new global::Array<double>(new double[]{((double) (1) ), 0.5, ((double) (0) )})) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStrings", "thx.color.TestHcl", "TestHcl.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 901545040:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testStrings", 901545040)) );
					}
					
					
					case 106417793:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParse", 106417793)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 901545040:
					{
						this.testStrings();
						break;
					}
					
					
					case 106417793:
					{
						this.testParse();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


