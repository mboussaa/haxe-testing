// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color {
	public class TestHsv : global::haxe.lang.HxObject {
		
		public TestHsv(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestHsv() {
			global::thx.color.TestHsv.__hx_ctor_thx_color_TestHsv(this);
		}
		
		
		public static void __hx_ctor_thx_color_TestHsv(global::thx.color.TestHsv __temp_me160) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.color.TestHsv(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.color.TestHsv();
		}
		
		
		public virtual void testBasics() {
			unchecked {
				global::Array<double> hsv = ((global::Array<double>) (new global::Array<double>(new double[]{((double) (1) ), ((double) (0) ), ((double) (0) )})) );
				global::utest.Assert.@equals(1, ((global::Array<double>) (hsv) )[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				global::utest.Assert.@equals(0, ((global::Array<double>) (hsv) )[1], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				global::utest.Assert.@equals(0, ((global::Array<double>) (hsv) )[2], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (13) )}));
			}
		}
		
		
		public virtual void testHsb() {
			unchecked {
				global::Array<double> hsb = ((global::Array<double>) (new global::Array<double>(new double[]{((double) (1) ), ((double) (0) ), ((double) (0) )})) );
				global::utest.Assert.@equals(1, ((global::Array<double>) (hsb) )[0], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHsb", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
				global::utest.Assert.@equals(0, ((global::Array<double>) (hsb) )[1], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHsb", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (19) )}));
				global::utest.Assert.@equals(0, ((global::Array<double>) (hsb) )[2], null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHsb", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
			}
		}
		
		
		public virtual void testStrings() {
			unchecked {
				global::utest.Assert.@equals("hsv(0,0%,100%)", global::thx.color._Hsv.Hsv_Impl_.toString(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (0) ), ((double) (1) )})) )), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStrings", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
			}
		}
		
		
		public virtual void testFromString() {
			unchecked {
				global::utest.Assert.isTrue(global::thx.color._Hsv.Hsv_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{0.5, 0.2, 0.1})) ), global::thx.color._Hsv.Hsv_Impl_.fromString("hsv(50%,0.2,10%)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (29) )}));
				global::utest.Assert.isTrue(global::thx.color._Hsva.Hsva_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{0.5, 0.2, 0.1, 0.3})) ), global::thx.color._Hsva.Hsva_Impl_.fromString("hsva(50%,0.2,10%,0.3)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestHsv", "TestHsv.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1952928973:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFromString", 1952928973)) );
					}
					
					
					case 901545040:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testStrings", 901545040)) );
					}
					
					
					case 1035845061:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testHsb", 1035845061)) );
					}
					
					
					case 1847555063:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBasics", 1847555063)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1952928973:
					{
						this.testFromString();
						break;
					}
					
					
					case 901545040:
					{
						this.testStrings();
						break;
					}
					
					
					case 1035845061:
					{
						this.testHsb();
						break;
					}
					
					
					case 1847555063:
					{
						this.testBasics();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


