// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color {
	public class TestRgbx : global::haxe.lang.HxObject {
		
		public TestRgbx(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestRgbx(int i) {
			global::thx.color.TestRgbx.__hx_ctor_thx_color_TestRgbx(this, i);
		}
		
		
		public static void __hx_ctor_thx_color_TestRgbx(global::thx.color.TestRgbx __temp_me160, int i) {
			__temp_me160.x = i;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.color.TestRgbx(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.color.TestRgbx(((int) (global::haxe.lang.Runtime.toInt(arr[0])) ));
		}
		
		
		public int x;
		
		public virtual void testBasics() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::Array<double> red = ((global::Array<double>) (new global::Array<double>(new double[]{((double) (1) ), ((double) (0) ), ((double) (0) )})) );
					global::utest.Assert.@equals(255, global::thx.color._Rgbx.Rgbx_Impl_.get_red(red), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
					global::utest.Assert.@equals(0, global::thx.color._Rgbx.Rgbx_Impl_.get_green(red), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
					global::utest.Assert.@equals(0, global::thx.color._Rgbx.Rgbx_Impl_.get_blue(red), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBasics", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
				}
				
			}
		}
		
		
		public virtual void testStrings() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::Array<double> color = ((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (0) ), ((double) (1) )})) );
					global::utest.Assert.@equals("rgb(0%,0%,100%)", global::thx.color._Rgbx.Rgbx_Impl_.toCss3(color), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStrings", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
					global::utest.Assert.@equals("#0000FF", global::thx.color._Rgbx.Rgbx_Impl_.toHex(color, null), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStrings", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (24) )}));
					global::utest.Assert.@equals("rgb(0%,0%,100%)", global::thx.color._Rgbx.Rgbx_Impl_.toString(color), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStrings", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (25) )}));
				}
				
			}
		}
		
		
		public virtual void testFromString() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::utest.Assert.isTrue(global::thx.color._Rgbx.Rgbx_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) )})) ), global::thx.color._Rgbx.Rgbx_Impl_.fromString("#00ff00")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (30) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbx.Rgbx_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) )})) ), global::thx.color._Rgbx.Rgbx_Impl_.fromString("#0f0")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (31) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbx.Rgbx_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) )})) ), global::thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,100%,0)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (32) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbx.Rgbx_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) )})) ), global::thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,255,0)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (33) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbxa.Rgbxa_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) ), ((double) (1) )})) ), global::thx.color._Rgbxa.Rgbxa_Impl_.fromString("#ff00ff00")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbxa.Rgbxa_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) ), ((double) (1) )})) ), global::thx.color._Rgbxa.Rgbxa_Impl_.fromString("#f0f0")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (35) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbxa.Rgbxa_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) ), 0.5})) ), global::thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,255,0,50%)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (36) )}));
					global::utest.Assert.isTrue(global::thx.color._Rgbxa.Rgbxa_Impl_.@equals(((global::Array<double>) (new global::Array<double>(new double[]{((double) (0) ), ((double) (1) ), ((double) (0) ), 0.5})) ), global::thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,100%,0,0.5)")), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testFromString", "thx.color.TestRgbx", "TestRgbx.hx"}, new int[]{1981972957}, new double[]{((double) (37) )}));
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1952928973:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testFromString", 1952928973)) );
					}
					
					
					case 901545040:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testStrings", 901545040)) );
					}
					
					
					case 1847555063:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBasics", 1847555063)) );
					}
					
					
					case 120:
					{
						return this.x;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						return ((double) (this.x) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1952928973:
					{
						this.testFromString();
						break;
					}
					
					
					case 901545040:
					{
						this.testStrings();
						break;
					}
					
					
					case 1847555063:
					{
						this.testBasics();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("x");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


