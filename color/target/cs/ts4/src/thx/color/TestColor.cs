// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color {
	public class TestColor : global::haxe.lang.HxObject {
		
		public TestColor(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestColor() {
			global::thx.color.TestColor.__hx_ctor_thx_color_TestColor(this);
		}
		
		
		public static void __hx_ctor_thx_color_TestColor(global::thx.color.TestColor __temp_me161) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.color.TestColor(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.color.TestColor();
		}
		
		
		public virtual void testParseHex() {
			unchecked {
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("#ff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (11) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa((global::thx.color._Rgb.Rgb_Impl_.withAlpha(global::thx.color.palettes.Web.red, 0)).@value), global::thx.color.Color.parse("#00ff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("#FF0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (13) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa((global::thx.color._Rgb.Rgb_Impl_.withAlpha(global::thx.color.palettes.Web.red, 0)).@value), global::thx.color.Color.parse("#00FF0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("ff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (15) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa((global::thx.color._Rgb.Rgb_Impl_.withAlpha(global::thx.color.palettes.Web.red, 0)).@value), global::thx.color.Color.parse("00ff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("0xff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (17) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa((global::thx.color._Rgb.Rgb_Impl_.withAlpha(global::thx.color.palettes.Web.red, 0)).@value), global::thx.color.Color.parse("0x00ff0000"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHex", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (18) )}));
			}
		}
		
		
		public virtual void testParseGrey() {
			unchecked {
				this.assertEquals(global::thx.color._Grey.Grey_Impl_.toRgbxa(((double) (0.5) )), global::thx.color.Color.parse("grey(0.5)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseGrey", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (22) )}));
				this.assertEquals(global::thx.color._Grey.Grey_Impl_.toRgbxa(((double) (0.5) )), global::thx.color.Color.parse("grey(50%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseGrey", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (23) )}));
			}
		}
		
		
		public virtual void testParseCmyk() {
			unchecked {
				this.assertEquals(global::thx.color._Cmyk.Cmyk_Impl_.toRgbxa(((global::Array<double>) (new global::Array<double>(new double[]{((double) (1) ), 0.5, 0.25, 0.1})) )), global::thx.color.Color.parse("cmyk(100%,0.5,25%,0.1)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseCmyk", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (27) )}));
			}
		}
		
		
		public virtual void testParseHsl() {
			unchecked {
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsl(0,100%,50%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsl", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (31) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsl(0deg,100%,50%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsl", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (32) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsla(0deg,100%,50%,1)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsl", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (33) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsla(0,100%,50%,100%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsl", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (34) )}));
			}
		}
		
		
		public virtual void testParseHsv() {
			unchecked {
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsv(0,100%, 100%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsv", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (38) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("hsv(0deg,100%,100%)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseHsv", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (39) )}));
			}
		}
		
		
		public virtual void testParseRgb() {
			unchecked {
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("rgb(255,0,0)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseRgb", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (43) )}));
				this.assertEquals(global::thx.color._Rgb.Rgb_Impl_.toRgbxa(global::thx.color.palettes.Web.red), global::thx.color.Color.parse("rgb(100%,0,0)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseRgb", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (44) )}));
				this.assertEquals(global::thx.color._Rgbx.Rgbx_Impl_.toRgbxa(((global::Array<double>) (new global::Array<double>(new double[]{0.5, ((double) (0) ), ((double) (0) )})) )), global::thx.color.Color.parse("rgb(0.5,0,0)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseRgb", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (45) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (16711935) )), global::thx.color.Color.parse("rgba(0,255,0,1)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseRgb", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
				this.assertEquals(global::thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (16711935) )), global::thx.color.Color.parse("rgba(0,100%,0,1)"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testParseRgb", "thx.color.TestColor", "TestColor.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
			}
		}
		
		
		public virtual void assertEquals(global::Array<double> a, global::Array<double> b, object pos) {
			global::utest.Assert.isTrue(global::thx.color._Rgbxa.Rgbxa_Impl_.@equals(a, b), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("expected ", global::thx.color._Rgbxa.Rgbxa_Impl_.toString(a)), " but was "), global::thx.color._Rgbxa.Rgbxa_Impl_.toString(b)), pos);
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 752681381:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "assertEquals", 752681381)) );
					}
					
					
					case 1233128204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseRgb", 1233128204)) );
					}
					
					
					case 1232633610:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseHsv", 1232633610)) );
					}
					
					
					case 1232633600:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseHsl", 1232633600)) );
					}
					
					
					case 2091126301:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseCmyk", 2091126301)) );
					}
					
					
					case 2135728768:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseGrey", 2135728768)) );
					}
					
					
					case 1232630490:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testParseHex", 1232630490)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 752681381:
					{
						this.assertEquals(((global::Array<double>) (global::Array<object>.__hx_cast<double>(((global::Array) (dynargs[0]) ))) ), ((global::Array<double>) (global::Array<object>.__hx_cast<double>(((global::Array) (dynargs[1]) ))) ), dynargs[2]);
						break;
					}
					
					
					case 1233128204:
					{
						this.testParseRgb();
						break;
					}
					
					
					case 1232633610:
					{
						this.testParseHsv();
						break;
					}
					
					
					case 1232633600:
					{
						this.testParseHsl();
						break;
					}
					
					
					case 2091126301:
					{
						this.testParseCmyk();
						break;
					}
					
					
					case 2135728768:
					{
						this.testParseGrey();
						break;
					}
					
					
					case 1232630490:
					{
						this.testParseHex();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


