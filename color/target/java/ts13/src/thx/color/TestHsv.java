// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestHsv extends haxe.lang.HxObject
{
	public TestHsv(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestHsv()
	{
		//line 7 "/shared/color/test/thx/color/TestHsv.hx"
		thx.color.TestHsv.__hx_ctor_thx_color_TestHsv(this);
	}
	
	
	public static void __hx_ctor_thx_color_TestHsv(thx.color.TestHsv __temp_me140)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/color/test/thx/color/TestHsv.hx"
		return new thx.color.TestHsv(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/color/test/thx/color/TestHsv.hx"
		return new thx.color.TestHsv();
	}
	
	
	public void testBasics()
	{
		//line 10 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
		//line 10 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> hsv = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 11 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(1, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsv) ).__get(0))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(0, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsv) ).__get(1))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(0, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsv) ).__get(2))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
	}
	
	
	public void testHsb()
	{
		//line 17 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
		//line 17 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> hsb = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 18 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(1, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsb) ).__get(0))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testHsb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
		//line 19 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(0, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsb) ).__get(1))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testHsb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		//line 20 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals(0, ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (hsb) ).__get(2))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testHsb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
	}
	
	
	public void testStrings()
	{
		//line 24 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 24 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> hsv = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 25 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.equals("hsv(0,0%,100%)", thx.color._Hsv.Hsv_Impl_.toString(hsv), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
	}
	
	
	public void testFromString()
	{
		//line 29 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.5) ), ((java.lang.Object) (0.2) ), ((java.lang.Object) (0.1) )});
		//line 29 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.isTrue(thx.color._Hsv.Hsv_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this1) ), thx.color._Hsv.Hsv_Impl_.fromString("hsv(50%,0.2,10%)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 30 "/shared/color/test/thx/color/TestHsv.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.5) ), ((java.lang.Object) (0.2) ), ((java.lang.Object) (0.1) ), ((java.lang.Object) (0.3) )});
		//line 30 "/shared/color/test/thx/color/TestHsv.hx"
		utest.Assert.isTrue(thx.color._Hsva.Hsva_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this2) ), thx.color._Hsva.Hsva_Impl_.fromString("hsva(50%,0.2,10%,0.3)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestHsv", "TestHsv.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/color/test/thx/color/TestHsv.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testStrings")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case -1422477627:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testHsb")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHsb")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestHsv.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/color/test/thx/color/TestHsv.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/color/test/thx/color/TestHsv.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						this.testFromString();
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						this.testBasics();
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						this.testStrings();
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
				case -1422477627:
				{
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					if (field.equals("testHsb")) 
					{
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestHsv.hx"
						this.testHsb();
					}
					
					//line 6 "/shared/color/test/thx/color/TestHsv.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestHsv.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestHsv.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/color/test/thx/color/TestHsv.hx"
		return null;
	}
	
	
}


