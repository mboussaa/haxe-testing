// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Color extends haxe.lang.HxObject
{
	static
	{
		//line 11 "/shared/thx.color/src/thx/color/Color.hx"
		thx.color.Color.namedColors = new haxe.ds.StringMap<haxe.root.Array<java.lang.Object>>();
	}
	
	public Color(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Color()
	{
		//line 10 "/shared/thx.color/src/thx/color/Color.hx"
		thx.color.Color.__hx_ctor_thx_color_Color(this);
	}
	
	
	public static void __hx_ctor_thx_color_Color(thx.color.Color __temp_me115)
	{
	}
	
	
	public static haxe.ds.StringMap<haxe.root.Array<java.lang.Object>> namedColors;
	
	public static haxe.root.Array<java.lang.Object> parse(java.lang.String color)
	{
		//line 17 "/shared/thx.color/src/thx/color/Color.hx"
		thx.color.parse.ColorInfo info = thx.color.parse.ColorParser.parseHex(color);
		//line 18 "/shared/thx.color/src/thx/color/Color.hx"
		if (( null == info )) 
		{
			//line 19 "/shared/thx.color/src/thx/color/Color.hx"
			info = thx.color.parse.ColorParser.parseColor(color);
		}
		
		//line 20 "/shared/thx.color/src/thx/color/Color.hx"
		if (( null == info )) 
		{
			//line 21 "/shared/thx.color/src/thx/color/Color.hx"
			haxe.root.Array<java.lang.Object> rgb = ((haxe.root.Array<java.lang.Object>) (thx.color.Color.namedColors.get(color)) );
			//line 22 "/shared/thx.color/src/thx/color/Color.hx"
			if (( null == rgb )) 
			{
				//line 23 "/shared/thx.color/src/thx/color/Color.hx"
				return null;
			}
			else
			{
				//line 25 "/shared/thx.color/src/thx/color/Color.hx"
				return thx.color._Rgbx.Rgbx_Impl_.toRgbxa(rgb);
			}
			
		}
		
		//line 28 "/shared/thx.color/src/thx/color/Color.hx"
		try 
		{
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			java.lang.String _g = info.name;
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			{
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				java.lang.String __temp_svar3 = (_g);
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				int __temp_hash5 = __temp_svar3.hashCode();
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				boolean __temp_executeDef4 = true;
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				switch (__temp_hash5)
				{
					case 119193:
					case -1360583558:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 119193 ) && __temp_svar3.equals("xyz") )) || __temp_svar3.equals("ciexyz") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Xyz.Xyz_Impl_.toRgbxa(thx.color._Xyz.Xyz_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 120122:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("yxy")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Yxy.Yxy_Impl_.toRgbxa(thx.color._Yxy.Yxy_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 98639:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("cmy")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Cmy.Cmy_Impl_.toRgbxa(thx.color._Cmy.Cmy_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 120026:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("yuv")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Yuv.Yuv_Impl_.toRgbxa(thx.color._Yuv.Yuv_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 3057916:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("cmyk")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Cmyk.Cmyk_Impl_.toRgbxa(thx.color._Cmyk.Cmyk_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 4, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 3498292:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("rgba")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Rgbxa.Rgbxa_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 4, true));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case -1027232407:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("cubehelix")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._CubeHelix.CubeHelix_Impl_.toRgbxa(thx.color._CubeHelix.CubeHelix_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 112845:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("rgb")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Rgbx.Rgbx_Impl_.toRgbxa(thx.color._Rgbx.Rgbx_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, true)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 3181279:
					case 3181155:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 3181279 ) && __temp_svar3.equals("grey") )) || __temp_svar3.equals("gray") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Grey.Grey_Impl_.toRgbxa(((double) (haxe.lang.Runtime.toDouble(thx.color.parse.ColorParser.getFloatChannels(info.channels, 1, false).__get(0))) ));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 107533:
					case -1360595218:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 107533 ) && __temp_svar3.equals("luv") )) || __temp_svar3.equals("cieluv") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Luv.Luv_Impl_.toRgbxa(thx.color._Luv.Luv_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 103121:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("hcl")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 44 "/shared/thx.color/src/thx/color/Color.hx"
							haxe.root.Array<java.lang.Object> c = thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false);
							//line 45 "/shared/thx.color/src/thx/color/Color.hx"
							haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (((double) (haxe.lang.Runtime.toDouble(c.__get(2))) )) ), ((java.lang.Object) (((double) (haxe.lang.Runtime.toDouble(c.__get(1))) )) ), ((java.lang.Object) (((double) (haxe.lang.Runtime.toDouble(c.__get(0))) )) )});
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._LCh.LCh_Impl_.toRgbxa(((haxe.root.Array<java.lang.Object>) (this1) ));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 106961:
					case -1360595790:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 106961 ) && __temp_svar3.equals("lch") )) || __temp_svar3.equals("cielch") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._LCh.LCh_Impl_.toRgbxa(thx.color._LCh.LCh_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 103627:
					case 103607:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 103627 ) && __temp_svar3.equals("hsv") )) || __temp_svar3.equals("hsb") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Hsv.Hsv_Impl_.toRgbxa(thx.color._Hsv.Hsv_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 106893:
					case -1360595858:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (( (( ( __temp_hash5 == 106893 ) && __temp_svar3.equals("lab") )) || __temp_svar3.equals("cielab") )) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Lab.Lab_Impl_.toRgbxa(thx.color._Lab.Lab_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 103617:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("hsl")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Hsl.Hsl_Impl_.toRgbxa(thx.color._Hsl.Hsl_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 3, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 1012593165:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("hunterlab")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._HunterLab.HunterLab_Impl_.toRgbxa(thx.color._HunterLab.HunterLab_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 4, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 3212224:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("hsla")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Hsla.Hsla_Impl_.toRgbxa(thx.color._Hsla.Hsla_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 4, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
					case 3212534:
					{
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						if (__temp_svar3.equals("hsva")) 
						{
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							__temp_executeDef4 = false;
							//line 28 "/shared/thx.color/src/thx/color/Color.hx"
							return thx.color._Hsva.Hsva_Impl_.toRgbxa(thx.color._Hsva.Hsva_Impl_.fromFloats(thx.color.parse.ColorParser.getFloatChannels(info.channels, 4, false)));
						}
						
						//line 28 "/shared/thx.color/src/thx/color/Color.hx"
						break;
					}
					
					
				}
				
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				if (__temp_executeDef4) 
				{
					//line 28 "/shared/thx.color/src/thx/color/Color.hx"
					return null;
				}
				else
				{
					//line 28 "/shared/thx.color/src/thx/color/Color.hx"
					throw null;
				}
				
			}
			
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 28 "/shared/thx.color/src/thx/color/Color.hx"
			{
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				java.lang.Object e = __temp_catchall2;
				//line 28 "/shared/thx.color/src/thx/color/Color.hx"
				return null;
			}
			
		}
		
		
	}
	
	
	public static void addRgbPalette(haxe.ds.StringMap<java.lang.Object> palette)
	{
		//line 72 "/shared/thx.color/src/thx/color/Color.hx"
		((haxe.root.Array<java.lang.Object>) (thx.Maps.tuples(((haxe.IMap<java.lang.String, java.lang.Object>) (((haxe.IMap) (((haxe.IMap<java.lang.String, java.lang.Object>) (palette) )) )) ))) ).map(((haxe.lang.Function) (( (( thx.color.Color_addRgbPalette_72__Fun.__hx_current != null )) ? (thx.color.Color_addRgbPalette_72__Fun.__hx_current) : (thx.color.Color_addRgbPalette_72__Fun.__hx_current = ((thx.color.Color_addRgbPalette_72__Fun) (new thx.color.Color_addRgbPalette_72__Fun()) )) )) ));
	}
	
	
	public static void addLabPalette(haxe.ds.StringMap<haxe.root.Array<java.lang.Object>> palette)
	{
		//line 75 "/shared/thx.color/src/thx/color/Color.hx"
		((haxe.root.Array<java.lang.Object>) (thx.Maps.tuples(((haxe.IMap<java.lang.String, haxe.root.Array<java.lang.Object>>) (palette) ))) ).map(((haxe.lang.Function) (( (( thx.color.Color_addLabPalette_75__Fun.__hx_current != null )) ? (thx.color.Color_addLabPalette_75__Fun.__hx_current) : (thx.color.Color_addLabPalette_75__Fun.__hx_current = ((thx.color.Color_addLabPalette_75__Fun) (new thx.color.Color_addLabPalette_75__Fun()) )) )) ));
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/shared/thx.color/src/thx/color/Color.hx"
		return new thx.color.Color(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/shared/thx.color/src/thx/color/Color.hx"
		return new thx.color.Color();
	}
	
	
}


