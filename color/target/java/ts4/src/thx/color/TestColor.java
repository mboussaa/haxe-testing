// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestColor extends haxe.lang.HxObject
{
	public TestColor(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestColor(int i)
	{
		//line 9 "/shared/color/test/thx/color/TestColor.hx"
		thx.color.TestColor.__hx_ctor_thx_color_TestColor(this, i);
	}
	
	
	public static void __hx_ctor_thx_color_TestColor(thx.color.TestColor __temp_me141, int i)
	{
		//line 10 "/shared/color/test/thx/color/TestColor.hx"
		__temp_me141.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		return new thx.color.TestColor(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		return new thx.color.TestColor(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testParseHex()
	{
		//line 14 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 14 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 14 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 14 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 15 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("#ff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (15) )) )}));
			//line 16 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.withAlpha(thx.color.palettes.Web.red, 0))) )), thx.color.Color.parse("#00ff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
			//line 17 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("#FF0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
			//line 18 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.withAlpha(thx.color.palettes.Web.red, 0))) )), thx.color.Color.parse("#00FF0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
			//line 19 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("ff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
			//line 20 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.withAlpha(thx.color.palettes.Web.red, 0))) )), thx.color.Color.parse("00ff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			//line 21 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("0xff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
			//line 22 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.withAlpha(thx.color.palettes.Web.red, 0))) )), thx.color.Color.parse("0x00ff0000"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHex"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
		}
		
	}
	
	
	public void testParseGrey()
	{
		//line 26 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 26 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 26 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 26 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 27 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Grey.Grey_Impl_.toRgbxa(((double) (0.5) )), thx.color.Color.parse("grey(0.5)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseGrey"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
			//line 28 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Grey.Grey_Impl_.toRgbxa(((double) (0.5) )), thx.color.Color.parse("grey(50%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseGrey"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		}
		
	}
	
	
	public void testParseCmyk()
	{
		//line 32 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 32 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 32 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 32 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 33 "/shared/color/test/thx/color/TestColor.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0.5) ), ((java.lang.Object) (0.25) ), ((java.lang.Object) (0.1) )});
			//line 33 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Cmyk.Cmyk_Impl_.toRgbxa(((haxe.root.Array<java.lang.Object>) (this1) )), thx.color.Color.parse("cmyk(100%,0.5,25%,0.1)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseCmyk"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		}
		
	}
	
	
	public void testParseHsl()
	{
		//line 37 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 37 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 37 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 37 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 38 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsl(0,100%,50%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsl"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
			//line 39 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsl(0deg,100%,50%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsl"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
			//line 40 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsla(0deg,100%,50%,1)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsl"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )}));
			//line 41 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsla(0,100%,50%,100%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsl"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
		}
		
	}
	
	
	public void testParseHsv()
	{
		//line 45 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 45 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 45 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 45 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 46 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsv(0,100%, 100%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsv"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
			//line 47 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("hsv(0deg,100%,100%)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseHsv"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
		}
		
	}
	
	
	public void testParseRgb()
	{
		//line 51 "/shared/color/test/thx/color/TestColor.hx"
		int _g1 = 0;
		//line 51 "/shared/color/test/thx/color/TestColor.hx"
		int _g = this.x;
		//line 51 "/shared/color/test/thx/color/TestColor.hx"
		while (( _g1 < _g ))
		{
			//line 51 "/shared/color/test/thx/color/TestColor.hx"
			 ++ _g1;
			//line 52 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("rgb(255,0,0)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseRgb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
			//line 53 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgb.Rgb_Impl_.toRgbxa(thx.color.palettes.Web.red), thx.color.Color.parse("rgb(100%,0,0)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseRgb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
			//line 54 "/shared/color/test/thx/color/TestColor.hx"
			haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.5) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
			//line 54 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgbx.Rgbx_Impl_.toRgbxa(((haxe.root.Array<java.lang.Object>) (this1) )), thx.color.Color.parse("rgb(0.5,0,0)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseRgb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (54) )) )}));
			//line 55 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (16711935) )), thx.color.Color.parse("rgba(0,255,0,1)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseRgb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
			//line 56 "/shared/color/test/thx/color/TestColor.hx"
			this.assertEquals(thx.color._Rgba.Rgba_Impl_.toRgbxa(((int) (16711935) )), thx.color.Color.parse("rgba(0,100%,0,1)"), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestColor", "TestColor.hx", "testParseRgb"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (56) )) )}));
		}
		
	}
	
	
	public void assertEquals(haxe.root.Array<java.lang.Object> a, haxe.root.Array<java.lang.Object> b, java.lang.Object pos)
	{
		//line 60 "/shared/color/test/thx/color/TestColor.hx"
		utest.Assert.isTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(a, b), ( ( ( "expected " + thx.color._Rgbxa.Rgbxa_Impl_.toString(a) ) + " but was " ) + thx.color._Rgbxa.Rgbxa_Impl_.toString(b) ), pos);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.x = ((int) (value) );
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return value;
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return value;
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			switch (field.hashCode())
			{
				case -1076899163:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("assertEquals")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "assertEquals")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 120:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return this.x;
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902132172:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseRgb")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseRgb")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122522:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHex")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseHex")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122954:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHsv")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseHsv")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case -1163761728:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseGrey")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseGrey")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122944:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHsl")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseHsl")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case -1163885091:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseCmyk")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParseCmyk")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("x")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						return ((double) (this.x) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			switch (field.hashCode())
			{
				case -1076899163:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("assertEquals")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.assertEquals(((haxe.root.Array<java.lang.Object>) (dynargs.__get(0)) ), ((haxe.root.Array<java.lang.Object>) (dynargs.__get(1)) ), dynargs.__get(2));
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122522:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHex")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseHex();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902132172:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseRgb")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseRgb();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case -1163761728:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseGrey")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseGrey();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122954:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHsv")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseHsv();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case -1163885091:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseCmyk")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseCmyk();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
				case 1902122944:
				{
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					if (field.equals("testParseHsl")) 
					{
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestColor.hx"
						this.testParseHsl();
					}
					
					//line 7 "/shared/color/test/thx/color/TestColor.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestColor.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		baseArr.push("x");
		//line 7 "/shared/color/test/thx/color/TestColor.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestColor.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


