// Generated by Haxe 3.3.0
package utest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestHandler<T> extends haxe.lang.HxObject
{
	static
	{
		//line 6 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.TestHandler.POLLING_TIME = 10;
	}
	
	public TestHandler(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestHandler(utest.TestFixture fixture)
	{
		//line 18 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.TestHandler.__hx_ctor_utest_TestHandler(((utest.TestHandler<T>) (this) ), ((utest.TestFixture) (fixture) ));
	}
	
	
	public static <T_c> void __hx_ctor_utest_TestHandler(utest.TestHandler<T_c> __temp_me159, utest.TestFixture fixture)
	{
		//line 19 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		if (( fixture == null )) 
		{
			//line 19 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			throw haxe.lang.HaxeException.wrap("fixture argument is null");
		}
		
		//line 20 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.fixture = fixture;
		//line 21 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.results = new haxe.root.List<utest.Assertation>();
		//line 22 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.asyncStack = new haxe.root.List();
		//line 23 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.onTested = new utest.Dispatcher<utest.TestHandler<T_c>>();
		//line 24 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.onTimeout = new utest.Dispatcher<utest.TestHandler<T_c>>();
		//line 25 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.onComplete = new utest.Dispatcher<utest.TestHandler<T_c>>();
		//line 26 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		__temp_me159.onPrecheck = new utest.Dispatcher<utest.TestHandler<T_c>>();
	}
	
	
	public static int POLLING_TIME;
	
	public static haxe.root.Array<haxe.StackItem> exceptionStack(java.lang.Object pops)
	{
		//line 45 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		int __temp_pops158 = ( (haxe.lang.Runtime.eq(pops, null)) ? (2) : (((int) (haxe.lang.Runtime.toInt(pops)) )) );
		//line 46 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		haxe.root.Array<haxe.StackItem> stack = haxe.CallStack.exceptionStack();
		//line 47 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		while (( __temp_pops158-- > 0 ))
		{
			//line 49 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			stack.pop();
		}
		
		//line 51 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return stack;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return new utest.TestHandler<java.lang.Object>(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return new utest.TestHandler<java.lang.Object>(((utest.TestFixture) (arr.__get(0)) ));
	}
	
	
	public haxe.root.List<utest.Assertation> results;
	
	public utest.TestFixture fixture;
	
	public haxe.root.List asyncStack;
	
	public utest.Dispatcher<utest.TestHandler<T>> onTested;
	
	public utest.Dispatcher<utest.TestHandler<T>> onTimeout;
	
	public utest.Dispatcher<utest.TestHandler<T>> onComplete;
	
	public utest.Dispatcher<utest.TestHandler<T>> onPrecheck;
	
	public haxe.lang.Function precheck;
	
	public void execute()
	{
		//line 30 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		try 
		{
			//line 31 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			this.executeMethod(this.fixture.setup);
			//line 33 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			try 
			{
				//line 33 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				this.executeMethod(this.fixture.method);
			}
			catch (java.lang.Throwable __temp_catchallException3)
			{
				//line 33 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				haxe.lang.Exceptions.setException(__temp_catchallException3);
				//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				java.lang.Object __temp_catchall4 = __temp_catchallException3;
				//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				if (( __temp_catchall4 instanceof haxe.lang.HaxeException )) 
				{
					//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					__temp_catchall4 = ((haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
				}
				
				//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				{
					//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					java.lang.Object e = __temp_catchall4;
					//line 35 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					this.results.add(utest.Assertation.Error(e, utest.TestHandler.exceptionStack(null)));
				}
				
			}
			
			
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 30 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			{
				//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				java.lang.Object e1 = __temp_catchall2;
				//line 38 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				this.results.add(utest.Assertation.SetupError(e1, utest.TestHandler.exceptionStack(null)));
			}
			
		}
		
		
		//line 40 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.onPrecheck.dispatch(this);
		//line 41 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.checkTested();
	}
	
	
	public void checkTested()
	{
		//line 56 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		if (( haxe.lang.Runtime.eq(this.expireson, null) || ( this.asyncStack.length == 0 ) )) 
		{
			//line 57 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			this.tested();
		}
		else
		{
			//line 58 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (( haxe.lang.Runtime.compare(haxe.Timer.stamp(), this.expireson) > 0 )) 
			{
				//line 59 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				this.timeout();
			}
			else
			{
				//line 61 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				haxe.Timer.delay(((haxe.lang.Function) (new haxe.lang.Closure(this, "checkTested")) ), 10);
			}
			
		}
		
	}
	
	
	public java.lang.Object expireson;
	
	public void setTimeout(int timeout)
	{
		//line 73 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		double newexpire = ( haxe.Timer.stamp() + ( ((double) (timeout) ) / 1000 ) );
		//line 74 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.expireson = ( (haxe.lang.Runtime.eq(this.expireson, null)) ? (newexpire) : (( (( haxe.lang.Runtime.compare(newexpire, this.expireson) > 0 )) ? (newexpire) : (this.expireson) )) );
	}
	
	
	public void bindHandler()
	{
		//line 78 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.results = this.results;
		//line 79 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.createAsync = ((haxe.lang.Function) (new haxe.lang.Closure(this, "addAsync")) );
		//line 80 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.createEvent = ((haxe.lang.Function) (new haxe.lang.Closure(this, "addEvent")) );
	}
	
	
	public void unbindHandler()
	{
		//line 84 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.results = null;
		//line 85 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.createAsync = ( (( utest.TestHandler_unbindHandler_85__Fun.__hx_current != null )) ? (utest.TestHandler_unbindHandler_85__Fun.__hx_current) : (utest.TestHandler_unbindHandler_85__Fun.__hx_current = ((utest.TestHandler_unbindHandler_85__Fun) (new utest.TestHandler_unbindHandler_85__Fun()) )) );
		//line 86 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.Assert.createEvent = ( (( utest.TestHandler_unbindHandler_86__Fun.__hx_current != null )) ? (utest.TestHandler_unbindHandler_86__Fun.__hx_current) : (utest.TestHandler_unbindHandler_86__Fun.__hx_current = ((utest.TestHandler_unbindHandler_86__Fun) (new utest.TestHandler_unbindHandler_86__Fun()) )) );
	}
	
	
	public haxe.lang.Function addAsync(haxe.lang.Function f, java.lang.Object timeout)
	{
		//line 113 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		int __temp_timeout156 = ( (haxe.lang.Runtime.eq(timeout, null)) ? (250) : (((int) (haxe.lang.Runtime.toInt(timeout)) )) );
		//line 114 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		if (( null == f )) 
		{
			//line 115 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			f = ( (( utest.TestHandler_addAsync_115__Fun.__hx_current != null )) ? (utest.TestHandler_addAsync_115__Fun.__hx_current) : (utest.TestHandler_addAsync_115__Fun.__hx_current = ((utest.TestHandler_addAsync_115__Fun) (new utest.TestHandler_addAsync_115__Fun()) )) );
		}
		
		//line 116 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.asyncStack.add(f);
		//line 117 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.TestHandler<T> handler = this;
		//line 118 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.setTimeout(__temp_timeout156);
		//line 119 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return new utest.TestHandler_addAsync_119__Fun<T>(handler, f);
	}
	
	
	public <EventArg> haxe.lang.Function addEvent(haxe.lang.Function f, java.lang.Object timeout)
	{
		//line 133 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		int __temp_timeout157 = ( (haxe.lang.Runtime.eq(timeout, null)) ? (250) : (((int) (haxe.lang.Runtime.toInt(timeout)) )) );
		//line 134 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.asyncStack.add(f);
		//line 135 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		utest.TestHandler<T> handler = this;
		//line 136 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.setTimeout(__temp_timeout157);
		//line 137 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return new utest.TestHandler_addEvent_137__Fun<T, EventArg>(handler, f);
	}
	
	
	public void executeMethod(java.lang.String name)
	{
		//line 152 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		if (( name == null )) 
		{
			//line 152 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			return ;
		}
		
		//line 153 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.bindHandler();
		//line 154 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		haxe.root.Reflect.callMethod(this.fixture.target, haxe.root.Reflect.field(this.fixture.target, name), new haxe.root.Array(new java.lang.Object[]{}));
	}
	
	
	public void tested()
	{
		//line 158 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		if (( this.results.length == 0 )) 
		{
			//line 159 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			this.results.add(utest.Assertation.Warning("no assertions"));
		}
		
		//line 160 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.onTested.dispatch(this);
		//line 161 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.completed();
	}
	
	
	public void timeout()
	{
		//line 165 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.results.add(utest.Assertation.TimeoutError(this.asyncStack.length, new haxe.root.Array<haxe.StackItem>(new haxe.StackItem[]{})));
		//line 166 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.onTimeout.dispatch(this);
		//line 167 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.completed();
	}
	
	
	public void completed()
	{
		//line 172 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		try 
		{
			//line 172 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			this.executeMethod(this.fixture.teardown);
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 172 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			{
				//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				java.lang.Object e = __temp_catchall2;
				//line 174 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				this.results.add(utest.Assertation.TeardownError(e, utest.TestHandler.exceptionStack(2)));
			}
			
		}
		
		
		//line 176 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.unbindHandler();
		//line 177 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		this.onComplete.dispatch(this);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			switch (field.hashCode())
			{
				case 250198035:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("expireson")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.expireson = ((java.lang.Object) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			switch (field.hashCode())
			{
				case 250198035:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("expireson")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.expireson = ((java.lang.Object) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1097546742:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("results")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.results = ((haxe.root.List<utest.Assertation>) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1291362235:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("precheck")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.precheck = ((haxe.lang.Function) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -843449847:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("fixture")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.fixture = ((utest.TestFixture) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.onPrecheck = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1398473364:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("asyncStack")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.asyncStack = ((haxe.root.List) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onComplete")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.onComplete = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1521240944:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onTested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.onTested = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 22367874:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onTimeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.onTimeout = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			switch (field.hashCode())
			{
				case -1402931637:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("completed")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "completed")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1097546742:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("results")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.results;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1313911455:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("timeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "timeout")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -843449847:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("fixture")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.fixture;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -877169487:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("tested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "tested")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1398473364:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("asyncStack")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.asyncStack;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 686262454:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("executeMethod")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "executeMethod")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1521240944:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onTested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.onTested;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1259780487:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("addEvent")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addEvent")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 22367874:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onTimeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.onTimeout;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1263544741:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("addAsync")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addAsync")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onComplete")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.onComplete;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1472463892:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("unbindHandler")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "unbindHandler")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.onPrecheck;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 126680141:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("bindHandler")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "bindHandler")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1291362235:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("precheck")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.precheck;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1659754143:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("setTimeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setTimeout")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1319569547:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("execute")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "execute")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 250198035:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("expireson")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.expireson;
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 783441881:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("checkTested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "checkTested")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			switch (field.hashCode())
			{
				case 250198035:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("expireson")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.expireson)) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			switch (field.hashCode())
			{
				case -1402931637:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("completed")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.completed();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1319569547:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("execute")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.execute();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1313911455:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("timeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.timeout();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 783441881:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("checkTested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.checkTested();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -877169487:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("tested")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.tested();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1659754143:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("setTimeout")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.setTimeout(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 686262454:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("executeMethod")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.executeMethod(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 126680141:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("bindHandler")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.bindHandler();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1259780487:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("addEvent")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return ((haxe.lang.Function) (this.addEvent(((haxe.lang.Function) (dynargs.__get(0)) ), ((java.lang.Object) (dynargs.__get(1)) ))) );
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case 1472463892:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("unbindHandler")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						this.unbindHandler();
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
				case -1263544741:
				{
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					if (field.equals("addAsync")) 
					{
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
						return this.addAsync(((haxe.lang.Function) (dynargs.__get(0)) ), dynargs.__get(1));
					}
					
					//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("expireson");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("precheck");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("onPrecheck");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("onComplete");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("onTimeout");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("onTested");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("asyncStack");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("fixture");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		baseArr.push("results");
		//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
		{
			//line 5 "/usr/lib/haxe/lib/utest/1,4,1/src/utest/TestHandler.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


