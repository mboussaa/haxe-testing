// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ArrayInts extends haxe.lang.HxObject
{
	public ArrayInts(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public ArrayInts()
	{
		//line 1224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		thx.ArrayInts.__hx_ctor_thx_ArrayInts(this);
	}
	
	
	public static void __hx_ctor_thx_ArrayInts(thx.ArrayInts __temp_me51)
	{
	}
	
	
	public static java.lang.Object average(haxe.root.Array<java.lang.Object> arr)
	{
		//line 1229 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ( ((double) (haxe.lang.Runtime.toDouble(thx.ArrayInts.sum(arr))) ) / ((double) (arr.length) ) );
	}
	
	
	public static java.lang.Object max(haxe.root.Array<java.lang.Object> arr)
	{
		//line 1235 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (thx.Options.get(((haxe.ds.Option) (thx.Arrays.maxBy(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (arr) )) ), ((haxe.lang.Function) (thx.Ints.order) ))) ))) );
	}
	
	
	public static java.lang.Object min(haxe.root.Array<java.lang.Object> arr)
	{
		//line 1241 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((java.lang.Object) (thx.Options.get(((haxe.ds.Option) (thx.Arrays.minBy(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (arr) )) ), ((haxe.lang.Function) (thx.Ints.order) ))) ))) );
	}
	
	
	public static haxe.root.Array<java.lang.Object> resize(haxe.root.Array<java.lang.Object> array, int length, java.lang.Object fill)
	{
		//line 1249 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		int __temp_fill50 = ( (haxe.lang.Runtime.eq(fill, null)) ? (0) : (((int) (haxe.lang.Runtime.toInt(fill)) )) );
		//line 1250 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		while (( array.length < length ))
		{
			//line 1251 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
			array.push(__temp_fill50);
		}
		
		//line 1252 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		array.splice(length, ( array.length - length ));
		//line 1253 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return array;
	}
	
	
	public static java.lang.Object sum(haxe.root.Array<java.lang.Object> arr)
	{
		//line 1260 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return ((int) (haxe.lang.Runtime.toInt(thx.Arrays.reduce(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (arr) )) ), ((haxe.lang.Function) (( (( thx.ArrayInts_sum_1260__Fun.__hx_current != null )) ? (thx.ArrayInts_sum_1260__Fun.__hx_current) : (thx.ArrayInts_sum_1260__Fun.__hx_current = ((thx.ArrayInts_sum_1260__Fun) (new thx.ArrayInts_sum_1260__Fun()) )) )) ), ((java.lang.Object) (0) )))) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 1224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return new thx.ArrayInts(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 1224 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return new thx.ArrayInts();
	}
	
	
}


