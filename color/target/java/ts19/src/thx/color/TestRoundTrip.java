// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRoundTrip extends haxe.lang.HxObject
{
	public TestRoundTrip(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRoundTrip(int i)
	{
		//line 13 "/shared/color/test/thx/color/TestRoundTrip.hx"
		thx.color.TestRoundTrip.__hx_ctor_thx_color_TestRoundTrip(this, i);
	}
	
	
	public static void __hx_ctor_thx_color_TestRoundTrip(thx.color.TestRoundTrip __temp_me140, int i)
	{
		//line 14 "/shared/color/test/thx/color/TestRoundTrip.hx"
		__temp_me140.x = i;
		//line 16 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.05) ), ((java.lang.Object) (0.10) ), ((java.lang.Object) (0.15) )});
		//line 16 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> tmp = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 17 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
		//line 17 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> tmp1 = ((haxe.root.Array<java.lang.Object>) (this2) );
		//line 18 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 18 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> tmp2 = ((haxe.root.Array<java.lang.Object>) (this3) );
		//line 19 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.2) ), ((java.lang.Object) (0.2) ), ((java.lang.Object) (1) )});
		//line 19 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> tmp3 = ((haxe.root.Array<java.lang.Object>) (this4) );
		//line 20 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.9) ), ((java.lang.Object) (0.9) ), ((java.lang.Object) (1) )});
		//line 20 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> tmp4 = ((haxe.root.Array<java.lang.Object>) (this5) );
		//line 21 "/shared/color/test/thx/color/TestRoundTrip.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.2) ), ((java.lang.Object) (0.4) ), ((java.lang.Object) (0.52) )});
		//line 15 "/shared/color/test/thx/color/TestRoundTrip.hx"
		__temp_me140.tests = ((haxe.root.Array<java.lang.Object>) (new haxe.root.Array<haxe.root.Array<java.lang.Object>>(new haxe.root.Array[]{tmp, tmp1, tmp2, tmp3, tmp4, ((haxe.root.Array<java.lang.Object>) (this6) )}).map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip___hx_ctor_thx_color_TestRoundTrip_23__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip___hx_ctor_thx_color_TestRoundTrip_23__Fun.__hx_current) : (thx.color.TestRoundTrip___hx_ctor_thx_color_TestRoundTrip_23__Fun.__hx_current = ((thx.color.TestRoundTrip___hx_ctor_thx_color_TestRoundTrip_23__Fun) (new thx.color.TestRoundTrip___hx_ctor_thx_color_TestRoundTrip_23__Fun()) )) )) ))) );
	}
	
	
	public static void assertRgbx(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 290 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Rgbx.Rgbx_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Rgbx.Rgbx_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Rgbx.Rgbx_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertLab(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 295 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Lab.Lab_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Lab.Lab_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Lab.Lab_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertLCh(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 300 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._LCh.LCh_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._LCh.LCh_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._LCh.LCh_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertCmy(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 305 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Cmy.Cmy_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Cmy.Cmy_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Cmy.Cmy_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertCmyk(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 310 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Cmyk.Cmyk_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Cmyk.Cmyk_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Cmyk.Cmyk_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertCubeHelix(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 315 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._CubeHelix.CubeHelix_Impl_.nearEquals(e, t, 0.1), ( ( ( ( ( "\n      " + thx.color._CubeHelix.CubeHelix_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._CubeHelix.CubeHelix_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertHsl(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 320 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Hsl.Hsl_Impl_.nearEquals(e, t, 0.1), ( ( ( ( ( "\n      " + thx.color._Hsl.Hsl_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Hsl.Hsl_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertHsv(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 325 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Hsv.Hsv_Impl_.nearEquals(e, t, 0.1), ( ( ( ( ( "\n      " + thx.color._Hsv.Hsv_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Hsv.Hsv_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertXyz(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 330 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Xyz.Xyz_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Xyz.Xyz_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Xyz.Xyz_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertYuv(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 335 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Yuv.Yuv_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Yuv.Yuv_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Yuv.Yuv_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static void assertYxy(haxe.root.Array<java.lang.Object> e, haxe.root.Array<java.lang.Object> t, java.lang.String s, java.lang.Object pos)
	{
		//line 340 "/shared/color/test/thx/color/TestRoundTrip.hx"
		utest.Assert.isTrue(thx.color._Yxy.Yxy_Impl_.nearEquals(e, t, 0.01), ( ( ( ( ( "\n      " + thx.color._Yxy.Yxy_Impl_.toString(e) ) + " expected, but was\n      " ) + thx.color._Yxy.Yxy_Impl_.toString(t) ) + " for\n      " ) + s ), pos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		return new thx.color.TestRoundTrip(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		return new thx.color.TestRoundTrip(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public haxe.root.Array<java.lang.Object> tests;
	
	public void testRgbxRoundtrip()
	{
		//line 59 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 59 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 59 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 59 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 60 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testRgbxRoundtrip_61__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testRgbxRoundtrip_61__Fun.__hx_current) : (thx.color.TestRoundTrip_testRgbxRoundtrip_61__Fun.__hx_current = ((thx.color.TestRoundTrip_testRgbxRoundtrip_61__Fun) (new thx.color.TestRoundTrip_testRgbxRoundtrip_61__Fun()) )) )) ));
		}
		
	}
	
	
	public void testLabRoundtrip()
	{
		//line 78 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 78 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 78 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 78 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 79 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testLabRoundtrip_80__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testLabRoundtrip_80__Fun.__hx_current) : (thx.color.TestRoundTrip_testLabRoundtrip_80__Fun.__hx_current = ((thx.color.TestRoundTrip_testLabRoundtrip_80__Fun) (new thx.color.TestRoundTrip_testLabRoundtrip_80__Fun()) )) )) ));
		}
		
	}
	
	
	public void testLChRoundtrip()
	{
		//line 96 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 96 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 96 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 96 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 97 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testLChRoundtrip_98__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testLChRoundtrip_98__Fun.__hx_current) : (thx.color.TestRoundTrip_testLChRoundtrip_98__Fun.__hx_current = ((thx.color.TestRoundTrip_testLChRoundtrip_98__Fun) (new thx.color.TestRoundTrip_testLChRoundtrip_98__Fun()) )) )) ));
		}
		
	}
	
	
	public void testCmyRoundtrip()
	{
		//line 114 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 114 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 114 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 114 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 115 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testCmyRoundtrip_116__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testCmyRoundtrip_116__Fun.__hx_current) : (thx.color.TestRoundTrip_testCmyRoundtrip_116__Fun.__hx_current = ((thx.color.TestRoundTrip_testCmyRoundtrip_116__Fun) (new thx.color.TestRoundTrip_testCmyRoundtrip_116__Fun()) )) )) ));
		}
		
	}
	
	
	public void testCmykRoundtrip()
	{
		//line 132 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 132 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 132 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 132 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 133 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testCmykRoundtrip_134__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testCmykRoundtrip_134__Fun.__hx_current) : (thx.color.TestRoundTrip_testCmykRoundtrip_134__Fun.__hx_current = ((thx.color.TestRoundTrip_testCmykRoundtrip_134__Fun) (new thx.color.TestRoundTrip_testCmykRoundtrip_134__Fun()) )) )) ));
		}
		
	}
	
	
	public void testCubeHelixRoundtrip()
	{
		//line 150 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 150 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 150 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 150 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 151 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testCubeHelixRoundtrip_152__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testCubeHelixRoundtrip_152__Fun.__hx_current) : (thx.color.TestRoundTrip_testCubeHelixRoundtrip_152__Fun.__hx_current = ((thx.color.TestRoundTrip_testCubeHelixRoundtrip_152__Fun) (new thx.color.TestRoundTrip_testCubeHelixRoundtrip_152__Fun()) )) )) ));
		}
		
	}
	
	
	public void testHslRoundtrip()
	{
		//line 168 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 168 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 168 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 168 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 169 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testHslRoundtrip_170__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testHslRoundtrip_170__Fun.__hx_current) : (thx.color.TestRoundTrip_testHslRoundtrip_170__Fun.__hx_current = ((thx.color.TestRoundTrip_testHslRoundtrip_170__Fun) (new thx.color.TestRoundTrip_testHslRoundtrip_170__Fun()) )) )) ));
		}
		
	}
	
	
	public void testHsvRoundtrip()
	{
		//line 186 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 186 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 186 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 186 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 187 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testHsvRoundtrip_188__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testHsvRoundtrip_188__Fun.__hx_current) : (thx.color.TestRoundTrip_testHsvRoundtrip_188__Fun.__hx_current = ((thx.color.TestRoundTrip_testHsvRoundtrip_188__Fun) (new thx.color.TestRoundTrip_testHsvRoundtrip_188__Fun()) )) )) ));
		}
		
	}
	
	
	public void testXyzRoundtrip()
	{
		//line 204 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 204 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 204 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 204 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 205 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testXyzRoundtrip_206__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testXyzRoundtrip_206__Fun.__hx_current) : (thx.color.TestRoundTrip_testXyzRoundtrip_206__Fun.__hx_current = ((thx.color.TestRoundTrip_testXyzRoundtrip_206__Fun) (new thx.color.TestRoundTrip_testXyzRoundtrip_206__Fun()) )) )) ));
		}
		
	}
	
	
	public void testYuvRoundtrip()
	{
		//line 222 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 222 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 222 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 222 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 223 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testYuvRoundtrip_224__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testYuvRoundtrip_224__Fun.__hx_current) : (thx.color.TestRoundTrip_testYuvRoundtrip_224__Fun.__hx_current = ((thx.color.TestRoundTrip_testYuvRoundtrip_224__Fun) (new thx.color.TestRoundTrip_testYuvRoundtrip_224__Fun()) )) )) ));
		}
		
	}
	
	
	public void testYxyRoundtrip()
	{
		//line 240 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 240 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 240 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 240 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 241 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testYxyRoundtrip_242__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testYxyRoundtrip_242__Fun.__hx_current) : (thx.color.TestRoundTrip_testYxyRoundtrip_242__Fun.__hx_current = ((thx.color.TestRoundTrip_testYxyRoundtrip_242__Fun) (new thx.color.TestRoundTrip_testYxyRoundtrip_242__Fun()) )) )) ));
		}
		
	}
	
	
	public void testToStringRoundtrip()
	{
		//line 258 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g1 = 0;
		//line 258 "/shared/color/test/thx/color/TestRoundTrip.hx"
		int _g = this.x;
		//line 258 "/shared/color/test/thx/color/TestRoundTrip.hx"
		while (( _g1 < _g ))
		{
			//line 258 "/shared/color/test/thx/color/TestRoundTrip.hx"
			 ++ _g1;
			//line 259 "/shared/color/test/thx/color/TestRoundTrip.hx"
			this.tests.map(((haxe.lang.Function) (( (( thx.color.TestRoundTrip_testToStringRoundtrip_260__Fun.__hx_current != null )) ? (thx.color.TestRoundTrip_testToStringRoundtrip_260__Fun.__hx_current) : (thx.color.TestRoundTrip_testToStringRoundtrip_260__Fun.__hx_current = ((thx.color.TestRoundTrip_testToStringRoundtrip_260__Fun) (new thx.color.TestRoundTrip_testToStringRoundtrip_260__Fun()) )) )) ));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("x")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.x = ((int) (value) );
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return value;
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			switch (field.hashCode())
			{
				case 110251553:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("tests")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.tests = ((haxe.root.Array<java.lang.Object>) (value) );
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return value;
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 120:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("x")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return value;
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			switch (field.hashCode())
			{
				case 1738991413:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testToStringRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToStringRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 120:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("x")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return this.x;
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1718974389:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testYxyRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testYxyRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 110251553:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("tests")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return this.tests;
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -33547093:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testYuvRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testYuvRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1187767754:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testRgbxRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testRgbxRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 453445324:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testXyzRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testXyzRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -497030824:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testLabRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testLabRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 1365949402:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testHsvRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHsvRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 692821364:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testLChRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testLChRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -963882844:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testHslRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHslRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1972198442:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCmyRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCmyRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 864269212:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCubeHelixRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCubeHelixRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -427693659:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCmykRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCmykRoundtrip")) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("x")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						return ((double) (this.x) );
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			switch (field.hashCode())
			{
				case 1738991413:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testToStringRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testToStringRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1187767754:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testRgbxRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testRgbxRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1718974389:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testYxyRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testYxyRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -497030824:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testLabRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testLabRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -33547093:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testYuvRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testYuvRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 692821364:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testLChRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testLChRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 453445324:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testXyzRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testXyzRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -1972198442:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCmyRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testCmyRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 1365949402:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testHsvRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testHsvRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -427693659:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCmykRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testCmykRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case -963882844:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testHslRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testHslRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
				case 864269212:
				{
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					if (field.equals("testCubeHelixRoundtrip")) 
					{
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
						this.testCubeHelixRoundtrip();
					}
					
					//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		baseArr.push("tests");
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		baseArr.push("x");
		//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
		{
			//line 10 "/shared/color/test/thx/color/TestRoundTrip.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


