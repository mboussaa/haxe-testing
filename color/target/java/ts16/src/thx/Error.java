// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Error extends haxe.lang.HxObject
{
	public Error(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Error(java.lang.String message, haxe.root.Array<haxe.StackItem> stack, java.lang.Object pos)
	{
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		thx.Error.__hx_ctor_thx_Error(this, message, stack, pos);
	}
	
	
	public static void __hx_ctor_thx_Error(thx.Error __temp_me61, java.lang.String message, haxe.root.Array<haxe.StackItem> stack, java.lang.Object pos)
	{
		//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		__temp_me61.message = message;
		//line 49 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		if (( null == stack )) 
		{
			//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			try 
			{
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				stack = haxe.CallStack.exceptionStack();
			}
			catch (java.lang.Throwable __temp_catchallException1)
			{
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				haxe.lang.Exceptions.setException(__temp_catchallException1);
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				java.lang.Object __temp_catchall2 = __temp_catchallException1;
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
				{
					//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
				}
				
				//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				{
					//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					java.lang.Object e = __temp_catchall2;
					//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					stack = new haxe.root.Array<haxe.StackItem>(new haxe.StackItem[]{});
				}
				
			}
			
			
			//line 51 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (( stack.length == 0 )) 
			{
				//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				try 
				{
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					stack = haxe.CallStack.callStack();
				}
				catch (java.lang.Throwable __temp_catchallException3)
				{
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					haxe.lang.Exceptions.setException(__temp_catchallException3);
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					java.lang.Object __temp_catchall4 = __temp_catchallException3;
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (( __temp_catchall4 instanceof haxe.lang.HaxeException )) 
					{
						//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_catchall4 = ((haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
					}
					
					//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					{
						//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						java.lang.Object e1 = __temp_catchall4;
						//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						stack = new haxe.root.Array<haxe.StackItem>(new haxe.StackItem[]{});
					}
					
				}
				
				
			}
			
		}
		
		//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		__temp_me61.stackItems = stack;
		//line 55 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		__temp_me61.pos = pos;
	}
	
	
	public static thx.Error fromDynamic(java.lang.Object err, java.lang.Object pos)
	{
		//line 18 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		if (( err instanceof thx.Error )) 
		{
			//line 19 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			return ((thx.Error) (err) );
		}
		
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return new thx.error.ErrorWrapper(( "" + haxe.root.Std.string(err) ), err, null, pos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return new thx.Error(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return new thx.Error(haxe.lang.Runtime.toString(arr.__get(0)), ((haxe.root.Array<haxe.StackItem>) (arr.__get(1)) ), arr.__get(2));
	}
	
	
	public java.lang.String message;
	
	public java.lang.Object pos;
	
	public haxe.root.Array<haxe.StackItem> stackItems;
	
	@Override public java.lang.String toString()
	{
		//line 59 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return ( ( ( ( this.message + "\nfrom: " ) + this.getPosition() ) + "\n\n" ) + this.stackToString() );
	}
	
	
	public java.lang.String getPosition()
	{
		//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return ( ( ( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.pos, "className", true)) + "." ) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.pos, "methodName", true)) ) + "() at " ) + ((int) (haxe.lang.Runtime.getField_f(this.pos, "lineNumber", true)) ) );
	}
	
	
	public java.lang.String stackToString()
	{
		//line 65 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		return haxe.CallStack.toString(this.stackItems);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			switch (field.hashCode())
			{
				case 111188:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("pos")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						this.pos = ((java.lang.Object) (value) );
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return value;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			switch (field.hashCode())
			{
				case 2016184856:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("stackItems")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						this.stackItems = ((haxe.root.Array<haxe.StackItem>) (value) );
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return value;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case 954925063:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("message")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						this.message = haxe.lang.Runtime.toString(value);
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return value;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("pos")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						this.pos = ((java.lang.Object) (value) );
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return value;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			switch (field.hashCode())
			{
				case 385118484:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("stackToString")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "stackToString")) );
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case 954925063:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("message")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.message;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case -1469262177:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("getPosition")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getPosition")) );
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("pos")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.pos;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case -1776922004:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("toString")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case 2016184856:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("stackItems")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.stackItems;
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			switch (field.hashCode())
			{
				case 111188:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("pos")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.pos)) );
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			boolean __temp_executeDef1 = true;
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			switch (field.hashCode())
			{
				case 385118484:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("stackToString")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.stackToString();
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case -1776922004:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("toString")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.toString();
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
				case -1469262177:
				{
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					if (field.equals("getPosition")) 
					{
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						__temp_executeDef1 = false;
						//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
						return this.getPosition();
					}
					
					//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
					break;
				}
				
				
			}
			
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			if (__temp_executeDef1) 
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		baseArr.push("stackItems");
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		baseArr.push("pos");
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		baseArr.push("message");
		//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
		{
			//line 11 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Error.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


