// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRgbx extends haxe.lang.HxObject
{
	public TestRgbx(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRgbx()
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		thx.color.TestRgbx.__hx_ctor_thx_color_TestRgbx(this);
	}
	
	
	public static void __hx_ctor_thx_color_TestRgbx(thx.color.TestRgbx __temp_me140)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
		return new thx.color.TestRgbx(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
		return new thx.color.TestRgbx();
	}
	
	
	public void testBasics()
	{
		//line 10 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
		//line 10 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> red = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 11 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals(255, thx.color._Rgbx.Rgbx_Impl_.get_red(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals(0, thx.color._Rgbx.Rgbx_Impl_.get_green(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals(0, thx.color._Rgbx.Rgbx_Impl_.get_blue(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
	}
	
	
	public void testStrings()
	{
		//line 17 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 17 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> color = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 18 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals("rgb(0%,0%,100%)", thx.color._Rgbx.Rgbx_Impl_.toCss3(color), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
		//line 19 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals("#0000FF", thx.color._Rgbx.Rgbx_Impl_.toHex(color, null), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		//line 20 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.equals("rgb(0%,0%,100%)", thx.color._Rgbx.Rgbx_Impl_.toString(color), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
	}
	
	
	public void testFromString()
	{
		//line 24 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 24 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this1) ), thx.color._Rgbx.Rgbx_Impl_.fromString("#00ff00")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
		//line 25 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 25 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this2) ), thx.color._Rgbx.Rgbx_Impl_.fromString("#0f0")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		//line 26 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 26 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this3) ), thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,100%,0)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		//line 27 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 27 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this4) ), thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,255,0)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
		//line 28 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 28 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this5) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("#ff00ff00")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 29 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 29 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this6) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("#f0f0")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 30 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0.5) )});
		//line 30 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this7) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,255,0,50%)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
		//line 31 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this8 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0.5) )});
		//line 31 "/shared/color/test/thx/color/TestRgbx.hx"
		utest.Assert.isTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this8) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,100%,0,0.5)")), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testStrings")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testFromString();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testBasics();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testStrings();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/color/test/thx/color/TestRgbx.hx"
		return null;
	}
	
	
}


