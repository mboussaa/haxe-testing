// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRgbx extends nanotest.NanoTestCase
{
	public TestRgbx(haxe.lang.EmptyObject empty)
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public TestRgbx(java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		thx.color.TestRgbx.__hx_ctor_thx_color_TestRgbx(this, posInfos);
	}
	
	
	public static void __hx_ctor_thx_color_TestRgbx(thx.color.TestRgbx __temp_me134, java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		nanotest.NanoTestCase.__hx_ctor_nanotest_NanoTestCase(__temp_me134, posInfos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		return new thx.color.TestRgbx(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		return new thx.color.TestRgbx(((java.lang.Object) (arr.__get(0)) ));
	}
	
	
	public void testBasics()
	{
		//line 11 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0) )});
		//line 11 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> red = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 12 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(((java.lang.Object) (255) ), ((java.lang.Object) (thx.color._Rgbx.Rgbx_Impl_.get_red(red)) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )})) ));
		//line 13 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(((java.lang.Object) (0) ), ((java.lang.Object) (thx.color._Rgbx.Rgbx_Impl_.get_green(red)) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )})) ));
		//line 14 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(((java.lang.Object) (0) ), ((java.lang.Object) (thx.color._Rgbx.Rgbx_Impl_.get_blue(red)) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )})) ));
	}
	
	
	public void testStrings()
	{
		//line 18 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 18 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> color = ((haxe.root.Array<java.lang.Object>) (this1) );
		//line 19 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(haxe.lang.Runtime.toString("rgb(0%,0%,100%)"), haxe.lang.Runtime.toString(thx.color._Rgbx.Rgbx_Impl_.toCss3(color)), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )})) ));
		//line 20 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(haxe.lang.Runtime.toString("#0000FF"), haxe.lang.Runtime.toString(thx.color._Rgbx.Rgbx_Impl_.toHex(color, null)), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )})) ));
		//line 21 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertEquals(haxe.lang.Runtime.toString("rgb(0%,0%,100%)"), haxe.lang.Runtime.toString(thx.color._Rgbx.Rgbx_Impl_.toString(color)), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )})) ));
	}
	
	
	public void testFromString()
	{
		//line 25 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 25 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this1) ), thx.color._Rgbx.Rgbx_Impl_.fromString("#00ff00")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		//line 26 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this2 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 26 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this2) ), thx.color._Rgbx.Rgbx_Impl_.fromString("#0f0")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		//line 27 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this3 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 27 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this3) ), thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,100%,0)")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
		//line 28 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) )});
		//line 28 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbx.Rgbx_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this4) ), thx.color._Rgbx.Rgbx_Impl_.fromString("rgb(0,255,0)")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 29 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this5 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 29 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this5) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("#ff00ff00")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 30 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this6 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (1) )});
		//line 30 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this6) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("#f0f0")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )}));
		//line 31 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this7 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0.5) )});
		//line 31 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this7) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,255,0,50%)")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		//line 32 "/shared/color/test/thx/color/TestRgbx.hx"
		haxe.root.Array<java.lang.Object> this8 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0) ), ((java.lang.Object) (1) ), ((java.lang.Object) (0) ), ((java.lang.Object) (0.5) )});
		//line 32 "/shared/color/test/thx/color/TestRgbx.hx"
		this.assertTrue(thx.color._Rgbxa.Rgbxa_Impl_.equals(((haxe.root.Array<java.lang.Object>) (this8) ), thx.color._Rgbxa.Rgbxa_Impl_.fromString("rgba(0,100%,0,0.5)")), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgbx", "TestRgbx.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testFromString")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testBasics")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testStrings")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testStrings")) );
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		{
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			boolean __temp_executeDef1 = true;
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			switch (field.hashCode())
			{
				case 1443991181:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testFromString")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testFromString();
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testBasics")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testBasics();
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					if (field.equals("testStrings")) 
					{
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						__temp_executeDef1 = false;
						//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
						this.testStrings();
					}
					
					//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
					break;
				}
				
				
			}
			
			//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
			if (__temp_executeDef1) 
			{
				//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 7 "/shared/color/test/thx/color/TestRgbx.hx"
		return null;
	}
	
	
}


