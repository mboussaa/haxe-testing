// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestRgb extends haxe.lang.HxObject
{
	public TestRgb(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestRgb()
	{
		//line 7 "/shared/color/test/thx/color/TestRgb.hx"
		thx.color.TestRgb.__hx_ctor_thx_color_TestRgb(this);
	}
	
	
	public static void __hx_ctor_thx_color_TestRgb(thx.color.TestRgb __temp_me140)
	{
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/color/test/thx/color/TestRgb.hx"
		return new thx.color.TestRgb(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/color/test/thx/color/TestRgb.hx"
		return new thx.color.TestRgb();
	}
	
	
	public void testBasics()
	{
		//line 10 "/shared/color/test/thx/color/TestRgb.hx"
		int red = ((int) (16711680) );
		//line 11 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_red(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
		//line 12 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_green(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )}));
		//line 13 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_blue(red), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )}));
		//line 15 "/shared/color/test/thx/color/TestRgb.hx"
		int green = ((int) (65280) );
		//line 16 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_red(green), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (16) )) )}));
		//line 17 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_green(green), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
		//line 18 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_blue(green), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )}));
		//line 20 "/shared/color/test/thx/color/TestRgb.hx"
		int blue = ((int) (255) );
		//line 21 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_red(blue), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (21) )) )}));
		//line 22 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_green(blue), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
		//line 23 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_blue(blue), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
		//line 25 "/shared/color/test/thx/color/TestRgb.hx"
		int cyan = ((int) (65535) );
		//line 26 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_red(cyan), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		//line 27 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_green(cyan), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
		//line 28 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_blue(cyan), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 30 "/shared/color/test/thx/color/TestRgb.hx"
		int yellow = ((int) (16776960) );
		//line 31 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_red(yellow), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		//line 32 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_green(yellow), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
		//line 33 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_blue(yellow), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 35 "/shared/color/test/thx/color/TestRgb.hx"
		int magenta = ((int) (16711935) );
		//line 36 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_red(magenta), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		//line 37 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_green(magenta), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (37) )) )}));
		//line 38 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_blue(magenta), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
		//line 40 "/shared/color/test/thx/color/TestRgb.hx"
		int white = ((int) (16777215) );
		//line 41 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_red(white), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
		//line 42 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_green(white), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
		//line 43 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(255, thx.color._Rgb.Rgb_Impl_.get_blue(white), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (43) )) )}));
		//line 45 "/shared/color/test/thx/color/TestRgb.hx"
		int black = ((int) (0) );
		//line 46 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_red(black), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (46) )) )}));
		//line 47 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_green(black), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
		//line 48 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals(0, thx.color._Rgb.Rgb_Impl_.get_blue(black), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (48) )) )}));
	}
	
	
	public void testStrings()
	{
		//line 52 "/shared/color/test/thx/color/TestRgb.hx"
		int color = ((int) (43775) );
		//line 53 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals("#00AAFF", thx.color._Rgb.Rgb_Impl_.toHex(color, null), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
		//line 54 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals("#00AAFF", thx.color._Rgb.Rgb_Impl_.toString(color), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (54) )) )}));
		//line 55 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.equals("rgb(0,170,255)", thx.color._Rgb.Rgb_Impl_.toCss3(color), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testStrings"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
	}
	
	
	public void testFromString()
	{
		//line 59 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgb.Rgb_Impl_.equals(((int) (16711680) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.fromString("#ff0000"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
		//line 60 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgb.Rgb_Impl_.equals(((int) (16711680) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.fromString("#f00"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (60) )) )}));
		//line 61 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgb.Rgb_Impl_.equals(((int) (16711680) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.fromString("rgb(255,0,0)"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
		//line 62 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgb.Rgb_Impl_.equals(((int) (16711680) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgb.Rgb_Impl_.fromString("rgb(100%,0,0)"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (62) )) )}));
		//line 64 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgba.Rgba_Impl_.equals(((int) (16711935) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgba.Rgba_Impl_.fromString("#ff00ff00"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (64) )) )}));
		//line 65 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgba.Rgba_Impl_.equals(((int) (16711935) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgba.Rgba_Impl_.fromString("#f0f0"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (65) )) )}));
		//line 66 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgba.Rgba_Impl_.equals(((int) (16711935) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgba.Rgba_Impl_.fromString("rgba(0,255,0,1)"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (66) )) )}));
		//line 67 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgba.Rgba_Impl_.equals(((int) (16711935) ), ((int) (haxe.lang.Runtime.toInt(thx.color._Rgba.Rgba_Impl_.fromString("rgba(0,100%,0,1)"))) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testFromString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
	}
	
	
	public void testCombineColor()
	{
		//line 71 "/shared/color/test/thx/color/TestRgb.hx"
		int rgba = thx.color._Rgb.Rgb_Impl_.withAlphaf(thx.color._Rgb.Rgb_Impl_.fromInts(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{255, 0, 0})), .42);
		//line 71 "/shared/color/test/thx/color/TestRgb.hx"
		int bg = thx.color._Rgb.Rgb_Impl_.fromInts(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{153, 200, 224}));
		//line 71 "/shared/color/test/thx/color/TestRgb.hx"
		int combined = thx.color._Rgba.Rgba_Impl_.combineColor(rgba, bg);
		//line 71 "/shared/color/test/thx/color/TestRgb.hx"
		int result = thx.color._Rgb.Rgb_Impl_.fromInts(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{196, 116, 130}));
		//line 76 "/shared/color/test/thx/color/TestRgb.hx"
		utest.Assert.isTrue(thx.color._Rgb.Rgb_Impl_.equals(result, combined), ( ( ( "expected " + thx.color._Rgb.Rgb_Impl_.toString(result) ) + " but it is " ) + thx.color._Rgb.Rgb_Impl_.toString(combined) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestRgb", "TestRgb.hx", "testCombineColor"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (76) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/color/test/thx/color/TestRgb.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			switch (field.hashCode())
			{
				case -1840251114:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testCombineColor")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCombineColor")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromString")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testStrings")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestRgb.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/color/test/thx/color/TestRgb.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/color/test/thx/color/TestRgb.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			switch (field.hashCode())
			{
				case -1840251114:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testCombineColor")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						this.testCombineColor();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						this.testBasics();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 1443991181:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testFromString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						this.testFromString();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
				case 2020609424:
				{
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					if (field.equals("testStrings")) 
					{
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestRgb.hx"
						this.testStrings();
					}
					
					//line 6 "/shared/color/test/thx/color/TestRgb.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestRgb.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestRgb.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/color/test/thx/color/TestRgb.hx"
		return null;
	}
	
	
}


