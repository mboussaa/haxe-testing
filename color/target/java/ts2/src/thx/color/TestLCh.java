// Generated by Haxe 3.3.0
package thx.color;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestLCh extends nanotest.NanoTestCase
{
	public TestLCh(haxe.lang.EmptyObject empty)
	{
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public TestLCh(java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		thx.color.TestLCh.__hx_ctor_thx_color_TestLCh(this, posInfos);
	}
	
	
	public static void __hx_ctor_thx_color_TestLCh(thx.color.TestLCh __temp_me134, java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		nanotest.NanoTestCase.__hx_ctor_nanotest_NanoTestCase(__temp_me134, posInfos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		return new thx.color.TestLCh(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		return new thx.color.TestLCh(((java.lang.Object) (arr.__get(0)) ));
	}
	
	
	public void testBasics()
	{
		//line 10 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.5) ), ((java.lang.Object) (0.4) ), ((java.lang.Object) (-10) )});
		//line 10 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> color = thx.color._LCh.LCh_Impl_.normalize(((haxe.root.Array<java.lang.Object>) (this1) ));
		//line 11 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertEquals(((java.lang.Object) (0.5) ), ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (color) ).__get(0))) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )})) ));
		//line 12 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertEquals(((java.lang.Object) (0.4) ), ((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (color) ).__get(1))) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (12) )) )})) ));
		//line 13 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertEquals(((java.lang.Object) (350) ), ((int) (((double) (haxe.lang.Runtime.toDouble(((haxe.root.Array<java.lang.Object>) (color) ).__get(2))) )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testBasics"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (13) )) )})) ));
	}
	
	
	public void testString()
	{
		//line 17 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> this1 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.5) ), ((java.lang.Object) (0.4) ), ((java.lang.Object) (-10) )});
		//line 17 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> color = thx.color._LCh.LCh_Impl_.normalize(((haxe.root.Array<java.lang.Object>) (this1) ));
		//line 18 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertEquals(haxe.lang.Runtime.toString("lch(0.5,0.4,350)"), haxe.lang.Runtime.toString(thx.color._LCh.LCh_Impl_.toString(color)), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (18) )) )})) ));
	}
	
	
	public void testParse()
	{
		//line 22 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> color = thx.color._LCh.LCh_Impl_.fromString("cielch(100,10,-10)");
		//line 23 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertEquals(haxe.lang.Runtime.toString("lch(100,10,-10)"), haxe.lang.Runtime.toString(thx.color._LCh.LCh_Impl_.toString(color)), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testParse"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )})) ));
	}
	
	
	public void testFromFloat()
	{
		//line 27 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> s = thx.color._LCh.LCh_Impl_.fromString("cielch(100,10,-10)");
		//line 27 "/shared/color/test/thx/color/TestLCh.hx"
		haxe.root.Array<java.lang.Object> f = thx.color._LCh.LCh_Impl_.fromFloats(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (100.0) ), ((java.lang.Object) (10.0) ), ((java.lang.Object) (-10.0) )}));
		//line 29 "/shared/color/test/thx/color/TestLCh.hx"
		this.assertTrue(thx.color._LCh.LCh_Impl_.equals(s, f), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.color.TestLCh", "TestLCh.hx", "testFromFloat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			switch (field.hashCode())
			{
				case 727069792:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testFromFloat")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromFloat")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testBasics")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case -1194528447:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testParse")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testParse")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case 1727748931:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testString")) );
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestLCh.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "/shared/color/test/thx/color/TestLCh.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		{
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			switch (field.hashCode())
			{
				case 727069792:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testFromFloat")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						this.testFromFloat();
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case 1223535927:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testBasics")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						this.testBasics();
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case -1194528447:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testParse")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						this.testParse();
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
				case 1727748931:
				{
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					if (field.equals("testString")) 
					{
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						__temp_executeDef1 = false;
						//line 6 "/shared/color/test/thx/color/TestLCh.hx"
						this.testString();
					}
					
					//line 6 "/shared/color/test/thx/color/TestLCh.hx"
					break;
				}
				
				
			}
			
			//line 6 "/shared/color/test/thx/color/TestLCh.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "/shared/color/test/thx/color/TestLCh.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "/shared/color/test/thx/color/TestLCh.hx"
		return null;
	}
	
	
}


