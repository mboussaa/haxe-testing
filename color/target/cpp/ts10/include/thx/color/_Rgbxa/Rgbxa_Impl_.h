// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_color__Rgbxa_Rgbxa_Impl_
#define INCLUDED_thx_color__Rgbxa_Rgbxa_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,color,_Rgbxa,Rgbxa_Impl_)

namespace thx{
namespace color{
namespace _Rgbxa{


class HXCPP_CLASS_ATTRIBUTES Rgbxa_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Rgbxa_Impl__obj OBJ_;
		Rgbxa_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.color._Rgbxa.Rgbxa_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.color._Rgbxa.Rgbxa_Impl_"); }
		static hx::ObjectPtr< Rgbxa_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Rgbxa_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Rgbxa_Impl_","\x36","\x82","\x6f","\x43"); }

		static ::Array< Float > create(Float red,Float green,Float blue,Float alpha);
		static ::Dynamic create_dyn();

		static ::Array< Float > fromFloats(::Array< Float > arr);
		static ::Dynamic fromFloats_dyn();

		static ::Array< Float > fromInts(::Array< Int > arr);
		static ::Dynamic fromInts_dyn();

		static ::Array< Float > fromInt(Int value);
		static ::Dynamic fromInt_dyn();

		static ::Array< Float > fromString(::String color);
		static ::Dynamic fromString_dyn();

		static ::Array< Float > _new(::Array< Float > channels);
		static ::Dynamic _new_dyn();

		static ::Array< Float > combineColor(::Array< Float > this1,::Array< Float > other);
		static ::Dynamic combineColor_dyn();

		static ::Array< Float > darker(::Array< Float > this1,Float t);
		static ::Dynamic darker_dyn();

		static ::Array< Float > lighter(::Array< Float > this1,Float t);
		static ::Dynamic lighter_dyn();

		static ::Array< Float > transparent(::Array< Float > this1,Float t);
		static ::Dynamic transparent_dyn();

		static ::Array< Float > opaque(::Array< Float > this1,Float t);
		static ::Dynamic opaque_dyn();

		static ::Array< Float > interpolate(::Array< Float > this1,::Array< Float > other,Float t);
		static ::Dynamic interpolate_dyn();

		static ::Array< Float > normalize(::Array< Float > this1);
		static ::Dynamic normalize_dyn();

		static ::Array< Float > roundTo(::Array< Float > this1,Int decimals);
		static ::Dynamic roundTo_dyn();

		static ::Array< Float > withAlpha(::Array< Float > this1,Float newalpha);
		static ::Dynamic withAlpha_dyn();

		static ::Array< Float > withRed(::Array< Float > this1,Int newred);
		static ::Dynamic withRed_dyn();

		static ::Array< Float > withGreen(::Array< Float > this1,Int newgreen);
		static ::Dynamic withGreen_dyn();

		static ::Array< Float > withBlue(::Array< Float > this1,Int newblue);
		static ::Dynamic withBlue_dyn();

		static ::String toCss3(::Array< Float > this1);
		static ::Dynamic toCss3_dyn();

		static ::String toString(::Array< Float > this1);
		static ::Dynamic toString_dyn();

		static ::String toHex(::Array< Float > this1,::String prefix);
		static ::Dynamic toHex_dyn();

		static Bool equals(::Array< Float > this1,::Array< Float > other);
		static ::Dynamic equals_dyn();

		static Bool nearEquals(::Array< Float > this1,::Array< Float > other, ::Dynamic tolerance);
		static ::Dynamic nearEquals_dyn();

		static ::Array< Float > toHsla(::Array< Float > this1);
		static ::Dynamic toHsla_dyn();

		static ::Array< Float > toHsva(::Array< Float > this1);
		static ::Dynamic toHsva_dyn();

		static Int toRgb(::Array< Float > this1);
		static ::Dynamic toRgb_dyn();

		static ::Array< Float > toRgbx(::Array< Float > this1);
		static ::Dynamic toRgbx_dyn();

		static Int toRgba(::Array< Float > this1);
		static ::Dynamic toRgba_dyn();

		static Int get_red(::Array< Float > this1);
		static ::Dynamic get_red_dyn();

		static Int get_green(::Array< Float > this1);
		static ::Dynamic get_green_dyn();

		static Int get_blue(::Array< Float > this1);
		static ::Dynamic get_blue_dyn();

		static Int get_alpha(::Array< Float > this1);
		static ::Dynamic get_alpha_dyn();

		static Float get_redf(::Array< Float > this1);
		static ::Dynamic get_redf_dyn();

		static Float get_greenf(::Array< Float > this1);
		static ::Dynamic get_greenf_dyn();

		static Float get_bluef(::Array< Float > this1);
		static ::Dynamic get_bluef_dyn();

		static Float get_alphaf(::Array< Float > this1);
		static ::Dynamic get_alphaf_dyn();

		static Bool get_inSpace(::Array< Float > this1);
		static ::Dynamic get_inSpace_dyn();

};

} // end namespace thx
} // end namespace color
} // end namespace _Rgbxa

#endif /* INCLUDED_thx_color__Rgbxa_Rgbxa_Impl_ */ 
