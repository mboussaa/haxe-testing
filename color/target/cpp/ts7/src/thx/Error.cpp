// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_CallStack
#include <haxe/CallStack.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_error_ErrorWrapper
#include <thx/error/ErrorWrapper.h>
#endif

namespace thx{

void Error_obj::__construct(::String message,::Array< ::Dynamic> stack, ::Dynamic pos){
            	HX_STACK_FRAME("thx.Error","new",0x42bf0830,"thx.Error.new","thx/Error.hx",43,0xbb227641)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(stack,"stack")
            	HX_STACK_ARG(pos,"pos")
HXLINE(  47)		this->message = message;
HXLINE(  49)		if (hx::IsNull( stack )) {
HXLINE(  50)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  50)				stack = ::haxe::CallStack_obj::exceptionStack();
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic e = _hx_e;
HXLINE(  50)					stack = ::Array_obj< ::Dynamic>::__new(0);
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
HXLINE(  51)			Bool _hx_tmp = (stack->length == (int)0);
HXDLIN(  51)			if (_hx_tmp) {
HXLINE(  52)				try {
            					HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  52)					stack = ::haxe::CallStack_obj::callStack();
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic e1 = _hx_e;
HXLINE(  52)						stack = ::Array_obj< ::Dynamic>::__new(0);
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            		}
HXLINE(  54)		this->stackItems = stack;
HXLINE(  55)		this->pos = pos;
            	}

Dynamic Error_obj::__CreateEmpty() { return new Error_obj; }

hx::ObjectPtr< Error_obj > Error_obj::__new(::String message,::Array< ::Dynamic> stack, ::Dynamic pos)
{
	hx::ObjectPtr< Error_obj > _hx_result = new Error_obj();
	_hx_result->__construct(message,stack,pos);
	return _hx_result;
}

Dynamic Error_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Error_obj > _hx_result = new Error_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

::String Error_obj::toString(){
            	HX_STACK_FRAME("thx.Error","toString",0x1d3746dc,"thx.Error.toString","thx/Error.hx",59,0xbb227641)
            	HX_STACK_THIS(this)
HXLINE(  59)		::String _hx_tmp = (this->message + HX_("\nfrom: ",1a,2a,9d,55));
HXDLIN(  59)		::String _hx_tmp1 = this->getPosition();
HXDLIN(  59)		::String _hx_tmp2 = ((_hx_tmp + _hx_tmp1) + HX_("\n\n",c0,08,00,00));
HXDLIN(  59)		::String _hx_tmp3 = this->stackToString();
HXDLIN(  59)		return (_hx_tmp2 + _hx_tmp3);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Error_obj,toString,return )

::String Error_obj::getPosition(){
            	HX_STACK_FRAME("thx.Error","getPosition",0x580deb2f,"thx.Error.getPosition","thx/Error.hx",62,0xbb227641)
            	HX_STACK_THIS(this)
HXLINE(  62)		return ((((( (::String)(this->pos->__Field(HX_("className",a3,92,3d,dc),hx::paccDynamic)) ) + HX_(".",2e,00,00,00)) + ( (::String)(this->pos->__Field(HX_("methodName",cc,19,0f,12),hx::paccDynamic)) )) + HX_("() at ",2e,0b,25,af)) + ( (Int)(this->pos->__Field(HX_("lineNumber",dd,81,22,76),hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Error_obj,getPosition,return )

::String Error_obj::stackToString(){
            	HX_STACK_FRAME("thx.Error","stackToString",0xa23d97e4,"thx.Error.stackToString","thx/Error.hx",65,0xbb227641)
            	HX_STACK_THIS(this)
HXLINE(  65)		return ::haxe::CallStack_obj::toString(this->stackItems);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Error_obj,stackToString,return )

 ::thx::Error Error_obj::fromDynamic( ::Dynamic err, ::Dynamic pos){
            	HX_STACK_FRAME("thx.Error","fromDynamic",0x35758b05,"thx.Error.fromDynamic","thx/Error.hx",17,0xbb227641)
            	HX_STACK_ARG(err,"err")
            	HX_STACK_ARG(pos,"pos")
HXLINE(  18)		Bool _hx_tmp = ::Std_obj::is(err,hx::ClassOf< ::thx::Error >());
HXDLIN(  18)		if (_hx_tmp) {
HXLINE(  19)			return ( ( ::thx::Error)(err) );
            		}
HXLINE(  20)		::String _hx_tmp1 = ::Std_obj::string(err);
HXDLIN(  20)		return  ::thx::error::ErrorWrapper_obj::__new((HX_("",00,00,00,00) + _hx_tmp1),err,null(),pos);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Error_obj,fromDynamic,return )


Error_obj::Error_obj()
{
}

void Error_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Error);
	HX_MARK_MEMBER_NAME(message,"message");
	HX_MARK_MEMBER_NAME(pos,"pos");
	HX_MARK_MEMBER_NAME(stackItems,"stackItems");
	HX_MARK_END_CLASS();
}

void Error_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(message,"message");
	HX_VISIT_MEMBER_NAME(pos,"pos");
	HX_VISIT_MEMBER_NAME(stackItems,"stackItems");
}

hx::Val Error_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { return hx::Val( pos); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { return hx::Val( message); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"stackItems") ) { return hx::Val( stackItems); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getPosition") ) { return hx::Val( getPosition_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"stackToString") ) { return hx::Val( stackToString_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Error_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"fromDynamic") ) { outValue = fromDynamic_dyn(); return true; }
	}
	return false;
}

hx::Val Error_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { pos=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { message=inValue.Cast< ::String >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"stackItems") ) { stackItems=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Error_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("message","\xc7","\x35","\x11","\x9a"));
	outFields->push(HX_HCSTRING("pos","\x94","\x5d","\x55","\x00"));
	outFields->push(HX_HCSTRING("stackItems","\x98","\x4f","\x2b","\xd5"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Error_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(Error_obj,message),HX_HCSTRING("message","\xc7","\x35","\x11","\x9a")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Error_obj,pos),HX_HCSTRING("pos","\x94","\x5d","\x55","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Error_obj,stackItems),HX_HCSTRING("stackItems","\x98","\x4f","\x2b","\xd5")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Error_obj_sStaticStorageInfo = 0;
#endif

static ::String Error_obj_sMemberFields[] = {
	HX_HCSTRING("message","\xc7","\x35","\x11","\x9a"),
	HX_HCSTRING("pos","\x94","\x5d","\x55","\x00"),
	HX_HCSTRING("stackItems","\x98","\x4f","\x2b","\xd5"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("getPosition","\x5f","\x63","\xee","\xf0"),
	HX_HCSTRING("stackToString","\x14","\x7c","\x50","\x8e"),
	::String(null()) };

static void Error_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Error_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Error_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Error_obj::__mClass,"__mClass");
};

#endif

hx::Class Error_obj::__mClass;

static ::String Error_obj_sStaticFields[] = {
	HX_HCSTRING("fromDynamic","\x35","\x03","\x56","\xce"),
	::String(null())
};

void Error_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Error","\x3e","\x70","\xb3","\xba");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Error_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Error_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Error_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Error_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Error_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Error_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Error_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Error_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
