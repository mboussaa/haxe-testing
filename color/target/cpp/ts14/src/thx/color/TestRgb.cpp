// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_color_TestRgb
#include <thx/color/TestRgb.h>
#endif
#ifndef INCLUDED_thx_color__Rgb_Rgb_Impl_
#include <thx/color/_Rgb/Rgb_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Rgba_Rgba_Impl_
#include <thx/color/_Rgba/Rgba_Impl_.h>
#endif
#ifndef INCLUDED_utest_Assert
#include <utest/Assert.h>
#endif

namespace thx{
namespace color{

void TestRgb_obj::__construct(Int i){
            	HX_STACK_FRAME("thx.color.TestRgb","new",0xcc88f638,"thx.color.TestRgb.new","thx/color/TestRgb.hx",9,0x406ef57a)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(i,"i")
HXLINE(   9)		this->x = i;
            	}

Dynamic TestRgb_obj::__CreateEmpty() { return new TestRgb_obj; }

hx::ObjectPtr< TestRgb_obj > TestRgb_obj::__new(Int i)
{
	hx::ObjectPtr< TestRgb_obj > _hx_result = new TestRgb_obj();
	_hx_result->__construct(i);
	return _hx_result;
}

Dynamic TestRgb_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TestRgb_obj > _hx_result = new TestRgb_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void TestRgb_obj::testBasics(){
            	HX_STACK_FRAME("thx.color.TestRgb","testBasics",0x4f99391f,"thx.color.TestRgb.testBasics","thx/color/TestRgb.hx",13,0x406ef57a)
            	HX_STACK_THIS(this)
HXLINE(  13)		HX_VARI( Int,_g1) = (int)0;
HXDLIN(  13)		HX_VARI( Int,_g) = this->x;
HXDLIN(  13)		while((_g1 < _g)){
HXLINE(  13)			++_g1;
HXLINE(  14)			HX_VARI( Int,red) = (int)16711680;
HXLINE(  15)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_red(red),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),15,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  16)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_green(red),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),16,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  17)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(red),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),17,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  19)			HX_VARI( Int,green) = (int)65280;
HXLINE(  20)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_red(green),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),20,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  21)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_green(green),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),21,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  22)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(green),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),22,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  24)			HX_VARI( Int,blue) = (int)255;
HXLINE(  25)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_red(blue),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),25,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  26)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_green(blue),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),26,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  27)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(blue),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),27,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  29)			HX_VARI( Int,cyan) = (int)65535;
HXLINE(  30)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_red(cyan),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),30,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  31)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_green(cyan),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),31,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  32)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(cyan),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),32,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  34)			HX_VARI( Int,yellow) = (int)16776960;
HXLINE(  35)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_red(yellow),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),35,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  36)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_green(yellow),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),36,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  37)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(yellow),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),37,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  39)			HX_VARI( Int,magenta) = (int)16711935;
HXLINE(  40)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_red(magenta),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),40,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  41)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_green(magenta),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),41,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  42)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(magenta),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),42,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  44)			HX_VARI( Int,white) = (int)16777215;
HXLINE(  45)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_red(white),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),45,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  46)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_green(white),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),46,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  47)			::utest::Assert_obj::equals((int)255,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(white),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),47,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  49)			HX_VARI( Int,black) = (int)0;
HXLINE(  50)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_red(black),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),50,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  51)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_green(black),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),51,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
HXLINE(  52)			::utest::Assert_obj::equals((int)0,::thx::color::_Rgb::Rgb_Impl__obj::get_blue(black),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),52,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testBasics",f7,73,1f,6e)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestRgb_obj,testBasics,(void))

void TestRgb_obj::testStrings(){
            	HX_STACK_FRAME("thx.color.TestRgb","testStrings",0x1ecf3a28,"thx.color.TestRgb.testStrings","thx/color/TestRgb.hx",56,0x406ef57a)
            	HX_STACK_THIS(this)
HXLINE(  56)		HX_VARI( Int,_g1) = (int)0;
HXDLIN(  56)		HX_VARI( Int,_g) = this->x;
HXDLIN(  56)		while((_g1 < _g)){
HXLINE(  56)			++_g1;
HXLINE(  57)			HX_VARI( Int,color) = (int)43775;
HXLINE(  58)			::String _hx_tmp = ::thx::color::_Rgb::Rgb_Impl__obj::toHex(color,null());
HXDLIN(  58)			::utest::Assert_obj::equals(HX_("#00AAFF",83,d4,f4,ae),_hx_tmp,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),58,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testStrings",50,7c,bc,b5)));
HXLINE(  59)			::String _hx_tmp1 = ::thx::color::_Rgb::Rgb_Impl__obj::toString(color);
HXDLIN(  59)			::utest::Assert_obj::equals(HX_("#00AAFF",83,d4,f4,ae),_hx_tmp1,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),59,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testStrings",50,7c,bc,b5)));
HXLINE(  60)			::utest::Assert_obj::equals(HX_("rgb(0,170,255)",70,22,db,e8),::thx::color::_Rgb::Rgb_Impl__obj::toCss3(color),null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),60,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testStrings",50,7c,bc,b5)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestRgb_obj,testStrings,(void))

void TestRgb_obj::testFromString(){
            	HX_STACK_FRAME("thx.color.TestRgb","testFromString",0x7eaecdf5,"thx.color.TestRgb.testFromString","thx/color/TestRgb.hx",64,0x406ef57a)
            	HX_STACK_THIS(this)
HXLINE(  64)		HX_VARI( Int,_g1) = (int)0;
HXDLIN(  64)		HX_VARI( Int,_g) = this->x;
HXDLIN(  64)		while((_g1 < _g)){
HXLINE(  64)			++_g1;
HXLINE(  65)			Bool _hx_tmp = ::thx::color::_Rgb::Rgb_Impl__obj::equals((int)16711680,::thx::color::_Rgb::Rgb_Impl__obj::fromString(HX_("#ff0000",a3,09,94,52)));
HXDLIN(  65)			::utest::Assert_obj::isTrue(_hx_tmp,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),65,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  66)			Bool _hx_tmp1 = ::thx::color::_Rgb::Rgb_Impl__obj::equals((int)16711680,::thx::color::_Rgb::Rgb_Impl__obj::fromString(HX_("#f00",a3,07,70,17)));
HXDLIN(  66)			::utest::Assert_obj::isTrue(_hx_tmp1,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),66,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  67)			Bool _hx_tmp2 = ::thx::color::_Rgb::Rgb_Impl__obj::equals((int)16711680,::thx::color::_Rgb::Rgb_Impl__obj::fromString(HX_("rgb(255,0,0)",4a,94,29,21)));
HXDLIN(  67)			::utest::Assert_obj::isTrue(_hx_tmp2,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),67,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  68)			Bool _hx_tmp3 = ::thx::color::_Rgb::Rgb_Impl__obj::equals((int)16711680,::thx::color::_Rgb::Rgb_Impl__obj::fromString(HX_("rgb(100%,0,0)",32,36,e7,0a)));
HXDLIN(  68)			::utest::Assert_obj::isTrue(_hx_tmp3,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),68,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  70)			Bool _hx_tmp4 = ::thx::color::_Rgba::Rgba_Impl__obj::equals((int)16711935,::thx::color::_Rgba::Rgba_Impl__obj::fromString(HX_("#ff00ff00",a3,a1,be,4a)));
HXDLIN(  70)			::utest::Assert_obj::isTrue(_hx_tmp4,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),70,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  71)			Bool _hx_tmp5 = ::thx::color::_Rgba::Rgba_Impl__obj::equals((int)16711935,::thx::color::_Rgba::Rgba_Impl__obj::fromString(HX_("#f0f0",37,d6,96,6a)));
HXDLIN(  71)			::utest::Assert_obj::isTrue(_hx_tmp5,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),71,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  72)			Bool _hx_tmp6 = ::thx::color::_Rgba::Rgba_Impl__obj::equals((int)16711935,::thx::color::_Rgba::Rgba_Impl__obj::fromString(HX_("rgba(0,255,0,1)",9e,dd,6a,29)));
HXDLIN(  72)			::utest::Assert_obj::isTrue(_hx_tmp6,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),72,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
HXLINE(  73)			Bool _hx_tmp7 = ::thx::color::_Rgba::Rgba_Impl__obj::equals((int)16711935,::thx::color::_Rgba::Rgba_Impl__obj::fromString(HX_("rgba(0,100%,0,1)",fc,54,c5,3b)));
HXDLIN(  73)			::utest::Assert_obj::isTrue(_hx_tmp7,null(),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),73,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testFromString",cd,54,67,f4)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestRgb_obj,testFromString,(void))

void TestRgb_obj::testCombineColor(){
            	HX_STACK_FRAME("thx.color.TestRgb","testCombineColor",0xa74ca4fe,"thx.color.TestRgb.testCombineColor","thx/color/TestRgb.hx",77,0x406ef57a)
            	HX_STACK_THIS(this)
HXLINE(  77)		HX_VARI( Int,_g1) = (int)0;
HXDLIN(  77)		HX_VARI( Int,_g) = this->x;
HXDLIN(  77)		while((_g1 < _g)){
HXLINE(  77)			++_g1;
HXLINE(  78)			Int _hx_tmp = ::thx::color::_Rgb::Rgb_Impl__obj::fromInts(::Array_obj< Int >::__new(3)->init(0,(int)255)->init(1,(int)0)->init(2,(int)0));
HXDLIN(  78)			HX_VARI( Int,rgba) = ::thx::color::_Rgb::Rgb_Impl__obj::withAlphaf(_hx_tmp,((Float).42));
HXDLIN(  78)			HX_VARI( Int,bg) = ::thx::color::_Rgb::Rgb_Impl__obj::fromInts(::Array_obj< Int >::__new(3)->init(0,(int)153)->init(1,(int)200)->init(2,(int)224));
HXDLIN(  78)			HX_VARI( Int,combined) = ::thx::color::_Rgba::Rgba_Impl__obj::combineColor(rgba,bg);
HXDLIN(  78)			HX_VARI( Int,result) = ::thx::color::_Rgb::Rgb_Impl__obj::fromInts(::Array_obj< Int >::__new(3)->init(0,(int)196)->init(1,(int)116)->init(2,(int)130));
HXLINE(  83)			Bool _hx_tmp1 = ::thx::color::_Rgb::Rgb_Impl__obj::equals(result,combined);
HXDLIN(  83)			::String _hx_tmp2 = ::thx::color::_Rgb::Rgb_Impl__obj::toString(result);
HXDLIN(  83)			::String _hx_tmp3 = ((HX_("expected ",a8,7a,f8,e9) + _hx_tmp2) + HX_(" but it is ",60,e9,99,19));
HXDLIN(  83)			::String _hx_tmp4 = ::thx::color::_Rgb::Rgb_Impl__obj::toString(combined);
HXDLIN(  83)			::utest::Assert_obj::isTrue(_hx_tmp1,(_hx_tmp3 + _hx_tmp4),hx::SourceInfo(HX_("TestRgb.hx",e3,57,84,33),83,HX_("thx.color.TestRgb",46,ba,5b,0e),HX_("testCombineColor",d6,91,56,61)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TestRgb_obj,testCombineColor,(void))


TestRgb_obj::TestRgb_obj()
{
}

hx::Val TestRgb_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"testBasics") ) { return hx::Val( testBasics_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"testStrings") ) { return hx::Val( testStrings_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"testFromString") ) { return hx::Val( testFromString_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"testCombineColor") ) { return hx::Val( testCombineColor_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TestRgb_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TestRgb_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TestRgb_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(TestRgb_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TestRgb_obj_sStaticStorageInfo = 0;
#endif

static ::String TestRgb_obj_sMemberFields[] = {
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("testBasics","\xf7","\x73","\x1f","\x6e"),
	HX_HCSTRING("testStrings","\x50","\x7c","\xbc","\xb5"),
	HX_HCSTRING("testFromString","\xcd","\x54","\x67","\xf4"),
	HX_HCSTRING("testCombineColor","\xd6","\x91","\x56","\x61"),
	::String(null()) };

static void TestRgb_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TestRgb_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TestRgb_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TestRgb_obj::__mClass,"__mClass");
};

#endif

hx::Class TestRgb_obj::__mClass;

void TestRgb_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.color.TestRgb","\x46","\xba","\x5b","\x0e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TestRgb_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TestRgb_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TestRgb_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TestRgb_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TestRgb_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TestRgb_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace color
