// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_color__Cmyk_Cmyk_Impl_
#define INCLUDED_thx_color__Cmyk_Cmyk_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(thx,color,_Cmyk,Cmyk_Impl_)

namespace thx{
namespace color{
namespace _Cmyk{


class HXCPP_CLASS_ATTRIBUTES Cmyk_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Cmyk_Impl__obj OBJ_;
		Cmyk_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.color._Cmyk.Cmyk_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.color._Cmyk.Cmyk_Impl_"); }
		static hx::ObjectPtr< Cmyk_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Cmyk_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Cmyk_Impl_","\xbc","\xe4","\x20","\xdb"); }

		static ::Array< Float > create(Float cyan,Float magenta,Float yellow,Float black);
		static ::Dynamic create_dyn();

		static ::Array< Float > fromFloats(::Array< Float > arr);
		static ::Dynamic fromFloats_dyn();

		static ::Array< Float > fromString(::String color);
		static ::Dynamic fromString_dyn();

		static ::Array< Float > _new(::Array< Float > channels);
		static ::Dynamic _new_dyn();

		static ::Array< Float > darker(::Array< Float > this1,Float t);
		static ::Dynamic darker_dyn();

		static ::Array< Float > lighter(::Array< Float > this1,Float t);
		static ::Dynamic lighter_dyn();

		static ::Array< Float > interpolate(::Array< Float > this1,::Array< Float > other,Float t);
		static ::Dynamic interpolate_dyn();

		static ::Array< Float > min(::Array< Float > this1,::Array< Float > other);
		static ::Dynamic min_dyn();

		static ::Array< Float > max(::Array< Float > this1,::Array< Float > other);
		static ::Dynamic max_dyn();

		static ::Array< Float > normalize(::Array< Float > this1);
		static ::Dynamic normalize_dyn();

		static ::Array< Float > roundTo(::Array< Float > this1,Int decimals);
		static ::Dynamic roundTo_dyn();

		static ::Array< Float > withCyan(::Array< Float > this1,Float newcyan);
		static ::Dynamic withCyan_dyn();

		static ::Array< Float > withMagenta(::Array< Float > this1,Float newmagenta);
		static ::Dynamic withMagenta_dyn();

		static ::Array< Float > withYellow(::Array< Float > this1,Float newyellow);
		static ::Dynamic withYellow_dyn();

		static ::Array< Float > withBlack(::Array< Float > this1,Float newblack);
		static ::Dynamic withBlack_dyn();

		static ::String toString(::Array< Float > this1);
		static ::Dynamic toString_dyn();

		static Bool equals(::Array< Float > this1,::Array< Float > other);
		static ::Dynamic equals_dyn();

		static Bool nearEquals(::Array< Float > this1,::Array< Float > other, ::Dynamic tolerance);
		static ::Dynamic nearEquals_dyn();

		static ::Array< Float > toLab(::Array< Float > this1);
		static ::Dynamic toLab_dyn();

		static ::Array< Float > toLCh(::Array< Float > this1);
		static ::Dynamic toLCh_dyn();

		static ::Array< Float > toLuv(::Array< Float > this1);
		static ::Dynamic toLuv_dyn();

		static ::Array< Float > toCmy(::Array< Float > this1);
		static ::Dynamic toCmy_dyn();

		static ::Array< Float > toCubeHelix(::Array< Float > this1);
		static ::Dynamic toCubeHelix_dyn();

		static Float toGrey(::Array< Float > this1);
		static ::Dynamic toGrey_dyn();

		static ::Array< Float > toHsl(::Array< Float > this1);
		static ::Dynamic toHsl_dyn();

		static ::Array< Float > toHsv(::Array< Float > this1);
		static ::Dynamic toHsv_dyn();

		static ::Array< Float > toHunterLab(::Array< Float > this1);
		static ::Dynamic toHunterLab_dyn();

		static Int toRgb(::Array< Float > this1);
		static ::Dynamic toRgb_dyn();

		static Int toRgba(::Array< Float > this1);
		static ::Dynamic toRgba_dyn();

		static ::Array< Float > toRgbx(::Array< Float > this1);
		static ::Dynamic toRgbx_dyn();

		static ::Array< Float > toRgbxa(::Array< Float > this1);
		static ::Dynamic toRgbxa_dyn();

		static Float toTemperature(::Array< Float > this1);
		static ::Dynamic toTemperature_dyn();

		static ::Array< Float > toXyz(::Array< Float > this1);
		static ::Dynamic toXyz_dyn();

		static ::Array< Float > toYuv(::Array< Float > this1);
		static ::Dynamic toYuv_dyn();

		static ::Array< Float > toYxy(::Array< Float > this1);
		static ::Dynamic toYxy_dyn();

		static Float get_cyan(::Array< Float > this1);
		static ::Dynamic get_cyan_dyn();

		static Float get_magenta(::Array< Float > this1);
		static ::Dynamic get_magenta_dyn();

		static Float get_yellow(::Array< Float > this1);
		static ::Dynamic get_yellow_dyn();

		static Float get_black(::Array< Float > this1);
		static ::Dynamic get_black_dyn();

};

} // end namespace thx
} // end namespace color
} // end namespace _Cmyk

#endif /* INCLUDED_thx_color__Cmyk_Cmyk_Impl_ */ 
