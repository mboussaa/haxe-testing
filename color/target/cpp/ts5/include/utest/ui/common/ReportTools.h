// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_ui_common_ReportTools
#define INCLUDED_utest_ui_common_ReportTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(utest,ui,common,IReport)
HX_DECLARE_CLASS3(utest,ui,common,ReportTools)
HX_DECLARE_CLASS3(utest,ui,common,ResultStats)

namespace utest{
namespace ui{
namespace common{


class HXCPP_CLASS_ATTRIBUTES ReportTools_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ReportTools_obj OBJ_;
		ReportTools_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="utest.ui.common.ReportTools")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"utest.ui.common.ReportTools"); }
		static hx::ObjectPtr< ReportTools_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ReportTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("ReportTools","\xa7","\xd0","\x6d","\xc8"); }

		static Bool hasHeader(::Dynamic report, ::utest::ui::common::ResultStats stats);
		static ::Dynamic hasHeader_dyn();

		static Bool skipResult(::Dynamic report, ::utest::ui::common::ResultStats stats,Bool isOk);
		static ::Dynamic skipResult_dyn();

		static Bool hasOutput(::Dynamic report, ::utest::ui::common::ResultStats stats);
		static ::Dynamic hasOutput_dyn();

};

} // end namespace utest
} // end namespace ui
} // end namespace common

#endif /* INCLUDED_utest_ui_common_ReportTools */ 
