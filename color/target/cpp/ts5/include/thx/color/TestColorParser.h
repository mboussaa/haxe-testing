// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_color_TestColorParser
#define INCLUDED_thx_color_TestColorParser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,color,TestColorParser)
HX_DECLARE_CLASS3(thx,color,parse,ChannelInfo)

namespace thx{
namespace color{


class HXCPP_CLASS_ATTRIBUTES TestColorParser_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestColorParser_obj OBJ_;
		TestColorParser_obj();

	public:
		void __construct(Int i);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.color.TestColorParser")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.color.TestColorParser"); }
		static hx::ObjectPtr< TestColorParser_obj > __new(Int i);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestColorParser_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestColorParser","\x50","\x23","\x0c","\x5d"); }

		Int x;
		void testFeatures();
		::Dynamic testFeatures_dyn();

		void testChannels();
		::Dynamic testChannels_dyn();

		void testInvalidColor();
		::Dynamic testInvalidColor_dyn();

		void testInvalidChannel();
		::Dynamic testInvalidChannel_dyn();

		void assertStringChannel(::hx::EnumBase expected,::String test, ::Dynamic pos);
		::Dynamic assertStringChannel_dyn();

		void assertChannel(::hx::EnumBase expected,::hx::EnumBase test, ::Dynamic pos);
		::Dynamic assertChannel_dyn();

		void _hx_assert(::String name,::Array< ::Dynamic> channels,::String test_string, ::Dynamic pos);
		::Dynamic _hx_assert_dyn();

};

} // end namespace thx
} // end namespace color

#endif /* INCLUDED_thx_color_TestColorParser */ 
