// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_color_TestHsv
#define INCLUDED_thx_color_TestHsv

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,color,TestHsv)

namespace thx{
namespace color{


class HXCPP_CLASS_ATTRIBUTES TestHsv_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestHsv_obj OBJ_;
		TestHsv_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.color.TestHsv")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.color.TestHsv"); }
		static hx::ObjectPtr< TestHsv_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestHsv_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestHsv","\xb9","\xe5","\x0e","\x8b"); }

		void testBasics();
		::Dynamic testBasics_dyn();

		void testHsb();
		::Dynamic testHsb_dyn();

		void testStrings();
		::Dynamic testStrings_dyn();

		void testFromString();
		::Dynamic testFromString_dyn();

};

} // end namespace thx
} // end namespace color

#endif /* INCLUDED_thx_color_TestHsv */ 
