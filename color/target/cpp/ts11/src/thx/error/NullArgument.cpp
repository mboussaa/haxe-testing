// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_error_NullArgument
#include <thx/error/NullArgument.h>
#endif

namespace thx{
namespace error{

void NullArgument_obj::__construct(::String message, ::Dynamic posInfo){
            	HX_STACK_FRAME("thx.error.NullArgument","new",0x2218f946,"thx.error.NullArgument.new","thx/error/NullArgument.hx",19,0x9d70c468)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(posInfo,"posInfo")
HXLINE(  19)		super::__construct(message,null(),posInfo);
            	}

Dynamic NullArgument_obj::__CreateEmpty() { return new NullArgument_obj; }

hx::ObjectPtr< NullArgument_obj > NullArgument_obj::__new(::String message, ::Dynamic posInfo)
{
	hx::ObjectPtr< NullArgument_obj > _hx_result = new NullArgument_obj();
	_hx_result->__construct(message,posInfo);
	return _hx_result;
}

Dynamic NullArgument_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NullArgument_obj > _hx_result = new NullArgument_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}


NullArgument_obj::NullArgument_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *NullArgument_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *NullArgument_obj_sStaticStorageInfo = 0;
#endif

static void NullArgument_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NullArgument_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NullArgument_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NullArgument_obj::__mClass,"__mClass");
};

#endif

hx::Class NullArgument_obj::__mClass;

void NullArgument_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.error.NullArgument","\x54","\x9e","\x8d","\x0b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = NullArgument_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< NullArgument_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NullArgument_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NullArgument_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NullArgument_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace error
