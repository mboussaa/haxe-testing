// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_thx_ArrayFloats
#include <thx/ArrayFloats.h>
#endif
#ifndef INCLUDED_thx_Floats
#include <thx/Floats.h>
#endif
#ifndef INCLUDED_thx_color__Cmyk_Cmyk_Impl_
#include <thx/color/_Cmyk/Cmyk_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Lab_Lab_Impl_
#include <thx/color/_Lab/Lab_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Rgbx_Rgbx_Impl_
#include <thx/color/_Rgbx/Rgbx_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Rgbxa_Rgbxa_Impl_
#include <thx/color/_Rgbxa/Rgbxa_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Xyz_Xyz_Impl_
#include <thx/color/_Xyz/Xyz_Impl_.h>
#endif
#ifndef INCLUDED_thx_color_parse_ChannelInfo
#include <thx/color/parse/ChannelInfo.h>
#endif
#ifndef INCLUDED_thx_color_parse_ColorInfo
#include <thx/color/parse/ColorInfo.h>
#endif
#ifndef INCLUDED_thx_color_parse_ColorParser
#include <thx/color/parse/ColorParser.h>
#endif

namespace thx{
namespace color{
namespace _Cmyk{

void Cmyk_Impl__obj::__construct() { }

Dynamic Cmyk_Impl__obj::__CreateEmpty() { return new Cmyk_Impl__obj; }

hx::ObjectPtr< Cmyk_Impl__obj > Cmyk_Impl__obj::__new()
{
	hx::ObjectPtr< Cmyk_Impl__obj > _hx_result = new Cmyk_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Cmyk_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Cmyk_Impl__obj > _hx_result = new Cmyk_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::Array< Float > Cmyk_Impl__obj::create(Float cyan,Float magenta,Float yellow,Float black){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","create",0xe08144c6,"thx.color._Cmyk.Cmyk_Impl_.create","thx/color/Cmyk.hx",26,0xe882bf2b)
            	HX_STACK_ARG(cyan,"cyan")
            	HX_STACK_ARG(magenta,"magenta")
            	HX_STACK_ARG(yellow,"yellow")
            	HX_STACK_ARG(black,"black")
HXLINE(  26)		return ::Array_obj< Float >::__new(4)->init(0,cyan)->init(1,magenta)->init(2,yellow)->init(3,black);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Cmyk_Impl__obj,create,return )

::Array< Float > Cmyk_Impl__obj::fromFloats(::Array< Float > arr){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","fromFloats",0x52afb32b,"thx.color._Cmyk.Cmyk_Impl_.fromFloats","thx/color/Cmyk.hx",28,0xe882bf2b)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  29)		::thx::ArrayFloats_obj::resize(arr,(int)4,null());
HXLINE(  30)		return ::Array_obj< Float >::__new(4)->init(0,arr->__get((int)0))->init(1,arr->__get((int)1))->init(2,arr->__get((int)2))->init(3,arr->__get((int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,fromFloats,return )

::Array< Float > Cmyk_Impl__obj::fromString(::String color){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","fromString",0x2289b8a5,"thx.color._Cmyk.Cmyk_Impl_.fromString","thx/color/Cmyk.hx",33,0xe882bf2b)
            	HX_STACK_ARG(color,"color")
HXLINE(  34)		HX_VARI(  ::thx::color::parse::ColorInfo,info) = ::thx::color::parse::ColorParser_obj::parseColor(color);
HXLINE(  35)		if (hx::IsNull( info )) {
HXLINE(  36)			return null();
            		}
HXLINE(  37)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  37)			if ((info->name == HX_("cmyk",fc,3e,c3,41))) {
HXLINE(  39)				HX_VARI( ::Array< Float >,channels) = ::thx::color::parse::ColorParser_obj::getFloatChannels(info->channels,(int)4,false);
HXLINE(  37)				return channels;
            			}
            			else {
HXLINE(  37)				return null();
            			}
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE(  37)				return null();
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN(  37)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,fromString,return )

::Array< Float > Cmyk_Impl__obj::_new(::Array< Float > channels){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","_new",0x2aad0cab,"thx.color._Cmyk.Cmyk_Impl_._new","thx/color/Cmyk.hx",45,0xe882bf2b)
            	HX_STACK_ARG(channels,"channels")
HXLINE(  45)		return channels;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,_new,return )

::Array< Float > Cmyk_Impl__obj::darker(::Array< Float > this1,Float t){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","darker",0x85ac142d,"thx.color._Cmyk.Cmyk_Impl_.darker","thx/color/Cmyk.hx",49,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(t,"t")
HXLINE(  49)		return ::Array_obj< Float >::__new(4)->init(0,this1->__get((int)0))->init(1,this1->__get((int)1))->init(2,this1->__get((int)2))->init(3,::thx::Floats_obj::interpolate(t,this1->__get((int)3),(int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,darker,return )

::Array< Float > Cmyk_Impl__obj::lighter(::Array< Float > this1,Float t){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","lighter",0x99137db9,"thx.color._Cmyk.Cmyk_Impl_.lighter","thx/color/Cmyk.hx",52,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(t,"t")
HXLINE(  52)		return ::Array_obj< Float >::__new(4)->init(0,this1->__get((int)0))->init(1,this1->__get((int)1))->init(2,this1->__get((int)2))->init(3,::thx::Floats_obj::interpolate(t,this1->__get((int)3),(int)0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,lighter,return )

::Array< Float > Cmyk_Impl__obj::interpolate(::Array< Float > this1,::Array< Float > other,Float t){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","interpolate",0xa3f6bab7,"thx.color._Cmyk.Cmyk_Impl_.interpolate","thx/color/Cmyk.hx",55,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(t,"t")
HXLINE(  55)		return ::Array_obj< Float >::__new(4)->init(0,::thx::Floats_obj::interpolate(t,this1->__get((int)0),other->__get((int)0)))->init(1,::thx::Floats_obj::interpolate(t,this1->__get((int)1),other->__get((int)1)))->init(2,::thx::Floats_obj::interpolate(t,this1->__get((int)2),other->__get((int)2)))->init(3,::thx::Floats_obj::interpolate(t,this1->__get((int)3),other->__get((int)3)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Cmyk_Impl__obj,interpolate,return )

::Array< Float > Cmyk_Impl__obj::min(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","min",0x40851188,"thx.color._Cmyk.Cmyk_Impl_.min","thx/color/Cmyk.hx",63,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  63)		HX_VARI( Float,cyan) = ::Math_obj::min(this1->__get((int)0),other->__get((int)0));
HXDLIN(  63)		HX_VARI( Float,magenta) = ::Math_obj::min(this1->__get((int)1),other->__get((int)1));
HXDLIN(  63)		HX_VARI( Float,yellow) = ::Math_obj::min(this1->__get((int)2),other->__get((int)2));
HXDLIN(  63)		HX_VARI( Float,black) = ::Math_obj::min(this1->__get((int)3),other->__get((int)3));
HXDLIN(  63)		return ::Array_obj< Float >::__new(4)->init(0,cyan)->init(1,magenta)->init(2,yellow)->init(3,black);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,min,return )

::Array< Float > Cmyk_Impl__obj::max(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","max",0x40850a9a,"thx.color._Cmyk.Cmyk_Impl_.max","thx/color/Cmyk.hx",66,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  66)		HX_VARI( Float,cyan) = ::Math_obj::max(this1->__get((int)0),other->__get((int)0));
HXDLIN(  66)		HX_VARI( Float,magenta) = ::Math_obj::max(this1->__get((int)1),other->__get((int)1));
HXDLIN(  66)		HX_VARI( Float,yellow) = ::Math_obj::max(this1->__get((int)2),other->__get((int)2));
HXDLIN(  66)		HX_VARI( Float,black) = ::Math_obj::max(this1->__get((int)3),other->__get((int)3));
HXDLIN(  66)		return ::Array_obj< Float >::__new(4)->init(0,cyan)->init(1,magenta)->init(2,yellow)->init(3,black);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,max,return )

::Array< Float > Cmyk_Impl__obj::normalize(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","normalize",0x7d7c9403,"thx.color._Cmyk.Cmyk_Impl_.normalize","thx/color/Cmyk.hx",69,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  69)		HX_VAR_NAME( ::Array< Float >,this2,"this");
HXLINE(  70)		HX_VARI( Float,v) = this1->__get((int)0);
HXDLIN(  70)		Float _hx_tmp;
HXDLIN(  70)		if ((v < (int)0)) {
HXLINE(  70)			_hx_tmp = (int)0;
            		}
            		else {
HXLINE(  70)			if ((v > (int)1)) {
HXLINE(  70)				_hx_tmp = (int)1;
            			}
            			else {
HXLINE(  70)				_hx_tmp = v;
            			}
            		}
HXLINE(  71)		HX_VARI_NAME( Float,v1,"v") = this1->__get((int)1);
HXDLIN(  71)		Float _hx_tmp1;
HXDLIN(  71)		if ((v1 < (int)0)) {
HXLINE(  71)			_hx_tmp1 = (int)0;
            		}
            		else {
HXLINE(  71)			if ((v1 > (int)1)) {
HXLINE(  71)				_hx_tmp1 = (int)1;
            			}
            			else {
HXLINE(  71)				_hx_tmp1 = v1;
            			}
            		}
HXLINE(  72)		HX_VARI_NAME( Float,v2,"v") = this1->__get((int)2);
HXDLIN(  72)		Float _hx_tmp2;
HXDLIN(  72)		if ((v2 < (int)0)) {
HXLINE(  72)			_hx_tmp2 = (int)0;
            		}
            		else {
HXLINE(  72)			if ((v2 > (int)1)) {
HXLINE(  72)				_hx_tmp2 = (int)1;
            			}
            			else {
HXLINE(  72)				_hx_tmp2 = v2;
            			}
            		}
HXLINE(  73)		HX_VARI_NAME( Float,v3,"v") = this1->__get((int)3);
HXDLIN(  73)		Float _hx_tmp3;
HXDLIN(  73)		if ((v3 < (int)0)) {
HXLINE(  73)			_hx_tmp3 = (int)0;
            		}
            		else {
HXLINE(  73)			if ((v3 > (int)1)) {
HXLINE(  73)				_hx_tmp3 = (int)1;
            			}
            			else {
HXLINE(  73)				_hx_tmp3 = v3;
            			}
            		}
HXLINE(  69)		this2 = ::Array_obj< Float >::__new(4)->init(0,_hx_tmp)->init(1,_hx_tmp1)->init(2,_hx_tmp2)->init(3,_hx_tmp3);
HXDLIN(  69)		return this2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,normalize,return )

::Array< Float > Cmyk_Impl__obj::roundTo(::Array< Float > this1,Int decimals){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","roundTo",0x0c3fa45f,"thx.color._Cmyk.Cmyk_Impl_.roundTo","thx/color/Cmyk.hx",77,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(decimals,"decimals")
HXLINE(  77)		HX_VARI( Float,cyan) = ::thx::Floats_obj::roundTo(this1->__get((int)0),decimals);
HXDLIN(  77)		HX_VARI( Float,magenta) = ::thx::Floats_obj::roundTo(this1->__get((int)1),decimals);
HXDLIN(  77)		HX_VARI( Float,yellow) = ::thx::Floats_obj::roundTo(this1->__get((int)2),decimals);
HXDLIN(  77)		HX_VARI( Float,black) = ::thx::Floats_obj::roundTo(this1->__get((int)3),decimals);
HXDLIN(  77)		return ::Array_obj< Float >::__new(4)->init(0,cyan)->init(1,magenta)->init(2,yellow)->init(3,black);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,roundTo,return )

::Array< Float > Cmyk_Impl__obj::withCyan(::Array< Float > this1,Float newcyan){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","withCyan",0xdf74c693,"thx.color._Cmyk.Cmyk_Impl_.withCyan","thx/color/Cmyk.hx",80,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newcyan,"newcyan")
HXLINE(  80)		return ::Array_obj< Float >::__new(4)->init(0,newcyan)->init(1,this1->__get((int)1))->init(2,this1->__get((int)2))->init(3,this1->__get((int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,withCyan,return )

::Array< Float > Cmyk_Impl__obj::withMagenta(::Array< Float > this1,Float newmagenta){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","withMagenta",0xf883beb9,"thx.color._Cmyk.Cmyk_Impl_.withMagenta","thx/color/Cmyk.hx",83,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newmagenta,"newmagenta")
HXLINE(  83)		return ::Array_obj< Float >::__new(4)->init(0,this1->__get((int)0))->init(1,newmagenta)->init(2,this1->__get((int)2))->init(3,this1->__get((int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,withMagenta,return )

::Array< Float > Cmyk_Impl__obj::withYellow(::Array< Float > this1,Float newyellow){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","withYellow",0x8a3c5ce4,"thx.color._Cmyk.Cmyk_Impl_.withYellow","thx/color/Cmyk.hx",86,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newyellow,"newyellow")
HXLINE(  86)		return ::Array_obj< Float >::__new(4)->init(0,this1->__get((int)0))->init(1,this1->__get((int)1))->init(2,newyellow)->init(3,this1->__get((int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,withYellow,return )

::Array< Float > Cmyk_Impl__obj::withBlack(::Array< Float > this1,Float newblack){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","withBlack",0x0aba964f,"thx.color._Cmyk.Cmyk_Impl_.withBlack","thx/color/Cmyk.hx",89,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newblack,"newblack")
HXLINE(  89)		return ::Array_obj< Float >::__new(4)->init(0,this1->__get((int)0))->init(1,this1->__get((int)1))->init(2,this1->__get((int)2))->init(3,newblack);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,withBlack,return )

::String Cmyk_Impl__obj::toString(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toString",0x036b34f6,"thx.color._Cmyk.Cmyk_Impl_.toString","thx/color/Cmyk.hx",92,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  92)		return ((((((((HX_("cmyk(",ac,dd,13,49) + this1->__get((int)0)) + HX_(",",2c,00,00,00)) + this1->__get((int)1)) + HX_(",",2c,00,00,00)) + this1->__get((int)2)) + HX_(",",2c,00,00,00)) + this1->__get((int)3)) + HX_(")",29,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toString,return )

Bool Cmyk_Impl__obj::equals(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","equals",0x2464cc09,"thx.color._Cmyk.Cmyk_Impl_.equals","thx/color/Cmyk.hx",95,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  95)		return ::thx::color::_Cmyk::Cmyk_Impl__obj::nearEquals(this1,other,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Cmyk_Impl__obj,equals,return )

Bool Cmyk_Impl__obj::nearEquals(::Array< Float > this1,::Array< Float > other, ::Dynamic __o_tolerance){
 ::Dynamic tolerance = __o_tolerance.Default(((Float)1e-9));
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","nearEquals",0xcc86fc11,"thx.color._Cmyk.Cmyk_Impl_.nearEquals","thx/color/Cmyk.hx",98,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(tolerance,"tolerance")
HXLINE(  98)		Bool _hx_tmp;
HXDLIN(  98)		Bool _hx_tmp1;
HXDLIN(  98)		Bool _hx_tmp2 = ::thx::Floats_obj::nearEquals(this1->__get((int)0),other->__get((int)0),tolerance);
HXDLIN(  98)		if (_hx_tmp2) {
HXLINE(  98)			_hx_tmp1 = ::thx::Floats_obj::nearEquals(this1->__get((int)1),other->__get((int)1),tolerance);
            		}
            		else {
HXLINE(  98)			_hx_tmp1 = false;
            		}
HXDLIN(  98)		if (_hx_tmp1) {
HXLINE(  98)			_hx_tmp = ::thx::Floats_obj::nearEquals(this1->__get((int)2),other->__get((int)2),tolerance);
            		}
            		else {
HXLINE(  98)			_hx_tmp = false;
            		}
HXDLIN(  98)		if (_hx_tmp) {
HXLINE(  98)			return ::thx::Floats_obj::nearEquals(this1->__get((int)3),other->__get((int)3),tolerance);
            		}
            		else {
HXLINE(  98)			return false;
            		}
HXDLIN(  98)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Cmyk_Impl__obj,nearEquals,return )

::Array< Float > Cmyk_Impl__obj::toLab(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toLab",0x44be6308,"thx.color._Cmyk.Cmyk_Impl_.toLab","thx/color/Cmyk.hx",101,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 101)		::Array< Float > _hx_tmp = ::thx::color::_Cmyk::Cmyk_Impl__obj::toXyz(this1);
HXDLIN( 101)		return ::thx::color::_Xyz::Xyz_Impl__obj::toLab(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toLab,return )

::Array< Float > Cmyk_Impl__obj::toLCh(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toLCh",0x44be48ec,"thx.color._Cmyk.Cmyk_Impl_.toLCh","thx/color/Cmyk.hx",104,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 104)		::Array< Float > _hx_tmp = ::thx::color::_Cmyk::Cmyk_Impl__obj::toLab(this1);
HXDLIN( 104)		return ::thx::color::_Lab::Lab_Impl__obj::toLCh(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toLCh,return )

::Array< Float > Cmyk_Impl__obj::toLuv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toLuv",0x44be7488,"thx.color._Cmyk.Cmyk_Impl_.toLuv","thx/color/Cmyk.hx",107,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 107)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toLuv(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toLuv,return )

::Array< Float > Cmyk_Impl__obj::toCmy(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toCmy",0x44b7994a,"thx.color._Cmyk.Cmyk_Impl_.toCmy","thx/color/Cmyk.hx",110,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 110)		return ::Array_obj< Float >::__new(3)->init(0,(this1->__get((int)3) + (((int)1 - this1->__get((int)3)) * this1->__get((int)0))))->init(1,(this1->__get((int)3) + (((int)1 - this1->__get((int)3)) * this1->__get((int)1))))->init(2,(this1->__get((int)3) + (((int)1 - this1->__get((int)3)) * this1->__get((int)2))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toCmy,return )

::Array< Float > Cmyk_Impl__obj::toCubeHelix(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toCubeHelix",0xa844a444,"thx.color._Cmyk.Cmyk_Impl_.toCubeHelix","thx/color/Cmyk.hx",117,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 117)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toCubeHelixWithGamma(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1),(int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toCubeHelix,return )

Float Cmyk_Impl__obj::toGrey(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toGrey",0xde971c44,"thx.color._Cmyk.Cmyk_Impl_.toGrey","thx/color/Cmyk.hx",120,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 120)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toGrey(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toGrey,return )

::Array< Float > Cmyk_Impl__obj::toHsl(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toHsl",0x44bb69bc,"thx.color._Cmyk.Cmyk_Impl_.toHsl","thx/color/Cmyk.hx",123,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 123)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toHsl(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toHsl,return )

::Array< Float > Cmyk_Impl__obj::toHsv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toHsv",0x44bb69c6,"thx.color._Cmyk.Cmyk_Impl_.toHsv","thx/color/Cmyk.hx",126,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 126)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toHsv(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toHsv,return )

::Array< Float > Cmyk_Impl__obj::toHunterLab(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toHunterLab",0x7475f568,"thx.color._Cmyk.Cmyk_Impl_.toHunterLab","thx/color/Cmyk.hx",129,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 129)		::Array< Float > _hx_tmp = ::thx::color::_Cmyk::Cmyk_Impl__obj::toXyz(this1);
HXDLIN( 129)		return ::thx::color::_Xyz::Xyz_Impl__obj::toHunterLab(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toHunterLab,return )

Int Cmyk_Impl__obj::toRgb(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toRgb",0x44c2f5c8,"thx.color._Cmyk.Cmyk_Impl_.toRgb","thx/color/Cmyk.hx",132,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 132)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toRgb(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toRgb,return )

Int Cmyk_Impl__obj::toRgba(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toRgba",0xe5d41999,"thx.color._Cmyk.Cmyk_Impl_.toRgba","thx/color/Cmyk.hx",135,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 135)		::Array< Float > _hx_tmp = ::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbxa(this1);
HXDLIN( 135)		return ::thx::color::_Rgbxa::Rgbxa_Impl__obj::toRgba(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toRgba,return )

::Array< Float > Cmyk_Impl__obj::toRgbx(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toRgbx",0xe5d419b0,"thx.color._Cmyk.Cmyk_Impl_.toRgbx","thx/color/Cmyk.hx",138,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 138)		return ::Array_obj< Float >::__new(3)->init(0,(((int)1 - this1->__get((int)3)) * ((int)1 - this1->__get((int)0))))->init(1,(((int)1 - this1->__get((int)3)) * ((int)1 - this1->__get((int)1))))->init(2,(((int)1 - this1->__get((int)3)) * ((int)1 - this1->__get((int)2))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toRgbx,return )

::Array< Float > Cmyk_Impl__obj::toRgbxa(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toRgbxa",0x33c260b1,"thx.color._Cmyk.Cmyk_Impl_.toRgbxa","thx/color/Cmyk.hx",145,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 145)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toRgbxa(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toRgbxa,return )

Float Cmyk_Impl__obj::toTemperature(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toTemperature",0x67fe81ef,"thx.color._Cmyk.Cmyk_Impl_.toTemperature","thx/color/Cmyk.hx",148,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 148)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toTemperature(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toTemperature,return )

::Array< Float > Cmyk_Impl__obj::toXyz(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toXyz",0x44c79314,"thx.color._Cmyk.Cmyk_Impl_.toXyz","thx/color/Cmyk.hx",151,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 151)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toXyz(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toXyz,return )

::Array< Float > Cmyk_Impl__obj::toYuv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toYuv",0x44c851d5,"thx.color._Cmyk.Cmyk_Impl_.toYuv","thx/color/Cmyk.hx",154,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 154)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toYuv(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toYuv,return )

::Array< Float > Cmyk_Impl__obj::toYxy(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","toYxy",0x44c85475,"thx.color._Cmyk.Cmyk_Impl_.toYxy","thx/color/Cmyk.hx",157,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 157)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toYxy(::thx::color::_Cmyk::Cmyk_Impl__obj::toRgbx(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,toYxy,return )

Float Cmyk_Impl__obj::get_cyan(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","get_cyan",0x8c8364f6,"thx.color._Cmyk.Cmyk_Impl_.get_cyan","thx/color/Cmyk.hx",160,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 160)		return this1->__get((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,get_cyan,return )

Float Cmyk_Impl__obj::get_magenta(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","get_magenta",0x195c0036,"thx.color._Cmyk.Cmyk_Impl_.get_magenta","thx/color/Cmyk.hx",162,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 162)		return this1->__get((int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,get_magenta,return )

Float Cmyk_Impl__obj::get_yellow(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","get_yellow",0x8ef99a07,"thx.color._Cmyk.Cmyk_Impl_.get_yellow","thx/color/Cmyk.hx",164,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 164)		return this1->__get((int)2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,get_yellow,return )

Float Cmyk_Impl__obj::get_black(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Cmyk.Cmyk_Impl_","get_black",0xca768e8c,"thx.color._Cmyk.Cmyk_Impl_.get_black","thx/color/Cmyk.hx",166,0xe882bf2b)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 166)		return this1->__get((int)3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Cmyk_Impl__obj,get_black,return )


Cmyk_Impl__obj::Cmyk_Impl__obj()
{
}

bool Cmyk_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"min") ) { outValue = min_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"max") ) { outValue = max_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toLab") ) { outValue = toLab_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toLCh") ) { outValue = toLCh_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toLuv") ) { outValue = toLuv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCmy") ) { outValue = toCmy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHsl") ) { outValue = toHsl_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHsv") ) { outValue = toHsv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgb") ) { outValue = toRgb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toXyz") ) { outValue = toXyz_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toYuv") ) { outValue = toYuv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toYxy") ) { outValue = toYxy_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"darker") ) { outValue = darker_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toGrey") ) { outValue = toGrey_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgba") ) { outValue = toRgba_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgbx") ) { outValue = toRgbx_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"lighter") ) { outValue = lighter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"roundTo") ) { outValue = roundTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgbxa") ) { outValue = toRgbxa_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"withCyan") ) { outValue = withCyan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_cyan") ) { outValue = get_cyan_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"normalize") ) { outValue = normalize_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withBlack") ) { outValue = withBlack_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_black") ) { outValue = get_black_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromFloats") ) { outValue = fromFloats_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withYellow") ) { outValue = withYellow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nearEquals") ) { outValue = nearEquals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_yellow") ) { outValue = get_yellow_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"interpolate") ) { outValue = interpolate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withMagenta") ) { outValue = withMagenta_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCubeHelix") ) { outValue = toCubeHelix_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHunterLab") ) { outValue = toHunterLab_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_magenta") ) { outValue = get_magenta_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"toTemperature") ) { outValue = toTemperature_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Cmyk_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Cmyk_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Cmyk_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Cmyk_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Cmyk_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Cmyk_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Cmyk_Impl__obj::__mClass;

static ::String Cmyk_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("fromFloats","\x61","\x28","\x9a","\x84"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("darker","\x63","\x36","\x3a","\x21"),
	HX_HCSTRING("lighter","\xc3","\x4a","\xe3","\x19"),
	HX_HCSTRING("interpolate","\xc1","\xd4","\x32","\x1f"),
	HX_HCSTRING("min","\x92","\x11","\x53","\x00"),
	HX_HCSTRING("max","\xa4","\x0a","\x53","\x00"),
	HX_HCSTRING("normalize","\x8d","\x37","\xa1","\xab"),
	HX_HCSTRING("roundTo","\x69","\x71","\x0f","\x8d"),
	HX_HCSTRING("withCyan","\x49","\x62","\x78","\x14"),
	HX_HCSTRING("withMagenta","\xc3","\xd8","\xbf","\x73"),
	HX_HCSTRING("withYellow","\x1a","\xd2","\x26","\xbc"),
	HX_HCSTRING("withBlack","\xd9","\x39","\xdf","\x38"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("nearEquals","\x47","\x71","\x71","\xfe"),
	HX_HCSTRING("toLab","\x92","\xf9","\x13","\x14"),
	HX_HCSTRING("toLCh","\x76","\xdf","\x13","\x14"),
	HX_HCSTRING("toLuv","\x12","\x0b","\x14","\x14"),
	HX_HCSTRING("toCmy","\xd4","\x2f","\x0d","\x14"),
	HX_HCSTRING("toCubeHelix","\x4e","\xbe","\x80","\x23"),
	HX_HCSTRING("toGrey","\x7a","\x3e","\x25","\x7a"),
	HX_HCSTRING("toHsl","\x46","\x00","\x11","\x14"),
	HX_HCSTRING("toHsv","\x50","\x00","\x11","\x14"),
	HX_HCSTRING("toHunterLab","\x72","\x0f","\xb2","\xef"),
	HX_HCSTRING("toRgb","\x52","\x8c","\x18","\x14"),
	HX_HCSTRING("toRgba","\xcf","\x3b","\x62","\x81"),
	HX_HCSTRING("toRgbx","\xe6","\x3b","\x62","\x81"),
	HX_HCSTRING("toRgbxa","\xbb","\x2d","\x92","\xb4"),
	HX_HCSTRING("toTemperature","\x79","\xb2","\xfc","\x3d"),
	HX_HCSTRING("toXyz","\x9e","\x29","\x1d","\x14"),
	HX_HCSTRING("toYuv","\x5f","\xe8","\x1d","\x14"),
	HX_HCSTRING("toYxy","\xff","\xea","\x1d","\x14"),
	HX_HCSTRING("get_cyan","\xac","\x00","\x87","\xc1"),
	HX_HCSTRING("get_magenta","\x40","\x1a","\x98","\x94"),
	HX_HCSTRING("get_yellow","\x3d","\x0f","\xe4","\xc0"),
	HX_HCSTRING("get_black","\x16","\x32","\x9b","\xf8"),
	::String(null())
};

void Cmyk_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.color._Cmyk.Cmyk_Impl_","\x64","\xad","\xdd","\x08");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Cmyk_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Cmyk_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Cmyk_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Cmyk_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Cmyk_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cmyk_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cmyk_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace color
} // end namespace _Cmyk
