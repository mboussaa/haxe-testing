// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_color_parse_ChannelInfo
#include <thx/color/parse/ChannelInfo.h>
#endif
namespace thx{
namespace color{
namespace parse{

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIBool(Bool value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIBool",f0,35,1e,fe),5,1)->_hx_init(0,value);
}

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIDegree(Float value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIDegree",92,ae,fb,6f),2,1)->_hx_init(0,value);
}

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIFloat(Float value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIFloat",16,a1,ef,a7),1,1)->_hx_init(0,value);
}

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIInt(Int value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIInt",e9,35,51,c4),4,1)->_hx_init(0,value);
}

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIInt8(Int value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIInt8",2f,f6,bd,02),3,1)->_hx_init(0,value);
}

::thx::color::parse::ChannelInfo ChannelInfo_obj::CIPercent(Float value)
{
	return hx::CreateEnum< ChannelInfo_obj >(HX_("CIPercent",bf,d8,bc,ca),0,1)->_hx_init(0,value);
}

bool ChannelInfo_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CIBool",f0,35,1e,fe)) { outValue = ChannelInfo_obj::CIBool_dyn(); return true; }
	if (inName==HX_("CIDegree",92,ae,fb,6f)) { outValue = ChannelInfo_obj::CIDegree_dyn(); return true; }
	if (inName==HX_("CIFloat",16,a1,ef,a7)) { outValue = ChannelInfo_obj::CIFloat_dyn(); return true; }
	if (inName==HX_("CIInt",e9,35,51,c4)) { outValue = ChannelInfo_obj::CIInt_dyn(); return true; }
	if (inName==HX_("CIInt8",2f,f6,bd,02)) { outValue = ChannelInfo_obj::CIInt8_dyn(); return true; }
	if (inName==HX_("CIPercent",bf,d8,bc,ca)) { outValue = ChannelInfo_obj::CIPercent_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ChannelInfo_obj)

int ChannelInfo_obj::__FindIndex(::String inName)
{
	if (inName==HX_("CIBool",f0,35,1e,fe)) return 5;
	if (inName==HX_("CIDegree",92,ae,fb,6f)) return 2;
	if (inName==HX_("CIFloat",16,a1,ef,a7)) return 1;
	if (inName==HX_("CIInt",e9,35,51,c4)) return 4;
	if (inName==HX_("CIInt8",2f,f6,bd,02)) return 3;
	if (inName==HX_("CIPercent",bf,d8,bc,ca)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIBool,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIDegree,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIFloat,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIInt,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIInt8,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ChannelInfo_obj,CIPercent,return)

int ChannelInfo_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("CIBool",f0,35,1e,fe)) return 1;
	if (inName==HX_("CIDegree",92,ae,fb,6f)) return 1;
	if (inName==HX_("CIFloat",16,a1,ef,a7)) return 1;
	if (inName==HX_("CIInt",e9,35,51,c4)) return 1;
	if (inName==HX_("CIInt8",2f,f6,bd,02)) return 1;
	if (inName==HX_("CIPercent",bf,d8,bc,ca)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val ChannelInfo_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CIBool",f0,35,1e,fe)) return CIBool_dyn();
	if (inName==HX_("CIDegree",92,ae,fb,6f)) return CIDegree_dyn();
	if (inName==HX_("CIFloat",16,a1,ef,a7)) return CIFloat_dyn();
	if (inName==HX_("CIInt",e9,35,51,c4)) return CIInt_dyn();
	if (inName==HX_("CIInt8",2f,f6,bd,02)) return CIInt8_dyn();
	if (inName==HX_("CIPercent",bf,d8,bc,ca)) return CIPercent_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String ChannelInfo_obj_sStaticFields[] = {
	HX_("CIPercent",bf,d8,bc,ca),
	HX_("CIFloat",16,a1,ef,a7),
	HX_("CIDegree",92,ae,fb,6f),
	HX_("CIInt8",2f,f6,bd,02),
	HX_("CIInt",e9,35,51,c4),
	HX_("CIBool",f0,35,1e,fe),
	::String(null())
};

static void ChannelInfo_obj_sMarkStatics(HX_MARK_PARAMS) {
};

#ifdef HXCPP_VISIT_ALLOCS
static void ChannelInfo_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ChannelInfo_obj::__mClass,"__mClass");
};
#endif

hx::Class ChannelInfo_obj::__mClass;

Dynamic __Create_ChannelInfo_obj() { return new ChannelInfo_obj; }

void ChannelInfo_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.color.parse.ChannelInfo","\x41","\xe2","\x5b","\x91"), hx::TCanCast< ChannelInfo_obj >,ChannelInfo_obj_sStaticFields,0,
	&__Create_ChannelInfo_obj, &__Create,
	&super::__SGetClass(), &CreateChannelInfo_obj, ChannelInfo_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , ChannelInfo_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ChannelInfo_obj::__GetStatic;
}

void ChannelInfo_obj::__boot()
{
}


} // end namespace thx
} // end namespace color
} // end namespace parse
