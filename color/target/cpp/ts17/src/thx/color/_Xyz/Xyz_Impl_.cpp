// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_thx_ArrayFloats
#include <thx/ArrayFloats.h>
#endif
#ifndef INCLUDED_thx_Floats
#include <thx/Floats.h>
#endif
#ifndef INCLUDED_thx_color__Lab_Lab_Impl_
#include <thx/color/_Lab/Lab_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Rgbx_Rgbx_Impl_
#include <thx/color/_Rgbx/Rgbx_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Rgbxa_Rgbxa_Impl_
#include <thx/color/_Rgbxa/Rgbxa_Impl_.h>
#endif
#ifndef INCLUDED_thx_color__Xyz_Xyz_Impl_
#include <thx/color/_Xyz/Xyz_Impl_.h>
#endif
#ifndef INCLUDED_thx_color_parse_ChannelInfo
#include <thx/color/parse/ChannelInfo.h>
#endif
#ifndef INCLUDED_thx_color_parse_ColorInfo
#include <thx/color/parse/ColorInfo.h>
#endif
#ifndef INCLUDED_thx_color_parse_ColorParser
#include <thx/color/parse/ColorParser.h>
#endif

namespace thx{
namespace color{
namespace _Xyz{

void Xyz_Impl__obj::__construct() { }

Dynamic Xyz_Impl__obj::__CreateEmpty() { return new Xyz_Impl__obj; }

hx::ObjectPtr< Xyz_Impl__obj > Xyz_Impl__obj::__new()
{
	hx::ObjectPtr< Xyz_Impl__obj > _hx_result = new Xyz_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Xyz_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Xyz_Impl__obj > _hx_result = new Xyz_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::Array< Float > Xyz_Impl__obj::whiteReference;

Float Xyz_Impl__obj::epsilon;

Float Xyz_Impl__obj::kappa;

::Array< Float > Xyz_Impl__obj::create(Float x,Float y,Float z){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","create",0x434380b0,"thx.color._Xyz.Xyz_Impl_.create","thx/color/Xyz.hx",47,0x01c3823c)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(  47)		return ::Array_obj< Float >::__new(3)->init(0,x)->init(1,y)->init(2,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Xyz_Impl__obj,create,return )

::Array< Float > Xyz_Impl__obj::fromFloats(::Array< Float > arr){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","fromFloats",0x9e6f2c15,"thx.color._Xyz.Xyz_Impl_.fromFloats","thx/color/Xyz.hx",49,0x01c3823c)
            	HX_STACK_ARG(arr,"arr")
HXLINE(  50)		::thx::ArrayFloats_obj::resize(arr,(int)3,null());
HXLINE(  51)		return ::Array_obj< Float >::__new(3)->init(0,arr->__get((int)0))->init(1,arr->__get((int)1))->init(2,arr->__get((int)2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,fromFloats,return )

::Array< Float > Xyz_Impl__obj::fromString(::String color){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","fromString",0x6e49318f,"thx.color._Xyz.Xyz_Impl_.fromString","thx/color/Xyz.hx",54,0x01c3823c)
            	HX_STACK_ARG(color,"color")
HXLINE(  55)		HX_VARI(  ::thx::color::parse::ColorInfo,info) = ::thx::color::parse::ColorParser_obj::parseColor(color);
HXLINE(  56)		if (hx::IsNull( info )) {
HXLINE(  57)			return null();
            		}
HXLINE(  59)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  59)			::String _hx_switch_0 = info->name;
            			if (  (_hx_switch_0==HX_("ciexyz",ba,a6,85,4d)) ||  (_hx_switch_0==HX_("xyz",59,78,5b,00)) ){
HXLINE(  61)				HX_VARI( ::Array< Float >,channels) = ::thx::color::parse::ColorParser_obj::getFloatChannels(info->channels,(int)3,false);
HXLINE(  59)				return channels;
HXLINE(  61)				goto _hx_goto_0;
            			}
            			/* default */{
HXLINE(  59)				return null();
            			}
            			_hx_goto_0:;
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE(  59)				return null();
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN(  59)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,fromString,return )

::Array< Float > Xyz_Impl__obj::_new(::Array< Float > channels){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","_new",0x9d219a15,"thx.color._Xyz.Xyz_Impl_._new","thx/color/Xyz.hx",67,0x01c3823c)
            	HX_STACK_ARG(channels,"channels")
HXLINE(  67)		return channels;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,_new,return )

::Array< Float > Xyz_Impl__obj::interpolate(::Array< Float > this1,::Array< Float > other,Float t){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","interpolate",0x9fc10e8d,"thx.color._Xyz.Xyz_Impl_.interpolate","thx/color/Xyz.hx",71,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(t,"t")
HXLINE(  71)		return ::Array_obj< Float >::__new(3)->init(0,::thx::Floats_obj::interpolate(t,this1->__get((int)0),other->__get((int)0)))->init(1,::thx::Floats_obj::interpolate(t,this1->__get((int)1),other->__get((int)1)))->init(2,::thx::Floats_obj::interpolate(t,this1->__get((int)2),other->__get((int)2)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Xyz_Impl__obj,interpolate,return )

::Array< Float > Xyz_Impl__obj::min(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","min",0xf0ac9f5e,"thx.color._Xyz.Xyz_Impl_.min","thx/color/Xyz.hx",78,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  78)		HX_VARI( Float,x) = ::Math_obj::min(this1->__get((int)0),other->__get((int)0));
HXDLIN(  78)		HX_VARI( Float,y) = ::Math_obj::min(this1->__get((int)1),other->__get((int)1));
HXDLIN(  78)		HX_VARI( Float,z) = ::Math_obj::min(this1->__get((int)2),other->__get((int)2));
HXDLIN(  78)		return ::Array_obj< Float >::__new(3)->init(0,x)->init(1,y)->init(2,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,min,return )

::Array< Float > Xyz_Impl__obj::max(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","max",0xf0ac9870,"thx.color._Xyz.Xyz_Impl_.max","thx/color/Xyz.hx",81,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  81)		HX_VARI( Float,x) = ::Math_obj::max(this1->__get((int)0),other->__get((int)0));
HXDLIN(  81)		HX_VARI( Float,y) = ::Math_obj::max(this1->__get((int)1),other->__get((int)1));
HXDLIN(  81)		HX_VARI( Float,z) = ::Math_obj::max(this1->__get((int)2),other->__get((int)2));
HXDLIN(  81)		return ::Array_obj< Float >::__new(3)->init(0,x)->init(1,y)->init(2,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,max,return )

::Array< Float > Xyz_Impl__obj::roundTo(::Array< Float > this1,Int decimals){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","roundTo",0x1371d535,"thx.color._Xyz.Xyz_Impl_.roundTo","thx/color/Xyz.hx",84,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(decimals,"decimals")
HXLINE(  84)		HX_VARI( Float,x) = ::thx::Floats_obj::roundTo(this1->__get((int)0),decimals);
HXDLIN(  84)		HX_VARI( Float,y) = ::thx::Floats_obj::roundTo(this1->__get((int)1),decimals);
HXDLIN(  84)		HX_VARI( Float,z) = ::thx::Floats_obj::roundTo(this1->__get((int)2),decimals);
HXDLIN(  84)		return ::Array_obj< Float >::__new(3)->init(0,x)->init(1,y)->init(2,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,roundTo,return )

::Array< Float > Xyz_Impl__obj::withX(::Array< Float > this1,Float newx){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","withX",0xaea0685e,"thx.color._Xyz.Xyz_Impl_.withX","thx/color/Xyz.hx",87,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newx,"newx")
HXLINE(  87)		return ::Array_obj< Float >::__new(3)->init(0,newx)->init(1,this1->__get((int)1))->init(2,this1->__get((int)2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,withX,return )

::Array< Float > Xyz_Impl__obj::withY(::Array< Float > this1,Float newy){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","withY",0xaea0685f,"thx.color._Xyz.Xyz_Impl_.withY","thx/color/Xyz.hx",90,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newy,"newy")
HXLINE(  90)		return ::Array_obj< Float >::__new(3)->init(0,this1->__get((int)0))->init(1,newy)->init(2,this1->__get((int)2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,withY,return )

::Array< Float > Xyz_Impl__obj::withZ(::Array< Float > this1,Float newz){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","withZ",0xaea06860,"thx.color._Xyz.Xyz_Impl_.withZ","thx/color/Xyz.hx",93,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newz,"newz")
HXLINE(  93)		return ::Array_obj< Float >::__new(3)->init(0,this1->__get((int)0))->init(1,this1->__get((int)1))->init(2,newz);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,withZ,return )

::String Xyz_Impl__obj::toString(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toString",0x4823bf60,"thx.color._Xyz.Xyz_Impl_.toString","thx/color/Xyz.hx",96,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  96)		return ((((((HX_("xyz(",af,d5,ad,4f) + this1->__get((int)0)) + HX_(",",2c,00,00,00)) + this1->__get((int)1)) + HX_(",",2c,00,00,00)) + this1->__get((int)2)) + HX_(")",29,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toString,return )

Bool Xyz_Impl__obj::equals(::Array< Float > this1,::Array< Float > other){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","equals",0x872707f3,"thx.color._Xyz.Xyz_Impl_.equals","thx/color/Xyz.hx",99,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
HXLINE(  99)		return ::thx::color::_Xyz::Xyz_Impl__obj::nearEquals(this1,other,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Xyz_Impl__obj,equals,return )

Bool Xyz_Impl__obj::nearEquals(::Array< Float > this1,::Array< Float > other, ::Dynamic __o_tolerance){
 ::Dynamic tolerance = __o_tolerance.Default(((Float)1e-9));
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","nearEquals",0x184674fb,"thx.color._Xyz.Xyz_Impl_.nearEquals","thx/color/Xyz.hx",102,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(other,"other")
            	HX_STACK_ARG(tolerance,"tolerance")
HXLINE( 102)		Bool _hx_tmp;
HXDLIN( 102)		Bool _hx_tmp1 = ::thx::Floats_obj::nearEquals(this1->__get((int)0),other->__get((int)0),tolerance);
HXDLIN( 102)		if (_hx_tmp1) {
HXLINE( 102)			_hx_tmp = ::thx::Floats_obj::nearEquals(this1->__get((int)1),other->__get((int)1),tolerance);
            		}
            		else {
HXLINE( 102)			_hx_tmp = false;
            		}
HXDLIN( 102)		if (_hx_tmp) {
HXLINE( 102)			return ::thx::Floats_obj::nearEquals(this1->__get((int)2),other->__get((int)2),tolerance);
            		}
            		else {
HXLINE( 102)			return false;
            		}
HXDLIN( 102)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Xyz_Impl__obj,nearEquals,return )

::Array< Float > Xyz_Impl__obj::toLab(::Array< Float > this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		Float _hx_run(Float t){
            			HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toLab",0xf845925e,"thx.color._Xyz.Xyz_Impl_.toLab","thx/color/Xyz.hx",106,0x01c3823c)
            			HX_STACK_ARG(t,"t")
HXLINE( 106)			if ((t > ((Float)0.0088564516790356311))) {
HXLINE( 107)				return ::Math_obj::pow(t,((Float)0.333333333333333315));
            			}
            			else {
HXLINE( 109)				return ((((Float)7.78703703703703543) * t) + ((Float)0.137931034482758619));
            			}
HXLINE( 106)			return ((Float)0.);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toLab",0xf845925e,"thx.color._Xyz.Xyz_Impl_.toLab","thx/color/Xyz.hx",104,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 105)		HX_VARI(  ::Dynamic,f) =  ::Dynamic(new _hx_Closure_0());
HXLINE( 112)		HX_VARI( Float,x1) = ((Float)this1->__get((int)0) / (Float)::thx::color::_Xyz::Xyz_Impl__obj::whiteReference->__get((int)0));
HXDLIN( 112)		HX_VARI( Float,y1) = ((Float)this1->__get((int)1) / (Float)::thx::color::_Xyz::Xyz_Impl__obj::whiteReference->__get((int)1));
HXDLIN( 112)		HX_VARI( Float,z1) = ((Float)this1->__get((int)2) / (Float)::thx::color::_Xyz::Xyz_Impl__obj::whiteReference->__get((int)2));
HXDLIN( 112)		HX_VARI( Float,fy1) = ( (Float)(f(y1)) );
HXDLIN( 112)		HX_VARI( Float,l) = (((int)116 * fy1) - (int)16);
HXLINE( 117)		Float _hx_tmp = ( (Float)(f(x1)) );
HXLINE( 112)		HX_VARI( Float,a) = ((int)500 * (_hx_tmp - fy1));
HXLINE( 118)		Float _hx_tmp1 = ( (Float)(f(z1)) );
HXLINE( 119)		return ::Array_obj< Float >::__new(3)->init(0,l)->init(1,a)->init(2,((int)200 * (fy1 - _hx_tmp1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toLab,return )

::Array< Float > Xyz_Impl__obj::toLCh(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toLCh",0xf8457842,"thx.color._Xyz.Xyz_Impl_.toLCh","thx/color/Xyz.hx",123,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 123)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toLab(this1);
HXDLIN( 123)		return ::thx::color::_Lab::Lab_Impl__obj::toLCh(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toLCh,return )

::Array< Float > Xyz_Impl__obj::toLuv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toLuv",0xf845a3de,"thx.color._Xyz.Xyz_Impl_.toLuv","thx/color/Xyz.hx",125,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 126)		HX_VARI( Float,f) = ((Float)(this1->__get((int)1) * (int)100) / (Float)(::thx::color::_Xyz::Xyz_Impl__obj::whiteReference->__get((int)1) * (int)100));
HXDLIN( 126)		HX_VARI( Float,r) = ::Math_obj::pow(((Float)0.206896551724137928),(int)3);
HXDLIN( 126)		HX_VAR( Float,l);
HXLINE( 131)		if ((f > r)) {
HXLINE( 132)			Float _hx_tmp = ::Math_obj::pow(f,((Float)0.333333333333333315));
HXLINE( 126)			l = (((int)116 * _hx_tmp) - (int)16);
            		}
            		else {
HXLINE( 133)			Float _hx_tmp1 = ::Math_obj::pow(((Float)9.66666666666666607),(int)3);
HXLINE( 126)			l = (_hx_tmp1 * f);
            		}
HXLINE( 136)		return ::Array_obj< Float >::__new(3)->init(0,((Float)l / (Float)(int)100))->init(1,((Float)(((int)13 * l) * (::thx::color::_Xyz::Xyz_Impl__obj::get_u(this1) - (::thx::color::_Xyz::Xyz_Impl__obj::get_u(::thx::color::_Xyz::Xyz_Impl__obj::whiteReference) * (int)100))) / (Float)(int)100))->init(2,((Float)(((int)13 * l) * (::thx::color::_Xyz::Xyz_Impl__obj::get_v(this1) - (::thx::color::_Xyz::Xyz_Impl__obj::get_v(::thx::color::_Xyz::Xyz_Impl__obj::whiteReference) * (int)100))) / (Float)(int)100));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toLuv,return )

::Array< Float > Xyz_Impl__obj::toCmy(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toCmy",0xf83ec8a0,"thx.color._Xyz.Xyz_Impl_.toCmy","thx/color/Xyz.hx",140,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 140)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 140)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toCmy(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toCmy,return )

::Array< Float > Xyz_Impl__obj::toCmyk(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toCmyk",0x3eb0c3cb,"thx.color._Xyz.Xyz_Impl_.toCmyk","thx/color/Xyz.hx",143,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 143)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 143)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toCmyk(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toCmyk,return )

::Array< Float > Xyz_Impl__obj::toCubeHelix(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toCubeHelix",0xa40ef81a,"thx.color._Xyz.Xyz_Impl_.toCubeHelix","thx/color/Xyz.hx",146,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 146)		HX_VARI_NAME( ::Array< Float >,this2,"this") = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 146)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toCubeHelixWithGamma(this2,(int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toCubeHelix,return )

Float Xyz_Impl__obj::toGrey(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toGrey",0x4159582e,"thx.color._Xyz.Xyz_Impl_.toGrey","thx/color/Xyz.hx",149,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 149)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 149)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toGrey(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toGrey,return )

::Array< Float > Xyz_Impl__obj::toHsl(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toHsl",0xf8429912,"thx.color._Xyz.Xyz_Impl_.toHsl","thx/color/Xyz.hx",152,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 152)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 152)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toHsl(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toHsl,return )

::Array< Float > Xyz_Impl__obj::toHsv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toHsv",0xf842991c,"thx.color._Xyz.Xyz_Impl_.toHsv","thx/color/Xyz.hx",155,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 155)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 155)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toHsv(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toHsv,return )

::Array< Float > Xyz_Impl__obj::toHunterLab(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toHunterLab",0x7040493e,"thx.color._Xyz.Xyz_Impl_.toHunterLab","thx/color/Xyz.hx",157,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 158)		Float _hx_tmp = ::Math_obj::sqrt(this1->__get((int)1));
HXDLIN( 158)		HX_VARI( Float,l) = (((Float)10.0) * _hx_tmp);
HXDLIN( 158)		HX_VAR( Float,a);
HXLINE( 159)		if ((this1->__get((int)1) != (int)0)) {
HXLINE( 159)			Float _hx_tmp1 = ((((Float)1.02) * this1->__get((int)0)) - this1->__get((int)1));
HXDLIN( 159)			Float _hx_tmp2 = ::Math_obj::sqrt(this1->__get((int)1));
HXLINE( 158)			a = (((Float)17.5) * ((Float)_hx_tmp1 / (Float)_hx_tmp2));
            		}
            		else {
HXLINE( 158)			a = (int)0;
            		}
HXDLIN( 158)		HX_VAR( Float,b);
HXLINE( 160)		if ((this1->__get((int)1) != (int)0)) {
HXLINE( 160)			Float _hx_tmp3 = (this1->__get((int)1) - (((Float).847) * this1->__get((int)2)));
HXDLIN( 160)			Float _hx_tmp4 = ::Math_obj::sqrt(this1->__get((int)1));
HXLINE( 158)			b = (((Float)7.0) * ((Float)_hx_tmp3 / (Float)_hx_tmp4));
            		}
            		else {
HXLINE( 158)			b = (int)0;
            		}
HXLINE( 161)		return ::Array_obj< Float >::__new(3)->init(0,l)->init(1,a)->init(2,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toHunterLab,return )

Int Xyz_Impl__obj::toRgb(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toRgb",0xf84a251e,"thx.color._Xyz.Xyz_Impl_.toRgb","thx/color/Xyz.hx",165,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 165)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 165)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toRgb(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toRgb,return )

Int Xyz_Impl__obj::toRgba(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toRgba",0x48965583,"thx.color._Xyz.Xyz_Impl_.toRgba","thx/color/Xyz.hx",168,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 168)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbxa(this1);
HXDLIN( 168)		return ::thx::color::_Rgbxa::Rgbxa_Impl__obj::toRgba(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toRgba,return )

::Array< Float > Xyz_Impl__obj::toRgbx(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toRgbx",0x4896559a,"thx.color._Xyz.Xyz_Impl_.toRgbx","thx/color/Xyz.hx",170,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 171)		HX_VARI( Float,x) = this1->__get((int)0);
HXDLIN( 171)		HX_VARI( Float,y) = this1->__get((int)1);
HXDLIN( 171)		HX_VARI( Float,z) = this1->__get((int)2);
HXDLIN( 171)		HX_VARI( Float,r) = (((x * ((Float)3.2406)) + (y * ((Float)-1.5372))) + (z * ((Float)-0.4986)));
HXDLIN( 171)		HX_VARI( Float,g) = (((x * ((Float)-0.9689)) + (y * ((Float)1.8758))) + (z * ((Float)0.0415)));
HXDLIN( 171)		HX_VARI( Float,b) = (((x * ((Float)0.0557)) + (y * ((Float)-0.204))) + (z * ((Float)1.0570)));
HXLINE( 178)		if ((r > ((Float)0.0031308))) {
HXLINE( 178)			Float _hx_tmp = ::Math_obj::pow(r,((Float)0.416666666666666685));
HXDLIN( 178)			r = ((((Float)1.055) * _hx_tmp) - ((Float)0.055));
            		}
            		else {
HXLINE( 178)			r = (((Float)12.92) * r);
            		}
HXLINE( 179)		if ((g > ((Float)0.0031308))) {
HXLINE( 179)			Float _hx_tmp1 = ::Math_obj::pow(g,((Float)0.416666666666666685));
HXDLIN( 179)			g = ((((Float)1.055) * _hx_tmp1) - ((Float)0.055));
            		}
            		else {
HXLINE( 179)			g = (((Float)12.92) * g);
            		}
HXLINE( 180)		if ((b > ((Float)0.0031308))) {
HXLINE( 180)			Float _hx_tmp2 = ::Math_obj::pow(b,((Float)0.416666666666666685));
HXDLIN( 180)			b = ((((Float)1.055) * _hx_tmp2) - ((Float)0.055));
            		}
            		else {
HXLINE( 180)			b = (((Float)12.92) * b);
            		}
HXLINE( 182)		return ::Array_obj< Float >::__new(3)->init(0,r)->init(1,g)->init(2,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toRgbx,return )

::Array< Float > Xyz_Impl__obj::toRgbxa(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toRgbxa",0x3af49187,"thx.color._Xyz.Xyz_Impl_.toRgbxa","thx/color/Xyz.hx",186,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 186)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 186)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toRgbxa(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toRgbxa,return )

Float Xyz_Impl__obj::toTemperature(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toTemperature",0xa9e5f745,"thx.color._Xyz.Xyz_Impl_.toTemperature","thx/color/Xyz.hx",189,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 189)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 189)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toTemperature(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toTemperature,return )

::Array< Float > Xyz_Impl__obj::toYuv(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toYuv",0xf84f812b,"thx.color._Xyz.Xyz_Impl_.toYuv","thx/color/Xyz.hx",192,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 192)		::Array< Float > _hx_tmp = ::thx::color::_Xyz::Xyz_Impl__obj::toRgbx(this1);
HXDLIN( 192)		return ::thx::color::_Rgbx::Rgbx_Impl__obj::toYuv(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toYuv,return )

::Array< Float > Xyz_Impl__obj::toYxy(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","toYxy",0xf84f83cb,"thx.color._Xyz.Xyz_Impl_.toYxy","thx/color/Xyz.hx",194,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 195)		HX_VARI( Float,sum) = ((this1->__get((int)0) + this1->__get((int)1)) + this1->__get((int)2));
HXLINE( 196)		HX_VAR_NAME( ::Array< Float >,this2,"this");
HXLINE( 197)		Float _hx_tmp = this1->__get((int)1);
HXLINE( 198)		Float _hx_tmp1;
HXDLIN( 198)		if ((sum == (int)0)) {
HXLINE( 198)			_hx_tmp1 = (int)1;
            		}
            		else {
HXLINE( 198)			_hx_tmp1 = ((Float)this1->__get((int)0) / (Float)sum);
            		}
HXLINE( 199)		Float _hx_tmp2;
HXDLIN( 199)		if ((sum == (int)0)) {
HXLINE( 199)			_hx_tmp2 = (int)1;
            		}
            		else {
HXLINE( 199)			_hx_tmp2 = ((Float)this1->__get((int)1) / (Float)sum);
            		}
HXLINE( 196)		this2 = ::Array_obj< Float >::__new(3)->init(0,_hx_tmp)->init(1,_hx_tmp1)->init(2,_hx_tmp2);
HXDLIN( 196)		return this2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,toYxy,return )

Float Xyz_Impl__obj::get_x(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","get_x",0x75923e1b,"thx.color._Xyz.Xyz_Impl_.get_x","thx/color/Xyz.hx",204,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 204)		return this1->__get((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,get_x,return )

Float Xyz_Impl__obj::get_y(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","get_y",0x75923e1c,"thx.color._Xyz.Xyz_Impl_.get_y","thx/color/Xyz.hx",206,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 206)		return this1->__get((int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,get_y,return )

Float Xyz_Impl__obj::get_z(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","get_z",0x75923e1d,"thx.color._Xyz.Xyz_Impl_.get_z","thx/color/Xyz.hx",208,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 208)		return this1->__get((int)2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,get_z,return )

Float Xyz_Impl__obj::get_u(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","get_u",0x75923e18,"thx.color._Xyz.Xyz_Impl_.get_u","thx/color/Xyz.hx",210,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 210)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 210)			return ((Float)((int)4 * this1->__get((int)0)) / (Float)((this1->__get((int)0) + ((int)15 * this1->__get((int)1))) + ((int)3 * this1->__get((int)2))));
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 210)				return (int)0;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 210)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,get_u,return )

Float Xyz_Impl__obj::get_v(::Array< Float > this1){
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","get_v",0x75923e19,"thx.color._Xyz.Xyz_Impl_.get_v","thx/color/Xyz.hx",212,0x01c3823c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 212)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 212)			return ((Float)((int)9 * this1->__get((int)1)) / (Float)((this1->__get((int)0) + ((int)15 * this1->__get((int)1))) + ((int)3 * this1->__get((int)2))));
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 212)				return (int)0;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 212)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Xyz_Impl__obj,get_v,return )


Xyz_Impl__obj::Xyz_Impl__obj()
{
}

bool Xyz_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"min") ) { outValue = min_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"max") ) { outValue = max_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"withX") ) { outValue = withX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withY") ) { outValue = withY_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"withZ") ) { outValue = withZ_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toLab") ) { outValue = toLab_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toLCh") ) { outValue = toLCh_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toLuv") ) { outValue = toLuv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCmy") ) { outValue = toCmy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHsl") ) { outValue = toHsl_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHsv") ) { outValue = toHsv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgb") ) { outValue = toRgb_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toYuv") ) { outValue = toYuv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toYxy") ) { outValue = toYxy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_x") ) { outValue = get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y") ) { outValue = get_y_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_z") ) { outValue = get_z_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_u") ) { outValue = get_u_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_v") ) { outValue = get_v_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCmyk") ) { outValue = toCmyk_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toGrey") ) { outValue = toGrey_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgba") ) { outValue = toRgba_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgbx") ) { outValue = toRgbx_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"roundTo") ) { outValue = roundTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toRgbxa") ) { outValue = toRgbxa_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromFloats") ) { outValue = fromFloats_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nearEquals") ) { outValue = nearEquals_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"interpolate") ) { outValue = interpolate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toCubeHelix") ) { outValue = toCubeHelix_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toHunterLab") ) { outValue = toHunterLab_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"toTemperature") ) { outValue = toTemperature_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Xyz_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Xyz_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Array< Float >*/ ,(void *) &Xyz_Impl__obj::whiteReference,HX_HCSTRING("whiteReference","\xe2","\x7f","\x0a","\x0b")},
	{hx::fsFloat,(void *) &Xyz_Impl__obj::epsilon,HX_HCSTRING("epsilon","\x6a","\xb5","\xbe","\xac")},
	{hx::fsFloat,(void *) &Xyz_Impl__obj::kappa,HX_HCSTRING("kappa","\x8b","\x22","\x53","\xdc")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Xyz_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Xyz_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Xyz_Impl__obj::whiteReference,"whiteReference");
	HX_MARK_MEMBER_NAME(Xyz_Impl__obj::epsilon,"epsilon");
	HX_MARK_MEMBER_NAME(Xyz_Impl__obj::kappa,"kappa");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Xyz_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Xyz_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Xyz_Impl__obj::whiteReference,"whiteReference");
	HX_VISIT_MEMBER_NAME(Xyz_Impl__obj::epsilon,"epsilon");
	HX_VISIT_MEMBER_NAME(Xyz_Impl__obj::kappa,"kappa");
};

#endif

hx::Class Xyz_Impl__obj::__mClass;

static ::String Xyz_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("whiteReference","\xe2","\x7f","\x0a","\x0b"),
	HX_HCSTRING("epsilon","\x6a","\xb5","\xbe","\xac"),
	HX_HCSTRING("kappa","\x8b","\x22","\x53","\xdc"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("fromFloats","\x61","\x28","\x9a","\x84"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("interpolate","\xc1","\xd4","\x32","\x1f"),
	HX_HCSTRING("min","\x92","\x11","\x53","\x00"),
	HX_HCSTRING("max","\xa4","\x0a","\x53","\x00"),
	HX_HCSTRING("roundTo","\x69","\x71","\x0f","\x8d"),
	HX_HCSTRING("withX","\x92","\xcf","\x6e","\xca"),
	HX_HCSTRING("withY","\x93","\xcf","\x6e","\xca"),
	HX_HCSTRING("withZ","\x94","\xcf","\x6e","\xca"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("nearEquals","\x47","\x71","\x71","\xfe"),
	HX_HCSTRING("toLab","\x92","\xf9","\x13","\x14"),
	HX_HCSTRING("toLCh","\x76","\xdf","\x13","\x14"),
	HX_HCSTRING("toLuv","\x12","\x0b","\x14","\x14"),
	HX_HCSTRING("toCmy","\xd4","\x2f","\x0d","\x14"),
	HX_HCSTRING("toCmyk","\x17","\xaa","\x7c","\x77"),
	HX_HCSTRING("toCubeHelix","\x4e","\xbe","\x80","\x23"),
	HX_HCSTRING("toGrey","\x7a","\x3e","\x25","\x7a"),
	HX_HCSTRING("toHsl","\x46","\x00","\x11","\x14"),
	HX_HCSTRING("toHsv","\x50","\x00","\x11","\x14"),
	HX_HCSTRING("toHunterLab","\x72","\x0f","\xb2","\xef"),
	HX_HCSTRING("toRgb","\x52","\x8c","\x18","\x14"),
	HX_HCSTRING("toRgba","\xcf","\x3b","\x62","\x81"),
	HX_HCSTRING("toRgbx","\xe6","\x3b","\x62","\x81"),
	HX_HCSTRING("toRgbxa","\xbb","\x2d","\x92","\xb4"),
	HX_HCSTRING("toTemperature","\x79","\xb2","\xfc","\x3d"),
	HX_HCSTRING("toYuv","\x5f","\xe8","\x1d","\x14"),
	HX_HCSTRING("toYxy","\xff","\xea","\x1d","\x14"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("get_z","\x51","\xa5","\x60","\x91"),
	HX_HCSTRING("get_u","\x4c","\xa5","\x60","\x91"),
	HX_HCSTRING("get_v","\x4d","\xa5","\x60","\x91"),
	::String(null())
};

void Xyz_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.color._Xyz.Xyz_Impl_","\x3a","\x18","\xc8","\xca");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Xyz_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Xyz_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Xyz_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Xyz_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Xyz_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Xyz_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Xyz_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Xyz_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","boot",0x9f1e08e6,"thx.color._Xyz.Xyz_Impl_.boot","thx/color/Xyz.hx",35,0x01c3823c)
HXLINE(  35)		whiteReference = ::Array_obj< Float >::__new(3)->init(0,((Float)0.95047))->init(1,(int)1)->init(2,((Float)1.08883));
            	}
{
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","boot",0x9f1e08e6,"thx.color._Xyz.Xyz_Impl_.boot","thx/color/Xyz.hx",36,0x01c3823c)
HXLINE(  36)		epsilon = ((Float)0.0088564516790356311);
            	}
{
            	HX_STACK_FRAME("thx.color._Xyz.Xyz_Impl_","boot",0x9f1e08e6,"thx.color._Xyz.Xyz_Impl_.boot","thx/color/Xyz.hx",37,0x01c3823c)
HXLINE(  37)		kappa = ((Float)903.296296296296305);
            	}
}

} // end namespace thx
} // end namespace color
} // end namespace _Xyz
