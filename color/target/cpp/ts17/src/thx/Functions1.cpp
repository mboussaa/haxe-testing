// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_thx_Functions1
#include <thx/Functions1.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif

namespace thx{

void Functions1_obj::__construct() { }

Dynamic Functions1_obj::__CreateEmpty() { return new Functions1_obj; }

hx::ObjectPtr< Functions1_obj > Functions1_obj::__new()
{
	hx::ObjectPtr< Functions1_obj > _hx_result = new Functions1_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Functions1_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Functions1_obj > _hx_result = new Functions1_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Functions1_obj::compose( ::Dynamic fa, ::Dynamic fb){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,fb, ::Dynamic,fa) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic v){
            			HX_STACK_FRAME("thx.Functions1","compose",0x5da1efe4,"thx.Functions1.compose","thx/Functions.hx",73,0xe7fcd70e)
            			HX_STACK_ARG(v,"v")
HXLINE(  73)			 ::Dynamic _hx_tmp = fb(v);
HXDLIN(  73)			return fa(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","compose",0x5da1efe4,"thx.Functions1.compose","thx/Functions.hx",73,0xe7fcd70e)
            	HX_STACK_ARG(fa,"fa")
            	HX_STACK_ARG(fb,"fb")
HXLINE(  73)		return  ::Dynamic(new _hx_Closure_0(fb,fa));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,compose,return )

 ::Dynamic Functions1_obj::map( ::Dynamic fab, ::Dynamic fbc){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,fbc, ::Dynamic,fab) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic a){
            			HX_STACK_FRAME("thx.Functions1","map",0x8104f06e,"thx.Functions1.map","thx/Functions.hx",79,0xe7fcd70e)
            			HX_STACK_ARG(a,"a")
HXLINE(  79)			 ::Dynamic _hx_tmp = fab(a);
HXDLIN(  79)			return fbc(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","map",0x8104f06e,"thx.Functions1.map","thx/Functions.hx",79,0xe7fcd70e)
            	HX_STACK_ARG(fab,"fab")
            	HX_STACK_ARG(fbc,"fbc")
HXLINE(  79)		return  ::Dynamic(new _hx_Closure_0(fbc,fab));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,map,return )

 ::Dynamic Functions1_obj::contramap( ::Dynamic fbc, ::Dynamic fab){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,fbc, ::Dynamic,fab) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic a){
            			HX_STACK_FRAME("thx.Functions1","contramap",0xef3fe66d,"thx.Functions1.contramap","thx/Functions.hx",85,0xe7fcd70e)
            			HX_STACK_ARG(a,"a")
HXLINE(  85)			 ::Dynamic _hx_tmp = fab(a);
HXDLIN(  85)			return fbc(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","contramap",0xef3fe66d,"thx.Functions1.contramap","thx/Functions.hx",85,0xe7fcd70e)
            	HX_STACK_ARG(fbc,"fbc")
            	HX_STACK_ARG(fab,"fab")
HXLINE(  85)		return  ::Dynamic(new _hx_Closure_0(fbc,fab));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,contramap,return )

 ::Dynamic Functions1_obj::join( ::Dynamic fa, ::Dynamic fb){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,fb, ::Dynamic,fa) HXARGC(1)
            		void _hx_run( ::Dynamic v){
            			HX_STACK_FRAME("thx.Functions1","join",0x615c65d8,"thx.Functions1.join","thx/Functions.hx",92,0xe7fcd70e)
            			HX_STACK_ARG(v,"v")
HXLINE(  93)			fa(v);
HXLINE(  94)			fb(v);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.Functions1","join",0x615c65d8,"thx.Functions1.join","thx/Functions.hx",92,0xe7fcd70e)
            	HX_STACK_ARG(fa,"fa")
            	HX_STACK_ARG(fb,"fb")
HXLINE(  92)		return  ::Dynamic(new _hx_Closure_0(fb,fa));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,join,return )

 ::Dynamic Functions1_obj::memoize( ::Dynamic callback, ::Dynamic resolver){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_1, ::Dynamic,resolver, ::haxe::ds::StringMap,map, ::Dynamic,callback) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic v1){
            			HX_STACK_FRAME("thx.Functions1","memoize",0xfd3939ac,"thx.Functions1.memoize","thx/Functions.hx",107,0xe7fcd70e)
            			HX_STACK_ARG(v1,"v1")
HXLINE( 108)			HX_VARI( ::String,key) = ( (::String)(resolver(v1)) );
HXLINE( 109)			Bool _hx_tmp1 = map->exists(key);
HXDLIN( 109)			if (_hx_tmp1) {
HXLINE( 110)				return map->get(key);
            			}
HXLINE( 111)			HX_VARI(  ::Dynamic,result) = callback(v1);
HXLINE( 112)			map->set(key,result);
HXLINE( 113)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","memoize",0xfd3939ac,"thx.Functions1.memoize","thx/Functions.hx",103,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(resolver,"resolver")
HXLINE( 104)		if (hx::IsNull( resolver )) {
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			::String _hx_run( ::Dynamic v){
            				HX_STACK_FRAME("thx.Functions1","memoize",0xfd3939ac,"thx.Functions1.memoize","thx/Functions.hx",105,0xe7fcd70e)
            				HX_STACK_ARG(v,"v")
HXLINE( 105)				::String _hx_tmp = ::Std_obj::string(v);
HXDLIN( 105)				return (HX_("",00,00,00,00) + _hx_tmp);
            			}
            			HX_END_LOCAL_FUNC1(return)

HXLINE( 105)			resolver =  ::Dynamic(new _hx_Closure_0());
            		}
HXLINE( 106)		HX_VARI(  ::haxe::ds::StringMap,map) =  ::haxe::ds::StringMap_obj::__new();
HXLINE( 107)		return  ::Dynamic(new _hx_Closure_1(resolver,map,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,memoize,return )

 ::Dynamic Functions1_obj::negate( ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            		Bool _hx_run( ::Dynamic v){
            			HX_STACK_FRAME("thx.Functions1","negate",0x93b34b30,"thx.Functions1.negate","thx/Functions.hx",122,0xe7fcd70e)
            			HX_STACK_ARG(v,"v")
HXLINE( 122)			return !(( (Bool)(callback(v)) ));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","negate",0x93b34b30,"thx.Functions1.negate","thx/Functions.hx",121,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
HXLINE( 121)		return  ::Dynamic(new _hx_Closure_0(callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions1_obj,negate,return )

void Functions1_obj::noop( ::Dynamic _){
            	HX_STACK_FRAME("thx.Functions1","noop",0x64014590,"thx.Functions1.noop","thx/Functions.hx",127,0xe7fcd70e)
            	HX_STACK_ARG(_,"_")
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions1_obj,noop,(void))

 ::Dynamic Functions1_obj::times(Int n, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,Int,n, ::Dynamic,callback) HXARGC(1)
            		::cpp::VirtualArray _hx_run( ::Dynamic value){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,value, ::Dynamic,callback) HXARGC(1)
            			 ::Dynamic _hx_run(Int _){
            				HX_STACK_FRAME("thx.Functions1","times",0x8d8a3e18,"thx.Functions1.times","thx/Functions.hx",134,0xe7fcd70e)
            				HX_STACK_ARG(_,"_")
HXLINE( 134)				return callback(value);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Functions1","times",0x8d8a3e18,"thx.Functions1.times","thx/Functions.hx",134,0xe7fcd70e)
            			HX_STACK_ARG(value,"value")
HXLINE( 134)			return ::thx::Ints_obj::range(n,null(),null())->map( ::Dynamic(new _hx_Closure_0(value,callback)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","times",0x8d8a3e18,"thx.Functions1.times","thx/Functions.hx",133,0xe7fcd70e)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 133)		return  ::Dynamic(new _hx_Closure_1(n,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,times,return )

 ::Dynamic Functions1_obj::timesi(Int n, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,Int,n, ::Dynamic,callback) HXARGC(1)
            		::cpp::VirtualArray _hx_run( ::Dynamic value){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,value, ::Dynamic,callback) HXARGC(1)
            			 ::Dynamic _hx_run(Int i){
            				HX_STACK_FRAME("thx.Functions1","timesi",0x4b6c1751,"thx.Functions1.timesi","thx/Functions.hx",143,0xe7fcd70e)
            				HX_STACK_ARG(i,"i")
HXLINE( 143)				return callback(value,i);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Functions1","timesi",0x4b6c1751,"thx.Functions1.timesi","thx/Functions.hx",143,0xe7fcd70e)
            			HX_STACK_ARG(value,"value")
HXLINE( 143)			return ::thx::Ints_obj::range(n,null(),null())->map( ::Dynamic(new _hx_Closure_0(value,callback)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions1","timesi",0x4b6c1751,"thx.Functions1.timesi","thx/Functions.hx",142,0xe7fcd70e)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 142)		return  ::Dynamic(new _hx_Closure_1(n,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions1_obj,timesi,return )

 ::Dynamic Functions1_obj::swapArguments( ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic a2, ::Dynamic a1){
            			HX_STACK_FRAME("thx.Functions1","swapArguments",0xbf0faa95,"thx.Functions1.swapArguments","thx/Functions.hx",150,0xe7fcd70e)
            			HX_STACK_ARG(a2,"a2")
            			HX_STACK_ARG(a1,"a1")
HXLINE( 150)			return callback(a1,a2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Functions1","swapArguments",0xbf0faa95,"thx.Functions1.swapArguments","thx/Functions.hx",149,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
HXLINE( 149)		return  ::Dynamic(new _hx_Closure_0(callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions1_obj,swapArguments,return )


Functions1_obj::Functions1_obj()
{
}

bool Functions1_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"noop") ) { outValue = noop_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"times") ) { outValue = times_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"timesi") ) { outValue = timesi_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compose") ) { outValue = compose_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"memoize") ) { outValue = memoize_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"contramap") ) { outValue = contramap_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"swapArguments") ) { outValue = swapArguments_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Functions1_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Functions1_obj_sStaticStorageInfo = 0;
#endif

static void Functions1_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Functions1_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Functions1_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Functions1_obj::__mClass,"__mClass");
};

#endif

hx::Class Functions1_obj::__mClass;

static ::String Functions1_obj_sStaticFields[] = {
	HX_HCSTRING("compose","\x12","\xb9","\x73","\x83"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("contramap","\x1b","\xd7","\xf8","\x83"),
	HX_HCSTRING("join","\xea","\x33","\x65","\x46"),
	HX_HCSTRING("memoize","\xda","\x02","\x0b","\x23"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("noop","\xa2","\x13","\x0a","\x49"),
	HX_HCSTRING("times","\xc6","\xbf","\x35","\x10"),
	HX_HCSTRING("timesi","\xe3","\x0d","\xd2","\x1e"),
	HX_HCSTRING("swapArguments","\x43","\x8a","\xb9","\x6a"),
	::String(null())
};

void Functions1_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Functions1","\x40","\x75","\xc6","\x4b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Functions1_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Functions1_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Functions1_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Functions1_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Functions1_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Functions1_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Functions1_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
