// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_thx_Functions2
#include <thx/Functions2.h>
#endif

namespace thx{

void Functions2_obj::__construct() { }

Dynamic Functions2_obj::__CreateEmpty() { return new Functions2_obj; }

hx::ObjectPtr< Functions2_obj > Functions2_obj::__new()
{
	hx::ObjectPtr< Functions2_obj > _hx_result = new Functions2_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Functions2_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Functions2_obj > _hx_result = new Functions2_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Functions2_obj::memoize( ::Dynamic callback, ::Dynamic resolver){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_1, ::Dynamic,resolver, ::haxe::ds::StringMap,map, ::Dynamic,callback) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v11, ::Dynamic v21){
            			HX_STACK_FRAME("thx.Functions2","memoize",0xd02aa2ad,"thx.Functions2.memoize","thx/Functions.hx",173,0xe7fcd70e)
            			HX_STACK_ARG(v11,"v11")
            			HX_STACK_ARG(v21,"v21")
HXLINE( 174)			HX_VARI( ::String,key) = ( (::String)(resolver(v11,v21)) );
HXLINE( 175)			Bool _hx_tmp3 = map->exists(key);
HXDLIN( 175)			if (_hx_tmp3) {
HXLINE( 176)				return map->get(key);
            			}
HXLINE( 177)			HX_VARI(  ::Dynamic,result) = callback(v11,v21);
HXLINE( 178)			map->set(key,result);
HXLINE( 179)			return result;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Functions2","memoize",0xd02aa2ad,"thx.Functions2.memoize","thx/Functions.hx",169,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(resolver,"resolver")
HXLINE( 170)		if (hx::IsNull( resolver )) {
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            			::String _hx_run( ::Dynamic v1, ::Dynamic v2){
            				HX_STACK_FRAME("thx.Functions2","memoize",0xd02aa2ad,"thx.Functions2.memoize","thx/Functions.hx",171,0xe7fcd70e)
            				HX_STACK_ARG(v1,"v1")
            				HX_STACK_ARG(v2,"v2")
HXLINE( 171)				::String _hx_tmp = ::Std_obj::string(v1);
HXDLIN( 171)				::String _hx_tmp1 = ((HX_("",00,00,00,00) + _hx_tmp) + HX_(":",3a,00,00,00));
HXDLIN( 171)				::String _hx_tmp2 = ::Std_obj::string(v2);
HXDLIN( 171)				return (_hx_tmp1 + _hx_tmp2);
            			}
            			HX_END_LOCAL_FUNC2(return)

HXLINE( 171)			resolver =  ::Dynamic(new _hx_Closure_0());
            		}
HXLINE( 172)		HX_VARI(  ::haxe::ds::StringMap,map) =  ::haxe::ds::StringMap_obj::__new();
HXLINE( 173)		return  ::Dynamic(new _hx_Closure_1(resolver,map,callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Functions2_obj,memoize,return )

 ::Dynamic Functions2_obj::curry( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic a){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a, ::Dynamic,f) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic b){
            				HX_STACK_FRAME("thx.Functions2","curry",0xf5423e5a,"thx.Functions2.curry","thx/Functions.hx",184,0xe7fcd70e)
            				HX_STACK_ARG(b,"b")
HXLINE( 184)				return f(a,b);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.Functions2","curry",0xf5423e5a,"thx.Functions2.curry","thx/Functions.hx",184,0xe7fcd70e)
            			HX_STACK_ARG(a,"a")
HXLINE( 184)			return  ::Dynamic(new _hx_Closure_0(a,f));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.Functions2","curry",0xf5423e5a,"thx.Functions2.curry","thx/Functions.hx",184,0xe7fcd70e)
            	HX_STACK_ARG(f,"f")
HXLINE( 184)		return  ::Dynamic(new _hx_Closure_1(f));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions2_obj,curry,return )

 ::Dynamic Functions2_obj::negate( ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(2)
            		Bool _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_STACK_FRAME("thx.Functions2","negate",0xcce5bd4f,"thx.Functions2.negate","thx/Functions.hx",191,0xe7fcd70e)
            			HX_STACK_ARG(v1,"v1")
            			HX_STACK_ARG(v2,"v2")
HXLINE( 191)			return !(( (Bool)(callback(v1,v2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.Functions2","negate",0xcce5bd4f,"thx.Functions2.negate","thx/Functions.hx",190,0xe7fcd70e)
            	HX_STACK_ARG(callback,"callback")
HXLINE( 190)		return  ::Dynamic(new _hx_Closure_0(callback));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions2_obj,negate,return )


Functions2_obj::Functions2_obj()
{
}

bool Functions2_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"curry") ) { outValue = curry_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"memoize") ) { outValue = memoize_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Functions2_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Functions2_obj_sStaticStorageInfo = 0;
#endif

static void Functions2_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Functions2_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Functions2_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Functions2_obj::__mClass,"__mClass");
};

#endif

hx::Class Functions2_obj::__mClass;

static ::String Functions2_obj_sStaticFields[] = {
	HX_HCSTRING("memoize","\xda","\x02","\x0b","\x23"),
	HX_HCSTRING("curry","\x47","\x49","\x58","\x4e"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	::String(null())
};

void Functions2_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Functions2","\x41","\x75","\xc6","\x4b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Functions2_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Functions2_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Functions2_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Functions2_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Functions2_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Functions2_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Functions2_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
