// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_thx_Bools
#include <thx/Bools.h>
#endif

namespace thx{

void Bools_obj::__construct() { }

Dynamic Bools_obj::__CreateEmpty() { return new Bools_obj; }

hx::ObjectPtr< Bools_obj > Bools_obj::__new()
{
	hx::ObjectPtr< Bools_obj > _hx_result = new Bools_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Bools_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Bools_obj > _hx_result = new Bools_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int Bools_obj::compare(Bool a,Bool b){
            	HX_STACK_FRAME("thx.Bools","compare",0x1d8b76b6,"thx.Bools.compare","thx/Bools.hx",10,0xa62e1fa0)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  10)		if ((a == b)) {
HXLINE(  10)			return (int)0;
            		}
            		else {
HXLINE(  10)			if (a) {
HXLINE(  10)				return (int)-1;
            			}
            			else {
HXLINE(  10)				return (int)1;
            			}
            		}
HXDLIN(  10)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bools_obj,compare,return )

Int Bools_obj::toInt(Bool v){
            	HX_STACK_FRAME("thx.Bools","toInt",0x7345c605,"thx.Bools.toInt","thx/Bools.hx",16,0xa62e1fa0)
            	HX_STACK_ARG(v,"v")
HXLINE(  16)		if (v) {
HXLINE(  16)			return (int)1;
            		}
            		else {
HXLINE(  16)			return (int)0;
            		}
HXDLIN(  16)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bools_obj,toInt,return )

Bool Bools_obj::canParse(::String v){
            	HX_STACK_FRAME("thx.Bools","canParse",0x6fd8c2d2,"thx.Bools.canParse","thx/Bools.hx",21,0xa62e1fa0)
            	HX_STACK_ARG(v,"v")
HXLINE(  21)		HX_VARI( ::String,_g) = v.toLowerCase();
HXDLIN(  21)		if (hx::IsNull( _g )) {
HXLINE(  21)			return true;
            		}
            		else {
HXLINE(  21)			::String _hx_switch_0 = _g;
            			if (  (_hx_switch_0==HX_("0",30,00,00,00)) ||  (_hx_switch_0==HX_("1",31,00,00,00)) ||  (_hx_switch_0==HX_("false",a3,35,4f,fb)) ||  (_hx_switch_0==HX_("off",6f,93,54,00)) ||  (_hx_switch_0==HX_("on",1f,61,00,00)) ||  (_hx_switch_0==HX_("true",4e,a7,03,4d)) ){
HXLINE(  21)				return true;
HXDLIN(  21)				goto _hx_goto_0;
            			}
            			/* default */{
HXLINE(  21)				return false;
            			}
            			_hx_goto_0:;
            		}
HXDLIN(  21)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bools_obj,canParse,return )

Bool Bools_obj::parse(::String v){
            	HX_STACK_FRAME("thx.Bools","parse",0x1c899804,"thx.Bools.parse","thx/Bools.hx",29,0xa62e1fa0)
            	HX_STACK_ARG(v,"v")
HXLINE(  29)		HX_VARI( ::String,_g) = v.toLowerCase();
HXDLIN(  29)		if (hx::IsNull( _g )) {
HXLINE(  29)			return false;
            		}
            		else {
HXLINE(  29)			::String _hx_switch_0 = _g;
            			if (  (_hx_switch_0==HX_("1",31,00,00,00)) ||  (_hx_switch_0==HX_("on",1f,61,00,00)) ||  (_hx_switch_0==HX_("true",4e,a7,03,4d)) ){
HXLINE(  29)				return true;
HXDLIN(  29)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("0",30,00,00,00)) ||  (_hx_switch_0==HX_("false",a3,35,4f,fb)) ||  (_hx_switch_0==HX_("off",6f,93,54,00)) ){
HXLINE(  29)				return false;
HXDLIN(  29)				goto _hx_goto_1;
            			}
            			/* default */{
HXLINE(  32)				HX_STACK_DO_THROW(((HX_("unable to parse \"",dd,2d,14,8c) + _g) + HX_("\"",22,00,00,00)));
            			}
            			_hx_goto_1:;
            		}
HXLINE(  29)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bools_obj,parse,return )

Bool Bools_obj::_hx_xor(Bool a,Bool b){
            	HX_STACK_FRAME("thx.Bools","xor",0x01ef312c,"thx.Bools.xor","thx/Bools.hx",39,0xa62e1fa0)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  39)		return (a != b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bools_obj,_hx_xor,return )

::hx::EnumBase Bools_obj::option(Bool cond, ::Dynamic a){
            	HX_STACK_FRAME("thx.Bools","option",0x19cda284,"thx.Bools.option","thx/Bools.hx",46,0xa62e1fa0)
            	HX_STACK_ARG(cond,"cond")
            	HX_STACK_ARG(a,"a")
HXLINE(  46)		if (cond) {
HXLINE(  46)			return ::haxe::ds::Option_obj::Some(a);
            		}
            		else {
HXLINE(  46)			return ::haxe::ds::Option_obj::None_dyn();
            		}
HXDLIN(  46)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bools_obj,option,return )


Bools_obj::Bools_obj()
{
}

bool Bools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"xor") ) { outValue = _hx_xor_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"parse") ) { outValue = parse_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"option") ) { outValue = option_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compare") ) { outValue = compare_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"canParse") ) { outValue = canParse_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Bools_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Bools_obj_sStaticStorageInfo = 0;
#endif

static void Bools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Bools_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Bools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Bools_obj::__mClass,"__mClass");
};

#endif

hx::Class Bools_obj::__mClass;

static ::String Bools_obj_sStaticFields[] = {
	HX_HCSTRING("compare","\xa5","\x18","\x69","\x83"),
	HX_HCSTRING("toInt","\x34","\xbe","\x11","\x14"),
	HX_HCSTRING("canParse","\x03","\xd2","\xe8","\x2b"),
	HX_HCSTRING("parse","\x33","\x90","\x55","\xbd"),
	HX_HCSTRING("xor","\x9b","\x6f","\x5b","\x00"),
	HX_HCSTRING("option","\x75","\xd3","\x7a","\x2b"),
	::String(null())
};

void Bools_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.Bools","\x7f","\xc5","\x81","\xfe");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Bools_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Bools_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Bools_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Bools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Bools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bools_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
