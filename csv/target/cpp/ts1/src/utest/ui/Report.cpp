// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_utest_Runner
#include <utest/Runner.h>
#endif
#ifndef INCLUDED_utest_ui_Report
#include <utest/ui/Report.h>
#endif
#ifndef INCLUDED_utest_ui_common_HeaderDisplayMode
#include <utest/ui/common/HeaderDisplayMode.h>
#endif
#ifndef INCLUDED_utest_ui_common_IReport
#include <utest/ui/common/IReport.h>
#endif
#ifndef INCLUDED_utest_ui_common_SuccessResultsDisplayMode
#include <utest/ui/common/SuccessResultsDisplayMode.h>
#endif
#ifndef INCLUDED_utest_ui_text_PlainTextReport
#include <utest/ui/text/PlainTextReport.h>
#endif
#ifndef INCLUDED_utest_ui_text_PrintReport
#include <utest/ui/text/PrintReport.h>
#endif

namespace utest{
namespace ui{

void Report_obj::__construct() { }

Dynamic Report_obj::__CreateEmpty() { return new Report_obj; }

hx::ObjectPtr< Report_obj > Report_obj::__new()
{
	hx::ObjectPtr< Report_obj > _hx_result = new Report_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Report_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Report_obj > _hx_result = new Report_obj();
	_hx_result->__construct();
	return _hx_result;
}

::Dynamic Report_obj::create( ::utest::Runner runner,::hx::EnumBase displaySuccessResults,::hx::EnumBase headerDisplayMode){
            	HX_STACK_FRAME("utest.ui.Report","create",0x398a50c3,"utest.ui.Report.create","utest/ui/Report.hx",14,0x212e0ab7)
            	HX_STACK_ARG(runner,"runner")
            	HX_STACK_ARG(displaySuccessResults,"displaySuccessResults")
            	HX_STACK_ARG(headerDisplayMode,"headerDisplayMode")
HXLINE(  15)		HX_VARI( ::Dynamic,report) =  ::utest::ui::text::PrintReport_obj::__new(runner);
HXLINE(  38)		if (hx::IsNull( displaySuccessResults )) {
HXLINE(  39)			report->__SetField(HX_("displaySuccessResults",55,57,3a,a6),::utest::ui::common::SuccessResultsDisplayMode_obj::ShowSuccessResultsWithNoErrors_dyn(),hx::paccDynamic);
            		}
            		else {
HXLINE(  41)			report->__SetField(HX_("displaySuccessResults",55,57,3a,a6),displaySuccessResults,hx::paccDynamic);
            		}
HXLINE(  43)		if (hx::IsNull( headerDisplayMode )) {
HXLINE(  44)			report->__SetField(HX_("displayHeader",6f,c5,62,be),::utest::ui::common::HeaderDisplayMode_obj::ShowHeaderWithResults_dyn(),hx::paccDynamic);
            		}
            		else {
HXLINE(  46)			report->__SetField(HX_("displayHeader",6f,c5,62,be),headerDisplayMode,hx::paccDynamic);
            		}
HXLINE(  48)		return report;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Report_obj,create,return )


Report_obj::Report_obj()
{
}

bool Report_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Report_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Report_obj_sStaticStorageInfo = 0;
#endif

static void Report_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Report_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Report_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Report_obj::__mClass,"__mClass");
};

#endif

hx::Class Report_obj::__mClass;

static ::String Report_obj_sStaticFields[] = {
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	::String(null())
};

void Report_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("utest.ui.Report","\xc7","\x83","\x9d","\xdf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Report_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Report_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Report_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Report_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Report_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Report_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Report_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace utest
} // end namespace ui
