// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_utest_Runner
#include <utest/Runner.h>
#endif
#ifndef INCLUDED_utest_ui_common_IReport
#include <utest/ui/common/IReport.h>
#endif
#ifndef INCLUDED_utest_ui_text_PlainTextReport
#include <utest/ui/text/PlainTextReport.h>
#endif
#ifndef INCLUDED_utest_ui_text_PrintReport
#include <utest/ui/text/PrintReport.h>
#endif

namespace utest{
namespace ui{
namespace text{

void PrintReport_obj::__construct( ::utest::Runner runner){
            	HX_STACK_FRAME("utest.ui.text.PrintReport","new",0xd8d49685,"utest.ui.text.PrintReport.new","utest/ui/text/PrintReport.hx",44,0x46976dac)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(runner,"runner")
HXLINE(  45)		super::__construct(runner,this->_handler_dyn());
HXLINE(  46)		this->newline = HX_("\n",0a,00,00,00);
HXLINE(  47)		this->indent = HX_("  ",00,1c,00,00);
            	}

Dynamic PrintReport_obj::__CreateEmpty() { return new PrintReport_obj; }

hx::ObjectPtr< PrintReport_obj > PrintReport_obj::__new( ::utest::Runner runner)
{
	hx::ObjectPtr< PrintReport_obj > _hx_result = new PrintReport_obj();
	_hx_result->__construct(runner);
	return _hx_result;
}

Dynamic PrintReport_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PrintReport_obj > _hx_result = new PrintReport_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void PrintReport_obj::_handler( ::utest::ui::text::PlainTextReport report){
            	HX_STACK_FRAME("utest.ui.text.PrintReport","_handler",0x4bb3dd06,"utest.ui.text.PrintReport._handler","utest/ui/text/PrintReport.hx",51,0x46976dac)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(report,"report")
HXLINE(  51)		::String _hx_tmp = report->getResults();
HXDLIN(  51)		this->_trace(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PrintReport_obj,_handler,(void))

void PrintReport_obj::_trace(::String s){
            	HX_STACK_FRAME("utest.ui.text.PrintReport","_trace",0x823ab4c1,"utest.ui.text.PrintReport._trace","utest/ui/text/PrintReport.hx",54,0x46976dac)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE(  55)		s = ::StringTools_obj::replace(s,HX_("  ",00,1c,00,00),this->indent);
HXLINE(  56)		s = ::StringTools_obj::replace(s,HX_("\n",0a,00,00,00),this->newline);
HXLINE(  57)		::haxe::Log_obj::trace(s,hx::SourceInfo(HX_("PrintReport.hx",bd,1c,70,04),57,HX_("utest.ui.text.PrintReport",13,f0,c3,80),HX_("_trace",c6,d5,06,12)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(PrintReport_obj,_trace,(void))

void PrintReport_obj::_print(::String s){
            	HX_STACK_FRAME("utest.ui.text.PrintReport","_print",0x34a67e69,"utest.ui.text.PrintReport._print","utest/ui/text/PrintReport.hx",61,0x46976dac)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE(  61)		::cpp::Lib_obj::print(s);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PrintReport_obj,_print,(void))


PrintReport_obj::PrintReport_obj()
{
}

hx::Val PrintReport_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_trace") ) { return hx::Val( _trace_dyn()); }
		if (HX_FIELD_EQ(inName,"_print") ) { return hx::Val( _print_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_handler") ) { return hx::Val( _handler_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *PrintReport_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *PrintReport_obj_sStaticStorageInfo = 0;
#endif

static ::String PrintReport_obj_sMemberFields[] = {
	HX_HCSTRING("_handler","\x4b","\x09","\x8e","\x7f"),
	HX_HCSTRING("_trace","\xc6","\xd5","\x06","\x12"),
	HX_HCSTRING("_print","\x6e","\x9f","\x72","\xc4"),
	::String(null()) };

static void PrintReport_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PrintReport_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PrintReport_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PrintReport_obj::__mClass,"__mClass");
};

#endif

hx::Class PrintReport_obj::__mClass;

void PrintReport_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("utest.ui.text.PrintReport","\x13","\xf0","\xc3","\x80");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PrintReport_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(PrintReport_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< PrintReport_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PrintReport_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PrintReport_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PrintReport_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace utest
} // end namespace ui
} // end namespace text
