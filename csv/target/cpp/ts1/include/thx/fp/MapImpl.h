// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_fp_MapImpl
#define INCLUDED_thx_fp_MapImpl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,fp,MapImpl)
namespace thx{
namespace fp{


class MapImpl_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef MapImpl_obj OBJ_;

	public:
		MapImpl_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.fp.MapImpl","\x02","\xfc","\xd0","\xac"); }
		::String __ToString() const { return HX_HCSTRING("MapImpl.","\x32","\xb1","\x68","\x0e") + _hx_tag; }

		static ::thx::fp::MapImpl Bin(Int size, ::Dynamic key, ::Dynamic value,::hx::EnumBase lhs,::hx::EnumBase rhs);
		static ::Dynamic Bin_dyn();
		static ::thx::fp::MapImpl Tip;
		static inline ::thx::fp::MapImpl Tip_dyn() { return Tip; }
};

} // end namespace thx
} // end namespace fp

#endif /* INCLUDED_thx_fp_MapImpl */ 
