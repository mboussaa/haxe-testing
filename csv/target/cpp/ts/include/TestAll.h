// Generated by Haxe 3.3.0
#ifndef INCLUDED_TestAll
#define INCLUDED_TestAll

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TestAll)



class HXCPP_CLASS_ATTRIBUTES TestAll_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestAll_obj OBJ_;
		TestAll_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="TestAll")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"TestAll"); }
		static hx::ObjectPtr< TestAll_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestAll_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestAll","\xcf","\x8f","\x09","\x8b"); }

		static void main();
		static ::Dynamic main_dyn();

		void testEncode();
		::Dynamic testEncode_dyn();

		void testDecode();
		::Dynamic testDecode_dyn();

		void testIssue20160125();
		::Dynamic testIssue20160125_dyn();

		void testTerminalComma();
		::Dynamic testTerminalComma_dyn();

		void testRoundtrip();
		::Dynamic testRoundtrip_dyn();

		void testSemicolon();
		::Dynamic testSemicolon_dyn();

		void testAutoTrim();
		::Dynamic testAutoTrim_dyn();

		void testSurroundingWhitespaces();
		::Dynamic testSurroundingWhitespaces_dyn();

		void testTsv();
		::Dynamic testTsv_dyn();

};


#endif /* INCLUDED_TestAll */ 
