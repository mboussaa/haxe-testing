// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_csv_Csv
#define INCLUDED_thx_csv_Csv

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,csv,Csv)

namespace thx{
namespace csv{


class HXCPP_CLASS_ATTRIBUTES Csv_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Csv_obj OBJ_;
		Csv_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.csv.Csv")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.csv.Csv"); }
		static hx::ObjectPtr< Csv_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Csv_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Csv","\xa6","\x3b","\x33","\x00"); }

		static void __boot();
		static  ::Dynamic encodeOptions;
		static  ::Dynamic decodeOptions;
		static ::Array< ::Dynamic> decode(::String csv);
		static ::Dynamic decode_dyn();

		static ::Array< ::Dynamic> decodeObjects(::String csv);
		static ::Dynamic decodeObjects_dyn();

		static ::String encode(::Array< ::Dynamic> data);
		static ::Dynamic encode_dyn();

		static ::String encodeObjects(::Array< ::Dynamic> data);
		static ::Dynamic encodeObjects_dyn();

};

} // end namespace thx
} // end namespace csv

#endif /* INCLUDED_thx_csv_Csv */ 
