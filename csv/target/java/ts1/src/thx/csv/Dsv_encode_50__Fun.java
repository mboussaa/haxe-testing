// Generated by Haxe 3.3.0
package thx.csv;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Dsv_encode_50__Fun extends haxe.lang.Function
{
	public Dsv_encode_50__Fun(java.lang.Object options)
	{
		//line 51 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
		super(1, 0);
		//line 51 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
		this.options = options;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 50 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
		java.lang.String cell = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float1)) : (haxe.lang.Runtime.toString(__fn_dyn1)) );
		//line 51 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
		if (thx.csv.Dsv.requiresQuotes(cell, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.options, "delimiter", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.options, "quote", true)))) 
		{
			//line 52 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
			return thx.csv.Dsv.applyQuotes(cell, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.options, "quote", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(this.options, "escapedQuote", true)));
		}
		else
		{
			//line 54 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/Dsv.hx"
			return cell;
		}
		
	}
	
	
	public java.lang.Object options;
	
}


