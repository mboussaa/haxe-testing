// Generated by Haxe 3.3.0
package thx.fp._Map;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Map_Impl_
{
	static
	{
		//line 127 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		thx.fp._Map.Map_Impl_.delta = 5;
		//line 128 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		thx.fp._Map.Map_Impl_.ratio = 2;
	}
	
	public static <K, V> thx.fp.MapImpl empty()
	{
		//line 13 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return thx.fp.MapImpl.Tip;
	}
	
	
	public static <K, V> thx.fp.MapImpl singleton(K k, V v)
	{
		//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return thx.fp.MapImpl.Bin(1, k, v, thx.fp.MapImpl.Tip, thx.fp.MapImpl.Tip);
	}
	
	
	public static <K, V> thx.fp.MapImpl bin(K k, V v, thx.fp.MapImpl lhs, thx.fp.MapImpl rhs)
	{
		//line 17 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (lhs) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (rhs) ))) ) ) + 1 ), k, v, lhs, rhs);
	}
	
	
	public static <K, V> thx.fp.MapImpl fromNative(haxe.IMap<K, V> map, haxe.lang.Function comparator)
	{
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		thx.fp.MapImpl r = ((thx.fp.MapImpl) (thx.fp.MapImpl.Tip) );
		//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		{
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
			java.lang.Object tmp = map.keys();
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(tmp, "hasNext", null)))
			{
				//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K key = ((K) (haxe.lang.Runtime.callField(tmp, "next", null)) );
				//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				r = ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.insert(((thx.fp.MapImpl) (r) ), ((K) (key) ), ((java.lang.Object) (map.get(key)) ), ((haxe.lang.Function) (comparator) ))) );
			}
			
		}
		
		//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return r;
	}
	
	
	public static <K, V> haxe.ds.Option lookup(thx.fp.MapImpl this1, K key, haxe.lang.Function comparator)
	{
		//line 27 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return haxe.ds.Option.None;
			}
			
			
			case 1:
			{
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V xvalue = ((V) (this1.params[2]) );
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K xkey = ((K) (this1.params[1]) );
				//line 31 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.OrderingImpl c = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, key, 0.0, xkey)) );
				//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (c)
				{
					case LT:
					{
						//line 34 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (lhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case GT:
					{
						//line 36 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookup(((thx.fp.MapImpl) (rhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case EQ:
					{
						//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return haxe.ds.Option.Some(xvalue);
					}
					
					
				}
				
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				break;
			}
			
			
		}
		
		//line 26 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> haxe.ds.Option lookupTuple(thx.fp.MapImpl this1, K key, haxe.lang.Function comparator)
	{
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 45 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return haxe.ds.Option.None;
			}
			
			
			case 1:
			{
				//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V xvalue = ((V) (this1.params[2]) );
				//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K xkey = ((K) (this1.params[1]) );
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.OrderingImpl c = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, key, 0.0, xkey)) );
				//line 48 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (c)
				{
					case LT:
					{
						//line 50 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookupTuple(((thx.fp.MapImpl) (lhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case GT:
					{
						//line 52 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((haxe.ds.Option) (thx.fp._Map.Map_Impl_.lookupTuple(((thx.fp.MapImpl) (rhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) );
					}
					
					
					case EQ:
					{
						//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						java.lang.Object this2 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{xkey, xvalue}, new java.lang.String[]{}, new double[]{});
						//line 54 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return haxe.ds.Option.Some(((java.lang.Object) (this2) ));
					}
					
					
				}
				
				//line 46 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				break;
			}
			
			
		}
		
		//line 43 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> thx.fp.MapImpl delete(thx.fp.MapImpl this1, K key, haxe.lang.Function comparator)
	{
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return thx.fp.MapImpl.Tip;
			}
			
			
			case 1:
			{
				//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x = ((V) (this1.params[2]) );
				//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K kx = ((K) (this1.params[1]) );
				//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.OrderingImpl _g = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, key, 0.0, kx)) );
				//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (_g)
				{
					case LT:
					{
						//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (kx) ), ((V) (x) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.delete(((thx.fp.MapImpl) (lhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) ), ((thx.fp.MapImpl) (rhs) ))) );
					}
					
					
					case GT:
					{
						//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (kx) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.delete(((thx.fp.MapImpl) (rhs) ), ((K) (key) ), ((haxe.lang.Function) (comparator) ))) ))) );
					}
					
					
					case EQ:
					{
						//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.glue(((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
					}
					
					
				}
				
				//line 61 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				break;
			}
			
			
		}
		
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> thx.fp.MapImpl insert(thx.fp.MapImpl this1, K kx, V x, haxe.lang.Function comparator)
	{
		//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(1, kx, x, thx.fp.MapImpl.Tip, thx.fp.MapImpl.Tip)) );
			}
			
			
			case 1:
			{
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V y = ((V) (this1.params[2]) );
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K ky = ((K) (this1.params[1]) );
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				int sz = ((int) (haxe.lang.Runtime.toInt(this1.params[0])) );
				//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.OrderingImpl _g = ((thx.OrderingImpl) (comparator.__hx_invoke2_o(0.0, kx, 0.0, ky)) );
				//line 73 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (_g)
				{
					case LT:
					{
						//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (ky) ), ((V) (y) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.insert(((thx.fp.MapImpl) (lhs) ), ((K) (kx) ), ((V) (x) ), ((haxe.lang.Function) (comparator) ))) ), ((thx.fp.MapImpl) (rhs) ))) );
					}
					
					
					case GT:
					{
						//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (ky) ), ((V) (y) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.insert(((thx.fp.MapImpl) (rhs) ), ((K) (kx) ), ((V) (x) ), ((haxe.lang.Function) (comparator) ))) ))) );
					}
					
					
					case EQ:
					{
						//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return thx.fp.MapImpl.Bin(sz, kx, x, lhs, rhs);
					}
					
					
				}
				
				//line 72 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				break;
			}
			
			
		}
		
		//line 69 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <B, K, V> B foldLeft(thx.fp.MapImpl this1, B b, haxe.lang.Function f)
	{
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return b;
			}
			
			
			case 1:
			{
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl r = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl l = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 84 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x = ((V) (this1.params[2]) );
				//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((B) (thx.fp._Map.Map_Impl_.foldLeft(((thx.fp.MapImpl) (r) ), ((B) (thx.fp._Map.Map_Impl_.foldLeft(((thx.fp.MapImpl) (l) ), ((B) (f.__hx_invoke2_o(0.0, b, 0.0, x)) ), ((haxe.lang.Function) (f) ))) ), ((haxe.lang.Function) (f) ))) );
			}
			
			
		}
		
		//line 80 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <B, K, V> thx.fp.MapImpl map(thx.fp.MapImpl this1, haxe.lang.Function f)
	{
		//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return thx.fp.MapImpl.Tip;
			}
			
			
			case 1:
			{
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V y = ((V) (this1.params[2]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K ky = ((K) (this1.params[1]) );
				//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				int sz = ((int) (haxe.lang.Runtime.toInt(this1.params[0])) );
				//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return thx.fp.MapImpl.Bin(sz, ky, ((B) (f.__hx_invoke1_o(0.0, y)) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.map(((thx.fp.MapImpl) (lhs) ), ((haxe.lang.Function) (f) ))) ), ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.map(((thx.fp.MapImpl) (rhs) ), ((haxe.lang.Function) (f) ))) ));
			}
			
			
		}
		
		//line 88 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> haxe.root.Array<V> values(thx.fp.MapImpl this1)
	{
		//line 94 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return ((haxe.root.Array<V>) (thx.fp._Map.Map_Impl_.foldLeft(((thx.fp.MapImpl) (this1) ), ((java.lang.Object) (new haxe.root.Array<V>(( (V[]) (new java.lang.Object[] {}) ))) ), ((haxe.lang.Function) (new thx.fp._Map.Map_Impl__values_94__Fun<V>()) ))) );
	}
	
	
	public static <B, K, V> B foldLeftKeys(thx.fp.MapImpl this1, B b, haxe.lang.Function f)
	{
		//line 97 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 97 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return b;
			}
			
			
			case 1:
			{
				//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl r = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl l = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 100 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K kx = ((K) (this1.params[1]) );
				//line 97 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((B) (thx.fp._Map.Map_Impl_.foldLeftKeys(((thx.fp.MapImpl) (r) ), ((B) (thx.fp._Map.Map_Impl_.foldLeftKeys(((thx.fp.MapImpl) (l) ), ((B) (f.__hx_invoke2_o(0.0, b, 0.0, kx)) ), ((haxe.lang.Function) (f) ))) ), ((haxe.lang.Function) (f) ))) );
			}
			
			
		}
		
		//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <B, K, V> B foldLeftAll(thx.fp.MapImpl this1, B b, haxe.lang.Function f)
	{
		//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return b;
			}
			
			
			case 1:
			{
				//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl r = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl l = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x = ((V) (this1.params[2]) );
				//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K kx = ((K) (this1.params[1]) );
				//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((B) (thx.fp._Map.Map_Impl_.foldLeftAll(((thx.fp.MapImpl) (r) ), ((B) (thx.fp._Map.Map_Impl_.foldLeftAll(((thx.fp.MapImpl) (l) ), ((B) (f.__hx_invoke3_o(0.0, b, 0.0, kx, 0.0, x)) ), ((haxe.lang.Function) (f) ))) ), ((haxe.lang.Function) (f) ))) );
			}
			
			
		}
		
		//line 104 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <B, K, V> B foldLeftTuples(thx.fp.MapImpl this1, B b, haxe.lang.Function f)
	{
		//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return b;
			}
			
			
			case 1:
			{
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl r = ((thx.fp.MapImpl) (this1.params[4]) );
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl l = ((thx.fp.MapImpl) (this1.params[3]) );
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x = ((V) (this1.params[2]) );
				//line 116 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K kx = ((K) (this1.params[1]) );
				//line 117 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				java.lang.Object this2 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{kx, x}, new java.lang.String[]{}, new double[]{});
				//line 113 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((B) (thx.fp._Map.Map_Impl_.foldLeftTuples(((thx.fp.MapImpl) (r) ), ((B) (thx.fp._Map.Map_Impl_.foldLeftTuples(((thx.fp.MapImpl) (l) ), ((B) (f.__hx_invoke2_o(0.0, b, 0.0, ((java.lang.Object) (this2) ))) ), ((haxe.lang.Function) (f) ))) ), ((haxe.lang.Function) (f) ))) );
			}
			
			
		}
		
		//line 112 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> int size(thx.fp.MapImpl this1)
	{
		//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return 0;
			}
			
			
			case 1:
			{
				//line 123 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				int size = ((int) (haxe.lang.Runtime.toInt(this1.params[0])) );
				//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return size;
			}
			
			
		}
		
		//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return 0;
	}
	
	
	public static int delta;
	
	public static int ratio;
	
	public static <K, V> thx.fp.MapImpl balance(K k, V x, thx.fp.MapImpl lhs, thx.fp.MapImpl rhs)
	{
		//line 130 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		int ls = ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (lhs) ))) );
		//line 130 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		int rs = ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (rhs) ))) );
		//line 130 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		int xs = ( ( ls + rs ) + 1 );
		//line 133 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		if (( ( ls + rs ) <= 1 )) 
		{
			//line 134 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
			return thx.fp.MapImpl.Bin(xs, k, x, lhs, rhs);
		}
		else
		{
			//line 135 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
			if (( rs >= ( 5 * ls ) )) 
			{
				//line 136 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.rotateLeft(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
			}
			else
			{
				//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				if (( ls >= ( 5 * rs ) )) 
				{
					//line 138 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.rotateRight(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
				}
				else
				{
					//line 140 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return thx.fp.MapImpl.Bin(xs, k, x, lhs, rhs);
				}
				
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl glue(thx.fp.MapImpl this1, thx.fp.MapImpl that)
	{
		//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (this1.index)
		{
			case 0:
			{
				//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return that;
			}
			
			
			default:
			{
				//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (that.index)
				{
					case 0:
					{
						//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return this1;
					}
					
					
					default:
					{
						//line 146 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						if (( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (this1) ))) ) > ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (that) ))) ) )) 
						{
							//line 147 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							java.lang.Object t = ((java.lang.Object) (thx.fp._Map.Map_Impl_.deleteFindMax(((thx.fp.MapImpl) (this1) ))) );
							//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (haxe.lang.Runtime.getField(t, "k", true)) ), ((V) (haxe.lang.Runtime.getField(t, "x", true)) ), ((thx.fp.MapImpl) (haxe.lang.Runtime.getField(t, "t", true)) ), ((thx.fp.MapImpl) (that) ))) );
						}
						else
						{
							//line 150 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							java.lang.Object t1 = ((java.lang.Object) (thx.fp._Map.Map_Impl_.deleteFindMin(((thx.fp.MapImpl) (that) ))) );
							//line 143 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (haxe.lang.Runtime.getField(t1, "k", true)) ), ((V) (haxe.lang.Runtime.getField(t1, "x", true)) ), ((thx.fp.MapImpl) (this1) ), ((thx.fp.MapImpl) (haxe.lang.Runtime.getField(t1, "t", true)) ))) );
						}
						
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public static <K, V> java.lang.Object deleteFindMin(thx.fp.MapImpl map)
	{
		//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (map.index)
		{
			case 0:
			{
				//line 161 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("can not return the minimal element of an empty map", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "deleteFindMin"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (161) )) )})));
			}
			
			
			case 1:
			{
				//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[3]) ).index)
				{
					case 0:
					{
						//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl r = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[4]) );
						//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k = ((K) (((thx.fp.MapImpl) (map) ).params[1]) );
						//line 155 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x = ((V) (((thx.fp.MapImpl) (map) ).params[2]) );
						//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return new haxe.lang.DynamicObject(new java.lang.String[]{"k", "t", "x"}, new java.lang.Object[]{k, r, x}, new java.lang.String[]{}, new double[]{});
					}
					
					
					default:
					{
						//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl r1 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[4]) );
						//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k1 = ((K) (((thx.fp.MapImpl) (map) ).params[1]) );
						//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x1 = ((V) (((thx.fp.MapImpl) (map) ).params[2]) );
						//line 157 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl l = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[3]) );
						//line 158 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						java.lang.Object t = ((java.lang.Object) (thx.fp._Map.Map_Impl_.deleteFindMin(((thx.fp.MapImpl) (l) ))) );
						//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						{
							//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							K __temp_odecl1 = ((K) (haxe.lang.Runtime.getField(t, "k", true)) );
							//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							V __temp_odecl2 = ((V) (haxe.lang.Runtime.getField(t, "x", true)) );
							//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							thx.fp.MapImpl __temp_odecl3 = ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (k1) ), ((V) (x1) ), ((thx.fp.MapImpl) (haxe.lang.Runtime.getField(t, "t", true)) ), ((thx.fp.MapImpl) (r1) ))) );
							//line 159 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							return new haxe.lang.DynamicObject(new java.lang.String[]{"k", "t", "x"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl3, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
						}
						
					}
					
				}
				
			}
			
			
		}
		
		//line 154 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> java.lang.Object deleteFindMax(thx.fp.MapImpl map)
	{
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (map.index)
		{
			case 0:
			{
				//line 171 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("can not return the maximal element of an empty map", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "deleteFindMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (171) )) )})));
			}
			
			
			case 1:
			{
				//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[4]) ).index)
				{
					case 0:
					{
						//line 165 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k = ((K) (((thx.fp.MapImpl) (map) ).params[1]) );
						//line 165 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x = ((V) (((thx.fp.MapImpl) (map) ).params[2]) );
						//line 165 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl l = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[3]) );
						//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return new haxe.lang.DynamicObject(new java.lang.String[]{"k", "t", "x"}, new java.lang.Object[]{k, l, x}, new java.lang.String[]{}, new double[]{});
					}
					
					
					default:
					{
						//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k1 = ((K) (((thx.fp.MapImpl) (map) ).params[1]) );
						//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x1 = ((V) (((thx.fp.MapImpl) (map) ).params[2]) );
						//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl l1 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[3]) );
						//line 167 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl r = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (map) ).params[4]) );
						//line 168 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						java.lang.Object t = ((java.lang.Object) (thx.fp._Map.Map_Impl_.deleteFindMax(((thx.fp.MapImpl) (r) ))) );
						//line 169 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						{
							//line 169 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							K __temp_odecl1 = ((K) (haxe.lang.Runtime.getField(t, "k", true)) );
							//line 169 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							V __temp_odecl2 = ((V) (haxe.lang.Runtime.getField(t, "x", true)) );
							//line 169 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							thx.fp.MapImpl __temp_odecl3 = ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.balance(((K) (k1) ), ((V) (x1) ), ((thx.fp.MapImpl) (l1) ), ((thx.fp.MapImpl) (haxe.lang.Runtime.getField(t, "t", true)) ))) );
							//line 169 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
							return new haxe.lang.DynamicObject(new java.lang.String[]{"k", "t", "x"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl3, __temp_odecl2}, new java.lang.String[]{}, new double[]{});
						}
						
					}
					
				}
				
			}
			
			
		}
		
		//line 164 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		return null;
	}
	
	
	public static <K, V> thx.fp.MapImpl rotateLeft(K k, V x, thx.fp.MapImpl lhs, thx.fp.MapImpl rhs)
	{
		//line 175 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (rhs.index)
		{
			case 1:
			{
				//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl ry = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[4]) );
				//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl ly = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) );
				//line 176 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				if (( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (ly) ))) ) < ( 2 * ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (ry) ))) ) ) )) 
				{
					//line 175 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.singleLeft(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
				}
				else
				{
					//line 175 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.doubleLeft(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
				}
				
			}
			
			
			default:
			{
				//line 175 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.doubleLeft(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl rotateRight(K k, V x, thx.fp.MapImpl lhs, thx.fp.MapImpl rhs)
	{
		//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (lhs.index)
		{
			case 1:
			{
				//line 184 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl ry = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) );
				//line 184 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl ly = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[3]) );
				//line 184 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				if (( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (ry) ))) ) < ( 2 * ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (ly) ))) ) ) )) 
				{
					//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.singleRight(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
				}
				else
				{
					//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
					return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.doubleRight(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
				}
				
			}
			
			
			default:
			{
				//line 183 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return ((thx.fp.MapImpl) (thx.fp._Map.Map_Impl_.doubleRight(((K) (k) ), ((V) (x) ), ((thx.fp.MapImpl) (lhs) ), ((thx.fp.MapImpl) (rhs) ))) );
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl singleLeft(K k1, V x1, thx.fp.MapImpl t1, thx.fp.MapImpl rhs)
	{
		//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (rhs.index)
		{
			case 1:
			{
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl t3 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[4]) );
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl t2 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) );
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x2 = ((V) (((thx.fp.MapImpl) (rhs) ).params[2]) );
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K k2 = ((K) (((thx.fp.MapImpl) (rhs) ).params[1]) );
				//line 192 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t1) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t2) ))) ) ) + 1 ), k1, x1, t1, t2)) );
				//line 191 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (lhs) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t3) ))) ) ) + 1 ), k2, x2, lhs, t3);
			}
			
			
			default:
			{
				//line 193 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "singleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (193) )) )})));
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl singleRight(K k1, V x1, thx.fp.MapImpl lhs, thx.fp.MapImpl t3)
	{
		//line 197 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (lhs.index)
		{
			case 1:
			{
				//line 198 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl t2 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) );
				//line 198 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl t1 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[3]) );
				//line 198 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				V x2 = ((V) (((thx.fp.MapImpl) (lhs) ).params[2]) );
				//line 198 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				K k2 = ((K) (((thx.fp.MapImpl) (lhs) ).params[1]) );
				//line 198 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t2) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t3) ))) ) ) + 1 ), k1, x1, t2, t3)) );
				//line 197 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				return thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t1) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (rhs) ))) ) ) + 1 ), k2, x2, t1, rhs);
			}
			
			
			default:
			{
				//line 199 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "singleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (199) )) )})));
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl doubleLeft(K k1, V x1, thx.fp.MapImpl t1, thx.fp.MapImpl rhs)
	{
		//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (rhs.index)
		{
			case 1:
			{
				//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) ).index)
				{
					case 1:
					{
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t4 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[4]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k2 = ((K) (((thx.fp.MapImpl) (rhs) ).params[1]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x2 = ((V) (((thx.fp.MapImpl) (rhs) ).params[2]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t3 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) ).params[4]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t2 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) ).params[3]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x3 = ((V) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) ).params[2]) );
						//line 204 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k3 = ((K) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (rhs) ).params[3]) ).params[1]) );
						//line 205 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl lhs = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t1) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t2) ))) ) ) + 1 ), k1, x1, t1, t2)) );
						//line 205 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl rhs1 = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t3) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t4) ))) ) ) + 1 ), k2, x2, t3, t4)) );
						//line 203 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (lhs) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (rhs1) ))) ) ) + 1 ), k3, x3, lhs, rhs1);
					}
					
					
					default:
					{
						//line 206 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "doubleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (206) )) )})));
					}
					
				}
				
			}
			
			
			default:
			{
				//line 206 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "doubleLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (206) )) )})));
			}
			
		}
		
	}
	
	
	public static <K, V> thx.fp.MapImpl doubleRight(K k1, V x1, thx.fp.MapImpl lhs, thx.fp.MapImpl t4)
	{
		//line 210 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
		switch (lhs.index)
		{
			case 1:
			{
				//line 210 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				switch (((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) ).index)
				{
					case 1:
					{
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k2 = ((K) (((thx.fp.MapImpl) (lhs) ).params[1]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x2 = ((V) (((thx.fp.MapImpl) (lhs) ).params[2]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t1 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[3]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t3 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) ).params[4]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl t2 = ((thx.fp.MapImpl) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) ).params[3]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						V x3 = ((V) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) ).params[2]) );
						//line 211 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						K k3 = ((K) (((thx.fp.MapImpl) (((thx.fp.MapImpl) (lhs) ).params[4]) ).params[1]) );
						//line 212 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl lhs1 = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t1) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t2) ))) ) ) + 1 ), k2, x2, t1, t2)) );
						//line 212 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						thx.fp.MapImpl rhs = ((thx.fp.MapImpl) (thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t3) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (t4) ))) ) ) + 1 ), k1, x1, t3, t4)) );
						//line 210 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						return thx.fp.MapImpl.Bin(( ( ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (lhs1) ))) ) + ((int) (thx.fp._Map.Map_Impl_.size(((thx.fp.MapImpl) (rhs) ))) ) ) + 1 ), k3, x3, lhs1, rhs);
					}
					
					
					default:
					{
						//line 213 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
						throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "doubleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (213) )) )})));
					}
					
				}
				
			}
			
			
			default:
			{
				//line 213 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/fp/Map.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error("damn it, this should never happen", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp._Map.Map_Impl_", "Map.hx", "doubleRight"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (213) )) )})));
			}
			
		}
		
	}
	
	
}


