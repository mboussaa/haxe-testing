// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Arrays_filterOption_377__Fun<T> extends haxe.lang.Function
{
	public Arrays_filterOption_377__Fun()
	{
		//line 377 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		super(2, 0);
	}
	
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 377 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.ds.Option maybeV = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((haxe.ds.Option) (((java.lang.Object) (__fn_float2) )) )) : (((haxe.ds.Option) (__fn_dyn2) )) );
		//line 377 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		haxe.root.Array<T> acc = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<T>) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.root.Array<T>) (__fn_dyn1) )) );
		//line 378 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		switch (maybeV.index)
		{
			case 0:
			{
				//line 379 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				T v = ((T) (maybeV.params[0]) );
				//line 379 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				acc.push(v);
				//line 379 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				break;
			}
			
			
			case 1:
			{
				//line 380 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
				break;
			}
			
			
		}
		
		//line 382 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Arrays.hx"
		return acc;
	}
	
	
}


