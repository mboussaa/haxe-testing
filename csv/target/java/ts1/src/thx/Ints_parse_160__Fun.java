// Generated by Haxe 3.3.0
package thx;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Ints_parse_160__Fun extends haxe.lang.Function
{
	public Ints_parse_160__Fun(java.lang.Object base, int[] acc)
	{
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		super(1, 0);
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		this.base = base;
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		this.acc = acc;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		java.lang.String c = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float1)) : (haxe.lang.Runtime.toString(__fn_dyn1)) );
		//line 161 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		int i = haxe.lang.StringExt.indexOf(thx.Ints.BASE, c, null);
		//line 162 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		if (( ( i < 0 ) || ( haxe.lang.Runtime.compare(i, this.base) >= 0 ) )) 
		{
			//line 162 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
			throw haxe.lang.HaxeException.wrap("invalid");
		}
		
		//line 163 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		this.acc[0] = ( ( ((int) (this.acc[0]) ) * ((int) (haxe.lang.Runtime.toInt(this.base)) ) ) + i );
		//line 160 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ints.hx"
		return null;
	}
	
	
	public java.lang.Object base;
	
	public int[] acc;
	
}


