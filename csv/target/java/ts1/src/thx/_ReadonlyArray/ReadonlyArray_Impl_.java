// Generated by Haxe 3.3.0
package thx._ReadonlyArray;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class ReadonlyArray_Impl_
{
	public static <T> haxe.root.Array<T> empty()
	{
		//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
	}
	
	
	public static <T> haxe.root.Array<T> flatten(haxe.root.Array<haxe.root.Array<T>> array)
	{
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (thx.Arrays.reduce(((haxe.root.Array<haxe.root.Array<T>>) (array) ), ((haxe.lang.Function) (new thx._ReadonlyArray.ReadonlyArray_Impl__flatten_16__Fun<T>()) ), ((haxe.root.Array<T>) (new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ))) ))) );
	}
	
	
	public static <T> int indexOf(haxe.root.Array<T> this1, T el, haxe.lang.Function eq)
	{
		//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( null == eq )) 
		{
			//line 20 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			eq = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		{
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g1 = 0;
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g = this1.length;
			//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			while (( _g1 < _g ))
			{
				//line 21 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				int i = _g1++;
				//line 22 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				if (haxe.lang.Runtime.toBool(eq.__hx_invoke2_o(0.0, el, 0.0, this1.__get(i)))) 
				{
					//line 23 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
					return i;
				}
				
			}
			
		}
		
		//line 24 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return -1;
	}
	
	
	public static <T> int lastIndexOf(haxe.root.Array<T> this1, T el, haxe.lang.Function eq)
	{
		//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( null == eq )) 
		{
			//line 28 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			eq = ((haxe.lang.Function) (new haxe.lang.Closure(thx.Functions.class, "equality")) );
		}
		
		//line 29 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int len = this1.length;
		//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		{
			//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g1 = 0;
			//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			while (( _g1 < len ))
			{
				//line 30 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				int i = _g1++;
				//line 31 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				if (haxe.lang.Runtime.toBool(eq.__hx_invoke2_o(0.0, el, 0.0, this1.__get(( ( len - i ) - 1 ))))) 
				{
					//line 32 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
					return i;
				}
				
			}
			
		}
		
		//line 33 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return -1;
	}
	
	
	public static <T> T get(haxe.root.Array<T> this1, int index)
	{
		//line 38 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.__get(index);
	}
	
	
	public static <T> java.lang.Object head(haxe.root.Array<T> this1)
	{
		//line 41 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.__get(0);
	}
	
	
	public static <T> haxe.root.Array<T> tail(haxe.root.Array<T> this1)
	{
		//line 44 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.slice(1, null);
	}
	
	
	public static <A, B, T> B reduce(haxe.root.Array<T> this1, haxe.root.Array<A> arr, haxe.lang.Function f, B initial)
	{
		//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		{
			//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g = 0;
			//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			while (( _g < arr.length ))
			{
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				A v = arr.__get(_g);
				//line 47 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				 ++ _g;
				//line 48 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				initial = ((B) (f.__hx_invoke2_o(0.0, initial, 0.0, v)) );
			}
			
		}
		
		//line 49 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return initial;
	}
	
	
	public static <A, B> B reducei(haxe.root.Array<A> array, haxe.lang.Function f, B initial)
	{
		//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		{
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g1 = 0;
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			int _g = array.length;
			//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			while (( _g1 < _g ))
			{
				//line 56 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				int i = _g1++;
				//line 57 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
				initial = ((B) (f.__hx_invoke3_o(0.0, initial, 0.0, ((A) (((haxe.root.Array<A>) (array) ).__get(i)) ), ((double) (i) ), haxe.lang.Runtime.undefined)) );
			}
			
		}
		
		//line 58 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return initial;
	}
	
	
	public static <T> haxe.root.Array<T> reverse(haxe.root.Array<T> this1)
	{
		//line 62 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		haxe.root.Array<T> arr = this1.copy();
		//line 63 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		arr.reverse();
		//line 64 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return arr;
	}
	
	
	public static <T> haxe.root.Array<T> toArray(haxe.root.Array<T> this1)
	{
		//line 68 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.copy();
	}
	
	
	public static <T> haxe.root.Array<T> unsafe(haxe.root.Array<T> this1)
	{
		//line 71 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1;
	}
	
	
	public static <T> haxe.root.Array<T> concat(haxe.root.Array<T> this1, haxe.root.Array<T> that)
	{
		//line 74 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.concat(((haxe.root.Array<T>) (that) ));
	}
	
	
	public static <T> haxe.root.Array<T> insertAt(haxe.root.Array<T> this1, int pos, T el)
	{
		//line 77 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.slice(0, pos).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(this1.slice(pos, null));
	}
	
	
	public static <T> haxe.root.Array<T> insertAfter(haxe.root.Array<T> this1, T ref, T el, haxe.lang.Function eq)
	{
		//line 80 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos = ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (this1) ), ((T) (ref) ), ((haxe.lang.Function) (eq) ))) );
		//line 81 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( pos < 0 )) 
		{
			//line 82 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			pos = ( this1.length - 1 );
		}
		
		//line 83 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos1 = ( pos + 1 );
		//line 83 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (this1) ).slice(0, pos1).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(((haxe.root.Array<T>) (this1) ).slice(pos1, null));
	}
	
	
	public static <T> haxe.root.Array<T> insertBefore(haxe.root.Array<T> this1, T ref, T el, haxe.lang.Function eq)
	{
		//line 87 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos = ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (this1) ), ((T) (ref) ), ((haxe.lang.Function) (eq) ))) );
		//line 87 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (this1) ).slice(0, pos).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(((haxe.root.Array<T>) (this1) ).slice(pos, null));
	}
	
	
	public static <T> haxe.root.Array<T> replace(haxe.root.Array<T> this1, T ref, T el, haxe.lang.Function eq)
	{
		//line 90 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos = ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (this1) ), ((T) (ref) ), ((haxe.lang.Function) (eq) ))) );
		//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( pos < 0 )) 
		{
			//line 91 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			throw haxe.lang.HaxeException.wrap(new thx.Error("unable to find reference element", null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx._ReadonlyArray.ReadonlyArray_Impl_", "ReadonlyArray.hx", "replace"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (91) )) )})));
		}
		
		//line 92 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array<T>) (this1) ).slice(0, pos).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(((haxe.root.Array<T>) (this1) ).slice(( pos + 1 ), null))) );
	}
	
	
	public static <T> haxe.root.Array<T> replaceAt(haxe.root.Array<T> this1, int pos, T el)
	{
		//line 96 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.slice(0, pos).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) ))).concat(this1.slice(( pos + 1 ), null));
	}
	
	
	public static <T> haxe.root.Array<T> remove(haxe.root.Array<T> this1, T el, haxe.lang.Function eq)
	{
		//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos = ((int) (thx._ReadonlyArray.ReadonlyArray_Impl_.indexOf(((haxe.root.Array<T>) (this1) ), ((T) (el) ), ((haxe.lang.Function) (eq) ))) );
		//line 99 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (this1) ).slice(0, pos).concat(((haxe.root.Array<T>) (this1) ).slice(( pos + 1 ), null));
	}
	
	
	public static <T> haxe.root.Array<T> removeAt(haxe.root.Array<T> this1, int pos)
	{
		//line 102 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.slice(0, pos).concat(this1.slice(( pos + 1 ), null));
	}
	
	
	public static <T> haxe.root.Array<T> prepend(haxe.root.Array<T> this1, T el)
	{
		//line 105 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) )).concat(this1);
	}
	
	
	public static <T> haxe.root.Array<T> append(haxe.root.Array<T> this1, T el)
	{
		//line 108 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return this1.concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) )));
	}
	
	
	public static <T> haxe.root.Array<T> unshift(haxe.root.Array<T> this1, T el)
	{
		//line 114 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) )).concat(((haxe.root.Array<T>) (this1) ))) );
	}
	
	
	public static <T> java.lang.Object shift(haxe.root.Array<T> this1)
	{
		//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( this1.length == 0 )) 
		{
			//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			java.lang.Object this2 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{null, this1}, new java.lang.String[]{}, new double[]{});
			//line 120 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			return ((java.lang.Object) (this2) );
		}
		
		//line 121 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		T value = this1.__get(0);
		//line 122 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		haxe.root.Array<T> array = ((haxe.root.Array<T>) (((haxe.root.Array<T>) (this1) ).slice(0, 0).concat(((haxe.root.Array<T>) (this1) ).slice(1, null))) );
		//line 123 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		java.lang.Object this3 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{value, array}, new java.lang.String[]{}, new double[]{});
		//line 123 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((java.lang.Object) (this3) );
	}
	
	
	public static <T> haxe.root.Array<T> push(haxe.root.Array<T> this1, T el)
	{
		//line 130 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array<T>) (this1) ).concat(new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {el}) )))) );
	}
	
	
	public static <T> java.lang.Object pop(haxe.root.Array<T> this1)
	{
		//line 136 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		if (( this1.length == 0 )) 
		{
			//line 136 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			java.lang.Object this2 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{null, this1}, new java.lang.String[]{}, new double[]{});
			//line 136 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
			return ((java.lang.Object) (this2) );
		}
		
		//line 137 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		T value = this1.__get(( this1.length - 1 ));
		//line 138 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		int pos = ( this1.length - 1 );
		//line 138 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		haxe.root.Array<T> array = ((haxe.root.Array<T>) (this1) ).slice(0, pos).concat(((haxe.root.Array<T>) (this1) ).slice(( pos + 1 ), null));
		//line 139 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		java.lang.Object this3 = new haxe.lang.DynamicObject(new java.lang.String[]{"_0", "_1"}, new java.lang.Object[]{value, array}, new java.lang.String[]{}, new double[]{});
		//line 139 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((java.lang.Object) (this3) );
	}
	
	
}


