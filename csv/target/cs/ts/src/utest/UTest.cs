// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest {
	public class UTest : global::haxe.lang.HxObject {
		
		public UTest(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public UTest() {
			global::utest.UTest.__hx_ctor_utest_UTest(this);
		}
		
		
		public static void __hx_ctor_utest_UTest(global::utest.UTest __temp_me148) {
		}
		
		
		public static void run(global::Array<object> cases, global::haxe.lang.Function callback) {
			global::utest.Runner runner = new global::utest.Runner();
			{
				int _g = 0;
				while (( _g < cases.length )) {
					object eachCase = cases[_g];
					 ++ _g;
					runner.addCase(eachCase, null, null, null, null);
				}
				
			}
			
			global::utest.ui.Report.create(runner, null, null);
			if (( null != callback )) {
				runner.onComplete.@add(new global::utest.UTest_run_14__Fun(callback));
			}
			
			runner.run();
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::utest.UTest(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::utest.UTest();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest {
	public class UTest_run_14__Fun : global::haxe.lang.Function {
		
		public UTest_run_14__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::utest.Runner _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::utest.Runner) (((object) (__fn_float1) )) )) : (((global::utest.Runner) (__fn_dyn1) )) );
			this.callback.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}


