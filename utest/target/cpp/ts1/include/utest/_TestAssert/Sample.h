// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest__TestAssert_Sample
#define INCLUDED_utest__TestAssert_Sample

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(utest,_TestAssert,Sample)
namespace utest{
namespace _TestAssert{


class Sample_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Sample_obj OBJ_;

	public:
		Sample_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("utest._TestAssert.Sample","\xa8","\x8e","\x95","\x89"); }
		::String __ToString() const { return HX_HCSTRING("Sample.","\xa4","\xec","\x1a","\x51") + _hx_tag; }

		static ::utest::_TestAssert::Sample None;
		static inline ::utest::_TestAssert::Sample None_dyn() { return None; }
		static ::utest::_TestAssert::Sample Rec(::hx::EnumBase s);
		static ::Dynamic Rec_dyn();
		static ::utest::_TestAssert::Sample Some(::String s);
		static ::Dynamic Some_dyn();
};

} // end namespace utest
} // end namespace _TestAssert

#endif /* INCLUDED_utest__TestAssert_Sample */ 
