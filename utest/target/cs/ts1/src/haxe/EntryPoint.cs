// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class EntryPoint : global::haxe.lang.HxObject {
		
		static EntryPoint() {
			global::haxe.EntryPoint.pending = new global::Array<object>();
			global::haxe.EntryPoint.threadCount = 0;
		}
		
		
		public EntryPoint(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public EntryPoint() {
			global::haxe.EntryPoint.__hx_ctor_haxe_EntryPoint(this);
		}
		
		
		public static void __hx_ctor_haxe_EntryPoint(global::haxe.EntryPoint __temp_me27) {
		}
		
		
		public static global::Array<object> pending;
		
		public static int threadCount;
		
		public static double processEvents() {
			unchecked {
				while (true) {
					global::haxe.lang.Function f = ((global::haxe.lang.Function) ((global::haxe.EntryPoint.pending.shift()).@value) );
					if (( f == null )) {
						break;
					}
					
					f.__hx_invoke0_o();
				}
				
				if (( ( global::haxe.MainLoop.pending == null ) && ( global::haxe.EntryPoint.threadCount == 0 ) )) {
					return ((double) (-1) );
				}
				
				return global::haxe.MainLoop.tick();
			}
		}
		
		
		public static void run() {
			while (true) {
				double nextTick = global::haxe.EntryPoint.processEvents();
				if (( nextTick < 0 )) {
					break;
				}
				
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.EntryPoint(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.EntryPoint();
		}
		
		
	}
}


