// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest {
	public class TestDispatcher : global::haxe.lang.HxObject {
		
		public TestDispatcher(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestDispatcher() {
			global::utest.TestDispatcher.__hx_ctor_utest_TestDispatcher(this);
		}
		
		
		public static void __hx_ctor_utest_TestDispatcher(global::utest.TestDispatcher __temp_me50) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::utest.TestDispatcher(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::utest.TestDispatcher();
		}
		
		
		public virtual void testBase() {
			unchecked {
				global::utest.Dispatcher<object> dispatcher = new global::utest.Dispatcher<object>();
				global::utest.Assert.isFalse(dispatcher.has(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBase", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (12) )}));
				global::haxe.lang.Function h = dispatcher.@add(( (( global::utest.TestDispatcher_testBase_13__Fun.__hx_current != null )) ? (global::utest.TestDispatcher_testBase_13__Fun.__hx_current) : (global::utest.TestDispatcher_testBase_13__Fun.__hx_current = ((global::utest.TestDispatcher_testBase_13__Fun) (new global::utest.TestDispatcher_testBase_13__Fun()) )) ));
				global::utest.Assert.isTrue(dispatcher.has(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBase", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (14) )}));
				dispatcher.@remove(h);
				global::utest.Assert.isFalse(dispatcher.has(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testBase", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (16) )}));
			}
		}
		
		
		public string v;
		
		public virtual void handler1(string s) {
			{
				global::utest.TestDispatcher __temp_dynop1 = this;
				__temp_dynop1.v = global::haxe.lang.Runtime.concat(__temp_dynop1.v, global::haxe.lang.Runtime.concat(s, "e1"));
			}
			
		}
		
		
		public virtual void handler2(string s) {
			{
				global::utest.TestDispatcher __temp_dynop1 = this;
				__temp_dynop1.v = global::haxe.lang.Runtime.concat(__temp_dynop1.v, global::haxe.lang.Runtime.concat(s, "e2"));
			}
			
		}
		
		
		public virtual void testHandlers() {
			unchecked {
				global::utest.Dispatcher<object> dispatcher = new global::utest.Dispatcher<object>();
				this.v = "";
				dispatcher.dispatch("d1");
				global::utest.Assert.@equals("", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (32) )}));
				this.v = "";
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) ));
				dispatcher.dispatch("d2");
				global::utest.Assert.@equals("d2e1", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (37) )}));
				this.v = "";
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler2", 1428431144)) ));
				dispatcher.dispatch("d3");
				global::utest.Assert.@equals("d3e1d3e2", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (42) )}));
				this.v = "";
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) ));
				dispatcher.dispatch("d4");
				global::utest.Assert.@equals("d4e1d4e2d4e1", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
				this.v = "";
				dispatcher.@remove(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) ));
				dispatcher.dispatch("d5");
				global::utest.Assert.@equals("d5e2d5e1", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (52) )}));
				this.v = "";
				dispatcher.@remove(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) ));
				dispatcher.dispatch("d6");
				global::utest.Assert.@equals("d6e2", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (57) )}));
				this.v = "";
				dispatcher.@remove(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler2", 1428431144)) ));
				dispatcher.dispatch("d7");
				global::utest.Assert.@equals("", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testHandlers", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (62) )}));
			}
		}
		
		
		public virtual void stopper(string s) {
			{
				global::utest.TestDispatcher __temp_dynop1 = this;
				__temp_dynop1.v = global::haxe.lang.Runtime.concat(__temp_dynop1.v, global::haxe.lang.Runtime.concat(s, "s"));
			}
			
			global::utest.Dispatcher<object>.stop();
		}
		
		
		public virtual void testStop() {
			unchecked {
				global::utest.Dispatcher<object> dispatcher = new global::utest.Dispatcher<object>();
				this.v = "";
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) ));
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "stopper", 1130484251)) ));
				dispatcher.@add(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler2", 1428431144)) ));
				dispatcher.dispatch("d1");
				global::utest.Assert.@equals("d1e1d1s", this.v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testStop", "utest.TestDispatcher", "TestDispatcher.hx"}, new int[]{1981972957}, new double[]{((double) (78) )}));
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 118:
					{
						this.v = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1334736244:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testStop", 1334736244)) );
					}
					
					
					case 1130484251:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "stopper", 1130484251)) );
					}
					
					
					case 1210795995:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testHandlers", 1210795995)) );
					}
					
					
					case 1428431144:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler2", 1428431144)) );
					}
					
					
					case 1428431143:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handler1", 1428431143)) );
					}
					
					
					case 118:
					{
						return this.v;
					}
					
					
					case 1145269635:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testBase", 1145269635)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1334736244:
					{
						this.testStop();
						break;
					}
					
					
					case 1130484251:
					{
						this.stopper(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 1210795995:
					{
						this.testHandlers();
						break;
					}
					
					
					case 1428431144:
					{
						this.handler2(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 1428431143:
					{
						this.handler1(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 1145269635:
					{
						this.testBase();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("v");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest {
	public class TestDispatcher_testBase_13__Fun : global::haxe.lang.Function {
		
		public TestDispatcher_testBase_13__Fun() : base(1, 0) {
		}
		
		
		public static global::utest.TestDispatcher_testBase_13__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string x = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return null;
		}
		
		
	}
}


