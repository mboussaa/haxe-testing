// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_culture_DateFormatInfo
#define INCLUDED_thx_culture_DateFormatInfo

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,culture,DateFormatInfo)

namespace thx{
namespace culture{


class HXCPP_CLASS_ATTRIBUTES DateFormatInfo_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef DateFormatInfo_obj OBJ_;
		DateFormatInfo_obj();

	public:
		void __construct(Int calendarWeekRuleIndex,::String calendarWeekRuleName,::String designatorAm,::String designatorPm,Int firstDayOfWeekIndex,::String firstDayOfWeekName,::String nameCalendar,::String nameCalendarNative,::Array< ::String > nameDays,::Array< ::String > nameDaysAbbreviated,::Array< ::String > nameDaysShortest,::Array< ::String > nameMonths,::Array< ::String > nameMonthsAbbreviated,::Array< ::String > nameMonthGenitives,::Array< ::String > nameMonthGenitivesAbbreviated,::String patternDateLong,::String patternDateShort,::String patternDateTimeFull,::String patternDateTimeSortable,::String patternMonthDay,::String patternRfc1123,::String patternTimeLong,::String patternTimeShort,::String patternUniversalSortable,::String patternYearMonth,::String separatorDate,::String separatorTime);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.culture.DateFormatInfo")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.culture.DateFormatInfo"); }
		static hx::ObjectPtr< DateFormatInfo_obj > __new(Int calendarWeekRuleIndex,::String calendarWeekRuleName,::String designatorAm,::String designatorPm,Int firstDayOfWeekIndex,::String firstDayOfWeekName,::String nameCalendar,::String nameCalendarNative,::Array< ::String > nameDays,::Array< ::String > nameDaysAbbreviated,::Array< ::String > nameDaysShortest,::Array< ::String > nameMonths,::Array< ::String > nameMonthsAbbreviated,::Array< ::String > nameMonthGenitives,::Array< ::String > nameMonthGenitivesAbbreviated,::String patternDateLong,::String patternDateShort,::String patternDateTimeFull,::String patternDateTimeSortable,::String patternMonthDay,::String patternRfc1123,::String patternTimeLong,::String patternTimeShort,::String patternUniversalSortable,::String patternYearMonth,::String separatorDate,::String separatorTime);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~DateFormatInfo_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("DateFormatInfo","\x33","\x0f","\x49","\xc2"); }

		static void __boot();
		static  ::thx::culture::DateFormatInfo invariant;
		static  ::thx::culture::DateFormatInfo fromObject( ::Dynamic o);
		static ::Dynamic fromObject_dyn();

		Int calendarWeekRuleIndex;
		::String calendarWeekRuleName;
		::String designatorAm;
		::String designatorPm;
		Int firstDayOfWeekIndex;
		::String firstDayOfWeekName;
		::String nameCalendar;
		::String nameCalendarNative;
		::Array< ::String > nameDays;
		::Array< ::String > nameDaysAbbreviated;
		::Array< ::String > nameDaysShortest;
		::Array< ::String > nameMonths;
		::Array< ::String > nameMonthsAbbreviated;
		::Array< ::String > nameMonthGenitives;
		::Array< ::String > nameMonthGenitivesAbbreviated;
		::String patternDateLong;
		::String patternDateShort;
		::String patternDateTimeFull;
		::String patternDateTimeSortable;
		::String patternMonthDay;
		::String patternRfc1123;
		::String patternTimeLong;
		::String patternTimeShort;
		::String patternUniversalSortable;
		::String patternYearMonth;
		::String separatorDate;
		::String separatorTime;
		 ::Dynamic toObject();
		::Dynamic toObject_dyn();

};

} // end namespace thx
} // end namespace culture

#endif /* INCLUDED_thx_culture_DateFormatInfo */ 
