// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "cpp/Int64.h"
#include "hxMath.h"
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif
#ifndef INCLUDED_thx_Int64s
#include <thx/Int64s.h>
#endif
#ifndef INCLUDED_thx_Ints
#include <thx/Ints.h>
#endif
#ifndef INCLUDED_thx_Strings
#include <thx/Strings.h>
#endif
#ifndef INCLUDED_thx__DateTimeUtc_DateTimeUtc_Impl_
#include <thx/_DateTimeUtc/DateTimeUtc_Impl_.h>
#endif
#ifndef INCLUDED_thx__Time_Time_Impl_
#include <thx/_Time/Time_Impl_.h>
#endif
#ifndef INCLUDED_thx_culture_Culture
#include <thx/culture/Culture.h>
#endif
#ifndef INCLUDED_thx_culture_DateFormatInfo
#include <thx/culture/DateFormatInfo.h>
#endif
#ifndef INCLUDED_thx_culture_NumberFormatInfo
#include <thx/culture/NumberFormatInfo.h>
#endif
#ifndef INCLUDED_thx_format_DateFormat
#include <thx/format/DateFormat.h>
#endif
#ifndef INCLUDED_thx_format_Format
#include <thx/format/Format.h>
#endif
#ifndef INCLUDED_thx_format_TimeFormat
#include <thx/format/TimeFormat.h>
#endif

namespace thx{
namespace format{

void DateFormat_obj::__construct() { }

Dynamic DateFormat_obj::__CreateEmpty() { return new DateFormat_obj; }

hx::ObjectPtr< DateFormat_obj > DateFormat_obj::__new()
{
	hx::ObjectPtr< DateFormat_obj > _hx_result = new DateFormat_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic DateFormat_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DateFormat_obj > _hx_result = new DateFormat_obj();
	_hx_result->__construct();
	return _hx_result;
}

::String DateFormat_obj::customFormat(::Array< ::Dynamic> d,::String pattern, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","customFormat",0xbdc24a24,"thx.format.DateFormat.customFormat","thx/format/DateFormat.hx",16,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(pattern,"pattern")
            	HX_STACK_ARG(culture,"culture")
HXLINE(  17)		HX_VARI(  ::thx::culture::Culture,_0) = culture;
HXLINE( 139)		HX_VAR(  ::thx::culture::Culture,t);
HXLINE(  17)		if (hx::IsNull( _0 )) {
HXLINE( 139)			t = null();
            		}
            		else {
HXLINE( 139)			t = _0;
            		}
HXDLIN( 139)		if (hx::IsNotNull( t )) {
HXLINE( 139)			culture = t;
            		}
            		else {
HXLINE(  17)			culture = ::thx::format::Format_obj::get_defaultCulture();
            		}
HXLINE(  18)		HX_VARI(  ::EReg,ereg) =  ::EReg_obj::__new(HX_("(d|M){1,4}|(z){1,3}|(y){1,5}|(f|F){1,7}|(h|H|m|s|t){1,2}|K|[:]|[/]|'[^']*'|\"[^\"]*\"|[%][daAIHMmbhBSpycCeDfiklnPqrRstTuYxXw%]",a1,a2,2f,a8),HX_("",00,00,00,00));
HXDLIN(  18)		HX_VARI( Bool,escape) = false;
HXDLIN(  18)		HX_VARI( ::Array< ::String >,buf) = ::Array_obj< ::String >::__new(0);
HXLINE(  21)		while((pattern.length > (int)0)){
HXLINE(  22)			if (escape) {
HXLINE(  23)				escape = false;
HXLINE(  24)				::String _hx_tmp = pattern.substring((int)0,(int)1);
HXDLIN(  24)				buf->push(_hx_tmp);
HXLINE(  25)				pattern = pattern.substring((int)1,null());
            			}
            			else {
HXLINE(  26)				Bool _hx_tmp1 = ereg->match(pattern);
HXDLIN(  26)				if (_hx_tmp1) {
HXLINE(  27)					HX_VARI( ::String,left) = ereg->matchedLeft();
HXLINE(  28)					::String _hx_tmp2 = left.substring((int)-1,null());
HXDLIN(  28)					if ((_hx_tmp2 == HX_("\\",5c,00,00,00))) {
HXLINE(  29)						escape = true;
HXLINE(  30)						pattern = pattern.substring(left.length,null());
HXLINE(  31)						Int _hx_tmp3 = (left.length - (int)1);
HXDLIN(  31)						::String _hx_tmp4 = left.substring((int)0,_hx_tmp3);
HXDLIN(  31)						buf->push(_hx_tmp4);
HXLINE(  32)						continue;
            					}
HXLINE(  34)					buf->push(left);
HXLINE(  35)					HX_VARI( ::String,term) = ereg->matched((int)0);
HXDLIN(  35)					HX_VARI( ::String,right) = ereg->matchedRight();
HXLINE(  37)					pattern = right;
HXLINE(  38)					Bool _hx_tmp5;
HXDLIN(  38)					if ((term == HX_(".",2e,00,00,00))) {
HXLINE(  38)						::String _hx_tmp6 = right.substring((int)0,(int)1).toLowerCase();
HXDLIN(  38)						_hx_tmp5 = (_hx_tmp6 == HX_("f",66,00,00,00));
            					}
            					else {
HXLINE(  38)						_hx_tmp5 = false;
            					}
HXDLIN(  38)					if (_hx_tmp5) {
HXLINE(  39)						HX_VARI(  ::cpp::Int64Struct,ticks) = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN(  39)						HX_VARI( Int,x) = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks);
HXDLIN(  39)						HX_VARI(  ::cpp::Int64Struct,a) = ( ::cpp::Int64Struct(x));
HXDLIN(  39)						HX_VARI(  ::cpp::Int64Struct,b) = ::thx::Int64s_obj::zero;
HXDLIN(  39)						Bool _hx_tmp7 = _hx_int64_eq(a,b);
HXDLIN(  39)						if (_hx_tmp7) {
HXLINE(  40)							ereg->match(right);
HXLINE(  41)							pattern = ereg->matchedRight();
HXLINE(  42)							continue;
            						}
            					}
HXLINE(  45)					::String _hx_tmp8 = ::thx::format::DateFormat_obj::formatTerm(d,term,culture);
HXDLIN(  45)					buf->push(_hx_tmp8);
            				}
            				else {
HXLINE(  47)					buf->push(pattern);
HXLINE(  48)					pattern = HX_("",00,00,00,00);
            				}
            			}
            		}
HXLINE(  51)		if (escape) {
HXLINE(  52)			buf->push(HX_("\\",5c,00,00,00));
            		}
HXLINE(  53)		return buf->join(HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(DateFormat_obj,customFormat,return )

::String DateFormat_obj::format(::Array< ::Dynamic> d,::String pattern, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","format",0x493b0693,"thx.format.DateFormat.format","thx/format/DateFormat.hx",79,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(pattern,"pattern")
            	HX_STACK_ARG(culture,"culture")
HXLINE(  79)		::String _hx_switch_0 = pattern;
            		if (  (_hx_switch_0==HX_("D",44,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::dateLong(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("F",46,00,00,00)) ){
HXLINE(  83)			::String _hx_tmp = ::thx::format::DateFormat_obj::dateLong(d,culture);
HXDLIN(  83)			::String _hx_tmp1 = (_hx_tmp + HX_(" ",20,00,00,00));
HXDLIN(  83)			::String _hx_tmp2 = ::thx::format::DateFormat_obj::timeLong(d,culture);
HXLINE(  79)			return (_hx_tmp1 + _hx_tmp2);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("G",47,00,00,00)) ){
HXLINE(  85)			::String _hx_tmp3 = ::thx::format::DateFormat_obj::dateShort(d,culture);
HXDLIN(  85)			::String _hx_tmp4 = (_hx_tmp3 + HX_(" ",20,00,00,00));
HXDLIN(  85)			::String _hx_tmp5 = ::thx::format::DateFormat_obj::timeLong(d,culture);
HXLINE(  79)			return (_hx_tmp4 + _hx_tmp5);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("M",4d,00,00,00)) ||  (_hx_switch_0==HX_("m",6d,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::monthDay(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("T",54,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::timeLong(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("U",55,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::dateTimeFull(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("d",64,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::dateShort(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("f",66,00,00,00)) ){
HXLINE(  82)			::String _hx_tmp6 = ::thx::format::DateFormat_obj::dateLong(d,culture);
HXDLIN(  82)			::String _hx_tmp7 = (_hx_tmp6 + HX_(" ",20,00,00,00));
HXDLIN(  82)			::String _hx_tmp8 = ::thx::format::DateFormat_obj::timeShort(d,culture);
HXLINE(  79)			return (_hx_tmp7 + _hx_tmp8);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("g",67,00,00,00)) ){
HXLINE(  84)			::String _hx_tmp9 = ::thx::format::DateFormat_obj::dateShort(d,culture);
HXDLIN(  84)			::String _hx_tmp10 = (_hx_tmp9 + HX_(" ",20,00,00,00));
HXDLIN(  84)			::String _hx_tmp11 = ::thx::format::DateFormat_obj::timeShort(d,culture);
HXLINE(  79)			return (_hx_tmp10 + _hx_tmp11);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("O",4f,00,00,00)) ||  (_hx_switch_0==HX_("o",6f,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::iso8601(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("R",52,00,00,00)) ||  (_hx_switch_0==HX_("r",72,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::rfc1123(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("s",73,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::dateTimeSortable(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("t",74,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::timeShort(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("u",75,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::universalSortable(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("Y",59,00,00,00)) ||  (_hx_switch_0==HX_("y",79,00,00,00)) ){
HXLINE(  79)			return ::thx::format::DateFormat_obj::yearMonth(d,culture);
HXDLIN(  79)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  79)			return ::thx::format::DateFormat_obj::customFormat(d,pattern,culture);
            		}
            		_hx_goto_1:;
HXDLIN(  79)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(DateFormat_obj,format,return )

::String DateFormat_obj::formatTerm(::Array< ::Dynamic> d,::String pattern, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","formatTerm",0x45f03f9f,"thx.format.DateFormat.formatTerm","thx/format/DateFormat.hx",151,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(pattern,"pattern")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 151)		::String _hx_switch_0 = pattern;
            		if (  (_hx_switch_0==HX_(".",2e,00,00,00)) ){
HXLINE( 151)			return culture->number->separatorDecimalNumber;
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("/",2f,00,00,00)) ){
HXLINE( 151)			return ::thx::format::DateFormat_obj::dateTime(culture)->separatorDate;
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_(":",3a,00,00,00)) ){
HXLINE( 151)			return ::thx::format::DateFormat_obj::dateTime(culture)->separatorTime;
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("F",46,00,00,00)) ){
HXLINE( 183)			HX_VARI(  ::cpp::Int64Struct,ticks) = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 183)			Int _hx_tmp = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp,(int)1);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FF",40,3d,00,00)) ){
HXLINE( 184)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks1,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 184)			Int _hx_tmp1 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks1);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp1,(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FFF",06,5b,35,00)) ){
HXLINE( 185)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks2,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 185)			Int _hx_tmp2 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks2);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp2,(int)3);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FFFF",80,4a,7a,2e)) ){
HXLINE( 186)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks3,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 186)			Int _hx_tmp3 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks3);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp3,(int)4);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FFFFF",c6,e5,86,7c)) ){
HXLINE( 187)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks4,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 187)			Int _hx_tmp4 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks4);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp4,(int)5);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FFFFFF",c0,27,82,79)) ){
HXLINE( 188)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks5,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 188)			Int _hx_tmp5 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks5);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsUpTo(_hx_tmp5,(int)6);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("FFFFFFF",86,a0,60,d8)) ){
HXLINE( 189)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks6,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 189)			Int _hx_tmp6 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks6);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsString(_hx_tmp6);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("H",48,00,00,00)) ){
HXLINE( 164)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks7,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 164)			Int _hx_tmp7 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks7);
HXLINE( 151)			return (HX_("",00,00,00,00) + _hx_tmp7);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("HH",00,3f,00,00)) ){
HXLINE( 165)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks8,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 165)			Int _hx_tmp8 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks8);
HXLINE( 151)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp8),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("K",4b,00,00,00)) ||  (_hx_switch_0==HX_("zzz",ba,fd,5c,00)) ){
HXLINE( 151)			return ::thx::format::TimeFormat_obj::offsetLong(d->__get((int)1).StaticCast<  ::cpp::Int64Struct >(),culture);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("M",4d,00,00,00)) ){
HXLINE( 168)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks9,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 168)			Int _hx_tmp9 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks9,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_MONTH);
HXLINE( 151)			return (HX_("",00,00,00,00) + _hx_tmp9);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("MM",60,43,00,00)) ){
HXLINE( 169)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks10,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 169)			Int _hx_tmp10 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks10,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_MONTH);
HXLINE( 151)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp10),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("MMM",ed,b0,3a,00)) ){
HXLINE( 170)			HX_VARI(  ::thx::culture::DateFormatInfo,dt) = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 171)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks11,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 171)			Int _hx_tmp11 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks11,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_MONTH);
HXLINE( 151)			return dt->nameMonthsAbbreviated->__get((_hx_tmp11 - (int)1));
HXLINE( 170)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("MMMM",c0,1e,20,33)) ){
HXLINE( 172)			HX_VARI_NAME(  ::thx::culture::DateFormatInfo,dt1,"dt") = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 173)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks12,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 173)			Int _hx_tmp12 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks12,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_MONTH);
HXLINE( 151)			return dt1->nameMonths->__get((_hx_tmp12 - (int)1));
HXLINE( 172)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("d",64,00,00,00)) ){
HXLINE( 152)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks13,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 152)			Int _hx_tmp13 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks13,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_DAY);
HXLINE( 151)			return (HX_("",00,00,00,00) + _hx_tmp13);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("dd",80,57,00,00)) ){
HXLINE( 153)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks14,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 153)			Int _hx_tmp14 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks14,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_DAY);
HXLINE( 151)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp14),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("ddd",e4,38,4c,00)) ){
HXLINE( 154)			HX_VARI_NAME(  ::thx::culture::DateFormatInfo,dt2,"dt") = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 155)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks15,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 155)			Int _hx_tmp15 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_dayOfWeek(ticks15);
HXLINE( 151)			return dt2->nameDaysAbbreviated->__get(_hx_tmp15);
HXLINE( 154)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("dddd",00,8f,65,42)) ){
HXLINE( 156)			HX_VARI_NAME(  ::thx::culture::DateFormatInfo,dt3,"dt") = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 157)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks16,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 157)			Int _hx_tmp16 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_dayOfWeek(ticks16);
HXLINE( 151)			return dt3->nameDays->__get(_hx_tmp16);
HXLINE( 156)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("f",66,00,00,00)) ){
HXLINE( 176)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks17,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 176)			Int _hx_tmp17 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks17);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp17,(int)1);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("ff",40,59,00,00)) ){
HXLINE( 177)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks18,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 177)			Int _hx_tmp18 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks18);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp18,(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("fff",26,bf,4d,00)) ){
HXLINE( 178)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks19,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 178)			Int _hx_tmp19 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks19);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp19,(int)3);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("ffff",80,82,b9,43)) ){
HXLINE( 179)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks20,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 179)			Int _hx_tmp20 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks20);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp20,(int)4);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("fffff",e6,ad,98,fe)) ){
HXLINE( 180)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks21,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 180)			Int _hx_tmp21 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks21);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp21,(int)5);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("ffffff",c0,7b,ff,c6)) ){
HXLINE( 181)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks22,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 181)			Int _hx_tmp22 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks22);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPaddedUpTo(_hx_tmp22,(int)6);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("fffffff",a6,cc,8c,58)) ){
HXLINE( 182)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks23,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 182)			Int _hx_tmp23 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_tickInSecond(ticks23);
HXLINE( 151)			return ::thx::format::DateFormat_obj::getDecimalsPadded(_hx_tmp23);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("h",68,00,00,00)) ){
HXLINE( 158)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks24,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 158)			HX_VARI( Int,_g) = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks24);
HXDLIN( 158)			if ((_g == (int)0)) {
HXLINE( 151)				return HX_("12",e1,2a,00,00);
            			}
            			else {
HXLINE( 160)				if ((_g <= (int)12)) {
HXLINE( 151)					return (HX_("",00,00,00,00) + _g);
            				}
            				else {
HXLINE( 151)					return (HX_("",00,00,00,00) + (_g - (int)12));
            				}
            			}
HXLINE( 158)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("hh",00,5b,00,00)) ){
HXLINE( 163)			::String _hx_tmp24 = ::thx::format::DateFormat_obj::formatTerm(d,HX_("h",68,00,00,00),culture);
HXLINE( 151)			return ::StringTools_obj::lpad(_hx_tmp24,HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("m",6d,00,00,00)) ){
HXLINE( 166)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks25,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 166)			Int _hx_tmp25 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_minute(ticks25);
HXLINE( 151)			return (HX_("",00,00,00,00) + _hx_tmp25);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("mm",60,5f,00,00)) ){
HXLINE( 167)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks26,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 167)			Int _hx_tmp26 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_minute(ticks26);
HXLINE( 151)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp26),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("s",73,00,00,00)) ){
HXLINE( 174)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks27,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 174)			Int _hx_tmp27 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_second(ticks27);
HXLINE( 151)			return (HX_("",00,00,00,00) + _hx_tmp27);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("ss",a0,64,00,00)) ){
HXLINE( 175)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks28,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 175)			Int _hx_tmp28 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_second(ticks28);
HXLINE( 151)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp28),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("t",74,00,00,00)) ){
HXLINE( 190)			HX_VARI_NAME(  ::thx::culture::DateFormatInfo,dt4,"dt") = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 191)			::String _hx_tmp29;
HXDLIN( 191)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks29,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 191)			Int _hx_tmp30 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks29);
HXDLIN( 191)			if ((_hx_tmp30 < (int)12)) {
HXLINE( 191)				_hx_tmp29 = dt4->designatorAm;
            			}
            			else {
HXLINE( 191)				_hx_tmp29 = dt4->designatorPm;
            			}
HXLINE( 151)			return ::haxe::Utf8_obj::sub(_hx_tmp29,(int)0,(int)1);
HXLINE( 190)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("tt",80,65,00,00)) ){
HXLINE( 192)			HX_VARI_NAME(  ::thx::culture::DateFormatInfo,dt5,"dt") = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 193)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks30,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 193)			Int _hx_tmp31 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks30);
HXDLIN( 193)			if ((_hx_tmp31 < (int)12)) {
HXLINE( 151)				return dt5->designatorAm;
            			}
            			else {
HXLINE( 151)				return dt5->designatorPm;
            			}
HXLINE( 192)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("y",79,00,00,00)) ){
HXLINE( 194)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks31,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 194)			Int _hx_tmp32 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks31,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 151)			return (HX_("",00,00,00,00) + hx::Mod(_hx_tmp32,(int)100));
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("yy",e0,69,00,00)) ){
HXLINE( 195)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks32,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 195)			Int _hx_tmp33 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks32,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 151)			return ::thx::Ints_obj::lpad(hx::Mod(_hx_tmp33,(int)100),HX_("0",30,00,00,00),(int)2);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("yyy",99,3a,5c,00)) ){
HXLINE( 196)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks33,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 196)			Int _hx_tmp34 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks33,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 151)			return ::thx::Ints_obj::lpad(_hx_tmp34,HX_("0",30,00,00,00),(int)3);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("yyyy",c0,0b,57,50)) ){
HXLINE( 197)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks34,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 197)			Int _hx_tmp35 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks34,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 151)			return ::thx::Ints_obj::lpad(_hx_tmp35,HX_("0",30,00,00,00),(int)4);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("yyyyy",b9,3c,d3,fb)) ){
HXLINE( 198)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks35,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 198)			Int _hx_tmp36 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks35,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 151)			return ::thx::Ints_obj::lpad(_hx_tmp36,HX_("0",30,00,00,00),(int)5);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("z",7a,00,00,00)) ){
HXLINE( 151)			return ::thx::format::TimeFormat_obj::offsetHoursShort(d->__get((int)1).StaticCast<  ::cpp::Int64Struct >(),culture);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("zz",c0,6a,00,00)) ){
HXLINE( 151)			return ::thx::format::TimeFormat_obj::offsetHoursLong(d->__get((int)1).StaticCast<  ::cpp::Int64Struct >(),culture);
HXDLIN( 151)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE( 206)			::String _hx_tmp37 = pattern.substring((int)0,(int)1);
HXDLIN( 206)			if ((_hx_tmp37 == HX_("%",25,00,00,00))) {
HXLINE( 151)				return ::thx::format::DateFormat_obj::strftime(d,pattern,culture);
            			}
            			else {
HXLINE( 208)				Bool _hx_tmp38;
HXDLIN( 208)				Bool _hx_tmp39;
HXDLIN( 208)				Bool _hx_tmp40;
HXDLIN( 208)				if (hx::IsNotNull( pattern )) {
HXLINE( 208)					_hx_tmp40 = (pattern.length > (int)1);
            				}
            				else {
HXLINE( 208)					_hx_tmp40 = false;
            				}
HXDLIN( 208)				if (_hx_tmp40) {
HXLINE( 209)					::String _hx_tmp41 = pattern.substring((int)0,(int)1);
HXDLIN( 209)					if ((_hx_tmp41 == HX_("'",27,00,00,00))) {
HXLINE( 209)						Int _hx_tmp42 = (pattern.length - (int)1);
HXDLIN( 209)						::String _hx_tmp43 = pattern.substring(_hx_tmp42,null());
HXLINE( 208)						_hx_tmp39 = (_hx_tmp43 == HX_("'",27,00,00,00));
            					}
            					else {
HXLINE( 208)						_hx_tmp39 = false;
            					}
            				}
            				else {
HXLINE( 208)					_hx_tmp39 = false;
            				}
HXDLIN( 208)				if (!(_hx_tmp39)) {
HXLINE( 210)					::String _hx_tmp44 = pattern.substring((int)0,(int)1);
HXDLIN( 210)					if ((_hx_tmp44 == HX_("\"",22,00,00,00))) {
HXLINE( 210)						Int _hx_tmp45 = (pattern.length - (int)1);
HXDLIN( 210)						::String _hx_tmp46 = pattern.substring(_hx_tmp45,null());
HXLINE( 208)						_hx_tmp38 = (_hx_tmp46 == HX_("\"",22,00,00,00));
            					}
            					else {
HXLINE( 208)						_hx_tmp38 = false;
            					}
            				}
            				else {
HXLINE( 208)					_hx_tmp38 = true;
            				}
HXDLIN( 208)				if (_hx_tmp38) {
HXLINE( 211)					Int _hx_tmp47 = (pattern.length - (int)1);
HXLINE( 151)					return pattern.substring((int)1,_hx_tmp47);
            				}
            				else {
HXLINE( 151)					return pattern;
            				}
            			}
            		}
            		_hx_goto_2:;
HXDLIN( 151)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(DateFormat_obj,formatTerm,return )

::String DateFormat_obj::strftime(::Array< ::Dynamic> d,::String pattern, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","strftime",0x0f2c337e,"thx.format.DateFormat.strftime","thx/format/DateFormat.hx",261,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(pattern,"pattern")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 261)		::String _hx_switch_0 = pattern;
            		if (  (_hx_switch_0==HX_("%%",60,20,00,00)) ){
HXLINE( 261)			return HX_("%",25,00,00,00);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%A",7c,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("dddd",00,8f,65,42),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%B",7d,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("MMMM",c0,1e,20,33),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%C",7e,20,00,00)) ){
HXLINE( 276)			HX_VARI(  ::cpp::Int64Struct,ticks) = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 276)			Int _hx_tmp = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXDLIN( 276)			Int _hx_tmp1 = ::Math_obj::floor(((Float)_hx_tmp / (Float)(int)100));
HXLINE( 261)			return (HX_("",00,00,00,00) + _hx_tmp1);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%D",7f,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::format(d,HX_("%m/%d/%y",7d,9b,c4,53),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%H",83,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("HH",00,3f,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%I",84,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("hh",00,5b,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%M",88,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("mm",60,5f,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%P",8b,20,00,00)) ){
HXLINE( 284)			HX_VARI(  ::thx::culture::DateFormatInfo,dt) = ::thx::format::DateFormat_obj::dateTime(culture);
HXLINE( 285)			::String _hx_tmp2;
HXDLIN( 285)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks1,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 285)			Int _hx_tmp3 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks1);
HXDLIN( 285)			if ((_hx_tmp3 < (int)12)) {
HXLINE( 285)				_hx_tmp2 = dt->designatorAm;
            			}
            			else {
HXLINE( 285)				_hx_tmp2 = dt->designatorPm;
            			}
HXLINE( 261)			return _hx_tmp2.toLowerCase();
HXLINE( 284)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%R",8d,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::format(d,HX_("%H:%M",9f,f6,96,7d),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%S",8e,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("ss",a0,64,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%T",8f,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::format(d,HX_("%H:%M:%S",09,da,eb,a7),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%X",93,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::timeLong(d,culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%Y",94,20,00,00)) ){
HXLINE( 294)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks2,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 294)			Int _hx_tmp4 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks2,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_YEAR);
HXLINE( 261)			return (HX_("",00,00,00,00) + _hx_tmp4);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%a",9c,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("ddd",e4,38,4c,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%c",9e,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::dateTimeFull(d,culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%d",9f,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("dd",80,57,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%e",a0,20,00,00)) ){
HXLINE( 277)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks3,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 277)			Int _hx_tmp5 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks3,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_DAY);
HXLINE( 261)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp5),HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%f",a1,20,00,00)) ){
HXLINE( 279)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks4,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 279)			Int _hx_tmp6 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::getDatePart(ticks4,::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::DATE_PART_MONTH);
HXLINE( 261)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp6),HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%b",9d,20,00,00)) ||  (_hx_switch_0==HX_("%h",a3,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("MMM",ed,b0,3a,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%i",a4,20,00,00)) ){
HXLINE( 280)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks5,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 280)			Int _hx_tmp7 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_minute(ticks5);
HXLINE( 261)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp7),HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%k",a6,20,00,00)) ){
HXLINE( 281)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks6,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 281)			Int _hx_tmp8 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_hour(ticks6);
HXLINE( 261)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp8),HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%l",a7,20,00,00)) ){
HXLINE( 282)			::String _hx_tmp9 = ::thx::format::DateFormat_obj::formatTerm(d,HX_("h",68,00,00,00),culture);
HXLINE( 261)			return ::StringTools_obj::lpad(_hx_tmp9,HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%m",a8,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("MM",60,43,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%n",a9,20,00,00)) ){
HXLINE( 261)			return HX_("\n",0a,00,00,00);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%p",ab,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("tt",80,65,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%q",ac,20,00,00)) ){
HXLINE( 286)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks7,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 286)			Int _hx_tmp10 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_second(ticks7);
HXLINE( 261)			return ::StringTools_obj::lpad((HX_("",00,00,00,00) + _hx_tmp10),HX_(" ",20,00,00,00),(int)2);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%r",ad,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::format(d,HX_("%I:%M:%S %p",41,32,ce,bb),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%s",ae,20,00,00)) ){
HXLINE( 289)			HX_VARI_NAME(  ::cpp::Int64Struct,this1,"this") = d->__get((int)0).StaticCast<  ::cpp::Int64Struct >();
HXDLIN( 289)			HX_VARI(  ::cpp::Int64Struct,b) = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::unixEpochTicks;
HXDLIN( 289)			HX_VARI(  ::cpp::Int64Struct,a) = _hx_int64_sub(this1,b);
HXDLIN( 289)			HX_VARI_NAME(  ::cpp::Int64Struct,b1,"b") = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::ticksPerMillisecondI64;
HXDLIN( 289)			Bool _hx_tmp11 = _hx_int64_is_zero(a);
HXDLIN( 289)			if (_hx_tmp11) {
HXLINE( 289)				HX_STACK_DO_THROW(HX_("divide by zero",6a,d2,eb,57));
            			}
HXDLIN( 289)			 ::cpp::Int64Struct _hx_tmp12 = _hx_int64_div(a,b1);
HXDLIN( 289)			Float _hx_tmp13 = ::thx::Int64s_obj::toFloat(_hx_tmp12);
HXDLIN( 289)			Int _hx_tmp14 = ::Std_obj::_hx_int(((Float)_hx_tmp13 / (Float)(int)1000));
HXLINE( 261)			return (HX_("",00,00,00,00) + _hx_tmp14);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%t",af,20,00,00)) ){
HXLINE( 261)			return HX_("\t",09,00,00,00);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%u",b0,20,00,00)) ){
HXLINE( 292)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks8,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 292)			HX_VARI( Int,day) = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_dayOfWeek(ticks8);
HXLINE( 293)			if ((day == (int)0)) {
HXLINE( 261)				return HX_("7",37,00,00,00);
            			}
            			else {
HXLINE( 261)				return (HX_("",00,00,00,00) + day);
            			}
HXLINE( 292)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%w",b2,20,00,00)) ){
HXLINE( 297)			HX_VARI_NAME(  ::cpp::Int64Struct,ticks9,"ticks") = _hx_int64_add(d->__get((int)0).StaticCast<  ::cpp::Int64Struct >(),d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 297)			Int _hx_tmp15 = ::thx::_DateTimeUtc::DateTimeUtc_Impl__obj::get_dayOfWeek(ticks9);
HXLINE( 261)			return (HX_("",00,00,00,00) + _hx_tmp15);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%x",b3,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::dateLong(d,culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%y",b4,20,00,00)) ){
HXLINE( 261)			return ::thx::format::DateFormat_obj::formatTerm(d,HX_("y",79,00,00,00),culture);
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("%z",b5,20,00,00)) ){
HXLINE( 261)			return ::thx::format::TimeFormat_obj::iso8601OffsetShort(d->__get((int)1).StaticCast<  ::cpp::Int64Struct >());
HXDLIN( 261)			goto _hx_goto_3;
            		}
            		/* default */{
HXLINE( 261)			return pattern;
            		}
            		_hx_goto_3:;
HXDLIN( 261)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(DateFormat_obj,strftime,return )

::String DateFormat_obj::dateLong(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","dateLong",0xbe03dd26,"thx.format.DateFormat.dateLong","thx/format/DateFormat.hx",307,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 307)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternDateLong,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,dateLong,return )

::String DateFormat_obj::dateShort(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","dateShort",0x888c0192,"thx.format.DateFormat.dateShort","thx/format/DateFormat.hx",313,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 313)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternDateShort,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,dateShort,return )

::String DateFormat_obj::dateTimeFull(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","dateTimeFull",0x5c78c0e6,"thx.format.DateFormat.dateTimeFull","thx/format/DateFormat.hx",319,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 319)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternDateTimeFull,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,dateTimeFull,return )

::String DateFormat_obj::dateTimeSortable(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","dateTimeSortable",0x85d26acf,"thx.format.DateFormat.dateTimeSortable","thx/format/DateFormat.hx",325,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 325)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternDateTimeSortable,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,dateTimeSortable,return )

::String DateFormat_obj::monthDay(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","monthDay",0x56363558,"thx.format.DateFormat.monthDay","thx/format/DateFormat.hx",331,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 331)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternMonthDay,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,monthDay,return )

::String DateFormat_obj::rfc1123(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","rfc1123",0x5965e574,"thx.format.DateFormat.rfc1123","thx/format/DateFormat.hx",337,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 337)		return ::thx::format::DateFormat_obj::customFormat(::Array_obj< ::Dynamic>::__new(2)->init(0,d->__get((int)0).StaticCast<  ::cpp::Int64Struct >())->init(1,::thx::_Time::Time_Impl__obj::zero),::thx::format::DateFormat_obj::dateTime(culture)->patternRfc1123,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,rfc1123,return )

::String DateFormat_obj::timeLong(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","timeLong",0xd1572e85,"thx.format.DateFormat.timeLong","thx/format/DateFormat.hx",343,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 343)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternTimeLong,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,timeLong,return )

::String DateFormat_obj::timeShort(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","timeShort",0x5e1fe353,"thx.format.DateFormat.timeShort","thx/format/DateFormat.hx",349,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 349)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternTimeShort,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,timeShort,return )

::String DateFormat_obj::universalSortable(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","universalSortable",0xdcb47ac7,"thx.format.DateFormat.universalSortable","thx/format/DateFormat.hx",355,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 355)		return ::thx::format::DateFormat_obj::customFormat(::Array_obj< ::Dynamic>::__new(2)->init(0,d->__get((int)0).StaticCast<  ::cpp::Int64Struct >())->init(1,::thx::_Time::Time_Impl__obj::zero),::thx::format::DateFormat_obj::dateTime(culture)->patternUniversalSortable,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,universalSortable,return )

::String DateFormat_obj::iso8601(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","iso8601",0x033ba768,"thx.format.DateFormat.iso8601","thx/format/DateFormat.hx",361,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 361)		return ::thx::format::DateFormat_obj::customFormat(d,HX_("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffK",8b,c3,99,77),culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,iso8601,return )

::String DateFormat_obj::yearMonth(::Array< ::Dynamic> d, ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","yearMonth",0x67e78a67,"thx.format.DateFormat.yearMonth","thx/format/DateFormat.hx",367,0x5967ae4c)
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(culture,"culture")
HXLINE( 367)		return ::thx::format::DateFormat_obj::customFormat(d,::thx::format::DateFormat_obj::dateTime(culture)->patternYearMonth,culture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,yearMonth,return )

::String DateFormat_obj::getDecimalsPadded(Int decimals){
            	HX_STACK_FRAME("thx.format.DateFormat","getDecimalsPadded",0xd95a780c,"thx.format.DateFormat.getDecimalsPadded","thx/format/DateFormat.hx",371,0x5967ae4c)
            	HX_STACK_ARG(decimals,"decimals")
HXLINE( 371)		return ::thx::Ints_obj::lpad(decimals,HX_("0",30,00,00,00),(int)7);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DateFormat_obj,getDecimalsPadded,return )

::String DateFormat_obj::getDecimalsString(Int decimals){
            	HX_STACK_FRAME("thx.format.DateFormat","getDecimalsString",0x064e628d,"thx.format.DateFormat.getDecimalsString","thx/format/DateFormat.hx",374,0x5967ae4c)
            	HX_STACK_ARG(decimals,"decimals")
HXLINE( 374)		return ::thx::Strings_obj::trimCharsRight(::thx::format::DateFormat_obj::getDecimalsPadded(decimals),HX_("0",30,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DateFormat_obj,getDecimalsString,return )

::String DateFormat_obj::getDecimalsUpTo(Int decimals,Int to){
            	HX_STACK_FRAME("thx.format.DateFormat","getDecimalsUpTo",0xdcd24f72,"thx.format.DateFormat.getDecimalsUpTo","thx/format/DateFormat.hx",377,0x5967ae4c)
            	HX_STACK_ARG(decimals,"decimals")
            	HX_STACK_ARG(to,"to")
HXLINE( 377)		return ::thx::format::DateFormat_obj::getDecimalsString(decimals).substring((int)0,to);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,getDecimalsUpTo,return )

::String DateFormat_obj::getDecimalsPaddedUpTo(Int decimals,Int to){
            	HX_STACK_FRAME("thx.format.DateFormat","getDecimalsPaddedUpTo",0xc549d6e2,"thx.format.DateFormat.getDecimalsPaddedUpTo","thx/format/DateFormat.hx",380,0x5967ae4c)
            	HX_STACK_ARG(decimals,"decimals")
            	HX_STACK_ARG(to,"to")
HXLINE( 380)		return ::thx::format::DateFormat_obj::getDecimalsPadded(decimals).substring((int)0,to);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DateFormat_obj,getDecimalsPaddedUpTo,return )

 ::thx::culture::DateFormatInfo DateFormat_obj::dateTime( ::thx::culture::Culture culture){
            	HX_STACK_FRAME("thx.format.DateFormat","dateTime",0xc34903b7,"thx.format.DateFormat.dateTime","thx/format/DateFormat.hx",383,0x5967ae4c)
            	HX_STACK_ARG(culture,"culture")
HXLINE( 383)		Bool _hx_tmp;
HXDLIN( 383)		if (hx::IsNotNull( culture )) {
HXLINE( 383)			_hx_tmp = hx::IsNotNull( culture->dateTime );
            		}
            		else {
HXLINE( 383)			_hx_tmp = false;
            		}
HXDLIN( 383)		if (_hx_tmp) {
HXLINE( 383)			return culture->dateTime;
            		}
            		else {
HXLINE( 383)			return ::thx::format::Format_obj::get_defaultCulture()->dateTime;
            		}
HXDLIN( 383)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DateFormat_obj,dateTime,return )

 ::EReg DateFormat_obj::getPattern(){
            	HX_STACK_FRAME("thx.format.DateFormat","getPattern",0x9a69e1b6,"thx.format.DateFormat.getPattern","thx/format/DateFormat.hx",385,0x5967ae4c)
HXLINE( 385)		return  ::EReg_obj::__new(HX_("(d|M){1,4}|(z){1,3}|(y){1,5}|(f|F){1,7}|(h|H|m|s|t){1,2}|K|[:]|[/]|'[^']*'|\"[^\"]*\"|[%][daAIHMmbhBSpycCeDfiklnPqrRstTuYxXw%]",a1,a2,2f,a8),HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DateFormat_obj,getPattern,return )


DateFormat_obj::DateFormat_obj()
{
}

bool DateFormat_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"format") ) { outValue = format_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rfc1123") ) { outValue = rfc1123_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"iso8601") ) { outValue = iso8601_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"strftime") ) { outValue = strftime_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dateLong") ) { outValue = dateLong_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"monthDay") ) { outValue = monthDay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"timeLong") ) { outValue = timeLong_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dateTime") ) { outValue = dateTime_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"dateShort") ) { outValue = dateShort_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"timeShort") ) { outValue = timeShort_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"yearMonth") ) { outValue = yearMonth_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"formatTerm") ) { outValue = formatTerm_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getPattern") ) { outValue = getPattern_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"customFormat") ) { outValue = customFormat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dateTimeFull") ) { outValue = dateTimeFull_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getDecimalsUpTo") ) { outValue = getDecimalsUpTo_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"dateTimeSortable") ) { outValue = dateTimeSortable_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"universalSortable") ) { outValue = universalSortable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDecimalsPadded") ) { outValue = getDecimalsPadded_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDecimalsString") ) { outValue = getDecimalsString_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"getDecimalsPaddedUpTo") ) { outValue = getDecimalsPaddedUpTo_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *DateFormat_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DateFormat_obj_sStaticStorageInfo = 0;
#endif

static void DateFormat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DateFormat_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DateFormat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DateFormat_obj::__mClass,"__mClass");
};

#endif

hx::Class DateFormat_obj::__mClass;

static ::String DateFormat_obj_sStaticFields[] = {
	HX_HCSTRING("customFormat","\xc8","\xe5","\x2b","\xfd"),
	HX_HCSTRING("format","\x37","\x8f","\x8e","\xfd"),
	HX_HCSTRING("formatTerm","\x43","\xea","\x5e","\x0c"),
	HX_HCSTRING("strftime","\x22","\x2d","\xee","\x25"),
	HX_HCSTRING("dateLong","\xca","\xd6","\xc5","\xd4"),
	HX_HCSTRING("dateShort","\x6e","\x77","\x84","\x5b"),
	HX_HCSTRING("dateTimeFull","\x8a","\x5c","\xe2","\x9b"),
	HX_HCSTRING("dateTimeSortable","\x73","\xa8","\x5c","\xb7"),
	HX_HCSTRING("monthDay","\xfc","\x2e","\xf8","\x6c"),
	HX_HCSTRING("rfc1123","\x50","\xec","\x29","\x6e"),
	HX_HCSTRING("timeLong","\x29","\x28","\x19","\xe8"),
	HX_HCSTRING("timeShort","\x2f","\x59","\x18","\x31"),
	HX_HCSTRING("universalSortable","\xa3","\x2c","\x20","\x04"),
	HX_HCSTRING("iso8601","\x44","\xae","\xff","\x17"),
	HX_HCSTRING("yearMonth","\x43","\x00","\xe0","\x3a"),
	HX_HCSTRING("getDecimalsPadded","\xe8","\x29","\xc6","\x00"),
	HX_HCSTRING("getDecimalsString","\x69","\x14","\xba","\x2d"),
	HX_HCSTRING("getDecimalsUpTo","\x4e","\x92","\x82","\x45"),
	HX_HCSTRING("getDecimalsPaddedUpTo","\xbe","\xa6","\x09","\x17"),
	HX_HCSTRING("dateTime","\x5b","\xfd","\x0a","\xda"),
	HX_HCSTRING("getPattern","\x5a","\x8c","\xd8","\x60"),
	::String(null())
};

void DateFormat_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.format.DateFormat","\x92","\x95","\x60","\x74");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DateFormat_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DateFormat_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DateFormat_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DateFormat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DateFormat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DateFormat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DateFormat_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace format
