// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.format {
	public class BigIntFormat : global::haxe.lang.HxObject {
		
		public BigIntFormat(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public BigIntFormat() {
			global::thx.format.BigIntFormat.__hx_ctor_thx_format_BigIntFormat(this);
		}
		
		
		public static void __hx_ctor_thx_format_BigIntFormat(global::thx.format.BigIntFormat __temp_me157) {
		}
		
		
		public static string binary(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> significantDigits) {
			unchecked {
				global::haxe.lang.Null<int> __temp_significantDigits151 = ( ( ! (significantDigits.hasValue) ) ? (new global::haxe.lang.Null<int>(1, true)) : (significantDigits) );
				if (( global::haxe.lang.Runtime.eq((__temp_significantDigits151).toDynamic(), 0) && ((global::thx.bigint.BigIntImpl) (i) ).isZero() )) {
					return "";
				}
				else {
					return global::StringTools.lpad(((global::thx.bigint.BigIntImpl) (i) ).toStringWithBase(2), "0", (__temp_significantDigits151).@value);
				}
				
			}
		}
		
		
		public static string currency(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> precision, string symbol, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.currency(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), precision, symbol, culture);
		}
		
		
		public static string customFormat(global::thx.bigint.BigIntImpl i, string pattern, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.customFormat(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), pattern, culture);
		}
		
		
		public static string @decimal(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> significantDigits, global::thx.culture.Culture culture) {
			unchecked {
				global::haxe.lang.Null<int> __temp_significantDigits152 = ( ( ! (significantDigits.hasValue) ) ? (new global::haxe.lang.Null<int>(1, true)) : (significantDigits) );
				return global::thx.format.DecimalFormat.@decimal(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), __temp_significantDigits152, culture);
			}
		}
		
		
		public static string exponential(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> precision, global::haxe.lang.Null<int> digits, string symbol, global::thx.culture.Culture culture) {
			unchecked {
				if (string.Equals(symbol, null)) {
					symbol = "e";
				}
				
				global::haxe.lang.Null<int> __temp_digits154 = ( ( ! (digits.hasValue) ) ? (new global::haxe.lang.Null<int>(3, true)) : (digits) );
				global::haxe.lang.Null<int> __temp_precision153 = ( ( ! (precision.hasValue) ) ? (new global::haxe.lang.Null<int>(6, true)) : (precision) );
				return global::thx.format.DecimalFormat.exponential(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), __temp_precision153, __temp_digits154, symbol, culture);
			}
		}
		
		
		public static string @fixed(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> precision, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.@fixed(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), precision, culture);
		}
		
		
		public static string format(global::thx.bigint.BigIntImpl i, string pattern, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.format(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), pattern, culture);
		}
		
		
		public static string general(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> significantDigits, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.general(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), significantDigits, culture);
		}
		
		
		public static string hex(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> significantDigits, global::thx.culture.Culture culture) {
			unchecked {
				global::haxe.lang.Null<int> __temp_significantDigits155 = ( ( ! (significantDigits.hasValue) ) ? (new global::haxe.lang.Null<int>(1, true)) : (significantDigits) );
				if (( global::haxe.lang.Runtime.eq((__temp_significantDigits155).toDynamic(), 0) && ((global::thx.bigint.BigIntImpl) (i) ).isZero() )) {
					return "";
				}
				else {
					return global::StringTools.lpad(global::thx.format.BigIntFormat.toBase(i, 16, culture), "0", (__temp_significantDigits155).@value);
				}
				
			}
		}
		
		
		public static string integer(global::thx.bigint.BigIntImpl i, global::thx.culture.Culture culture) {
			return global::thx.format.BigIntFormat.number(i, new global::haxe.lang.Null<int>(0, true), culture);
		}
		
		
		public static string number(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> precision, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.number(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), precision, culture);
		}
		
		
		public static string octal(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> significantDigits, global::thx.culture.Culture culture) {
			unchecked {
				global::haxe.lang.Null<int> __temp_significantDigits156 = ( ( ! (significantDigits.hasValue) ) ? (new global::haxe.lang.Null<int>(1, true)) : (significantDigits) );
				if (( global::haxe.lang.Runtime.eq((__temp_significantDigits156).toDynamic(), 0) && ((global::thx.bigint.BigIntImpl) (i) ).isZero() )) {
					return "";
				}
				else {
					return global::StringTools.lpad(global::thx.format.BigIntFormat.toBase(i, 8, culture), "0", (__temp_significantDigits156).@value);
				}
				
			}
		}
		
		
		public static string percent(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> decimals, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.percent(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), decimals, culture);
		}
		
		
		public static string permille(global::thx.bigint.BigIntImpl i, global::haxe.lang.Null<int> decimals, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.permille(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), decimals, culture);
		}
		
		
		public static string printf(global::thx.bigint.BigIntImpl i, string pattern, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.printf(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), pattern, culture);
		}
		
		
		public static string toBase(global::thx.bigint.BigIntImpl @value, int @base, global::thx.culture.Culture culture) {
			unchecked {
				string s = ((global::thx.bigint.BigIntImpl) (@value) ).toStringWithBase(@base);
				if (( ! (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.getField(((global::thx.bigint.BigIntImpl) (@value) ), "sign", 1280544829, true))) )) {
					return s;
				}
				
				return global::haxe.lang.Runtime.concat(global::thx.format.BigIntFormat.numberFormat(culture).signNegative, global::haxe.lang.StringExt.substring(s, 1, default(global::haxe.lang.Null<int>)));
			}
		}
		
		
		public static string unit(global::thx.bigint.BigIntImpl i, int decimals, string unitSymbol, global::thx.culture.Culture culture) {
			return global::thx.format.DecimalFormat.unit(global::thx._Decimal.Decimal_Impl_.fromBigInt(i), decimals, unitSymbol, culture);
		}
		
		
		public static global::thx.culture.NumberFormatInfo numberFormat(global::thx.culture.Culture culture) {
			if (( ( null != culture ) && ( null != culture.number ) )) {
				return culture.number;
			}
			else {
				return global::thx.format.Format.get_defaultCulture().number;
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.format.BigIntFormat(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.format.BigIntFormat();
		}
		
		
	}
}


