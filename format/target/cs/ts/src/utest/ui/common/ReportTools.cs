// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest.ui.common {
	public class ReportTools : global::haxe.lang.HxObject {
		
		public ReportTools(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ReportTools() {
			global::utest.ui.common.ReportTools.__hx_ctor_utest_ui_common_ReportTools(this);
		}
		
		
		public static void __hx_ctor_utest_ui_common_ReportTools(global::utest.ui.common.ReportTools __temp_me212) {
		}
		
		
		public static bool hasHeader(global::utest.ui.common.IReport report, global::utest.ui.common.ResultStats stats) {
			unchecked {
				switch (((global::utest.ui.common.HeaderDisplayMode) (global::haxe.lang.Runtime.getField(report, "displayHeader", 1046660463, true)) ).index) {
					case 0:
					{
						return true;
					}
					
					
					case 1:
					{
						return false;
					}
					
					
					case 2:
					{
						if ( ! (stats.isOk) ) {
							return true;
						}
						
						switch (((global::utest.ui.common.SuccessResultsDisplayMode) (global::haxe.lang.Runtime.getField(report, "displaySuccessResults", 641357653, true)) ).index) {
							case 0:
							case 2:
							{
								return true;
							}
							
							
							case 1:
							{
								return false;
							}
							
							
						}
						
						break;
					}
					
					
				}
				
				return default(bool);
			}
		}
		
		
		public static bool skipResult(global::utest.ui.common.IReport report, global::utest.ui.common.ResultStats stats, bool isOk) {
			unchecked {
				if ( ! (stats.isOk) ) {
					return false;
				}
				
				switch (((global::utest.ui.common.SuccessResultsDisplayMode) (global::haxe.lang.Runtime.getField(report, "displaySuccessResults", 641357653, true)) ).index) {
					case 0:
					{
						return false;
					}
					
					
					case 1:
					{
						return true;
					}
					
					
					case 2:
					{
						return  ! (isOk) ;
					}
					
					
				}
				
				return default(bool);
			}
		}
		
		
		public static bool hasOutput(global::utest.ui.common.IReport report, global::utest.ui.common.ResultStats stats) {
			if ( ! (stats.isOk) ) {
				return true;
			}
			
			return global::utest.ui.common.ReportTools.hasHeader(report, stats);
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::utest.ui.common.ReportTools(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::utest.ui.common.ReportTools();
		}
		
		
	}
}


