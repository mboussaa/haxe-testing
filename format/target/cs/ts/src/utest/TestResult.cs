// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace utest {
	public class TestResult : global::haxe.lang.HxObject {
		
		public TestResult(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestResult() {
			global::utest.TestResult.__hx_ctor_utest_TestResult(this);
		}
		
		
		public static void __hx_ctor_utest_TestResult(global::utest.TestResult __temp_me204) {
		}
		
		
		public static global::utest.TestResult ofHandler(global::utest.TestHandler handler) {
			global::utest.TestResult r = new global::utest.TestResult();
			global::Array<object> path = global::haxe.lang.StringExt.split(global::Type.getClassName(global::Type.getClass<object>(((object) (((global::utest.TestFixture) (global::haxe.lang.Runtime.getField(handler, "fixture", 1914813385, true)) ).target) ))), ".");
			r.cls = global::haxe.lang.Runtime.toString((path.pop()).toDynamic());
			r.pack = path.@join(".");
			r.method = ((global::utest.TestFixture) (global::haxe.lang.Runtime.getField(handler, "fixture", 1914813385, true)) ).method;
			r.setup = ((global::utest.TestFixture) (global::haxe.lang.Runtime.getField(handler, "fixture", 1914813385, true)) ).setup;
			r.teardown = ((global::utest.TestFixture) (global::haxe.lang.Runtime.getField(handler, "fixture", 1914813385, true)) ).teardown;
			r.assertations = ((global::List<object>) (global::List<object>.__hx_cast<object>(((global::List) (global::haxe.lang.Runtime.getField(handler, "results", 1800886518, true)) ))) );
			return r;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::utest.TestResult(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::utest.TestResult();
		}
		
		
		public string pack;
		
		public string cls;
		
		public string method;
		
		public string setup;
		
		public string teardown;
		
		public global::List<object> assertations;
		
		public virtual bool allOk() {
			{
				global::_List.ListNode<object> _g_head = this.assertations.h;
				while (( _g_head != null )) {
					global::utest.Assertation val = ((global::utest.Assertation) (_g_head.item) );
					_g_head = _g_head.next;
					if (( val.index == 0 )) {
						break;
					}
					else {
						return false;
					}
					
				}
				
			}
			
			return true;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 288025444:
					{
						this.assertations = ((global::List<object>) (global::List<object>.__hx_cast<object>(((global::List) (@value) ))) );
						return @value;
					}
					
					
					case 26061316:
					{
						this.teardown = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 2049945213:
					{
						this.setup = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 156956385:
					{
						this.method = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 4947370:
					{
						this.cls = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1246877401:
					{
						this.pack = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 563316893:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "allOk", 563316893)) );
					}
					
					
					case 288025444:
					{
						return this.assertations;
					}
					
					
					case 26061316:
					{
						return this.teardown;
					}
					
					
					case 2049945213:
					{
						return this.setup;
					}
					
					
					case 156956385:
					{
						return this.method;
					}
					
					
					case 4947370:
					{
						return this.cls;
					}
					
					
					case 1246877401:
					{
						return this.pack;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 563316893:
					{
						return this.allOk();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("assertations");
			baseArr.push("teardown");
			baseArr.push("setup");
			baseArr.push("method");
			baseArr.push("cls");
			baseArr.push("pack");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


