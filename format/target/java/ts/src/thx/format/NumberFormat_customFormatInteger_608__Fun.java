// Generated by Haxe 3.3.0
package thx.format;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class NumberFormat_customFormatInteger_608__Fun extends haxe.lang.Function
{
	public NumberFormat_customFormatInteger_608__Fun(haxe.root.Array<java.lang.String> p)
	{
		//line 608 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
		super(1, 0);
		//line 608 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
		this.p = p;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 608 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
		thx.format._NumberFormat.CustomFormat _1 = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((thx.format._NumberFormat.CustomFormat) (((java.lang.Object) (__fn_float1) )) )) : (( (( __fn_dyn1 == null )) ? (null) : (((thx.format._NumberFormat.CustomFormat) (__fn_dyn1) )) )) );
		//line 608 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
		switch (_1.index)
		{
			case 0:
			{
				//line 609 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
				java.lang.String s = haxe.lang.Runtime.toString(_1.params[0]);
				//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
				return s;
			}
			
			
			case 1:
			{
				//line 610 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
				boolean first1 = haxe.lang.Runtime.toBool(_1.params[0]);
				//line 610 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
				if (( this.p.length == 0 )) 
				{
					//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
					return "";
				}
				else
				{
					//line 610 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
					if (first1) 
					{
						//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
						return this.p.join("");
					}
					else
					{
						//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
						return haxe.lang.Runtime.toString(this.p.pop());
					}
					
				}
				
			}
			
			
			case 2:
			{
				//line 611 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
				boolean first2 = haxe.lang.Runtime.toBool(_1.params[0]);
				//line 611 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
				if (first2) 
				{
					//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
					return this.p.join("");
				}
				else
				{
					//line 86 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/macro/lambda/SlambdaMacro.hx"
					return haxe.lang.Runtime.toString(this.p.pop());
				}
				
			}
			
			
		}
		
		//line 608 "/usr/lib/haxe/lib/thx,format/0,5,1/src/thx/format/NumberFormat.hx"
		return null;
	}
	
	
	public haxe.root.Array<java.lang.String> p;
	
}


