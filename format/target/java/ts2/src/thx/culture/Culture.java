// Generated by Haxe 3.3.0
package thx.culture;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Culture extends haxe.lang.HxObject
{
	static
	{
		//line 140 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 141 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			thx.culture.Culture.cultures = new haxe.ds.StringMap<thx.culture.Culture>();
			//line 142 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			thx.culture.Culture.list = new haxe.root.Array<thx.culture.Culture>(new thx.culture.Culture[]{});
		}
		
		//line 4 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.invariant = new thx.culture.Culture("", thx.culture.DateFormatInfo.invariant, "", false, "iv", "IVL", false, 127, "Gregorian", "Invariant Language", "Invariant Language", "Invariant Country", "Invariant Country", thx.culture.NumberFormatInfo.invariant, ",", "IVL");
	}
	
	public Culture(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Culture(java.lang.String code, thx.culture.DateFormatInfo dateTime, java.lang.String ietf, boolean isNeutral, java.lang.String iso2, java.lang.String iso3, boolean isRightToLeft, int lcid, java.lang.String nameCalendar, java.lang.String nameEnglish, java.lang.String nameNative, java.lang.String nameRegionEnglish, java.lang.String nameRegionNative, thx.culture.NumberFormatInfo number, java.lang.String separatorList, java.lang.String win3)
	{
		//line 25 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.__hx_ctor_thx_culture_Culture(this, code, dateTime, ietf, isNeutral, iso2, iso3, isRightToLeft, lcid, nameCalendar, nameEnglish, nameNative, nameRegionEnglish, nameRegionNative, number, separatorList, win3);
	}
	
	
	public static void __hx_ctor_thx_culture_Culture(thx.culture.Culture __temp_me134, java.lang.String code, thx.culture.DateFormatInfo dateTime, java.lang.String ietf, boolean isNeutral, java.lang.String iso2, java.lang.String iso3, boolean isRightToLeft, int lcid, java.lang.String nameCalendar, java.lang.String nameEnglish, java.lang.String nameNative, java.lang.String nameRegionEnglish, java.lang.String nameRegionNative, thx.culture.NumberFormatInfo number, java.lang.String separatorList, java.lang.String win3)
	{
		//line 43 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.code = code;
		//line 44 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.dateTime = dateTime;
		//line 45 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.ietf = ietf;
		//line 46 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.isNeutral = isNeutral;
		//line 47 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.iso2 = iso2;
		//line 48 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.iso3 = iso3;
		//line 49 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.isRightToLeft = isRightToLeft;
		//line 50 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.lcid = lcid;
		//line 51 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.nameCalendar = nameCalendar;
		//line 52 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.nameEnglish = nameEnglish;
		//line 53 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.nameNative = nameNative;
		//line 54 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.nameRegionEnglish = nameRegionEnglish;
		//line 55 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.nameRegionNative = nameRegionNative;
		//line 56 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.number = number;
		//line 57 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.separatorList = separatorList;
		//line 58 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		__temp_me134.win3 = win3;
	}
	
	
	public static thx.culture.Culture invariant;
	
	public static thx.culture.Culture fromObject(java.lang.Object o)
	{
		//line 83 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp = haxe.lang.Runtime.getField(o, "code", true);
		//line 84 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.DateFormatInfo tmp1 = null;
		//line 84 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		if (( null == haxe.lang.Runtime.getField(o, "dateTime", true) )) 
		{
			//line 84 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			tmp1 = null;
		}
		else
		{
			//line 84 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			java.lang.Object o1 = haxe.lang.Runtime.getField(o, "dateTime", true);
			//line 84 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			tmp1 = new thx.culture.DateFormatInfo(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o1, "calendarWeekRuleIndex", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "calendarWeekRuleName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "designatorAm", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "designatorPm", true)), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o1, "firstDayOfWeekIndex", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "firstDayOfWeekName", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "nameCalendar", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "nameCalendarNative", true)), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDays", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDaysAbbreviated", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameDaysShortest", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonths", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthsAbbreviated", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthGenitives", true)) ), ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(o1, "nameMonthGenitivesAbbreviated", true)) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateLong", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateShort", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateTimeFull", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternDateTimeSortable", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternMonthDay", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternRfc1123", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternTimeLong", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternTimeShort", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternUniversalSortable", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "patternYearMonth", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "separatorDate", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o1, "separatorTime", true)));
		}
		
		//line 85 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp2 = haxe.lang.Runtime.getField(o, "ietf", true);
		//line 86 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp3 = haxe.lang.Runtime.getField(o, "isNeutral", true);
		//line 87 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp4 = haxe.lang.Runtime.getField(o, "iso2", true);
		//line 88 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp5 = haxe.lang.Runtime.getField(o, "iso3", true);
		//line 89 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp6 = haxe.lang.Runtime.getField(o, "isRightToLeft", true);
		//line 90 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp7 = haxe.lang.Runtime.getField(o, "lcid", true);
		//line 91 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp8 = haxe.lang.Runtime.getField(o, "nameCalendar", true);
		//line 92 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp9 = haxe.lang.Runtime.getField(o, "nameEnglish", true);
		//line 93 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp10 = haxe.lang.Runtime.getField(o, "nameNative", true);
		//line 94 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp11 = haxe.lang.Runtime.getField(o, "nameRegionEnglish", true);
		//line 95 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp12 = haxe.lang.Runtime.getField(o, "nameRegionNative", true);
		//line 96 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.NumberFormatInfo tmp13 = null;
		//line 96 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		if (( null == haxe.lang.Runtime.getField(o, "number", true) )) 
		{
			//line 96 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			tmp13 = null;
		}
		else
		{
			//line 96 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			java.lang.Object o2 = haxe.lang.Runtime.getField(o, "number", true);
			//line 96 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			tmp13 = new thx.culture.NumberFormatInfo(((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsNumber", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "decimalDigitsPercent", true))) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesCurrency", true)) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesNumber", true)) ), ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(o2, "groupSizesPercent", true)) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativeCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativeNumber", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternNegativePercent", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternPositiveCurrency", true))) ), ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(o2, "patternPositivePercent", true))) ), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalNumber", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorDecimalPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupNumber", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "separatorGroupPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "signNegative", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "signPositive", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolCurrency", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolNaN", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolNegativeInfinity", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPercent", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPermille", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o2, "symbolPositiveInfinity", true)));
		}
		
		//line 82 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return new thx.culture.Culture(haxe.lang.Runtime.toString(tmp), tmp1, haxe.lang.Runtime.toString(tmp2), haxe.lang.Runtime.toBool(tmp3), haxe.lang.Runtime.toString(tmp4), haxe.lang.Runtime.toString(tmp5), haxe.lang.Runtime.toBool(tmp6), ((int) (haxe.lang.Runtime.toInt(tmp7)) ), haxe.lang.Runtime.toString(tmp8), haxe.lang.Runtime.toString(tmp9), haxe.lang.Runtime.toString(tmp10), haxe.lang.Runtime.toString(tmp11), haxe.lang.Runtime.toString(tmp12), tmp13, haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o, "separatorList", true)), haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(o, "win3", true)));
	}
	
	
	public static haxe.ds.StringMap<thx.culture.Culture> cultures;
	
	public static haxe.root.Array<thx.culture.Culture> list;
	
	public static thx.culture.Culture register(thx.culture.Culture culture)
	{
		//line 113 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.String code = ( "C:" + culture.code.toLowerCase() );
		//line 114 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		if (thx.culture.Culture.cultures.exists(code)) 
		{
			//line 115 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			return ((thx.culture.Culture) (thx.culture.Culture.cultures.get(code)) );
		}
		
		//line 117 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.list.push(culture);
		//line 118 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.cultures.set(code, culture);
		//line 119 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.cultures.set(( "I2:" + culture.iso2.toLowerCase() ), culture);
		//line 120 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		thx.culture.Culture.cultures.set(( "I3:" + culture.iso3.toLowerCase() ), culture);
		//line 121 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return culture;
	}
	
	
	public static thx.culture.Culture getByCode(java.lang.String code)
	{
		//line 125 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ((thx.culture.Culture) (thx.culture.Culture.cultures.get(( "C:" + code.toLowerCase() ))) );
	}
	
	
	public static thx.culture.Culture getByIso2(java.lang.String iso2)
	{
		//line 127 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ((thx.culture.Culture) (thx.culture.Culture.cultures.get(( "I2:" + iso2.toLowerCase() ))) );
	}
	
	
	public static thx.culture.Culture getByIso3(java.lang.String iso3)
	{
		//line 129 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ((thx.culture.Culture) (thx.culture.Culture.cultures.get(( "I3:" + iso3.toLowerCase() ))) );
	}
	
	
	public static java.lang.Object iterator()
	{
		//line 131 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ((java.lang.Object) (new _Array.ArrayIterator<thx.culture.Culture>(((haxe.root.Array<thx.culture.Culture>) (thx.culture.Culture.list) ))) );
	}
	
	
	public static java.lang.String getCodeKey(java.lang.String key)
	{
		//line 134 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( "C:" + key.toLowerCase() );
	}
	
	
	public static java.lang.String getIso2Key(java.lang.String key)
	{
		//line 136 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( "I2:" + key.toLowerCase() );
	}
	
	
	public static java.lang.String getIso3Key(java.lang.String key)
	{
		//line 138 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( "I3:" + key.toLowerCase() );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return new thx.culture.Culture(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return new thx.culture.Culture(haxe.lang.Runtime.toString(arr.__get(0)), ((thx.culture.DateFormatInfo) (arr.__get(1)) ), haxe.lang.Runtime.toString(arr.__get(2)), haxe.lang.Runtime.toBool(arr.__get(3)), haxe.lang.Runtime.toString(arr.__get(4)), haxe.lang.Runtime.toString(arr.__get(5)), haxe.lang.Runtime.toBool(arr.__get(6)), ((int) (haxe.lang.Runtime.toInt(arr.__get(7))) ), haxe.lang.Runtime.toString(arr.__get(8)), haxe.lang.Runtime.toString(arr.__get(9)), haxe.lang.Runtime.toString(arr.__get(10)), haxe.lang.Runtime.toString(arr.__get(11)), haxe.lang.Runtime.toString(arr.__get(12)), ((thx.culture.NumberFormatInfo) (arr.__get(13)) ), haxe.lang.Runtime.toString(arr.__get(14)), haxe.lang.Runtime.toString(arr.__get(15)));
	}
	
	
	public java.lang.String code;
	
	public thx.culture.DateFormatInfo dateTime;
	
	public java.lang.String ietf;
	
	public boolean isNeutral;
	
	public java.lang.String iso2;
	
	public java.lang.String iso3;
	
	public boolean isRightToLeft;
	
	public int lcid;
	
	public java.lang.String nameCalendar;
	
	public java.lang.String nameDisplayEnglish;
	
	public java.lang.String nameDisplayNative;
	
	public java.lang.String nameEnglish;
	
	public java.lang.String nameNative;
	
	public java.lang.String nameRegionEnglish;
	
	public java.lang.String nameRegionNative;
	
	public thx.culture.NumberFormatInfo number;
	
	public java.lang.String separatorList;
	
	public java.lang.String win3;
	
	public java.lang.Object toObject()
	{
		//line 64 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp = ( (( null == this.dateTime )) ? (null) : (this.dateTime.toObject()) );
		//line 76 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		java.lang.Object tmp1 = ( (( null == this.number )) ? (null) : (this.number.toObject()) );
		//line 62 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return new haxe.lang.DynamicObject(new java.lang.String[]{"code", "dateTime", "ietf", "isNeutral", "isRightToLeft", "iso2", "iso3", "nameCalendar", "nameEnglish", "nameNative", "nameRegionEnglish", "nameRegionNative", "number", "separatorList", "win3"}, new java.lang.Object[]{this.code, tmp, this.ietf, this.isNeutral, this.isRightToLeft, this.iso2, this.iso3, this.nameCalendar, this.nameEnglish, this.nameNative, this.nameRegionEnglish, this.nameRegionNative, tmp1, this.separatorList, this.win3}, new java.lang.String[]{"lcid"}, new double[]{((double) (((double) (this.lcid) )) )});
	}
	
	
	public final java.lang.String get_nameDisplayEnglish()
	{
		//line 102 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( this.nameEnglish + (( (( null == this.nameRegionEnglish )) ? ("") : (( ( " (" + this.nameRegionEnglish ) + ")" )) )) );
	}
	
	
	public final java.lang.String get_nameDisplayNative()
	{
		//line 105 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( this.nameNative + (( (( null == this.nameRegionNative )) ? ("") : (( ( " (" + this.nameRegionNative ) + ")" )) )) );
	}
	
	
	@Override public java.lang.String toString()
	{
		//line 108 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		return ( this.nameEnglish + (( (( null == this.nameRegionEnglish )) ? ("") : (( ( " (" + this.nameRegionEnglish ) + ")" )) )) );
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			switch (field.hashCode())
			{
				case 3315922:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("lcid")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.lcid = ((int) (value) );
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
			}
			
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			switch (field.hashCode())
			{
				case 3649495:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("win3")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.win3 = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3059181:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("code")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.code = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 13045027:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("separatorList")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.separatorList = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1792749467:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("dateTime")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.dateTime = ((thx.culture.DateFormatInfo) (value) );
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1034364087:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("number")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.number = ((thx.culture.NumberFormatInfo) (value) );
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3228814:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("ietf")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.ietf = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -588795306:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameRegionNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameRegionNative = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1264543037:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("isNeutral")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.isNeutral = haxe.lang.Runtime.toBool(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -110133231:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameRegionEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameRegionEnglish = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3242061:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("iso2")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.iso2 = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -908500350:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameNative = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3242062:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("iso3")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.iso3 = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1431055003:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameEnglish = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1797737772:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("isRightToLeft")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.isRightToLeft = haxe.lang.Runtime.toBool(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 979479214:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameDisplayNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameDisplayNative = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3315922:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("lcid")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.lcid = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1261736633:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameDisplayEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameDisplayEnglish = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 880484073:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameCalendar")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						this.nameCalendar = haxe.lang.Runtime.toString(value);
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return value;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
			}
			
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			switch (field.hashCode())
			{
				case -1776922004:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("toString")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3059181:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("code")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.code;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -769836539:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("get_nameDisplayNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_nameDisplayNative")) );
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1792749467:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("dateTime")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.dateTime;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1427444158:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("get_nameDisplayEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get_nameDisplayEnglish")) );
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3228814:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("ietf")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.ietf;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1908304486:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("toObject")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toObject")) );
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1264543037:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("isNeutral")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.isNeutral;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3649495:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("win3")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.win3;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3242061:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("iso2")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.iso2;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 13045027:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("separatorList")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.separatorList;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3242062:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("iso3")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.iso3;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1034364087:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("number")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.number;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1797737772:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("isRightToLeft")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.isRightToLeft;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -588795306:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameRegionNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.nameRegionNative;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 3315922:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("lcid")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.lcid;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -110133231:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameRegionEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.nameRegionEnglish;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 880484073:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameCalendar")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.nameCalendar;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -908500350:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.nameNative;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 1261736633:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameDisplayEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						if (handleProperties) 
						{
							//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
							return this.get_nameDisplayEnglish();
						}
						else
						{
							//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
							return this.nameDisplayEnglish;
						}
						
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1431055003:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.nameEnglish;
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case 979479214:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("nameDisplayNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						if (handleProperties) 
						{
							//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
							return this.get_nameDisplayNative();
						}
						else
						{
							//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
							return this.nameDisplayNative;
						}
						
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
			}
			
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			switch (field.hashCode())
			{
				case 3315922:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("lcid")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return ((double) (this.lcid) );
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
			}
			
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			switch (field.hashCode())
			{
				case -1776922004:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("toString")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.toString();
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1908304486:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("toObject")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.toObject();
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -769836539:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("get_nameDisplayNative")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.get_nameDisplayNative();
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
				case -1427444158:
				{
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					if (field.equals("get_nameDisplayEnglish")) 
					{
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						__temp_executeDef1 = false;
						//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
						return this.get_nameDisplayEnglish();
					}
					
					//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
					break;
				}
				
				
			}
			
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("win3");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("separatorList");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("number");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameRegionNative");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameRegionEnglish");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameNative");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameEnglish");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameDisplayNative");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameDisplayEnglish");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("nameCalendar");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("lcid");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("isRightToLeft");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("iso3");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("iso2");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("isNeutral");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("ietf");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("dateTime");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		baseArr.push("code");
		//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
		{
			//line 3 "/usr/lib/haxe/lib/thx,culture/0,5,0/src/thx/culture/Culture.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


