// Generated by Haxe 3.3.0
package thx.bigint;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public interface BigIntImpl extends haxe.lang.IHxObject
{
	thx.bigint.BigIntImpl abs();
	
	thx.bigint.BigIntImpl add(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl subtract(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl divide(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl multiply(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl modulo(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl random();
	
	thx.bigint.BigIntImpl negate();
	
	thx.bigint.BigIntImpl next();
	
	thx.bigint.BigIntImpl prev();
	
	thx.bigint.BigIntImpl pow(thx.bigint.BigIntImpl exp);
	
	thx.bigint.BigIntImpl shiftLeft(int value);
	
	thx.bigint.BigIntImpl shiftRight(int value);
	
	thx.bigint.BigIntImpl square();
	
	boolean isEven();
	
	boolean isOdd();
	
	boolean isUnit();
	
	boolean isZero();
	
	int compareTo(thx.bigint.BigIntImpl that);
	
	int compareToAbs(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl not();
	
	thx.bigint.BigIntImpl and(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl or(thx.bigint.BigIntImpl that);
	
	thx.bigint.BigIntImpl xor(thx.bigint.BigIntImpl that);
	
	double toFloat();
	
	int toInt();
	
	java.lang.String toString();
	
	java.lang.String toStringWithBase(int base);
	
	java.lang.Object divMod(thx.bigint.BigIntImpl that);
	
}


