// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_Either
#include <thx/Either.h>
#endif
#ifndef INCLUDED_thx_Eithers
#include <thx/Eithers.h>
#endif
#ifndef INCLUDED_thx_NonEmptyList
#include <thx/NonEmptyList.h>
#endif
#ifndef INCLUDED_thx_ValidationExtensions
#include <thx/ValidationExtensions.h>
#endif
#ifndef INCLUDED_thx__Nel_Nel_Impl_
#include <thx/_Nel/Nel_Impl_.h>
#endif

namespace thx{

void ValidationExtensions_obj::__construct() { }

Dynamic ValidationExtensions_obj::__CreateEmpty() { return new ValidationExtensions_obj; }

hx::ObjectPtr< ValidationExtensions_obj > ValidationExtensions_obj::__new()
{
	hx::ObjectPtr< ValidationExtensions_obj > _hx_result = new ValidationExtensions_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic ValidationExtensions_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ValidationExtensions_obj > _hx_result = new ValidationExtensions_obj();
	_hx_result->__construct();
	return _hx_result;
}

::hx::EnumBase ValidationExtensions_obj::leftMapNel(::hx::EnumBase n, ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f) HXARGC(1)
            		::hx::EnumBase _hx_run(::hx::EnumBase n1){
            			HX_STACK_FRAME("thx.ValidationExtensions","leftMapNel",0x8404af97,"thx.ValidationExtensions.leftMapNel","thx/Validation.hx",141,0x82543dfa)
            			HX_STACK_ARG(n1,"n1")
HXLINE( 141)			return ::thx::_Nel::Nel_Impl__obj::map(n1,f);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.ValidationExtensions","leftMapNel",0x8404af97,"thx.ValidationExtensions.leftMapNel","thx/Validation.hx",141,0x82543dfa)
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(f,"f")
HXLINE( 141)		return ::thx::Eithers_obj::leftMap(n, ::Dynamic(new _hx_Closure_0(f)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ValidationExtensions_obj,leftMapNel,return )

::hx::EnumBase ValidationExtensions_obj::ensureNel(::hx::EnumBase v, ::Dynamic p, ::Dynamic error){
            	HX_STACK_FRAME("thx.ValidationExtensions","ensureNel",0x1b43c000,"thx.ValidationExtensions.ensureNel","thx/Validation.hx",144,0x82543dfa)
            	HX_STACK_ARG(v,"v")
            	HX_STACK_ARG(p,"p")
            	HX_STACK_ARG(error,"error")
HXLINE( 144)		Int _hx_tmp = ( ( ::hx::EnumBase)(v) )->_hx_getIndex();
HXDLIN( 144)		if ((_hx_tmp == (int)1)) {
HXLINE( 145)			HX_VARI(  ::Dynamic,a) = v->_hx_getObject(0);
HXDLIN( 145)			Bool _hx_tmp1 = ( (Bool)(p(a)) );
HXDLIN( 145)			if (_hx_tmp1) {
HXLINE( 144)				return v;
            			}
            			else {
HXLINE( 145)				::hx::EnumBase _hx_tmp2 = ::thx::_Nel::Nel_Impl__obj::pure(error);
HXLINE( 144)				return ::thx::Either_obj::Left(_hx_tmp2);
            			}
            		}
            		else {
HXLINE( 144)			return v;
            		}
HXDLIN( 144)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ValidationExtensions_obj,ensureNel,return )


ValidationExtensions_obj::ValidationExtensions_obj()
{
}

bool ValidationExtensions_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"ensureNel") ) { outValue = ensureNel_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"leftMapNel") ) { outValue = leftMapNel_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ValidationExtensions_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ValidationExtensions_obj_sStaticStorageInfo = 0;
#endif

static void ValidationExtensions_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ValidationExtensions_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ValidationExtensions_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ValidationExtensions_obj::__mClass,"__mClass");
};

#endif

hx::Class ValidationExtensions_obj::__mClass;

static ::String ValidationExtensions_obj_sStaticFields[] = {
	HX_HCSTRING("leftMapNel","\x80","\xc2","\x18","\xe8"),
	HX_HCSTRING("ensureNel","\x37","\x3d","\x7d","\x29"),
	::String(null())
};

void ValidationExtensions_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.ValidationExtensions","\xf7","\x3d","\xfd","\x4f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ValidationExtensions_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ValidationExtensions_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ValidationExtensions_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ValidationExtensions_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ValidationExtensions_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ValidationExtensions_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ValidationExtensions_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
