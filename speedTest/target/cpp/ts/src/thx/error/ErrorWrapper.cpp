// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_error_ErrorWrapper
#include <thx/error/ErrorWrapper.h>
#endif

namespace thx{
namespace error{

void ErrorWrapper_obj::__construct(::String message, ::Dynamic innerError,::Array< ::Dynamic> stack, ::Dynamic pos){
            	HX_STACK_FRAME("thx.error.ErrorWrapper","new",0x3f4bbb0d,"thx.error.ErrorWrapper.new","thx/error/ErrorWrapper.hx",13,0x2e379881)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(innerError,"innerError")
            	HX_STACK_ARG(stack,"stack")
            	HX_STACK_ARG(pos,"pos")
HXLINE(  14)		super::__construct(message,stack,pos);
HXLINE(  16)		this->innerError = innerError;
            	}

Dynamic ErrorWrapper_obj::__CreateEmpty() { return new ErrorWrapper_obj; }

hx::ObjectPtr< ErrorWrapper_obj > ErrorWrapper_obj::__new(::String message, ::Dynamic innerError,::Array< ::Dynamic> stack, ::Dynamic pos)
{
	hx::ObjectPtr< ErrorWrapper_obj > _hx_result = new ErrorWrapper_obj();
	_hx_result->__construct(message,innerError,stack,pos);
	return _hx_result;
}

Dynamic ErrorWrapper_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ErrorWrapper_obj > _hx_result = new ErrorWrapper_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}


ErrorWrapper_obj::ErrorWrapper_obj()
{
}

void ErrorWrapper_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ErrorWrapper);
	HX_MARK_MEMBER_NAME(innerError,"innerError");
	 ::thx::Error_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ErrorWrapper_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(innerError,"innerError");
	 ::thx::Error_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ErrorWrapper_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"innerError") ) { return hx::Val( innerError); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ErrorWrapper_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"innerError") ) { innerError=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ErrorWrapper_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("innerError","\x52","\x8a","\xf1","\x18"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ErrorWrapper_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ErrorWrapper_obj,innerError),HX_HCSTRING("innerError","\x52","\x8a","\xf1","\x18")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ErrorWrapper_obj_sStaticStorageInfo = 0;
#endif

static ::String ErrorWrapper_obj_sMemberFields[] = {
	HX_HCSTRING("innerError","\x52","\x8a","\xf1","\x18"),
	::String(null()) };

static void ErrorWrapper_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ErrorWrapper_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ErrorWrapper_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ErrorWrapper_obj::__mClass,"__mClass");
};

#endif

hx::Class ErrorWrapper_obj::__mClass;

void ErrorWrapper_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.error.ErrorWrapper","\x9b","\x30","\x9c","\xa7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ErrorWrapper_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ErrorWrapper_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ErrorWrapper_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ErrorWrapper_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ErrorWrapper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ErrorWrapper_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace error
