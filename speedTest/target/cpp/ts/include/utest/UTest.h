// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_UTest
#define INCLUDED_utest_UTest

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(utest,UTest)

namespace utest{


class HXCPP_CLASS_ATTRIBUTES UTest_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef UTest_obj OBJ_;
		UTest_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="utest.UTest")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"utest.UTest"); }
		static hx::ObjectPtr< UTest_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~UTest_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("UTest","\x47","\x43","\xe2","\x28"); }

		static void run(::Array< ::Dynamic> cases, ::Dynamic callback);
		static ::Dynamic run_dyn();

};

} // end namespace utest

#endif /* INCLUDED_utest_UTest */ 
