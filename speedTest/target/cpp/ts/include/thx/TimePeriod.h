// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_TimePeriod
#define INCLUDED_thx_TimePeriod

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,TimePeriod)
namespace thx{


class TimePeriod_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef TimePeriod_obj OBJ_;

	public:
		TimePeriod_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("thx.TimePeriod","\xb8","\x18","\x05","\x56"); }
		::String __ToString() const { return HX_HCSTRING("TimePeriod.","\x60","\xbf","\x61","\xd3") + _hx_tag; }

		static ::thx::TimePeriod Day;
		static inline ::thx::TimePeriod Day_dyn() { return Day; }
		static ::thx::TimePeriod Hour;
		static inline ::thx::TimePeriod Hour_dyn() { return Hour; }
		static ::thx::TimePeriod Minute;
		static inline ::thx::TimePeriod Minute_dyn() { return Minute; }
		static ::thx::TimePeriod Month;
		static inline ::thx::TimePeriod Month_dyn() { return Month; }
		static ::thx::TimePeriod Second;
		static inline ::thx::TimePeriod Second_dyn() { return Second; }
		static ::thx::TimePeriod Week;
		static inline ::thx::TimePeriod Week_dyn() { return Week; }
		static ::thx::TimePeriod Year;
		static inline ::thx::TimePeriod Year_dyn() { return Year; }
};

} // end namespace thx

#endif /* INCLUDED_thx_TimePeriod */ 
