// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_csv_core_Parser
#define INCLUDED_thx_csv_core_Parser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(StringBuf)
HX_DECLARE_CLASS3(thx,csv,core,Parser)

namespace thx{
namespace csv{
namespace core{


class HXCPP_CLASS_ATTRIBUTES Parser_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Parser_obj OBJ_;
		Parser_obj();

	public:
		void __construct(::String delimiter,::String quote,::String escapedQuote);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="thx.csv.core.Parser")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"thx.csv.core.Parser"); }
		static hx::ObjectPtr< Parser_obj > __new(::String delimiter,::String quote,::String escapedQuote);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Parser_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Parser","\xff","\x10","\x1d","\x22"); }

		::String delimiter;
		::String quote;
		::String escapedQuote;
		::Array< ::Dynamic> result;
		Int pos;
		Int len;
		Int delimiterLength;
		Int quoteLength;
		Int escapedQuoteLength;
		 ::StringBuf buffer;
		::Array< ::String > row;
		::String s;
		::Array< ::Dynamic> parse(::String s);
		::Dynamic parse_dyn();

		void pushCell();
		::Dynamic pushCell_dyn();

		void pushBuffer(::String _hx_char);
		::Dynamic pushBuffer_dyn();

		void pushRow();
		::Dynamic pushRow_dyn();

		void loop();
		::Dynamic loop_dyn();

};

} // end namespace thx
} // end namespace csv
} // end namespace core

#endif /* INCLUDED_thx_csv_core_Parser */ 
