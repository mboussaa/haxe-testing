// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Bools
#define INCLUDED_thx_Bools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,ds,Option)
HX_DECLARE_CLASS1(thx,Bools)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Bools_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Bools_obj OBJ_;
		Bools_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Bools")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Bools"); }
		static hx::ObjectPtr< Bools_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Bools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Bools","\xe9","\x90","\x25","\x4a"); }

		static Int compare(Bool a,Bool b);
		static ::Dynamic compare_dyn();

		static Int toInt(Bool v);
		static ::Dynamic toInt_dyn();

		static Bool canParse(::String v);
		static ::Dynamic canParse_dyn();

		static Bool parse(::String v);
		static ::Dynamic parse_dyn();

		static Bool _hx_xor(Bool a,Bool b);
		static ::Dynamic _hx_xor_dyn();

		static ::hx::EnumBase option(Bool cond, ::Dynamic a);
		static ::Dynamic option_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Bools */ 
