// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Maps
#define INCLUDED_thx_Maps

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,Option)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(thx,Maps)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Maps_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Maps_obj OBJ_;
		Maps_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Maps")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Maps"); }
		static hx::ObjectPtr< Maps_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Maps_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Maps","\x77","\x6a","\x2f","\x33"); }

		static ::Dynamic copyTo(::Dynamic src,::Dynamic dst);
		static ::Dynamic copyTo_dyn();

		static ::Array< ::Dynamic> tuples(::Dynamic map);
		static ::Dynamic tuples_dyn();

		static ::Dynamic mapValues(::Dynamic map, ::Dynamic f,::Dynamic acc);
		static ::Dynamic mapValues_dyn();

		static  ::Dynamic reduce(::Dynamic map, ::Dynamic f, ::Dynamic acc);
		static ::Dynamic reduce_dyn();

		static ::cpp::VirtualArray values(::Dynamic map);
		static ::Dynamic values_dyn();

		static ::hx::EnumBase getOption(::Dynamic map, ::Dynamic key);
		static ::Dynamic getOption_dyn();

		static  ::Dynamic toObject( ::haxe::ds::StringMap map);
		static ::Dynamic toObject_dyn();

		static  ::Dynamic getAlt(::Dynamic map, ::Dynamic key, ::Dynamic alt);
		static ::Dynamic getAlt_dyn();

		static Bool isMap( ::Dynamic v);
		static ::Dynamic isMap_dyn();

		static ::String string(::Dynamic m);
		static ::Dynamic string_dyn();

		static ::Dynamic merge(::Dynamic dest,::Array< ::Dynamic> sources);
		static ::Dynamic merge_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Maps */ 
