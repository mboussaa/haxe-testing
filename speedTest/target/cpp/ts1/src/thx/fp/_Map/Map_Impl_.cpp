// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_thx_Error
#include <thx/Error.h>
#endif
#ifndef INCLUDED_thx_OrderingImpl
#include <thx/OrderingImpl.h>
#endif
#ifndef INCLUDED_thx_fp_MapImpl
#include <thx/fp/MapImpl.h>
#endif
#ifndef INCLUDED_thx_fp__Map_Map_Impl_
#include <thx/fp/_Map/Map_Impl_.h>
#endif

namespace thx{
namespace fp{
namespace _Map{

void Map_Impl__obj::__construct() { }

Dynamic Map_Impl__obj::__CreateEmpty() { return new Map_Impl__obj; }

hx::ObjectPtr< Map_Impl__obj > Map_Impl__obj::__new()
{
	hx::ObjectPtr< Map_Impl__obj > _hx_result = new Map_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Map_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Map_Impl__obj > _hx_result = new Map_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::hx::EnumBase Map_Impl__obj::empty(){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","empty",0xd844cd84,"thx.fp._Map.Map_Impl_.empty","thx/fp/Map.hx",13,0xa922769c)
HXLINE(  13)		return ::thx::fp::MapImpl_obj::Tip_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Map_Impl__obj,empty,return )

::hx::EnumBase Map_Impl__obj::singleton( ::Dynamic k, ::Dynamic v){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","singleton",0x55949f82,"thx.fp._Map.Map_Impl_.singleton","thx/fp/Map.hx",15,0xa922769c)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
HXLINE(  15)		return ::thx::fp::MapImpl_obj::Bin((int)1,k,v,::thx::fp::MapImpl_obj::Tip_dyn(),::thx::fp::MapImpl_obj::Tip_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,singleton,return )

::hx::EnumBase Map_Impl__obj::bin( ::Dynamic k, ::Dynamic v,::hx::EnumBase lhs,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","bin",0x19d7cffe,"thx.fp._Map.Map_Impl_.bin","thx/fp/Map.hx",17,0xa922769c)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(v,"v")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE(  17)		Int _hx_tmp = ::thx::fp::_Map::Map_Impl__obj::size(lhs);
HXDLIN(  17)		Int _hx_tmp1 = ::thx::fp::_Map::Map_Impl__obj::size(rhs);
HXDLIN(  17)		return ::thx::fp::MapImpl_obj::Bin(((_hx_tmp + _hx_tmp1) + (int)1),k,v,lhs,rhs);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,bin,return )

::hx::EnumBase Map_Impl__obj::fromNative(::Dynamic map, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","fromNative",0x198b1c4a,"thx.fp._Map.Map_Impl_.fromNative","thx/fp/Map.hx",19,0xa922769c)
            	HX_STACK_ARG(map,"map")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  20)		HX_VARI( ::hx::EnumBase,r) = ::thx::fp::MapImpl_obj::Tip_dyn();
HXLINE(  21)		{
HXLINE(  21)			HX_VARI(  ::Dynamic,tmp) = ::haxe::IMap_obj::keys(map);
HXDLIN(  21)			while(true){
HXLINE(  21)				Bool _hx_tmp = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN(  21)				if (_hx_tmp) {
HXLINE(  21)					goto _hx_goto_0;
            				}
HXDLIN(  21)				HX_VARI(  ::Dynamic,key) =  ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE(  22)				 ::Dynamic _hx_tmp1 = ::haxe::IMap_obj::get(map,key);
HXDLIN(  22)				r = ::thx::fp::_Map::Map_Impl__obj::insert(r,key,_hx_tmp1,comparator);
            			}
            			_hx_goto_0:;
            		}
HXLINE(  23)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,fromNative,return )

::hx::EnumBase Map_Impl__obj::lookup(::hx::EnumBase this1, ::Dynamic key, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","lookup",0x568ba7a3,"thx.fp._Map.Map_Impl_.lookup","thx/fp/Map.hx",27,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  27)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  27)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  29)				return ::haxe::ds::Option_obj::None_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  30)				HX_VARI( ::hx::EnumBase,rhs) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  30)				HX_VARI( ::hx::EnumBase,lhs) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  30)				HX_VARI(  ::Dynamic,xvalue) = this1->_hx_getObject(2);
HXLINE(  31)				HX_VARI( ::hx::EnumBase,c) = comparator(key,this1->_hx_getObject(1));
HXLINE(  32)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(c) )->_hx_getIndex();
HXDLIN(  32)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  34)						return ::thx::fp::_Map::Map_Impl__obj::lookup(lhs,key,comparator);
            					}
            					break;
            					case (int)1: {
HXLINE(  36)						return ::thx::fp::_Map::Map_Impl__obj::lookup(rhs,key,comparator);
            					}
            					break;
            					case (int)2: {
HXLINE(  38)						return ::haxe::ds::Option_obj::Some(xvalue);
            					}
            					break;
            				}
            			}
            			break;
            		}
HXLINE(  27)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,lookup,return )

::hx::EnumBase Map_Impl__obj::lookupTuple(::hx::EnumBase this1, ::Dynamic key, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","lookupTuple",0x8256d565,"thx.fp._Map.Map_Impl_.lookupTuple","thx/fp/Map.hx",43,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  43)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  43)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  45)				return ::haxe::ds::Option_obj::None_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  46)				HX_VARI( ::hx::EnumBase,rhs) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  46)				HX_VARI( ::hx::EnumBase,lhs) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  46)				HX_VARI(  ::Dynamic,xvalue) = this1->_hx_getObject(2);
HXDLIN(  46)				HX_VARI(  ::Dynamic,xkey) = this1->_hx_getObject(1);
HXLINE(  47)				HX_VARI( ::hx::EnumBase,c) = comparator(key,xkey);
HXLINE(  48)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(c) )->_hx_getIndex();
HXDLIN(  48)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  50)						return ::thx::fp::_Map::Map_Impl__obj::lookupTuple(lhs,key,comparator);
            					}
            					break;
            					case (int)1: {
HXLINE(  52)						return ::thx::fp::_Map::Map_Impl__obj::lookupTuple(rhs,key,comparator);
            					}
            					break;
            					case (int)2: {
HXLINE(  54)						return ::haxe::ds::Option_obj::Some( ::Dynamic(hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("_0",f1,52,00,00),xkey)
            							->setFixed(1,HX_("_1",f2,52,00,00),xvalue)));
            					}
            					break;
            				}
            			}
            			break;
            		}
HXLINE(  43)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,lookupTuple,return )

::hx::EnumBase Map_Impl__obj::_hx_delete(::hx::EnumBase this1, ::Dynamic key, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","delete",0x5faec554,"thx.fp._Map.Map_Impl_.delete","thx/fp/Map.hx",58,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  58)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  58)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  58)				return ::thx::fp::MapImpl_obj::Tip_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  61)				HX_VARI( ::hx::EnumBase,rhs) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  61)				HX_VARI( ::hx::EnumBase,lhs) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  61)				HX_VARI(  ::Dynamic,x) = this1->_hx_getObject(2);
HXDLIN(  61)				HX_VARI(  ::Dynamic,kx) = this1->_hx_getObject(1);
HXLINE(  62)				HX_VARI( ::hx::EnumBase,_g) = comparator(key,kx);
HXDLIN(  62)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN(  62)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  63)						::hx::EnumBase _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::_hx_delete(lhs,key,comparator);
HXLINE(  58)						return ::thx::fp::_Map::Map_Impl__obj::balance(kx,x,_hx_tmp2,rhs);
            					}
            					break;
            					case (int)1: {
HXLINE(  64)						::hx::EnumBase _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::_hx_delete(rhs,key,comparator);
HXLINE(  58)						return ::thx::fp::_Map::Map_Impl__obj::balance(kx,x,lhs,_hx_tmp3);
            					}
            					break;
            					case (int)2: {
HXLINE(  58)						return ::thx::fp::_Map::Map_Impl__obj::glue(lhs,rhs);
            					}
            					break;
            				}
            			}
            			break;
            		}
HXDLIN(  58)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,_hx_delete,return )

::hx::EnumBase Map_Impl__obj::insert(::hx::EnumBase this1, ::Dynamic kx, ::Dynamic x, ::Dynamic comparator){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","insert",0x92b34862,"thx.fp._Map.Map_Impl_.insert","thx/fp/Map.hx",69,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(kx,"kx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(comparator,"comparator")
HXLINE(  69)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  69)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  69)				return ::thx::fp::MapImpl_obj::Bin((int)1,kx,x,::thx::fp::MapImpl_obj::Tip_dyn(),::thx::fp::MapImpl_obj::Tip_dyn());
            			}
            			break;
            			case (int)1: {
HXLINE(  72)				HX_VARI( ::hx::EnumBase,rhs) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  72)				HX_VARI( ::hx::EnumBase,lhs) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  72)				HX_VARI(  ::Dynamic,y) = this1->_hx_getObject(2);
HXDLIN(  72)				HX_VARI(  ::Dynamic,ky) = this1->_hx_getObject(1);
HXDLIN(  72)				HX_VARI( Int,sz) = this1->_hx_getInt(0);
HXLINE(  73)				HX_VARI( ::hx::EnumBase,_g) = comparator(kx,ky);
HXDLIN(  73)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN(  73)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  74)						::hx::EnumBase _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::insert(lhs,kx,x,comparator);
HXLINE(  69)						return ::thx::fp::_Map::Map_Impl__obj::balance(ky,y,_hx_tmp2,rhs);
            					}
            					break;
            					case (int)1: {
HXLINE(  75)						::hx::EnumBase _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::insert(rhs,kx,x,comparator);
HXLINE(  69)						return ::thx::fp::_Map::Map_Impl__obj::balance(ky,y,lhs,_hx_tmp3);
            					}
            					break;
            					case (int)2: {
HXLINE(  69)						return ::thx::fp::MapImpl_obj::Bin(sz,kx,x,lhs,rhs);
            					}
            					break;
            				}
            			}
            			break;
            		}
HXDLIN(  69)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,insert,return )

 ::Dynamic Map_Impl__obj::foldLeft(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","foldLeft",0x214e8611,"thx.fp._Map.Map_Impl_.foldLeft","thx/fp/Map.hx",81,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE(  81)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  81)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  81)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE(  84)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  84)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE(  85)				 ::Dynamic _hx_tmp1 = f(b,this1->_hx_getObject(2));
HXDLIN(  85)				 ::Dynamic _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::foldLeft(l,_hx_tmp1,f);
HXLINE(  81)				return ::thx::fp::_Map::Map_Impl__obj::foldLeft(r,_hx_tmp2,f);
            			}
            			break;
            		}
HXDLIN(  81)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,foldLeft,return )

::hx::EnumBase Map_Impl__obj::map(::hx::EnumBase this1, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","map",0x19e021d3,"thx.fp._Map.Map_Impl_.map","thx/fp/Map.hx",88,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE(  88)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  88)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  88)				return ::thx::fp::MapImpl_obj::Tip_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  90)				HX_VARI( ::hx::EnumBase,rhs) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN(  90)				HX_VARI( ::hx::EnumBase,lhs) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN(  90)				HX_VARI(  ::Dynamic,y) = this1->_hx_getObject(2);
HXDLIN(  90)				HX_VARI(  ::Dynamic,ky) = this1->_hx_getObject(1);
HXDLIN(  90)				HX_VARI( Int,sz) = this1->_hx_getInt(0);
HXDLIN(  90)				 ::Dynamic _hx_tmp1 = f(y);
HXDLIN(  90)				::hx::EnumBase _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::map(lhs,f);
HXDLIN(  90)				::hx::EnumBase _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::map(rhs,f);
HXLINE(  88)				return ::thx::fp::MapImpl_obj::Bin(sz,ky,_hx_tmp1,_hx_tmp2,_hx_tmp3);
            			}
            			break;
            		}
HXDLIN(  88)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,map,return )

::cpp::VirtualArray Map_Impl__obj::values(::hx::EnumBase this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		::cpp::VirtualArray _hx_run(::cpp::VirtualArray acc, ::Dynamic v){
            			HX_STACK_FRAME("thx.fp._Map.Map_Impl_","values",0x448d090b,"thx.fp._Map.Map_Impl_.values","thx/fp/Map.hx",94,0xa922769c)
            			HX_STACK_ARG(acc,"acc")
            			HX_STACK_ARG(v,"v")
HXLINE(  94)			acc->push(v);
HXDLIN(  94)			return acc;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","values",0x448d090b,"thx.fp._Map.Map_Impl_.values","thx/fp/Map.hx",94,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  94)		return ( (::cpp::VirtualArray)(::thx::fp::_Map::Map_Impl__obj::foldLeft(this1,::cpp::VirtualArray_obj::__new(0), ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,values,return )

 ::Dynamic Map_Impl__obj::foldLeftKeys(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","foldLeftKeys",0x8db970a5,"thx.fp._Map.Map_Impl_.foldLeftKeys","thx/fp/Map.hx",97,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE(  97)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN(  97)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE(  97)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE( 100)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 100)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE( 101)				 ::Dynamic _hx_tmp1 = f(b,this1->_hx_getObject(1));
HXDLIN( 101)				 ::Dynamic _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::foldLeftKeys(l,_hx_tmp1,f);
HXLINE(  97)				return ::thx::fp::_Map::Map_Impl__obj::foldLeftKeys(r,_hx_tmp2,f);
            			}
            			break;
            		}
HXDLIN(  97)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,foldLeftKeys,return )

 ::Dynamic Map_Impl__obj::foldLeftAll(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","foldLeftAll",0xc1778b90,"thx.fp._Map.Map_Impl_.foldLeftAll","thx/fp/Map.hx",105,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE( 105)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN( 105)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 105)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE( 108)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 108)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE( 109)				 ::Dynamic _hx_tmp1 = f(b,this1->_hx_getObject(1),this1->_hx_getObject(2));
HXDLIN( 109)				 ::Dynamic _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::foldLeftAll(l,_hx_tmp1,f);
HXLINE( 105)				return ::thx::fp::_Map::Map_Impl__obj::foldLeftAll(r,_hx_tmp2,f);
            			}
            			break;
            		}
HXDLIN( 105)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,foldLeftAll,return )

 ::Dynamic Map_Impl__obj::foldLeftTuples(::hx::EnumBase this1, ::Dynamic b, ::Dynamic f){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","foldLeftTuples",0x4d1a485c,"thx.fp._Map.Map_Impl_.foldLeftTuples","thx/fp/Map.hx",113,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(f,"f")
HXLINE( 113)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN( 113)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 113)				return b;
            			}
            			break;
            			case (int)1: {
HXLINE( 116)				HX_VARI( ::hx::EnumBase,r) = this1->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 116)				HX_VARI( ::hx::EnumBase,l) = this1->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE( 117)				 ::Dynamic _hx_tmp1 = f(b, ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("_0",f1,52,00,00),this1->_hx_getObject(1))
            					->setFixed(1,HX_("_1",f2,52,00,00),this1->_hx_getObject(2))));
HXDLIN( 117)				 ::Dynamic _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::foldLeftTuples(l,_hx_tmp1,f);
HXLINE( 113)				return ::thx::fp::_Map::Map_Impl__obj::foldLeftTuples(r,_hx_tmp2,f);
            			}
            			break;
            		}
HXDLIN( 113)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Map_Impl__obj,foldLeftTuples,return )

Int Map_Impl__obj::size(::hx::EnumBase this1){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","size",0x8e3ad9aa,"thx.fp._Map.Map_Impl_.size","thx/fp/Map.hx",121,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 121)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN( 121)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 121)				return (int)0;
            			}
            			break;
            			case (int)1: {
HXLINE( 121)				return this1->_hx_getInt(0);
            			}
            			break;
            		}
HXDLIN( 121)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,size,return )

Int Map_Impl__obj::delta;

Int Map_Impl__obj::ratio;

::hx::EnumBase Map_Impl__obj::balance( ::Dynamic k, ::Dynamic x,::hx::EnumBase lhs,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","balance",0x69fc1bd3,"thx.fp._Map.Map_Impl_.balance","thx/fp/Map.hx",129,0xa922769c)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE( 130)		HX_VARI( Int,ls) = ::thx::fp::_Map::Map_Impl__obj::size(lhs);
HXDLIN( 130)		HX_VARI( Int,rs) = ::thx::fp::_Map::Map_Impl__obj::size(rhs);
HXDLIN( 130)		HX_VARI( Int,xs) = ((ls + rs) + (int)1);
HXLINE( 133)		if (((ls + rs) <= (int)1)) {
HXLINE( 134)			return ::thx::fp::MapImpl_obj::Bin(xs,k,x,lhs,rhs);
            		}
            		else {
HXLINE( 135)			if ((rs >= ((int)5 * ls))) {
HXLINE( 136)				return ::thx::fp::_Map::Map_Impl__obj::rotateLeft(k,x,lhs,rhs);
            			}
            			else {
HXLINE( 137)				if ((ls >= ((int)5 * rs))) {
HXLINE( 138)					return ::thx::fp::_Map::Map_Impl__obj::rotateRight(k,x,lhs,rhs);
            				}
            				else {
HXLINE( 140)					return ::thx::fp::MapImpl_obj::Bin(xs,k,x,lhs,rhs);
            				}
            			}
            		}
HXLINE( 133)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,balance,return )

::hx::EnumBase Map_Impl__obj::glue(::hx::EnumBase this1,::hx::EnumBase that){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","glue",0x864e8c9e,"thx.fp._Map.Map_Impl_.glue","thx/fp/Map.hx",143,0xa922769c)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(that,"that")
HXLINE( 143)		Int _hx_tmp = ( ( ::hx::EnumBase)(this1) )->_hx_getIndex();
HXDLIN( 143)		if ((_hx_tmp == (int)0)) {
HXLINE( 143)			return that;
            		}
            		else {
HXLINE( 143)			Int _hx_tmp1 = ( ( ::hx::EnumBase)(that) )->_hx_getIndex();
HXDLIN( 143)			if ((_hx_tmp1 == (int)0)) {
HXLINE( 143)				return this1;
            			}
            			else {
HXLINE( 146)				Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(this1);
HXDLIN( 146)				Int _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::size(that);
HXDLIN( 146)				if ((_hx_tmp2 > _hx_tmp3)) {
HXLINE( 147)					HX_VARI(  ::Dynamic,t) = ::thx::fp::_Map::Map_Impl__obj::deleteFindMax(this1);
HXLINE( 143)					return ::thx::fp::_Map::Map_Impl__obj::balance( ::Dynamic(t->__Field(HX_("k",6b,00,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("x",78,00,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("t",74,00,00,00),hx::paccDynamic)),that);
            				}
            				else {
HXLINE( 150)					HX_VARI_NAME(  ::Dynamic,t1,"t") = ::thx::fp::_Map::Map_Impl__obj::deleteFindMin(that);
HXLINE( 143)					return ::thx::fp::_Map::Map_Impl__obj::balance( ::Dynamic(t1->__Field(HX_("k",6b,00,00,00),hx::paccDynamic)), ::Dynamic(t1->__Field(HX_("x",78,00,00,00),hx::paccDynamic)),this1, ::Dynamic(t1->__Field(HX_("t",74,00,00,00),hx::paccDynamic)));
            				}
            			}
            		}
HXDLIN( 143)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Map_Impl__obj,glue,return )

 ::Dynamic Map_Impl__obj::deleteFindMin(::hx::EnumBase map){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","deleteFindMin",0x9b3097e5,"thx.fp._Map.Map_Impl_.deleteFindMin","thx/fp/Map.hx",154,0xa922769c)
            	HX_STACK_ARG(map,"map")
HXLINE( 154)		Int _hx_tmp = ( ( ::hx::EnumBase)(map) )->_hx_getIndex();
HXDLIN( 154)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 161)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("can not return the minimal element of an empty map",fa,3d,3d,db),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),161,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("deleteFindMin",ee,b5,f7,83))));
            			}
            			break;
            			case (int)1: {
HXLINE( 154)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(map->_hx_getObject(3).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 154)				if ((_hx_tmp1 == (int)0)) {
HXLINE( 155)					HX_VARI( ::hx::EnumBase,r) = map->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 155)					HX_VARI(  ::Dynamic,k) = map->_hx_getObject(1);
HXDLIN( 155)					HX_VARI(  ::Dynamic,x) = map->_hx_getObject(2);
HXLINE( 154)					return  ::Dynamic(hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("k",6b,00,00,00),k)
            						->setFixed(1,HX_("t",74,00,00,00),r)
            						->setFixed(2,HX_("x",78,00,00,00),x));
            				}
            				else {
HXLINE( 157)					HX_VARI_NAME( ::hx::EnumBase,r1,"r") = map->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 157)					HX_VARI_NAME(  ::Dynamic,k1,"k") = map->_hx_getObject(1);
HXDLIN( 157)					HX_VARI_NAME(  ::Dynamic,x1,"x") = map->_hx_getObject(2);
HXDLIN( 157)					HX_VARI( ::hx::EnumBase,l) = map->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE( 158)					HX_VARI(  ::Dynamic,t) = ::thx::fp::_Map::Map_Impl__obj::deleteFindMin(l);
HXLINE( 159)					::hx::EnumBase _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::balance(k1,x1, ::Dynamic(t->__Field(HX_("t",74,00,00,00),hx::paccDynamic)),r1);
HXLINE( 154)					return  ::Dynamic(hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("k",6b,00,00,00), ::Dynamic(t->__Field(HX_("k",6b,00,00,00),hx::paccDynamic)))
            						->setFixed(1,HX_("t",74,00,00,00),_hx_tmp2)
            						->setFixed(2,HX_("x",78,00,00,00), ::Dynamic(t->__Field(HX_("x",78,00,00,00),hx::paccDynamic))));
            				}
            			}
            			break;
            		}
HXDLIN( 154)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,deleteFindMin,return )

 ::Dynamic Map_Impl__obj::deleteFindMax(::hx::EnumBase map){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","deleteFindMax",0x9b3090f7,"thx.fp._Map.Map_Impl_.deleteFindMax","thx/fp/Map.hx",164,0xa922769c)
            	HX_STACK_ARG(map,"map")
HXLINE( 164)		Int _hx_tmp = ( ( ::hx::EnumBase)(map) )->_hx_getIndex();
HXDLIN( 164)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 171)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("can not return the maximal element of an empty map",0c,4e,d4,6a),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),171,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("deleteFindMax",00,af,f7,83))));
            			}
            			break;
            			case (int)1: {
HXLINE( 164)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(map->_hx_getObject(4).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 164)				if ((_hx_tmp1 == (int)0)) {
HXLINE( 165)					HX_VARI(  ::Dynamic,k) = map->_hx_getObject(1);
HXDLIN( 165)					HX_VARI(  ::Dynamic,x) = map->_hx_getObject(2);
HXDLIN( 165)					HX_VARI( ::hx::EnumBase,l) = map->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXLINE( 164)					return  ::Dynamic(hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("k",6b,00,00,00),k)
            						->setFixed(1,HX_("t",74,00,00,00),l)
            						->setFixed(2,HX_("x",78,00,00,00),x));
            				}
            				else {
HXLINE( 167)					HX_VARI_NAME(  ::Dynamic,k1,"k") = map->_hx_getObject(1);
HXDLIN( 167)					HX_VARI_NAME(  ::Dynamic,x1,"x") = map->_hx_getObject(2);
HXDLIN( 167)					HX_VARI_NAME( ::hx::EnumBase,l1,"l") = map->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 167)					HX_VARI( ::hx::EnumBase,r) = map->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXLINE( 168)					HX_VARI(  ::Dynamic,t) = ::thx::fp::_Map::Map_Impl__obj::deleteFindMax(r);
HXLINE( 169)					::hx::EnumBase _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::balance(k1,x1,l1, ::Dynamic(t->__Field(HX_("t",74,00,00,00),hx::paccDynamic)));
HXLINE( 164)					return  ::Dynamic(hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("k",6b,00,00,00), ::Dynamic(t->__Field(HX_("k",6b,00,00,00),hx::paccDynamic)))
            						->setFixed(1,HX_("t",74,00,00,00),_hx_tmp2)
            						->setFixed(2,HX_("x",78,00,00,00), ::Dynamic(t->__Field(HX_("x",78,00,00,00),hx::paccDynamic))));
            				}
            			}
            			break;
            		}
HXDLIN( 164)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Map_Impl__obj,deleteFindMax,return )

::hx::EnumBase Map_Impl__obj::rotateLeft( ::Dynamic k, ::Dynamic x,::hx::EnumBase lhs,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","rotateLeft",0x33e591ab,"thx.fp._Map.Map_Impl_.rotateLeft","thx/fp/Map.hx",175,0xa922769c)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE( 175)		Int _hx_tmp = ( ( ::hx::EnumBase)(rhs) )->_hx_getIndex();
HXDLIN( 175)		if ((_hx_tmp == (int)1)) {
HXLINE( 176)			HX_VARI( ::hx::EnumBase,ry) = rhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 176)			HX_VARI( ::hx::EnumBase,ly) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 176)			Int _hx_tmp1 = ::thx::fp::_Map::Map_Impl__obj::size(ly);
HXDLIN( 176)			Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(ry);
HXDLIN( 176)			if ((_hx_tmp1 < ((int)2 * _hx_tmp2))) {
HXLINE( 175)				return ::thx::fp::_Map::Map_Impl__obj::singleLeft(k,x,lhs,rhs);
            			}
            			else {
HXLINE( 175)				return ::thx::fp::_Map::Map_Impl__obj::doubleLeft(k,x,lhs,rhs);
            			}
            		}
            		else {
HXLINE( 175)			return ::thx::fp::_Map::Map_Impl__obj::doubleLeft(k,x,lhs,rhs);
            		}
HXDLIN( 175)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,rotateLeft,return )

::hx::EnumBase Map_Impl__obj::rotateRight( ::Dynamic k, ::Dynamic x,::hx::EnumBase lhs,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","rotateRight",0xac06f1b8,"thx.fp._Map.Map_Impl_.rotateRight","thx/fp/Map.hx",183,0xa922769c)
            	HX_STACK_ARG(k,"k")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE( 183)		Int _hx_tmp = ( ( ::hx::EnumBase)(lhs) )->_hx_getIndex();
HXDLIN( 183)		if ((_hx_tmp == (int)1)) {
HXLINE( 184)			HX_VARI( ::hx::EnumBase,ry) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 184)			HX_VARI( ::hx::EnumBase,ly) = lhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 184)			Int _hx_tmp1 = ::thx::fp::_Map::Map_Impl__obj::size(ry);
HXDLIN( 184)			Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(ly);
HXDLIN( 184)			if ((_hx_tmp1 < ((int)2 * _hx_tmp2))) {
HXLINE( 183)				return ::thx::fp::_Map::Map_Impl__obj::singleRight(k,x,lhs,rhs);
            			}
            			else {
HXLINE( 183)				return ::thx::fp::_Map::Map_Impl__obj::doubleRight(k,x,lhs,rhs);
            			}
            		}
            		else {
HXLINE( 183)			return ::thx::fp::_Map::Map_Impl__obj::doubleRight(k,x,lhs,rhs);
            		}
HXDLIN( 183)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,rotateRight,return )

::hx::EnumBase Map_Impl__obj::singleLeft( ::Dynamic k1, ::Dynamic x1,::hx::EnumBase t1,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","singleLeft",0x71fecc58,"thx.fp._Map.Map_Impl_.singleLeft","thx/fp/Map.hx",191,0xa922769c)
            	HX_STACK_ARG(k1,"k1")
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(t1,"t1")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE( 191)		Int _hx_tmp = ( ( ::hx::EnumBase)(rhs) )->_hx_getIndex();
HXDLIN( 191)		if ((_hx_tmp == (int)1)) {
HXLINE( 192)			HX_VARI( ::hx::EnumBase,t3) = rhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 192)			HX_VARI( ::hx::EnumBase,t2) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 192)			HX_VARI(  ::Dynamic,x2) = rhs->_hx_getObject(2);
HXDLIN( 192)			HX_VARI(  ::Dynamic,k2) = rhs->_hx_getObject(1);
HXDLIN( 192)			Int _hx_tmp1 = ::thx::fp::_Map::Map_Impl__obj::size(t1);
HXDLIN( 192)			Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(t2);
HXDLIN( 192)			HX_VARI( ::hx::EnumBase,lhs) = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp1 + _hx_tmp2) + (int)1),k1,x1,t1,t2);
HXDLIN( 192)			Int _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::size(lhs);
HXDLIN( 192)			Int _hx_tmp4 = ::thx::fp::_Map::Map_Impl__obj::size(t3);
HXLINE( 191)			return ::thx::fp::MapImpl_obj::Bin(((_hx_tmp3 + _hx_tmp4) + (int)1),k2,x2,lhs,t3);
            		}
            		else {
HXLINE( 193)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),193,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("singleLeft",af,7e,d4,bd))));
            		}
HXLINE( 191)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,singleLeft,return )

::hx::EnumBase Map_Impl__obj::singleRight( ::Dynamic k1, ::Dynamic x1,::hx::EnumBase lhs,::hx::EnumBase t3){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","singleRight",0xc4010e6b,"thx.fp._Map.Map_Impl_.singleRight","thx/fp/Map.hx",197,0xa922769c)
            	HX_STACK_ARG(k1,"k1")
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(t3,"t3")
HXLINE( 197)		Int _hx_tmp = ( ( ::hx::EnumBase)(lhs) )->_hx_getIndex();
HXDLIN( 197)		if ((_hx_tmp == (int)1)) {
HXLINE( 198)			HX_VARI( ::hx::EnumBase,t2) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 198)			HX_VARI( ::hx::EnumBase,t1) = lhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 198)			HX_VARI(  ::Dynamic,x2) = lhs->_hx_getObject(2);
HXDLIN( 198)			HX_VARI(  ::Dynamic,k2) = lhs->_hx_getObject(1);
HXDLIN( 198)			Int _hx_tmp1 = ::thx::fp::_Map::Map_Impl__obj::size(t2);
HXDLIN( 198)			Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(t3);
HXDLIN( 198)			HX_VARI( ::hx::EnumBase,rhs) = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp1 + _hx_tmp2) + (int)1),k1,x1,t2,t3);
HXDLIN( 198)			Int _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::size(t1);
HXDLIN( 198)			Int _hx_tmp4 = ::thx::fp::_Map::Map_Impl__obj::size(rhs);
HXLINE( 197)			return ::thx::fp::MapImpl_obj::Bin(((_hx_tmp3 + _hx_tmp4) + (int)1),k2,x2,t1,rhs);
            		}
            		else {
HXLINE( 199)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),199,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("singleRight",34,68,27,d3))));
            		}
HXLINE( 197)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,singleRight,return )

::hx::EnumBase Map_Impl__obj::doubleLeft( ::Dynamic k1, ::Dynamic x1,::hx::EnumBase t1,::hx::EnumBase rhs){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","doubleLeft",0xdfc00961,"thx.fp._Map.Map_Impl_.doubleLeft","thx/fp/Map.hx",203,0xa922769c)
            	HX_STACK_ARG(k1,"k1")
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(t1,"t1")
            	HX_STACK_ARG(rhs,"rhs")
HXLINE( 203)		Int _hx_tmp = ( ( ::hx::EnumBase)(rhs) )->_hx_getIndex();
HXDLIN( 203)		if ((_hx_tmp == (int)1)) {
HXLINE( 203)			Int _hx_tmp1 = ( ( ::hx::EnumBase)(rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 203)			if ((_hx_tmp1 == (int)1)) {
HXLINE( 204)				HX_VARI( ::hx::EnumBase,t4) = rhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 204)				HX_VARI(  ::Dynamic,k2) = rhs->_hx_getObject(1);
HXDLIN( 204)				HX_VARI(  ::Dynamic,x2) = rhs->_hx_getObject(2);
HXDLIN( 204)				HX_VARI( ::hx::EnumBase,t3) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 204)				HX_VARI( ::hx::EnumBase,t2) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 204)				HX_VARI(  ::Dynamic,x3) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(2);
HXDLIN( 204)				HX_VARI(  ::Dynamic,k3) = rhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >()->_hx_getObject(1);
HXLINE( 205)				Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(t1);
HXDLIN( 205)				Int _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::size(t2);
HXDLIN( 205)				HX_VARI( ::hx::EnumBase,lhs) = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp2 + _hx_tmp3) + (int)1),k1,x1,t1,t2);
HXDLIN( 205)				Int _hx_tmp4 = ::thx::fp::_Map::Map_Impl__obj::size(t3);
HXDLIN( 205)				Int _hx_tmp5 = ::thx::fp::_Map::Map_Impl__obj::size(t4);
HXDLIN( 205)				HX_VARI_NAME( ::hx::EnumBase,rhs1,"rhs") = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp4 + _hx_tmp5) + (int)1),k2,x2,t3,t4);
HXDLIN( 205)				Int _hx_tmp6 = ::thx::fp::_Map::Map_Impl__obj::size(lhs);
HXDLIN( 205)				Int _hx_tmp7 = ::thx::fp::_Map::Map_Impl__obj::size(rhs1);
HXLINE( 203)				return ::thx::fp::MapImpl_obj::Bin(((_hx_tmp6 + _hx_tmp7) + (int)1),k3,x3,lhs,rhs1);
            			}
            			else {
HXLINE( 206)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),206,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("doubleLeft",b8,bb,95,2b))));
            			}
            		}
            		else {
HXLINE( 206)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),206,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("doubleLeft",b8,bb,95,2b))));
            		}
HXLINE( 203)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,doubleLeft,return )

::hx::EnumBase Map_Impl__obj::doubleRight( ::Dynamic k1, ::Dynamic x1,::hx::EnumBase lhs,::hx::EnumBase t4){
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","doubleRight",0x5f553942,"thx.fp._Map.Map_Impl_.doubleRight","thx/fp/Map.hx",210,0xa922769c)
            	HX_STACK_ARG(k1,"k1")
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(lhs,"lhs")
            	HX_STACK_ARG(t4,"t4")
HXLINE( 210)		Int _hx_tmp = ( ( ::hx::EnumBase)(lhs) )->_hx_getIndex();
HXDLIN( 210)		if ((_hx_tmp == (int)1)) {
HXLINE( 210)			Int _hx_tmp1 = ( ( ::hx::EnumBase)(lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >()) )->_hx_getIndex();
HXDLIN( 210)			if ((_hx_tmp1 == (int)1)) {
HXLINE( 211)				HX_VARI(  ::Dynamic,k2) = lhs->_hx_getObject(1);
HXDLIN( 211)				HX_VARI(  ::Dynamic,x2) = lhs->_hx_getObject(2);
HXDLIN( 211)				HX_VARI( ::hx::EnumBase,t1) = lhs->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 211)				HX_VARI( ::hx::EnumBase,t3) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >()->_hx_getObject(4).StaticCast< ::hx::EnumBase >();
HXDLIN( 211)				HX_VARI( ::hx::EnumBase,t2) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >()->_hx_getObject(3).StaticCast< ::hx::EnumBase >();
HXDLIN( 211)				HX_VARI(  ::Dynamic,x3) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >()->_hx_getObject(2);
HXDLIN( 211)				HX_VARI(  ::Dynamic,k3) = lhs->_hx_getObject(4).StaticCast< ::hx::EnumBase >()->_hx_getObject(1);
HXLINE( 212)				Int _hx_tmp2 = ::thx::fp::_Map::Map_Impl__obj::size(t1);
HXDLIN( 212)				Int _hx_tmp3 = ::thx::fp::_Map::Map_Impl__obj::size(t2);
HXDLIN( 212)				HX_VARI_NAME( ::hx::EnumBase,lhs1,"lhs") = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp2 + _hx_tmp3) + (int)1),k2,x2,t1,t2);
HXDLIN( 212)				Int _hx_tmp4 = ::thx::fp::_Map::Map_Impl__obj::size(t3);
HXDLIN( 212)				Int _hx_tmp5 = ::thx::fp::_Map::Map_Impl__obj::size(t4);
HXDLIN( 212)				HX_VARI( ::hx::EnumBase,rhs) = ::thx::fp::MapImpl_obj::Bin(((_hx_tmp4 + _hx_tmp5) + (int)1),k1,x1,t3,t4);
HXDLIN( 212)				Int _hx_tmp6 = ::thx::fp::_Map::Map_Impl__obj::size(lhs1);
HXDLIN( 212)				Int _hx_tmp7 = ::thx::fp::_Map::Map_Impl__obj::size(rhs);
HXLINE( 210)				return ::thx::fp::MapImpl_obj::Bin(((_hx_tmp6 + _hx_tmp7) + (int)1),k3,x3,lhs1,rhs);
            			}
            			else {
HXLINE( 213)				HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),213,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("doubleRight",0b,93,7b,6e))));
            			}
            		}
            		else {
HXLINE( 213)			HX_STACK_DO_THROW( ::thx::Error_obj::__new(HX_("damn it, this should never happen",a2,ab,f9,30),null(),hx::SourceInfo(HX_("Map.hx",c2,35,84,ed),213,HX_("thx.fp._Map.Map_Impl_",25,d0,29,8c),HX_("doubleRight",0b,93,7b,6e))));
            		}
HXLINE( 210)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Map_Impl__obj,doubleRight,return )


Map_Impl__obj::Map_Impl__obj()
{
}

bool Map_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bin") ) { outValue = bin_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"size") ) { outValue = size_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"glue") ) { outValue = glue_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = empty_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"lookup") ) { outValue = lookup_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"delete") ) { outValue = _hx_delete_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insert") ) { outValue = insert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"values") ) { outValue = values_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"balance") ) { outValue = balance_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"foldLeft") ) { outValue = foldLeft_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"singleton") ) { outValue = singleton_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromNative") ) { outValue = fromNative_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rotateLeft") ) { outValue = rotateLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"singleLeft") ) { outValue = singleLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"doubleLeft") ) { outValue = doubleLeft_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"lookupTuple") ) { outValue = lookupTuple_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"foldLeftAll") ) { outValue = foldLeftAll_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rotateRight") ) { outValue = rotateRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"singleRight") ) { outValue = singleRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"doubleRight") ) { outValue = doubleRight_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"foldLeftKeys") ) { outValue = foldLeftKeys_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"deleteFindMin") ) { outValue = deleteFindMin_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteFindMax") ) { outValue = deleteFindMax_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"foldLeftTuples") ) { outValue = foldLeftTuples_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Map_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Map_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Map_Impl__obj::delta,HX_HCSTRING("delta","\xf8","\xe7","\x26","\xd7")},
	{hx::fsInt,(void *) &Map_Impl__obj::ratio,HX_HCSTRING("ratio","\x0b","\x35","\x24","\xe4")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Map_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Map_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Map_Impl__obj::delta,"delta");
	HX_MARK_MEMBER_NAME(Map_Impl__obj::ratio,"ratio");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Map_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Map_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Map_Impl__obj::delta,"delta");
	HX_VISIT_MEMBER_NAME(Map_Impl__obj::ratio,"ratio");
};

#endif

hx::Class Map_Impl__obj::__mClass;

static ::String Map_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("singleton","\x0b","\xc5","\x7f","\xb7"),
	HX_HCSTRING("bin","\xc7","\xb8","\x4a","\x00"),
	HX_HCSTRING("fromNative","\xa1","\xce","\x60","\x65"),
	HX_HCSTRING("lookup","\x7a","\xa2","\xb5","\x61"),
	HX_HCSTRING("lookupTuple","\x2e","\x2f","\x7d","\x91"),
	HX_HCSTRING("delete","\x2b","\xc0","\xd8","\x6a"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("foldLeft","\xa8","\x24","\x0e","\xc7"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("values","\xe2","\x03","\xb7","\x4f"),
	HX_HCSTRING("foldLeftKeys","\xbc","\xa6","\x21","\xc0"),
	HX_HCSTRING("foldLeftAll","\x59","\xe5","\x9d","\xd0"),
	HX_HCSTRING("foldLeftTuples","\x33","\x72","\x8d","\x12"),
	HX_HCSTRING("size","\xc1","\xa0","\x53","\x4c"),
	HX_HCSTRING("delta","\xf8","\xe7","\x26","\xd7"),
	HX_HCSTRING("ratio","\x0b","\x35","\x24","\xe4"),
	HX_HCSTRING("balance","\x1c","\x9d","\x8d","\x23"),
	HX_HCSTRING("glue","\xb5","\x53","\x67","\x44"),
	HX_HCSTRING("deleteFindMin","\xee","\xb5","\xf7","\x83"),
	HX_HCSTRING("deleteFindMax","\x00","\xaf","\xf7","\x83"),
	HX_HCSTRING("rotateLeft","\x02","\x44","\xbb","\x7f"),
	HX_HCSTRING("rotateRight","\x81","\x4b","\x2d","\xbb"),
	HX_HCSTRING("singleLeft","\xaf","\x7e","\xd4","\xbd"),
	HX_HCSTRING("singleRight","\x34","\x68","\x27","\xd3"),
	HX_HCSTRING("doubleLeft","\xb8","\xbb","\x95","\x2b"),
	HX_HCSTRING("doubleRight","\x0b","\x93","\x7b","\x6e"),
	::String(null())
};

void Map_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp._Map.Map_Impl_","\x25","\xd0","\x29","\x8c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Map_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Map_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Map_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Map_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Map_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Map_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Map_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Map_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","boot",0x8302bd1b,"thx.fp._Map.Map_Impl_.boot","thx/fp/Map.hx",127,0xa922769c)
HXLINE( 127)		delta = (int)5;
            	}
{
            	HX_STACK_FRAME("thx.fp._Map.Map_Impl_","boot",0x8302bd1b,"thx.fp._Map.Map_Impl_.boot","thx/fp/Map.hx",128,0xa922769c)
HXLINE( 128)		ratio = (int)2;
            	}
}

} // end namespace thx
} // end namespace fp
} // end namespace _Map
