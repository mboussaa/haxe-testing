// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_TimePeriod
#include <thx/TimePeriod.h>
#endif
namespace thx{

::thx::TimePeriod TimePeriod_obj::Day;

::thx::TimePeriod TimePeriod_obj::Hour;

::thx::TimePeriod TimePeriod_obj::Minute;

::thx::TimePeriod TimePeriod_obj::Month;

::thx::TimePeriod TimePeriod_obj::Second;

::thx::TimePeriod TimePeriod_obj::Week;

::thx::TimePeriod TimePeriod_obj::Year;

bool TimePeriod_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Day",3c,ee,33,00)) { outValue = TimePeriod_obj::Day; return true; }
	if (inName==HX_("Hour",44,fd,eb,2f)) { outValue = TimePeriod_obj::Hour; return true; }
	if (inName==HX_("Minute",f4,56,9c,87)) { outValue = TimePeriod_obj::Minute; return true; }
	if (inName==HX_("Month",20,37,8d,9f)) { outValue = TimePeriod_obj::Month; return true; }
	if (inName==HX_("Second",94,43,dc,98)) { outValue = TimePeriod_obj::Second; return true; }
	if (inName==HX_("Week",14,8c,ce,39)) { outValue = TimePeriod_obj::Week; return true; }
	if (inName==HX_("Year",dd,f5,20,3b)) { outValue = TimePeriod_obj::Year; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TimePeriod_obj)

int TimePeriod_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Day",3c,ee,33,00)) return 3;
	if (inName==HX_("Hour",44,fd,eb,2f)) return 2;
	if (inName==HX_("Minute",f4,56,9c,87)) return 1;
	if (inName==HX_("Month",20,37,8d,9f)) return 5;
	if (inName==HX_("Second",94,43,dc,98)) return 0;
	if (inName==HX_("Week",14,8c,ce,39)) return 4;
	if (inName==HX_("Year",dd,f5,20,3b)) return 6;
	return super::__FindIndex(inName);
}

int TimePeriod_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Day",3c,ee,33,00)) return 0;
	if (inName==HX_("Hour",44,fd,eb,2f)) return 0;
	if (inName==HX_("Minute",f4,56,9c,87)) return 0;
	if (inName==HX_("Month",20,37,8d,9f)) return 0;
	if (inName==HX_("Second",94,43,dc,98)) return 0;
	if (inName==HX_("Week",14,8c,ce,39)) return 0;
	if (inName==HX_("Year",dd,f5,20,3b)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val TimePeriod_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Day",3c,ee,33,00)) return Day;
	if (inName==HX_("Hour",44,fd,eb,2f)) return Hour;
	if (inName==HX_("Minute",f4,56,9c,87)) return Minute;
	if (inName==HX_("Month",20,37,8d,9f)) return Month;
	if (inName==HX_("Second",94,43,dc,98)) return Second;
	if (inName==HX_("Week",14,8c,ce,39)) return Week;
	if (inName==HX_("Year",dd,f5,20,3b)) return Year;
	return super::__Field(inName,inCallProp);
}

static ::String TimePeriod_obj_sStaticFields[] = {
	HX_("Second",94,43,dc,98),
	HX_("Minute",f4,56,9c,87),
	HX_("Hour",44,fd,eb,2f),
	HX_("Day",3c,ee,33,00),
	HX_("Week",14,8c,ce,39),
	HX_("Month",20,37,8d,9f),
	HX_("Year",dd,f5,20,3b),
	::String(null())
};

static void TimePeriod_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Day,"Day");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Hour,"Hour");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Minute,"Minute");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Month,"Month");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Second,"Second");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Week,"Week");
	HX_MARK_MEMBER_NAME(TimePeriod_obj::Year,"Year");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TimePeriod_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Day,"Day");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Hour,"Hour");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Minute,"Minute");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Month,"Month");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Second,"Second");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Week,"Week");
	HX_VISIT_MEMBER_NAME(TimePeriod_obj::Year,"Year");
};
#endif

hx::Class TimePeriod_obj::__mClass;

Dynamic __Create_TimePeriod_obj() { return new TimePeriod_obj; }

void TimePeriod_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("thx.TimePeriod","\xb8","\x18","\x05","\x56"), hx::TCanCast< TimePeriod_obj >,TimePeriod_obj_sStaticFields,0,
	&__Create_TimePeriod_obj, &__Create,
	&super::__SGetClass(), &CreateTimePeriod_obj, TimePeriod_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , TimePeriod_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TimePeriod_obj::__GetStatic;
}

void TimePeriod_obj::__boot()
{
Day = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Day","\x3c","\xee","\x33","\x00"),3,0);
Hour = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Hour","\x44","\xfd","\xeb","\x2f"),2,0);
Minute = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Minute","\xf4","\x56","\x9c","\x87"),1,0);
Month = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Month","\x20","\x37","\x8d","\x9f"),5,0);
Second = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Second","\x94","\x43","\xdc","\x98"),0,0);
Week = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Week","\x14","\x8c","\xce","\x39"),4,0);
Year = hx::CreateEnum< TimePeriod_obj >(HX_HCSTRING("Year","\xdd","\xf5","\x20","\x3b"),6,0);
}


} // end namespace thx
