// Generated by Haxe 3.3.0
#ifndef INCLUDED_utest_ui_Report
#define INCLUDED_utest_ui_Report

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(utest,Runner)
HX_DECLARE_CLASS2(utest,ui,Report)
HX_DECLARE_CLASS3(utest,ui,common,HeaderDisplayMode)
HX_DECLARE_CLASS3(utest,ui,common,IReport)
HX_DECLARE_CLASS3(utest,ui,common,SuccessResultsDisplayMode)

namespace utest{
namespace ui{


class HXCPP_CLASS_ATTRIBUTES Report_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Report_obj OBJ_;
		Report_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="utest.ui.Report")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"utest.ui.Report"); }
		static hx::ObjectPtr< Report_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Report_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Report","\xd4","\xb0","\x18","\x3b"); }

		static ::Dynamic create( ::utest::Runner runner,::hx::EnumBase displaySuccessResults,::hx::EnumBase headerDisplayMode);
		static ::Dynamic create_dyn();

};

} // end namespace utest
} // end namespace ui

#endif /* INCLUDED_utest_ui_Report */ 
