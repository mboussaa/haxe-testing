// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__Monoid_Monoid_Impl_
#define INCLUDED_thx__Monoid_Monoid_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,_Monoid,Monoid_Impl_)

namespace thx{
namespace _Monoid{


class HXCPP_CLASS_ATTRIBUTES Monoid_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Monoid_Impl__obj OBJ_;
		Monoid_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._Monoid.Monoid_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._Monoid.Monoid_Impl_"); }
		static hx::ObjectPtr< Monoid_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Monoid_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Monoid_Impl_","\xfe","\xf1","\x4c","\xbe"); }

		static  ::Dynamic get_semigroup( ::Dynamic this1);
		static ::Dynamic get_semigroup_dyn();

		static  ::Dynamic get_zero( ::Dynamic this1);
		static ::Dynamic get_zero_dyn();

		static  ::Dynamic append( ::Dynamic this1, ::Dynamic a0, ::Dynamic a1);
		static ::Dynamic append_dyn();

};

} // end namespace thx
} // end namespace _Monoid

#endif /* INCLUDED_thx__Monoid_Monoid_Impl_ */ 
