// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Arrays
#define INCLUDED_thx_Arrays

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,Option)
HX_DECLARE_CLASS1(thx,Arrays)
HX_DECLARE_CLASS1(thx,Either)
HX_DECLARE_CLASS1(thx,OrderingImpl)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Arrays_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Arrays_obj OBJ_;
		Arrays_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Arrays")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Arrays"); }
		static hx::ObjectPtr< Arrays_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Arrays_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Arrays","\xda","\xec","\x84","\xec"); }

		static ::cpp::VirtualArray append(::cpp::VirtualArray array, ::Dynamic element);
		static ::Dynamic append_dyn();

		static ::cpp::VirtualArray appendIf(::cpp::VirtualArray array,Bool cond, ::Dynamic element);
		static ::Dynamic appendIf_dyn();

		static ::cpp::VirtualArray applyIndexes(::cpp::VirtualArray array,::Array< Int > indexes, ::Dynamic incrementDuplicates);
		static ::Dynamic applyIndexes_dyn();

		static  ::Dynamic monoid();
		static ::Dynamic monoid_dyn();

		static ::cpp::VirtualArray after(::cpp::VirtualArray array, ::Dynamic element);
		static ::Dynamic after_dyn();

		static ::hx::EnumBase atIndex(::cpp::VirtualArray array,Int i);
		static ::Dynamic atIndex_dyn();

		static ::hx::EnumBase getOption(::cpp::VirtualArray array,Int i);
		static ::Dynamic getOption_dyn();

		static void each(::cpp::VirtualArray arr, ::Dynamic effect);
		static ::Dynamic each_dyn();

		static void eachi(::cpp::VirtualArray arr, ::Dynamic effect);
		static ::Dynamic eachi_dyn();

		static Bool all(::cpp::VirtualArray arr, ::Dynamic predicate);
		static ::Dynamic all_dyn();

		static Bool any(::cpp::VirtualArray arr, ::Dynamic predicate);
		static ::Dynamic any_dyn();

		static ::cpp::VirtualArray at(::cpp::VirtualArray arr,::Array< Int > indexes);
		static ::Dynamic at_dyn();

		static ::cpp::VirtualArray before(::cpp::VirtualArray array, ::Dynamic element);
		static ::Dynamic before_dyn();

		static ::cpp::VirtualArray commonsFromStart(::cpp::VirtualArray self,::cpp::VirtualArray other, ::Dynamic equality);
		static ::Dynamic commonsFromStart_dyn();

		static ::cpp::VirtualArray compact(::cpp::VirtualArray arr);
		static ::Dynamic compact_dyn();

		static Int compare(::cpp::VirtualArray a,::cpp::VirtualArray b);
		static ::Dynamic compare_dyn();

		static Bool contains(::cpp::VirtualArray array, ::Dynamic element, ::Dynamic eq);
		static ::Dynamic contains_dyn();

		static Bool containsAll(::cpp::VirtualArray array, ::Dynamic elements, ::Dynamic eq);
		static ::Dynamic containsAll_dyn();

		static Bool containsAny(::cpp::VirtualArray array, ::Dynamic elements, ::Dynamic eq);
		static ::Dynamic containsAny_dyn();

		static ::cpp::VirtualArray create(Int length, ::Dynamic fillWith);
		static ::Dynamic create_dyn();

		static ::Array< ::Dynamic> cross(::cpp::VirtualArray a,::cpp::VirtualArray b);
		static ::Dynamic cross_dyn();

		static ::Array< ::Dynamic> crossMulti(::Array< ::Dynamic> array);
		static ::Dynamic crossMulti_dyn();

		static ::cpp::VirtualArray distinct(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic distinct_dyn();

		static void eachPair(::cpp::VirtualArray array, ::Dynamic callback);
		static ::Dynamic eachPair_dyn();

		static Bool equals(::cpp::VirtualArray a,::cpp::VirtualArray b, ::Dynamic equality);
		static ::Dynamic equals_dyn();

		static  ::Dynamic extract(::cpp::VirtualArray a, ::Dynamic predicate);
		static ::Dynamic extract_dyn();

		static ::cpp::VirtualArray filterNull(::cpp::VirtualArray a);
		static ::Dynamic filterNull_dyn();

		static ::cpp::VirtualArray filterOption(::Array< ::Dynamic> a);
		static ::Dynamic filterOption_dyn();

		static  ::Dynamic find(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic find_dyn();

		static  ::Dynamic findi(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic findi_dyn();

		static ::hx::EnumBase findiOption(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic findiOption_dyn();

		static ::hx::EnumBase findOption(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic findOption_dyn();

		static Int findIndex(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic findIndex_dyn();

		static  ::Dynamic findLast(::cpp::VirtualArray array, ::Dynamic predicate);
		static ::Dynamic findLast_dyn();

		static  ::Dynamic first(::cpp::VirtualArray array);
		static ::Dynamic first_dyn();

		static ::cpp::VirtualArray flatMap(::cpp::VirtualArray array, ::Dynamic callback);
		static ::Dynamic flatMap_dyn();

		static ::cpp::VirtualArray flatten(::Array< ::Dynamic> array);
		static ::Dynamic flatten_dyn();

		static ::cpp::VirtualArray from(::cpp::VirtualArray array, ::Dynamic element);
		static ::Dynamic from_dyn();

		static ::Dynamic groupByAppend(::cpp::VirtualArray arr, ::Dynamic resolver,::Dynamic map);
		static ::Dynamic groupByAppend_dyn();

		static ::Array< ::Dynamic> spanByIndex(::cpp::VirtualArray arr, ::Dynamic spanKey);
		static ::Dynamic spanByIndex_dyn();

		static Bool hasElements(::cpp::VirtualArray array);
		static ::Dynamic hasElements_dyn();

		static  ::Dynamic head(::cpp::VirtualArray array);
		static ::Dynamic head_dyn();

		static ::cpp::VirtualArray ifEmpty(::cpp::VirtualArray array,::cpp::VirtualArray alt);
		static ::Dynamic ifEmpty_dyn();

		static ::cpp::VirtualArray initial(::cpp::VirtualArray array);
		static ::Dynamic initial_dyn();

		static ::cpp::VirtualArray intersperse(::cpp::VirtualArray array, ::Dynamic value);
		static ::Dynamic intersperse_dyn();

		static Bool isEmpty(::cpp::VirtualArray array);
		static ::Dynamic isEmpty_dyn();

		static  ::Dynamic last(::cpp::VirtualArray array);
		static ::Dynamic last_dyn();

		static ::cpp::VirtualArray mapi(::cpp::VirtualArray array, ::Dynamic callback);
		static ::Dynamic mapi_dyn();

		static ::cpp::VirtualArray mapRight(::cpp::VirtualArray array, ::Dynamic callback);
		static ::Dynamic mapRight_dyn();

		static ::cpp::VirtualArray order(::cpp::VirtualArray array, ::Dynamic sort);
		static ::Dynamic order_dyn();

		static void pull(::cpp::VirtualArray array,::cpp::VirtualArray toRemove, ::Dynamic equality);
		static ::Dynamic pull_dyn();

		static ::cpp::VirtualArray pushIf(::cpp::VirtualArray array,Bool condition, ::Dynamic value);
		static ::Dynamic pushIf_dyn();

		static ::Array< Int > rank(::cpp::VirtualArray array, ::Dynamic compare, ::Dynamic incrementDuplicates);
		static ::Dynamic rank_dyn();

		static  ::Dynamic reduce(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial);
		static ::Dynamic reduce_dyn();

		static  ::Dynamic foldLeft(::cpp::VirtualArray array, ::Dynamic init, ::Dynamic f);
		static ::Dynamic foldLeft_dyn();

		static ::hx::EnumBase foldLeftEither(::cpp::VirtualArray array, ::Dynamic init, ::Dynamic f);
		static ::Dynamic foldLeftEither_dyn();

		static  ::Dynamic foldMap(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic m);
		static ::Dynamic foldMap_dyn();

		static  ::Dynamic fold(::cpp::VirtualArray array, ::Dynamic m);
		static ::Dynamic fold_dyn();

		static ::hx::EnumBase nel(::cpp::VirtualArray array);
		static ::Dynamic nel_dyn();

		static ::hx::EnumBase foldS(::cpp::VirtualArray array, ::Dynamic s);
		static ::Dynamic foldS_dyn();

		static ::cpp::VirtualArray resize(::cpp::VirtualArray array,Int length, ::Dynamic fill);
		static ::Dynamic resize_dyn();

		static  ::Dynamic reducei(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial);
		static ::Dynamic reducei_dyn();

		static  ::Dynamic reduceRight(::cpp::VirtualArray array, ::Dynamic f, ::Dynamic initial);
		static ::Dynamic reduceRight_dyn();

		static void removeAll(::cpp::VirtualArray array, ::Dynamic element, ::Dynamic equality);
		static ::Dynamic removeAll_dyn();

		static ::cpp::VirtualArray rest(::cpp::VirtualArray array);
		static ::Dynamic rest_dyn();

		static ::cpp::VirtualArray reversed(::cpp::VirtualArray array);
		static ::Dynamic reversed_dyn();

		static ::cpp::VirtualArray sample(::cpp::VirtualArray array,Int n);
		static ::Dynamic sample_dyn();

		static  ::Dynamic sampleOne(::cpp::VirtualArray array);
		static ::Dynamic sampleOne_dyn();

		static ::String string(::cpp::VirtualArray arr);
		static ::Dynamic string_dyn();

		static ::cpp::VirtualArray shuffle(::cpp::VirtualArray a);
		static ::Dynamic shuffle_dyn();

		static ::Array< ::Dynamic> split(::cpp::VirtualArray array,Int parts);
		static ::Dynamic split_dyn();

		static ::Array< ::Dynamic> splitBy(::cpp::VirtualArray array,Int len);
		static ::Dynamic splitBy_dyn();

		static ::Array< ::Dynamic> splitByPad(::cpp::VirtualArray arr,Int len, ::Dynamic pad);
		static ::Dynamic splitByPad_dyn();

		static ::cpp::VirtualArray tail(::cpp::VirtualArray array);
		static ::Dynamic tail_dyn();

		static ::cpp::VirtualArray take(::cpp::VirtualArray arr,Int n);
		static ::Dynamic take_dyn();

		static ::cpp::VirtualArray takeLast(::cpp::VirtualArray arr,Int n);
		static ::Dynamic takeLast_dyn();

		static ::hx::EnumBase traverseOption(::cpp::VirtualArray arr, ::Dynamic f);
		static ::Dynamic traverseOption_dyn();

		static ::hx::EnumBase traverseValidation(::cpp::VirtualArray arr, ::Dynamic f, ::Dynamic s);
		static ::Dynamic traverseValidation_dyn();

		static ::hx::EnumBase traverseValidationIndexed(::cpp::VirtualArray arr, ::Dynamic f, ::Dynamic s);
		static ::Dynamic traverseValidationIndexed_dyn();

		static ::Array< ::Dynamic> rotate(::Array< ::Dynamic> arr);
		static ::Dynamic rotate_dyn();

		static ::cpp::VirtualArray sliding2(::cpp::VirtualArray arr, ::Dynamic f);
		static ::Dynamic sliding2_dyn();

		static  ::Dynamic unzip(::Array< ::Dynamic> array);
		static ::Dynamic unzip_dyn();

		static  ::Dynamic unzip3(::Array< ::Dynamic> array);
		static ::Dynamic unzip3_dyn();

		static  ::Dynamic unzip4(::Array< ::Dynamic> array);
		static ::Dynamic unzip4_dyn();

		static  ::Dynamic unzip5(::Array< ::Dynamic> array);
		static ::Dynamic unzip5_dyn();

		static ::Array< ::Dynamic> zip(::cpp::VirtualArray array1,::cpp::VirtualArray array2);
		static ::Dynamic zip_dyn();

		static ::Array< ::Dynamic> zip3(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3);
		static ::Dynamic zip3_dyn();

		static ::Array< ::Dynamic> zip4(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3,::cpp::VirtualArray array4);
		static ::Dynamic zip4_dyn();

		static ::Array< ::Dynamic> zip5(::cpp::VirtualArray array1,::cpp::VirtualArray array2,::cpp::VirtualArray array3,::cpp::VirtualArray array4,::cpp::VirtualArray array5);
		static ::Dynamic zip5_dyn();

		static ::cpp::VirtualArray zipAp(::cpp::VirtualArray ax,::Array< ::Dynamic> fx);
		static ::Dynamic zipAp_dyn();

		static ::cpp::VirtualArray zip2Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx);
		static ::Dynamic zip2Ap_dyn();

		static ::cpp::VirtualArray zip3Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx);
		static ::Dynamic zip3Ap_dyn();

		static ::cpp::VirtualArray zip4Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx,::cpp::VirtualArray dx);
		static ::Dynamic zip4Ap_dyn();

		static ::cpp::VirtualArray zip5Ap( ::Dynamic f,::cpp::VirtualArray ax,::cpp::VirtualArray bx,::cpp::VirtualArray cx,::cpp::VirtualArray dx,::cpp::VirtualArray ex);
		static ::Dynamic zip5Ap_dyn();

		static ::cpp::VirtualArray withPrepend(::cpp::VirtualArray arr, ::Dynamic el);
		static ::Dynamic withPrepend_dyn();

		static ::cpp::VirtualArray with(::cpp::VirtualArray arr, ::Dynamic el);
		static ::Dynamic with_dyn();

		static ::cpp::VirtualArray withSlice(::cpp::VirtualArray arr,::cpp::VirtualArray other,Int start, ::Dynamic length);
		static ::Dynamic withSlice_dyn();

		static ::cpp::VirtualArray withInsert(::cpp::VirtualArray arr, ::Dynamic el,Int pos);
		static ::Dynamic withInsert_dyn();

		static ::hx::EnumBase maxBy(::cpp::VirtualArray arr, ::Dynamic ord);
		static ::Dynamic maxBy_dyn();

		static ::hx::EnumBase minBy(::cpp::VirtualArray arr, ::Dynamic ord);
		static ::Dynamic minBy_dyn();

		static ::hx::EnumBase toMap(::Array< ::Dynamic> arr, ::Dynamic keyOrder);
		static ::Dynamic toMap_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Arrays */ 
