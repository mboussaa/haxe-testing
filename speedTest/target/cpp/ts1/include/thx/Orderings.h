// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_Orderings
#define INCLUDED_thx_Orderings

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(thx,OrderingImpl)
HX_DECLARE_CLASS1(thx,Orderings)

namespace thx{


class HXCPP_CLASS_ATTRIBUTES Orderings_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Orderings_obj OBJ_;
		Orderings_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.Orderings")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.Orderings"); }
		static hx::ObjectPtr< Orderings_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Orderings_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Orderings","\xbf","\x68","\xcd","\x1a"); }

		static void __boot();
		static  ::Dynamic monoid;
		static ::hx::EnumBase negate(::hx::EnumBase o);
		static ::Dynamic negate_dyn();

};

} // end namespace thx

#endif /* INCLUDED_thx_Orderings */ 
