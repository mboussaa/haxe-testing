// Generated by Haxe 3.3.0
package thx._ReadonlyArray;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ReadonlyArray_Impl__flatten_16__Fun<T> extends haxe.lang.Function
{
	public ReadonlyArray_Impl__flatten_16__Fun()
	{
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		super(2, 0);
	}
	
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		haxe.root.Array<T> element = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<T>) (((java.lang.Object) (__fn_float2) )) )) : (((haxe.root.Array<T>) (__fn_dyn2) )) );
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		haxe.root.Array<T> acc = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<T>) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.root.Array<T>) (__fn_dyn1) )) );
		//line 16 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/ReadonlyArray.hx"
		return ((haxe.root.Array<T>) (((haxe.root.Array<T>) (acc) ).concat(((haxe.root.Array<T>) (element) ))) );
	}
	
	
}


