// Generated by Haxe 3.3.0
package thx.csv.core;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Parser extends haxe.lang.HxObject
{
	public Parser(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Parser(java.lang.String delimiter, java.lang.String quote, java.lang.String escapedQuote)
	{
		//line 10 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		thx.csv.core.Parser.__hx_ctor_thx_csv_core_Parser(this, delimiter, quote, escapedQuote);
	}
	
	
	public static void __hx_ctor_thx_csv_core_Parser(thx.csv.core.Parser __temp_me116, java.lang.String delimiter, java.lang.String quote, java.lang.String escapedQuote)
	{
		//line 11 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		__temp_me116.delimiter = delimiter;
		//line 12 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		__temp_me116.quote = quote;
		//line 13 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		__temp_me116.escapedQuote = escapedQuote;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		return new thx.csv.core.Parser(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		return new thx.csv.core.Parser(haxe.lang.Runtime.toString(arr.__get(0)), haxe.lang.Runtime.toString(arr.__get(1)), haxe.lang.Runtime.toString(arr.__get(2)));
	}
	
	
	public java.lang.String delimiter;
	
	public java.lang.String quote;
	
	public java.lang.String escapedQuote;
	
	public haxe.root.Array<haxe.root.Array<java.lang.String>> result;
	
	public int pos;
	
	public int len;
	
	public int delimiterLength;
	
	public int quoteLength;
	
	public int escapedQuoteLength;
	
	public haxe.root.StringBuf buffer;
	
	public haxe.root.Array<java.lang.String> row;
	
	public java.lang.String s;
	
	public haxe.root.Array<haxe.root.Array<java.lang.String>> parse(java.lang.String s)
	{
		//line 26 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.s = s;
		//line 27 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.result = new haxe.root.Array<haxe.root.Array<java.lang.String>>(new haxe.root.Array[]{});
		//line 28 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.pos = 0;
		//line 29 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.len = s.length();
		//line 30 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.delimiterLength = this.delimiter.length();
		//line 31 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.quoteLength = this.quote.length();
		//line 32 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.escapedQuoteLength = this.escapedQuote.length();
		//line 33 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.buffer = new haxe.root.StringBuf();
		//line 34 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.row = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
		//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		try 
		{
			//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			java.lang.String t = null;
			//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			while (( this.pos < this.len ))
			{
				//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				if (( haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.quoteLength )), this.quote) && ( this.buffer.b.length() == 0 ) )) 
				{
					//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					this.pos += this.quoteLength;
					//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					while (( this.pos < this.len ))
					{
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.escapedQuoteLength )), this.escapedQuote)) 
						{
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushBuffer(this.quote);
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pos += this.escapedQuoteLength;
						}
						else
						{
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.quoteLength )), this.quote)) 
							{
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								this.pos += this.quoteLength;
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								java.lang.String next = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								while (( haxe.lang.Runtime.valEq(next, " ") || (  ! (haxe.lang.Runtime.valEq(this.delimiter, "\t"))  && haxe.lang.Runtime.valEq(next, "\t") ) ))
								{
									//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
									 ++ this.pos;
									//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
									next = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
								}
								
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								break;
							}
							else
							{
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								this.pushBuffer(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 )));
								//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								 ++ this.pos;
							}
							
						}
						
					}
					
				}
				else
				{
					//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.delimiterLength )), this.delimiter)) 
					{
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushCell();
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pos += this.delimiterLength;
					}
					else
					{
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						t = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 2 ));
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						if (( haxe.lang.Runtime.valEq(t, "\n\r") || haxe.lang.Runtime.valEq(t, "\r\n") )) 
						{
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pos += 2;
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushCell();
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushRow();
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							continue;
						}
						
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						t = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						if (( haxe.lang.Runtime.valEq(t, "\n") || haxe.lang.Runtime.valEq(t, "\r") )) 
						{
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							 ++ this.pos;
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushCell();
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushRow();
							//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							continue;
						}
						
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushBuffer(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 )));
						//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						 ++ this.pos;
					}
					
				}
				
			}
			
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 37 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 38 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 38 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 38 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 38 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			{
				//line 38 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				java.lang.Object e = __temp_catchall2;
				//line 39 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, e, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.csv.core.Parser", "Parser.hx", "parse"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
				//line 40 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				throw haxe.lang.HaxeException.wrap(new thx.Error(( ( ( "unable to parse at pos " + this.pos ) + ": " ) + haxe.root.Std.string(e) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.csv.core.Parser", "Parser.hx", "parse"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (40) )) )})));
			}
			
		}
		
		
		//line 42 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.pushCell();
		//line 43 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.pushRow();
		//line 45 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		return this.result;
	}
	
	
	public void pushCell()
	{
		//line 49 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.row.push(this.buffer.toString());
		//line 50 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.buffer = new haxe.root.StringBuf();
	}
	
	
	public void pushBuffer(java.lang.String _char)
	{
		//line 54 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.buffer.add(haxe.lang.Runtime.toString(_char));
	}
	
	
	public void pushRow()
	{
		//line 58 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.result.push(this.row);
		//line 59 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		this.row = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
	}
	
	
	public final void loop()
	{
		//line 63 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		java.lang.String t = null;
		//line 64 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		while (( this.pos < this.len ))
		{
			//line 65 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (( haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.quoteLength )), this.quote) && ( this.buffer.b.length() == 0 ) )) 
			{
				//line 66 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				this.pos += this.quoteLength;
				//line 68 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				while (( this.pos < this.len ))
				{
					//line 69 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.escapedQuoteLength )), this.escapedQuote)) 
					{
						//line 70 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushBuffer(this.quote);
						//line 71 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pos += this.escapedQuoteLength;
					}
					else
					{
						//line 72 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.quoteLength )), this.quote)) 
						{
							//line 73 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pos += this.quoteLength;
							//line 74 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							java.lang.String next = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
							//line 75 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							while (( haxe.lang.Runtime.valEq(next, " ") || (  ! (haxe.lang.Runtime.valEq(this.delimiter, "\t"))  && haxe.lang.Runtime.valEq(next, "\t") ) ))
							{
								//line 76 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								 ++ this.pos;
								//line 77 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
								next = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
							}
							
							//line 79 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							break;
						}
						else
						{
							//line 81 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							this.pushBuffer(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 )));
							//line 82 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
							 ++ this.pos;
						}
						
					}
					
				}
				
			}
			else
			{
				//line 85 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				if (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + this.delimiterLength )), this.delimiter)) 
				{
					//line 86 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					this.pushCell();
					//line 87 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					this.pos += this.delimiterLength;
				}
				else
				{
					//line 89 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					t = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 2 ));
					//line 90 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (( haxe.lang.Runtime.valEq(t, "\n\r") || haxe.lang.Runtime.valEq(t, "\r\n") )) 
					{
						//line 91 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pos += 2;
						//line 92 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushCell();
						//line 93 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushRow();
						//line 94 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						continue;
					}
					
					//line 96 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					t = haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 ));
					//line 97 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (( haxe.lang.Runtime.valEq(t, "\n") || haxe.lang.Runtime.valEq(t, "\r") )) 
					{
						//line 98 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						 ++ this.pos;
						//line 99 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushCell();
						//line 100 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushRow();
						//line 101 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						continue;
					}
					
					//line 103 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					this.pushBuffer(haxe.lang.StringExt.substring(this.s, this.pos, ( this.pos + 1 )));
					//line 104 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					 ++ this.pos;
				}
				
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			switch (field.hashCode())
			{
				case -2123259777:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.escapedQuoteLength = ((int) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pos")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pos = ((int) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 545298562:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.quoteLength = ((int) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107029:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("len")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.len = ((int) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -710169651:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiterLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.delimiterLength = ((int) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			switch (field.hashCode())
			{
				case 115:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("s")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.s = haxe.lang.Runtime.toString(value);
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -250518009:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiter")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.delimiter = haxe.lang.Runtime.toString(value);
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 113114:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("row")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.row = ((haxe.root.Array<java.lang.String>) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107953788:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quote")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.quote = haxe.lang.Runtime.toString(value);
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -1378118592:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("buffer")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.buffer = ((haxe.root.StringBuf) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -1831778247:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuote")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.escapedQuote = haxe.lang.Runtime.toString(value);
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -2123259777:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.escapedQuoteLength = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -934426595:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("result")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.result = ((haxe.root.Array<haxe.root.Array<java.lang.String>>) (value) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 545298562:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.quoteLength = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pos")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pos = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -710169651:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiterLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.delimiterLength = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107029:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("len")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.len = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return value;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			switch (field.hashCode())
			{
				case 3327652:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("loop")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "loop")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -250518009:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiter")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.delimiter;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -219806624:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushRow")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "pushRow")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107953788:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quote")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.quote;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 1113060346:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushBuffer")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "pushBuffer")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -1831778247:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuote")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.escapedQuote;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 1775472540:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushCell")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "pushCell")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -934426595:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("result")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.result;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 106437299:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("parse")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "parse")) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pos")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.pos;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 115:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("s")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.s;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107029:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("len")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.len;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 113114:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("row")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.row;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -710169651:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiterLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.delimiterLength;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -1378118592:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("buffer")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.buffer;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 545298562:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.quoteLength;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -2123259777:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.escapedQuoteLength;
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			switch (field.hashCode())
			{
				case -2123259777:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("escapedQuoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((double) (this.escapedQuoteLength) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pos")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((double) (this.pos) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 545298562:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("quoteLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((double) (this.quoteLength) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 107029:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("len")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((double) (this.len) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -710169651:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("delimiterLength")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return ((double) (this.delimiterLength) );
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			switch (field.hashCode())
			{
				case 3327652:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("loop")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.loop();
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 106437299:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("parse")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						return this.parse(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case -219806624:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushRow")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushRow();
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 1775472540:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushCell")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushCell();
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
				case 1113060346:
				{
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					if (field.equals("pushBuffer")) 
					{
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						__temp_executeDef1 = false;
						//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
						this.pushBuffer(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
					break;
				}
				
				
			}
			
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("s");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("row");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("buffer");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("escapedQuoteLength");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("quoteLength");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("delimiterLength");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("len");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("pos");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("result");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("escapedQuote");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("quote");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		baseArr.push("delimiter");
		//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
		{
			//line 5 "/usr/lib/haxe/lib/thx,csv/0,2,0/src/thx/csv/core/Parser.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


