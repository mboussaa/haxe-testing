// Generated by Haxe 3.3.0
package thx._Ord;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Ordering_Impl_
{
	public static thx.OrderingImpl fromInt(int value)
	{
		//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
		if (( value < 0 )) 
		{
			//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
			return thx.OrderingImpl.LT;
		}
		else
		{
			//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
			if (( value > 0 )) 
			{
				//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return thx.OrderingImpl.GT;
			}
			else
			{
				//line 9 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return thx.OrderingImpl.EQ;
			}
			
		}
		
	}
	
	
	public static thx.OrderingImpl fromFloat(double value)
	{
		//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
		if (( value < 0 )) 
		{
			//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
			return thx.OrderingImpl.LT;
		}
		else
		{
			//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
			if (( value > 0 )) 
			{
				//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return thx.OrderingImpl.GT;
			}
			else
			{
				//line 12 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return thx.OrderingImpl.EQ;
			}
			
		}
		
	}
	
	
	public static int toInt(thx.OrderingImpl this1)
	{
		//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
		switch (this1)
		{
			case LT:
			{
				//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return -1;
			}
			
			
			case GT:
			{
				//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return 1;
			}
			
			
			case EQ:
			{
				//line 15 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
				return 0;
			}
			
			
		}
		
		//line 14 "/usr/lib/haxe/lib/thx,core/0,40,1/src/thx/Ord.hx"
		return 0;
	}
	
	
}


