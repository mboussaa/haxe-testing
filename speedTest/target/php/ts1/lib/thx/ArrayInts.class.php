<?php

// Generated by Haxe 3.3.0
class thx_ArrayInts {
	public function __construct(){}
	static function average($arr) {
		$tmp = thx_ArrayInts::sum($arr);
		return $tmp / $arr->length;
	}
	static function max($arr) {
		$tmp = thx_Arrays::maxBy($arr, (isset(thx_Ints::$order) ? thx_Ints::$order: array("thx_Ints", "order")));
		return thx_Options::get($tmp);
	}
	static function min($arr) {
		$tmp = thx_Arrays::minBy($arr, (isset(thx_Ints::$order) ? thx_Ints::$order: array("thx_Ints", "order")));
		return thx_Options::get($tmp);
	}
	static function resize($array, $length, $fill = null) {
		if($fill === null) {
			$fill = 0;
		}
		while($array->length < $length) {
			$array->push($fill);
		}
		$tmp = $array->length - $length;
		$array->splice($length, $tmp);
		return $array;
	}
	static function sum($arr) {
		return thx_Arrays::reduce($arr, array(new _hx_lambda(array(), "thx_ArrayInts_0"), 'execute'), 0);
	}
	function __toString() { return 'thx.ArrayInts'; }
}
function thx_ArrayInts_0($tot, $v) {
	{
		return $tot + $v;
	}
}
