<?php

// Generated by Haxe 3.3.0
class Lambda {
	public function __construct(){}
	static function harray($it) {
		$a = new _hx_array(array());
		{
			$tmp = $it->iterator();
			while(true) {
				$tmp1 = !$tmp->hasNext();
				if($tmp1) {
					break;
				}
				$i = $tmp->next();
				$a->push($i);
				unset($tmp1,$i);
			}
		}
		return $a;
	}
	static function has($it, $elt) {
		{
			$tmp = $it->iterator();
			while(true) {
				$tmp1 = !$tmp->hasNext();
				if($tmp1) {
					break;
				}
				$x = $tmp->next();
				if((is_object($_t = $x) && ($_t instanceof Enum) ? $_t == $elt : _hx_equal($_t, $elt))) {
					return true;
				}
				unset($x,$tmp1,$_t);
			}
		}
		return false;
	}
	function __toString() { return 'Lambda'; }
}
