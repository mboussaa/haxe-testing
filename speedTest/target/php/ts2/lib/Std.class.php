<?php

// Generated by Haxe 3.3.0
class Std {
	public function __construct(){}
	static function is($v, $t) {
		return _hx_instanceof($v, $t);
	}
	static function string($s) {
		return _hx_string_rec($s, "");
	}
	static function int($x) {
		$tmp = fmod($x, -2147483648);
		$i = $tmp & -1;
		$tmp1 = $i & -2147483648;
		if($tmp1) {
			$tmp2 = ~$i & -1;
			$i = -($tmp2 + 1);
		}
		return $i;
	}
	static function parseInt($x) {
		$tmp = !is_numeric($x);
		if($tmp) {
			$matches = null;
			preg_match("/^-?\\d+/", $x, $matches);
			$tmp1 = count($matches);
			if($tmp1 === 0) {
				return null;
			} else {
				return intval($matches[0]);
			}
		} else {
			$tmp2 = strtolower(_hx_substr($x, 0, 2));
			if($tmp2 === "0x") {
				return (int) hexdec(substr($x, 2));
			} else {
				return intval($x);
			}
		}
	}
	function __toString() { return 'Std'; }
}
