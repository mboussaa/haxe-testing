<?php

// Generated by Haxe 3.3.0
class thx_speedTest_TestArray {
	public function __construct($i) {
		if(!php_Boot::$skip_constructor) {
		$this->x = $i;
	}}
	public $x;
	public function testInitialisation() {
		$_g1 = 0;
		$_g = $this->x;
		while($_g1 < $_g) {
			++$_g1;
			$a = (new _hx_array(array()));
			{
				$_g2 = 0;
				while($_g2 < 10000000) {
					$i = $_g2++;
					$a[1] = $i;
					unset($i);
				}
				unset($_g2);
			}
			unset($a);
		}
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'thx.speedTest.TestArray'; }
}
