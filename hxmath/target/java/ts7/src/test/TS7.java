// Generated by Haxe 3.3.0
package test;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TS7 extends haxe.lang.HxObject
{
	public static void main(String[] args)
	{
		Sys._args = args;
		main();
	}
	
	public TS7(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TS7()
	{
		//line 10 "/shared/hxmath/test/TS7.hx"
		test.TS7.__hx_ctor_test_TS7(this);
	}
	
	
	public static void __hx_ctor_test_TS7(test.TS7 __temp_me66)
	{
	}
	
	
	public static boolean main()
	{
		//line 14 "/shared/hxmath/test/TS7.hx"
		nanotest.NanoTestRunner runner = new nanotest.NanoTestRunner(((haxe.lang.Function) (null) ));
		//line 16 "/shared/hxmath/test/TS7.hx"
		java.lang.String w = "";
		//line 17 "/shared/hxmath/test/TS7.hx"
		{
			//line 17 "/shared/hxmath/test/TS7.hx"
			int _g = 0;
			//line 17 "/shared/hxmath/test/TS7.hx"
			haxe.root.Array<java.lang.String> _g1 = haxe.root.Sys.args();
			//line 17 "/shared/hxmath/test/TS7.hx"
			while (( _g < _g1.length ))
			{
				//line 17 "/shared/hxmath/test/TS7.hx"
				java.lang.String arg = _g1.__get(_g);
				//line 17 "/shared/hxmath/test/TS7.hx"
				 ++ _g;
				//line 18 "/shared/hxmath/test/TS7.hx"
				w = arg;
			}
			
		}
		
		//line 20 "/shared/hxmath/test/TS7.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "The value of loop_wrapper is " + w ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TS7", "TS7.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
		//line 21 "/shared/hxmath/test/TS7.hx"
		int x = ((int) (haxe.lang.Runtime.toInt(haxe.root.Std.parseInt(w))) );
		//line 22 "/shared/hxmath/test/TS7.hx"
		{
			//line 22 "/shared/hxmath/test/TS7.hx"
			int _g11 = 0;
			//line 22 "/shared/hxmath/test/TS7.hx"
			while (( _g11 < x ))
			{
				//line 22 "/shared/hxmath/test/TS7.hx"
				 ++ _g11;
				//line 23 "/shared/hxmath/test/TS7.hx"
				runner.add(new test.TestGeom(((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TS7", "TS7.hx", "main"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )})) )));
			}
			
		}
		
		//line 26 "/shared/hxmath/test/TS7.hx"
		return runner.run();
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/shared/hxmath/test/TS7.hx"
		return new test.TS7(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/shared/hxmath/test/TS7.hx"
		return new test.TS7();
	}
	
	
}


