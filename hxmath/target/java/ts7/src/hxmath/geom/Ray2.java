// Generated by Haxe 3.3.0
package hxmath.geom;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Ray2 extends haxe.lang.HxObject
{
	public Ray2(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Ray2(hxmath.math.Vector2Default origin, hxmath.math.Vector2Default normal)
	{
		//line 21 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.geom.Ray2.__hx_ctor_hxmath_geom_Ray2(this, origin, normal);
	}
	
	
	public static void __hx_ctor_hxmath_geom_Ray2(hxmath.geom.Ray2 __temp_me25, hxmath.math.Vector2Default origin, hxmath.math.Vector2Default normal)
	{
		//line 23 "/shared/hxmath/hxmath/geom/Ray2.hx"
		__temp_me25.origin = origin;
		//line 24 "/shared/hxmath/hxmath/geom/Ray2.hx"
		__temp_me25.normal = normal;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		return new hxmath.geom.Ray2(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		return new hxmath.geom.Ray2(((hxmath.math.Vector2Default) (arr.__get(0)) ), ((hxmath.math.Vector2Default) (arr.__get(1)) ));
	}
	
	
	public hxmath.math.Vector2Default origin;
	
	public hxmath.math.Vector2Default normal;
	
	public final hxmath.math.Vector2Default eval(double t)
	{
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this.normal) );
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(self.x, self.y);
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self1 = ((hxmath.math.Vector2Default) (this1) );
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.x *= t;
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.y *= t;
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default b = this.origin;
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(self1.x, self1.y);
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self2 = ((hxmath.math.Vector2Default) (this2) );
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self2.x += b.x;
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self2.y += b.y;
		//line 35 "/shared/hxmath/hxmath/geom/Ray2.hx"
		return self2;
	}
	
	
	public double intersectPoint(hxmath.math.Vector2Default point, java.lang.Object tolerance)
	{
		//line 46 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double __temp_tolerance23 = ( (haxe.lang.Runtime.eq(tolerance, null)) ? (1e-6) : (((double) (haxe.lang.Runtime.toDouble(tolerance)) )) );
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this.normal) );
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(self.x, self.y);
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self1 = ((hxmath.math.Vector2Default) (this1) );
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double newX =  - (self1.y) ;
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.y = self1.x;
		//line 48 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.x = newX;
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default b = this.origin;
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(point.x, point.y);
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self2 = ((hxmath.math.Vector2Default) (this2) );
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self2.x -= b.x;
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self2.y -= b.y;
		//line 51 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double d = ( ( self2.x * self1.x ) + ( self2.y * self1.y ) );
		//line 52 "/shared/hxmath/hxmath/geom/Ray2.hx"
		if (( d < __temp_tolerance23 )) 
		{
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			hxmath.math.Vector2Default b1 = this.origin;
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			hxmath.math.Vector2Default this3 = new hxmath.math.Vector2Default(point.x, point.y);
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			hxmath.math.Vector2Default self3 = ((hxmath.math.Vector2Default) (this3) );
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			self3.x -= b1.x;
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			self3.y -= b1.y;
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			hxmath.math.Vector2Default b2 = this.normal;
			//line 55 "/shared/hxmath/hxmath/geom/Ray2.hx"
			double t = ( ( self3.x * b2.x ) + ( self3.y * b2.y ) );
			//line 57 "/shared/hxmath/hxmath/geom/Ray2.hx"
			if (( t >= 0.0 )) 
			{
				//line 59 "/shared/hxmath/hxmath/geom/Ray2.hx"
				return t;
			}
			
		}
		
		//line 63 "/shared/hxmath/hxmath/geom/Ray2.hx"
		return java.lang.Double.NEGATIVE_INFINITY;
	}
	
	
	public final int getClosestPoint(haxe.root.Array<hxmath.math.Vector2Default> points, java.lang.Object tolerance)
	{
		//line 74 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double __temp_tolerance24 = ( (haxe.lang.Runtime.eq(tolerance, null)) ? (1e-6) : (((double) (haxe.lang.Runtime.toDouble(tolerance)) )) );
		//line 75 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double closestHit = java.lang.Double.NEGATIVE_INFINITY;
		//line 76 "/shared/hxmath/hxmath/geom/Ray2.hx"
		int hitIndex = -1;
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this.normal) );
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(self.x, self.y);
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		hxmath.math.Vector2Default self1 = ((hxmath.math.Vector2Default) (this1) );
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		double newX =  - (self1.y) ;
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.y = self1.x;
		//line 77 "/shared/hxmath/hxmath/geom/Ray2.hx"
		self1.x = newX;
		//line 79 "/shared/hxmath/hxmath/geom/Ray2.hx"
		{
			//line 79 "/shared/hxmath/hxmath/geom/Ray2.hx"
			int _g1 = 0;
			//line 79 "/shared/hxmath/hxmath/geom/Ray2.hx"
			int _g = points.length;
			//line 79 "/shared/hxmath/hxmath/geom/Ray2.hx"
			while (( _g1 < _g ))
			{
				//line 79 "/shared/hxmath/hxmath/geom/Ray2.hx"
				int i = _g1++;
				//line 81 "/shared/hxmath/hxmath/geom/Ray2.hx"
				double t = this.intersectPoint(points.__get(i), __temp_tolerance24);
				//line 82 "/shared/hxmath/hxmath/geom/Ray2.hx"
				if (( ( t > 0.0 ) && (( ( hitIndex == -1 ) || ( ( t < closestHit ) && ( t >= 0.0 ) ) )) )) 
				{
					//line 85 "/shared/hxmath/hxmath/geom/Ray2.hx"
					hitIndex = i;
					//line 86 "/shared/hxmath/hxmath/geom/Ray2.hx"
					closestHit = t;
				}
				
			}
			
		}
		
		//line 90 "/shared/hxmath/hxmath/geom/Ray2.hx"
		return hitIndex;
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		{
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			switch (field.hashCode())
			{
				case -1039745817:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("normal")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						this.normal = ((hxmath.math.Vector2Default) (value) );
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return value;
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case -1008619738:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("origin")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						this.origin = ((hxmath.math.Vector2Default) (value) );
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return value;
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		{
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			switch (field.hashCode())
			{
				case 998750509:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("getClosestPoint")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getClosestPoint")) );
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case -1008619738:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("origin")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return this.origin;
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case -102933583:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("intersectPoint")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "intersectPoint")) );
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case -1039745817:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("normal")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return this.normal;
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case 3125404:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("eval")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "eval")) );
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		{
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			switch (field.hashCode())
			{
				case 998750509:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("getClosestPoint")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return this.getClosestPoint(((haxe.root.Array<hxmath.math.Vector2Default>) (dynargs.__get(0)) ), dynargs.__get(1));
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case 3125404:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("eval")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return this.eval(((double) (haxe.lang.Runtime.toDouble(dynargs.__get(0))) ));
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
				case -102933583:
				{
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					if (field.equals("intersectPoint")) 
					{
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						__temp_executeDef1 = false;
						//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
						return this.intersectPoint(((hxmath.math.Vector2Default) (dynargs.__get(0)) ), dynargs.__get(1));
					}
					
					//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
					break;
				}
				
				
			}
			
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		baseArr.push("normal");
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		baseArr.push("origin");
		//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
		{
			//line 10 "/shared/hxmath/hxmath/geom/Ray2.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


