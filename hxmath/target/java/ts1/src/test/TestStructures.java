// Generated by Haxe 3.3.0
package test;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestStructures extends test.MathTestCase
{
	public TestStructures(haxe.lang.EmptyObject empty)
	{
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public TestStructures(java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		test.TestStructures.__hx_ctor_test_TestStructures(this, posInfos);
	}
	
	
	public static void __hx_ctor_test_TestStructures(test.TestStructures __temp_me59, java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		test.MathTestCase.__hx_ctor_test_MathTestCase(__temp_me59, posInfos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		return new test.TestStructures(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		return new test.TestStructures(((java.lang.Object) (arr.__get(0)) ));
	}
	
	
	public void testEquals()
	{
		//line 22 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this1 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 22 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default m = ((hxmath.math.Matrix2x2Default) (this1) );
		//line 22 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this2 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 22 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n = ((hxmath.math.Matrix2x2Default) (this2) );
		//line 22 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( m == null ) && ( n == null ) ) || ( ( ( ( ( ( m != null ) && ( n != null ) ) && ( m.a == n.a ) ) && ( m.b == n.b ) ) && ( m.c == n.c ) ) && ( m.d == n.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )}));
		//line 23 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this3 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 23 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default tmp = ((hxmath.math.Matrix2x2Default) (this3) );
		//line 23 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 23 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp != ((hxmath.math.Matrix2x2Default) (this4) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )}));
		//line 24 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 24 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default m1 = ((hxmath.math.Matrix3x2Default) (this5) );
		//line 24 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this6 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 24 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n1 = ((hxmath.math.Matrix3x2Default) (this6) );
		//line 24 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( m1 == null ) && ( n1 == null ) ) || ( ( ( ( ( ( ( ( m1 != null ) && ( n1 != null ) ) && ( m1.a == n1.a ) ) && ( m1.b == n1.b ) ) && ( m1.c == n1.c ) ) && ( m1.d == n1.d ) ) && ( m1.tx == n1.tx ) ) && ( m1.ty == n1.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
		//line 25 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this7 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 25 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default tmp1 = ((hxmath.math.Matrix3x2Default) (this7) );
		//line 25 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this8 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 25 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp1 != ((hxmath.math.Matrix3x2Default) (this8) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
		//line 26 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this9 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 26 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default a = ((hxmath.math.Matrix3x3Default) (this9) );
		//line 26 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this10 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 26 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b = ((hxmath.math.Matrix3x3Default) (this10) );
		//line 26 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a == null ) && ( b == null ) ) || ( ( ( ( ( ( ( ( ( ( ( a != null ) && ( b != null ) ) && ( a.m00 == b.m00 ) ) && ( a.m10 == b.m10 ) ) && ( a.m20 == b.m20 ) ) && ( a.m01 == b.m01 ) ) && ( a.m11 == b.m11 ) ) && ( a.m21 == b.m21 ) ) && ( a.m02 == b.m02 ) ) && ( a.m12 == b.m12 ) ) && ( a.m22 == b.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (26) )) )}));
		//line 27 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this11 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 27 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default tmp2 = ((hxmath.math.Matrix3x3Default) (this11) );
		//line 27 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this12 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 27 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp2 != ((hxmath.math.Matrix3x3Default) (this12) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (27) )) )}));
		//line 28 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this13 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 28 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default a1 = ((hxmath.math.Matrix4x4Default) (this13) );
		//line 28 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this14 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 28 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b1 = ((hxmath.math.Matrix4x4Default) (this14) );
		//line 28 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a1 == null ) && ( b1 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( a1 != null ) && ( b1 != null ) ) && ( a1.m00 == b1.m00 ) ) && ( a1.m10 == b1.m10 ) ) && ( a1.m20 == b1.m20 ) ) && ( a1.m30 == b1.m30 ) ) && ( a1.m01 == b1.m01 ) ) && ( a1.m11 == b1.m11 ) ) && ( a1.m21 == b1.m21 ) ) && ( a1.m31 == b1.m31 ) ) && ( a1.m02 == b1.m02 ) ) && ( a1.m12 == b1.m12 ) ) && ( a1.m22 == b1.m22 ) ) && ( a1.m32 == b1.m32 ) ) && ( a1.m03 == b1.m03 ) ) && ( a1.m13 == b1.m13 ) ) && ( a1.m23 == b1.m23 ) ) && ( a1.m33 == b1.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		//line 29 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this15 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 29 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default tmp3 = ((hxmath.math.Matrix4x4Default) (this15) );
		//line 29 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this16 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 29 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp3 != ((hxmath.math.Matrix4x4Default) (this16) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )}));
		//line 31 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this17 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 31 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default a2 = ((hxmath.math.Vector2Default) (this17) );
		//line 31 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this18 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 31 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b2 = ((hxmath.math.Vector2Default) (this18) );
		//line 31 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a2 == null ) && ( b2 == null ) ) || ( ( ( ( a2 != null ) && ( b2 != null ) ) && ( a2.x == b2.x ) ) && ( a2.y == b2.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )}));
		//line 32 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this19 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 32 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp4 = ((hxmath.math.Vector2Default) (this19) );
		//line 32 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this20 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 32 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp4 != ((hxmath.math.Vector2Default) (this20) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (32) )) )}));
		//line 33 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this21 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 33 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default a3 = ((hxmath.math.Vector3Default) (this21) );
		//line 33 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this22 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 33 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b3 = ((hxmath.math.Vector3Default) (this22) );
		//line 33 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a3 == null ) && ( b3 == null ) ) || ( ( ( ( ( a3 != null ) && ( b3 != null ) ) && ( a3.x == b3.x ) ) && ( a3.y == b3.y ) ) && ( a3.z == b3.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (33) )) )}));
		//line 34 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this23 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 34 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp5 = ((hxmath.math.Vector3Default) (this23) );
		//line 34 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this24 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 34 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp5 != ((hxmath.math.Vector3Default) (this24) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )}));
		//line 35 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this25 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 35 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a4 = ((hxmath.math.Vector4Default) (this25) );
		//line 35 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this26 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 35 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b4 = ((hxmath.math.Vector4Default) (this26) );
		//line 35 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a4 == null ) && ( b4 == null ) ) || ( ( ( ( ( ( a4 != null ) && ( b4 != null ) ) && ( a4.x == b4.x ) ) && ( a4.y == b4.y ) ) && ( a4.z == b4.z ) ) && ( a4.w == b4.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
		//line 36 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this27 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 36 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp6 = ((hxmath.math.Vector4Default) (this27) );
		//line 36 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this28 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 36 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp6 != ((hxmath.math.Vector4Default) (this28) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
		//line 38 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this29 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 38 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault a5 = ((hxmath.math.QuaternionDefault) (this29) );
		//line 38 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this30 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 38 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b5 = ((hxmath.math.QuaternionDefault) (this30) );
		//line 38 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a5 == null ) && ( b5 == null ) ) || ( ( ( ( ( ( a5 != null ) && ( b5 != null ) ) && ( a5.s == b5.s ) ) && ( a5.x == b5.x ) ) && ( a5.y == b5.y ) ) && ( a5.z == b5.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (38) )) )}));
		//line 39 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this31 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 39 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault tmp7 = ((hxmath.math.QuaternionDefault) (this31) );
		//line 39 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this32 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 39 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( tmp7 != ((hxmath.math.QuaternionDefault) (this32) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (39) )) )}));
		//line 41 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default a6 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 1);
		//line 41 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b6 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 1);
		//line 41 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a6 == null ) && ( b6 == null ) ) || ( ( ( ( a6 != null ) && ( b6 != null ) ) && ( a6.x == b6.x ) ) && ( a6.y == b6.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
		//line 42 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._IntVector2.IntVector2_Impl_._new(0, 1) != hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )}));
		//line 44 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 1) == hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 1) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
		//line 45 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 1) != hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEquals"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (45) )) )}));
	}
	
	
	public void testClone()
	{
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this1 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self = ((hxmath.math.Matrix2x2Default) (this1) );
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this2 = new hxmath.math.Matrix2x2Default(self.a, self.b, self.c, self.d);
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default m = ((hxmath.math.Matrix2x2Default) (this2) );
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this3 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n = ((hxmath.math.Matrix2x2Default) (this3) );
		//line 50 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( m == null ) && ( n == null ) ) || ( ( ( ( ( ( m != null ) && ( n != null ) ) && ( m.a == n.a ) ) && ( m.b == n.b ) ) && ( m.c == n.c ) ) && ( m.d == n.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (50) )) )}));
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this4 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self1 = ((hxmath.math.Matrix3x2Default) (this4) );
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(self1.a, self1.b, self1.c, self1.d, self1.tx, self1.ty);
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default m1 = ((hxmath.math.Matrix3x2Default) (this5) );
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this6 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n1 = ((hxmath.math.Matrix3x2Default) (this6) );
		//line 51 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( m1 == null ) && ( n1 == null ) ) || ( ( ( ( ( ( ( ( m1 != null ) && ( n1 != null ) ) && ( m1.a == n1.a ) ) && ( m1.b == n1.b ) ) && ( m1.c == n1.c ) ) && ( m1.d == n1.d ) ) && ( m1.tx == n1.tx ) ) && ( m1.ty == n1.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (51) )) )}));
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this7 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self2 = ((hxmath.math.Matrix3x3Default) (this7) );
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this8 = new hxmath.math.Matrix3x3Default(self2.m00, self2.m10, self2.m20, self2.m01, self2.m11, self2.m21, self2.m02, self2.m12, self2.m22);
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default a = ((hxmath.math.Matrix3x3Default) (this8) );
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this9 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b = ((hxmath.math.Matrix3x3Default) (this9) );
		//line 52 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a == null ) && ( b == null ) ) || ( ( ( ( ( ( ( ( ( ( ( a != null ) && ( b != null ) ) && ( a.m00 == b.m00 ) ) && ( a.m10 == b.m10 ) ) && ( a.m20 == b.m20 ) ) && ( a.m01 == b.m01 ) ) && ( a.m11 == b.m11 ) ) && ( a.m21 == b.m21 ) ) && ( a.m02 == b.m02 ) ) && ( a.m12 == b.m12 ) ) && ( a.m22 == b.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (52) )) )}));
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this10 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self3 = ((hxmath.math.Matrix4x4Default) (this10) );
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this11 = new hxmath.math.Matrix4x4Default(self3.m00, self3.m10, self3.m20, self3.m30, self3.m01, self3.m11, self3.m21, self3.m31, self3.m02, self3.m12, self3.m22, self3.m32, self3.m03, self3.m13, self3.m23, self3.m33);
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default a1 = ((hxmath.math.Matrix4x4Default) (this11) );
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this12 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b1 = ((hxmath.math.Matrix4x4Default) (this12) );
		//line 53 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a1 == null ) && ( b1 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( a1 != null ) && ( b1 != null ) ) && ( a1.m00 == b1.m00 ) ) && ( a1.m10 == b1.m10 ) ) && ( a1.m20 == b1.m20 ) ) && ( a1.m30 == b1.m30 ) ) && ( a1.m01 == b1.m01 ) ) && ( a1.m11 == b1.m11 ) ) && ( a1.m21 == b1.m21 ) ) && ( a1.m31 == b1.m31 ) ) && ( a1.m02 == b1.m02 ) ) && ( a1.m12 == b1.m12 ) ) && ( a1.m22 == b1.m22 ) ) && ( a1.m32 == b1.m32 ) ) && ( a1.m03 == b1.m03 ) ) && ( a1.m13 == b1.m13 ) ) && ( a1.m23 == b1.m23 ) ) && ( a1.m33 == b1.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (53) )) )}));
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this13 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self4 = ((hxmath.math.Vector2Default) (this13) );
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this14 = new hxmath.math.Vector2Default(self4.x, self4.y);
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default a2 = ((hxmath.math.Vector2Default) (this14) );
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this15 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b2 = ((hxmath.math.Vector2Default) (this15) );
		//line 55 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a2 == null ) && ( b2 == null ) ) || ( ( ( ( a2 != null ) && ( b2 != null ) ) && ( a2.x == b2.x ) ) && ( a2.y == b2.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this16 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self5 = ((hxmath.math.Vector3Default) (this16) );
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this17 = new hxmath.math.Vector3Default(self5.x, self5.y, self5.z);
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default a3 = ((hxmath.math.Vector3Default) (this17) );
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this18 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b3 = ((hxmath.math.Vector3Default) (this18) );
		//line 56 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a3 == null ) && ( b3 == null ) ) || ( ( ( ( ( a3 != null ) && ( b3 != null ) ) && ( a3.x == b3.x ) ) && ( a3.y == b3.y ) ) && ( a3.z == b3.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (56) )) )}));
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this19 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self6 = ((hxmath.math.Vector4Default) (this19) );
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this20 = new hxmath.math.Vector4Default(self6.x, self6.y, self6.z, self6.w);
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a4 = ((hxmath.math.Vector4Default) (this20) );
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this21 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b4 = ((hxmath.math.Vector4Default) (this21) );
		//line 57 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a4 == null ) && ( b4 == null ) ) || ( ( ( ( ( ( a4 != null ) && ( b4 != null ) ) && ( a4.x == b4.x ) ) && ( a4.y == b4.y ) ) && ( a4.z == b4.z ) ) && ( a4.w == b4.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (57) )) )}));
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this22 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self7 = ((hxmath.math.QuaternionDefault) (this22) );
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this23 = new hxmath.math.QuaternionDefault(self7.s, self7.x, self7.y, self7.z);
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault a5 = ((hxmath.math.QuaternionDefault) (this23) );
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this24 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b5 = ((hxmath.math.QuaternionDefault) (this24) );
		//line 59 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a5 == null ) && ( b5 == null ) ) || ( ( ( ( ( ( a5 != null ) && ( b5 != null ) ) && ( a5.s == b5.s ) ) && ( a5.x == b5.x ) ) && ( a5.y == b5.y ) ) && ( a5.z == b5.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (59) )) )}));
		//line 61 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self8 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0)) );
		//line 61 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default a6 = hxmath.math._IntVector2.IntVector2_Impl_._new(self8.x, self8.y);
		//line 61 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b6 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 61 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( a6 == null ) && ( b6 == null ) ) || ( ( ( ( a6 != null ) && ( b6 != null ) ) && ( a6.x == b6.x ) ) && ( a6.y == b6.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClone"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
	}
	
	
	public void testAddSub()
	{
		//line 66 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this1 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 66 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default mat22 = ((hxmath.math.Matrix2x2Default) (this1) );
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this2 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n = ((hxmath.math.Matrix2x2Default) (this2) );
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self = ((hxmath.math.Matrix2x2Default) (mat22) );
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this3 = new hxmath.math.Matrix2x2Default(self.a, self.b, self.c, self.d);
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self1 = ((hxmath.math.Matrix2x2Default) (this3) );
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		self1.a += n.a;
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		self1.b += n.b;
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		self1.c += n.c;
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		self1.d += n.d;
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n1 = ((hxmath.math.Matrix2x2Default) (this4) );
		//line 67 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self1 == null ) && ( n1 == null ) ) || ( ( ( ( ( ( self1 != null ) && ( n1 != null ) ) && ( self1.a == n1.a ) ) && ( self1.b == n1.b ) ) && ( self1.c == n1.c ) ) && ( self1.d == n1.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )}));
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this5 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n2 = ((hxmath.math.Matrix2x2Default) (this5) );
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self2 = ((hxmath.math.Matrix2x2Default) (mat22) );
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this6 = new hxmath.math.Matrix2x2Default(self2.a, self2.b, self2.c, self2.d);
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self3 = ((hxmath.math.Matrix2x2Default) (this6) );
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		self3.a += n2.a;
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		self3.b += n2.b;
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		self3.c += n2.c;
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		self3.d += n2.d;
		//line 68 "/shared/hxmath/test/TestStructures.hx"
		mat22 = self3;
		//line 69 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this7 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 69 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n3 = ((hxmath.math.Matrix2x2Default) (this7) );
		//line 69 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self3 == null ) && ( n3 == null ) ) || ( ( ( ( ( ( self3 != null ) && ( n3 != null ) ) && ( self3.a == n3.a ) ) && ( self3.b == n3.b ) ) && ( self3.c == n3.c ) ) && ( self3.d == n3.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (69) )) )}));
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this8 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n4 = ((hxmath.math.Matrix2x2Default) (this8) );
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self4 = ((hxmath.math.Matrix2x2Default) (self3) );
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this9 = new hxmath.math.Matrix2x2Default(self4.a, self4.b, self4.c, self4.d);
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self5 = ((hxmath.math.Matrix2x2Default) (this9) );
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		self5.a -= n4.a;
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		self5.b -= n4.b;
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		self5.c -= n4.c;
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		self5.d -= n4.d;
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this10 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n5 = ((hxmath.math.Matrix2x2Default) (this10) );
		//line 70 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self5 == null ) && ( n5 == null ) ) || ( ( ( ( ( ( self5 != null ) && ( n5 != null ) ) && ( self5.a == n5.a ) ) && ( self5.b == n5.b ) ) && ( self5.c == n5.c ) ) && ( self5.d == n5.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (70) )) )}));
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this11 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n6 = ((hxmath.math.Matrix2x2Default) (this11) );
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self6 = ((hxmath.math.Matrix2x2Default) (self3) );
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this12 = new hxmath.math.Matrix2x2Default(self6.a, self6.b, self6.c, self6.d);
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self7 = ((hxmath.math.Matrix2x2Default) (this12) );
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		self7.a -= n6.a;
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		self7.b -= n6.b;
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		self7.c -= n6.c;
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		self7.d -= n6.d;
		//line 71 "/shared/hxmath/test/TestStructures.hx"
		mat22 = self7;
		//line 72 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this13 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 72 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default n7 = ((hxmath.math.Matrix2x2Default) (this13) );
		//line 72 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self7 == null ) && ( n7 == null ) ) || ( ( ( ( ( ( self7 != null ) && ( n7 != null ) ) && ( self7.a == n7.a ) ) && ( self7.b == n7.b ) ) && ( self7.c == n7.c ) ) && ( self7.d == n7.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (72) )) )}));
		//line 74 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this14 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 74 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default mat32 = ((hxmath.math.Matrix3x2Default) (this14) );
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this15 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n8 = ((hxmath.math.Matrix3x2Default) (this15) );
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self8 = ((hxmath.math.Matrix3x2Default) (mat32) );
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this16 = new hxmath.math.Matrix3x2Default(self8.a, self8.b, self8.c, self8.d, self8.tx, self8.ty);
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self9 = ((hxmath.math.Matrix3x2Default) (this16) );
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.a += n8.a;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.b += n8.b;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.c += n8.c;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.d += n8.d;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.tx += n8.tx;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		self9.ty += n8.ty;
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this17 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n9 = ((hxmath.math.Matrix3x2Default) (this17) );
		//line 75 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self9 == null ) && ( n9 == null ) ) || ( ( ( ( ( ( ( ( self9 != null ) && ( n9 != null ) ) && ( self9.a == n9.a ) ) && ( self9.b == n9.b ) ) && ( self9.c == n9.c ) ) && ( self9.d == n9.d ) ) && ( self9.tx == n9.tx ) ) && ( self9.ty == n9.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (75) )) )}));
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this18 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n10 = ((hxmath.math.Matrix3x2Default) (this18) );
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self10 = ((hxmath.math.Matrix3x2Default) (mat32) );
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this19 = new hxmath.math.Matrix3x2Default(self10.a, self10.b, self10.c, self10.d, self10.tx, self10.ty);
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self11 = ((hxmath.math.Matrix3x2Default) (this19) );
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.a += n10.a;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.b += n10.b;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.c += n10.c;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.d += n10.d;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.tx += n10.tx;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		self11.ty += n10.ty;
		//line 76 "/shared/hxmath/test/TestStructures.hx"
		mat32 = self11;
		//line 77 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this20 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 77 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n11 = ((hxmath.math.Matrix3x2Default) (this20) );
		//line 77 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self11 == null ) && ( n11 == null ) ) || ( ( ( ( ( ( ( ( self11 != null ) && ( n11 != null ) ) && ( self11.a == n11.a ) ) && ( self11.b == n11.b ) ) && ( self11.c == n11.c ) ) && ( self11.d == n11.d ) ) && ( self11.tx == n11.tx ) ) && ( self11.ty == n11.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (77) )) )}));
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this21 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n12 = ((hxmath.math.Matrix3x2Default) (this21) );
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self12 = ((hxmath.math.Matrix3x2Default) (self11) );
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this22 = new hxmath.math.Matrix3x2Default(self12.a, self12.b, self12.c, self12.d, self12.tx, self12.ty);
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self13 = ((hxmath.math.Matrix3x2Default) (this22) );
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.a -= n12.a;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.b -= n12.b;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.c -= n12.c;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.d -= n12.d;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.tx -= n12.tx;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		self13.ty -= n12.ty;
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this23 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n13 = ((hxmath.math.Matrix3x2Default) (this23) );
		//line 78 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self13 == null ) && ( n13 == null ) ) || ( ( ( ( ( ( ( ( self13 != null ) && ( n13 != null ) ) && ( self13.a == n13.a ) ) && ( self13.b == n13.b ) ) && ( self13.c == n13.c ) ) && ( self13.d == n13.d ) ) && ( self13.tx == n13.tx ) ) && ( self13.ty == n13.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (78) )) )}));
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this24 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n14 = ((hxmath.math.Matrix3x2Default) (this24) );
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self14 = ((hxmath.math.Matrix3x2Default) (self11) );
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this25 = new hxmath.math.Matrix3x2Default(self14.a, self14.b, self14.c, self14.d, self14.tx, self14.ty);
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self15 = ((hxmath.math.Matrix3x2Default) (this25) );
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.a -= n14.a;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.b -= n14.b;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.c -= n14.c;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.d -= n14.d;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.tx -= n14.tx;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		self15.ty -= n14.ty;
		//line 79 "/shared/hxmath/test/TestStructures.hx"
		mat32 = self15;
		//line 80 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this26 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 80 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default n15 = ((hxmath.math.Matrix3x2Default) (this26) );
		//line 80 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self15 == null ) && ( n15 == null ) ) || ( ( ( ( ( ( ( ( self15 != null ) && ( n15 != null ) ) && ( self15.a == n15.a ) ) && ( self15.b == n15.b ) ) && ( self15.c == n15.c ) ) && ( self15.d == n15.d ) ) && ( self15.tx == n15.tx ) ) && ( self15.ty == n15.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (80) )) )}));
		//line 82 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this27 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 82 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default mat33 = ((hxmath.math.Matrix3x3Default) (this27) );
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this28 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b = ((hxmath.math.Matrix3x3Default) (this28) );
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self16 = ((hxmath.math.Matrix3x3Default) (mat33) );
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this29 = new hxmath.math.Matrix3x3Default(self16.m00, self16.m10, self16.m20, self16.m01, self16.m11, self16.m21, self16.m02, self16.m12, self16.m22);
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self17 = ((hxmath.math.Matrix3x3Default) (this29) );
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m00 += b.m00;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m10 += b.m10;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m20 += b.m20;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m01 += b.m01;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m11 += b.m11;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m21 += b.m21;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m02 += b.m02;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m12 += b.m12;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		self17.m22 += b.m22;
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this30 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b1 = ((hxmath.math.Matrix3x3Default) (this30) );
		//line 83 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self17 == null ) && ( b1 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( self17 != null ) && ( b1 != null ) ) && ( self17.m00 == b1.m00 ) ) && ( self17.m10 == b1.m10 ) ) && ( self17.m20 == b1.m20 ) ) && ( self17.m01 == b1.m01 ) ) && ( self17.m11 == b1.m11 ) ) && ( self17.m21 == b1.m21 ) ) && ( self17.m02 == b1.m02 ) ) && ( self17.m12 == b1.m12 ) ) && ( self17.m22 == b1.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (83) )) )}));
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this31 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b2 = ((hxmath.math.Matrix3x3Default) (this31) );
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self18 = ((hxmath.math.Matrix3x3Default) (mat33) );
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this32 = new hxmath.math.Matrix3x3Default(self18.m00, self18.m10, self18.m20, self18.m01, self18.m11, self18.m21, self18.m02, self18.m12, self18.m22);
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self19 = ((hxmath.math.Matrix3x3Default) (this32) );
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m00 += b2.m00;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m10 += b2.m10;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m20 += b2.m20;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m01 += b2.m01;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m11 += b2.m11;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m21 += b2.m21;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m02 += b2.m02;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m12 += b2.m12;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		self19.m22 += b2.m22;
		//line 84 "/shared/hxmath/test/TestStructures.hx"
		mat33 = self19;
		//line 85 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this33 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 85 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b3 = ((hxmath.math.Matrix3x3Default) (this33) );
		//line 85 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self19 == null ) && ( b3 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( self19 != null ) && ( b3 != null ) ) && ( self19.m00 == b3.m00 ) ) && ( self19.m10 == b3.m10 ) ) && ( self19.m20 == b3.m20 ) ) && ( self19.m01 == b3.m01 ) ) && ( self19.m11 == b3.m11 ) ) && ( self19.m21 == b3.m21 ) ) && ( self19.m02 == b3.m02 ) ) && ( self19.m12 == b3.m12 ) ) && ( self19.m22 == b3.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (85) )) )}));
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this34 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b4 = ((hxmath.math.Matrix3x3Default) (this34) );
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self20 = ((hxmath.math.Matrix3x3Default) (self19) );
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this35 = new hxmath.math.Matrix3x3Default(self20.m00, self20.m10, self20.m20, self20.m01, self20.m11, self20.m21, self20.m02, self20.m12, self20.m22);
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self21 = ((hxmath.math.Matrix3x3Default) (this35) );
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m00 -= b4.m00;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m10 -= b4.m10;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m20 -= b4.m20;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m01 -= b4.m01;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m11 -= b4.m11;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m21 -= b4.m21;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m02 -= b4.m02;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m12 -= b4.m12;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		self21.m22 -= b4.m22;
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this36 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b5 = ((hxmath.math.Matrix3x3Default) (this36) );
		//line 86 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self21 == null ) && ( b5 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( self21 != null ) && ( b5 != null ) ) && ( self21.m00 == b5.m00 ) ) && ( self21.m10 == b5.m10 ) ) && ( self21.m20 == b5.m20 ) ) && ( self21.m01 == b5.m01 ) ) && ( self21.m11 == b5.m11 ) ) && ( self21.m21 == b5.m21 ) ) && ( self21.m02 == b5.m02 ) ) && ( self21.m12 == b5.m12 ) ) && ( self21.m22 == b5.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (86) )) )}));
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this37 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b6 = ((hxmath.math.Matrix3x3Default) (this37) );
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self22 = ((hxmath.math.Matrix3x3Default) (self19) );
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this38 = new hxmath.math.Matrix3x3Default(self22.m00, self22.m10, self22.m20, self22.m01, self22.m11, self22.m21, self22.m02, self22.m12, self22.m22);
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self23 = ((hxmath.math.Matrix3x3Default) (this38) );
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m00 -= b6.m00;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m10 -= b6.m10;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m20 -= b6.m20;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m01 -= b6.m01;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m11 -= b6.m11;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m21 -= b6.m21;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m02 -= b6.m02;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m12 -= b6.m12;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		self23.m22 -= b6.m22;
		//line 87 "/shared/hxmath/test/TestStructures.hx"
		mat33 = self23;
		//line 88 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this39 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 88 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default b7 = ((hxmath.math.Matrix3x3Default) (this39) );
		//line 88 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self23 == null ) && ( b7 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( self23 != null ) && ( b7 != null ) ) && ( self23.m00 == b7.m00 ) ) && ( self23.m10 == b7.m10 ) ) && ( self23.m20 == b7.m20 ) ) && ( self23.m01 == b7.m01 ) ) && ( self23.m11 == b7.m11 ) ) && ( self23.m21 == b7.m21 ) ) && ( self23.m02 == b7.m02 ) ) && ( self23.m12 == b7.m12 ) ) && ( self23.m22 == b7.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (88) )) )}));
		//line 90 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this40 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 90 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default mat44 = ((hxmath.math.Matrix4x4Default) (this40) );
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this41 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b8 = ((hxmath.math.Matrix4x4Default) (this41) );
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self24 = ((hxmath.math.Matrix4x4Default) (mat44) );
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this42 = new hxmath.math.Matrix4x4Default(self24.m00, self24.m10, self24.m20, self24.m30, self24.m01, self24.m11, self24.m21, self24.m31, self24.m02, self24.m12, self24.m22, self24.m32, self24.m03, self24.m13, self24.m23, self24.m33);
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self25 = ((hxmath.math.Matrix4x4Default) (this42) );
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m00 += b8.m00;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m10 += b8.m10;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m20 += b8.m20;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m30 += b8.m30;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m01 += b8.m01;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m11 += b8.m11;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m21 += b8.m21;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m31 += b8.m31;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m02 += b8.m02;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m12 += b8.m12;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m22 += b8.m22;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m32 += b8.m32;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m03 += b8.m03;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m13 += b8.m13;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m23 += b8.m23;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		self25.m33 += b8.m33;
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this43 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b9 = ((hxmath.math.Matrix4x4Default) (this43) );
		//line 91 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self25 == null ) && ( b9 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( self25 != null ) && ( b9 != null ) ) && ( self25.m00 == b9.m00 ) ) && ( self25.m10 == b9.m10 ) ) && ( self25.m20 == b9.m20 ) ) && ( self25.m30 == b9.m30 ) ) && ( self25.m01 == b9.m01 ) ) && ( self25.m11 == b9.m11 ) ) && ( self25.m21 == b9.m21 ) ) && ( self25.m31 == b9.m31 ) ) && ( self25.m02 == b9.m02 ) ) && ( self25.m12 == b9.m12 ) ) && ( self25.m22 == b9.m22 ) ) && ( self25.m32 == b9.m32 ) ) && ( self25.m03 == b9.m03 ) ) && ( self25.m13 == b9.m13 ) ) && ( self25.m23 == b9.m23 ) ) && ( self25.m33 == b9.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (91) )) )}));
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this44 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b10 = ((hxmath.math.Matrix4x4Default) (this44) );
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self26 = ((hxmath.math.Matrix4x4Default) (mat44) );
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this45 = new hxmath.math.Matrix4x4Default(self26.m00, self26.m10, self26.m20, self26.m30, self26.m01, self26.m11, self26.m21, self26.m31, self26.m02, self26.m12, self26.m22, self26.m32, self26.m03, self26.m13, self26.m23, self26.m33);
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self27 = ((hxmath.math.Matrix4x4Default) (this45) );
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m00 += b10.m00;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m10 += b10.m10;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m20 += b10.m20;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m30 += b10.m30;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m01 += b10.m01;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m11 += b10.m11;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m21 += b10.m21;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m31 += b10.m31;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m02 += b10.m02;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m12 += b10.m12;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m22 += b10.m22;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m32 += b10.m32;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m03 += b10.m03;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m13 += b10.m13;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m23 += b10.m23;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		self27.m33 += b10.m33;
		//line 92 "/shared/hxmath/test/TestStructures.hx"
		mat44 = self27;
		//line 93 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this46 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 93 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b11 = ((hxmath.math.Matrix4x4Default) (this46) );
		//line 93 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self27 == null ) && ( b11 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( self27 != null ) && ( b11 != null ) ) && ( self27.m00 == b11.m00 ) ) && ( self27.m10 == b11.m10 ) ) && ( self27.m20 == b11.m20 ) ) && ( self27.m30 == b11.m30 ) ) && ( self27.m01 == b11.m01 ) ) && ( self27.m11 == b11.m11 ) ) && ( self27.m21 == b11.m21 ) ) && ( self27.m31 == b11.m31 ) ) && ( self27.m02 == b11.m02 ) ) && ( self27.m12 == b11.m12 ) ) && ( self27.m22 == b11.m22 ) ) && ( self27.m32 == b11.m32 ) ) && ( self27.m03 == b11.m03 ) ) && ( self27.m13 == b11.m13 ) ) && ( self27.m23 == b11.m23 ) ) && ( self27.m33 == b11.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (93) )) )}));
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this47 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b12 = ((hxmath.math.Matrix4x4Default) (this47) );
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self28 = ((hxmath.math.Matrix4x4Default) (self27) );
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this48 = new hxmath.math.Matrix4x4Default(self28.m00, self28.m10, self28.m20, self28.m30, self28.m01, self28.m11, self28.m21, self28.m31, self28.m02, self28.m12, self28.m22, self28.m32, self28.m03, self28.m13, self28.m23, self28.m33);
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self29 = ((hxmath.math.Matrix4x4Default) (this48) );
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m00 -= b12.m00;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m10 -= b12.m10;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m20 -= b12.m20;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m30 -= b12.m30;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m01 -= b12.m01;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m11 -= b12.m11;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m21 -= b12.m21;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m31 -= b12.m31;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m02 -= b12.m02;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m12 -= b12.m12;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m22 -= b12.m22;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m32 -= b12.m32;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m03 -= b12.m03;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m13 -= b12.m13;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m23 -= b12.m23;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		self29.m33 -= b12.m33;
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this49 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b13 = ((hxmath.math.Matrix4x4Default) (this49) );
		//line 94 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self29 == null ) && ( b13 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( self29 != null ) && ( b13 != null ) ) && ( self29.m00 == b13.m00 ) ) && ( self29.m10 == b13.m10 ) ) && ( self29.m20 == b13.m20 ) ) && ( self29.m30 == b13.m30 ) ) && ( self29.m01 == b13.m01 ) ) && ( self29.m11 == b13.m11 ) ) && ( self29.m21 == b13.m21 ) ) && ( self29.m31 == b13.m31 ) ) && ( self29.m02 == b13.m02 ) ) && ( self29.m12 == b13.m12 ) ) && ( self29.m22 == b13.m22 ) ) && ( self29.m32 == b13.m32 ) ) && ( self29.m03 == b13.m03 ) ) && ( self29.m13 == b13.m13 ) ) && ( self29.m23 == b13.m23 ) ) && ( self29.m33 == b13.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (94) )) )}));
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this50 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b14 = ((hxmath.math.Matrix4x4Default) (this50) );
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self30 = ((hxmath.math.Matrix4x4Default) (self27) );
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this51 = new hxmath.math.Matrix4x4Default(self30.m00, self30.m10, self30.m20, self30.m30, self30.m01, self30.m11, self30.m21, self30.m31, self30.m02, self30.m12, self30.m22, self30.m32, self30.m03, self30.m13, self30.m23, self30.m33);
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self31 = ((hxmath.math.Matrix4x4Default) (this51) );
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m00 -= b14.m00;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m10 -= b14.m10;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m20 -= b14.m20;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m30 -= b14.m30;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m01 -= b14.m01;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m11 -= b14.m11;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m21 -= b14.m21;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m31 -= b14.m31;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m02 -= b14.m02;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m12 -= b14.m12;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m22 -= b14.m22;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m32 -= b14.m32;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m03 -= b14.m03;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m13 -= b14.m13;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m23 -= b14.m23;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		self31.m33 -= b14.m33;
		//line 95 "/shared/hxmath/test/TestStructures.hx"
		mat44 = self31;
		//line 96 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this52 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 96 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default b15 = ((hxmath.math.Matrix4x4Default) (this52) );
		//line 96 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self31 == null ) && ( b15 == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( self31 != null ) && ( b15 != null ) ) && ( self31.m00 == b15.m00 ) ) && ( self31.m10 == b15.m10 ) ) && ( self31.m20 == b15.m20 ) ) && ( self31.m30 == b15.m30 ) ) && ( self31.m01 == b15.m01 ) ) && ( self31.m11 == b15.m11 ) ) && ( self31.m21 == b15.m21 ) ) && ( self31.m31 == b15.m31 ) ) && ( self31.m02 == b15.m02 ) ) && ( self31.m12 == b15.m12 ) ) && ( self31.m22 == b15.m22 ) ) && ( self31.m32 == b15.m32 ) ) && ( self31.m03 == b15.m03 ) ) && ( self31.m13 == b15.m13 ) ) && ( self31.m23 == b15.m23 ) ) && ( self31.m33 == b15.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (96) )) )}));
		//line 98 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this53 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 98 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default vec2 = ((hxmath.math.Vector2Default) (this53) );
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this54 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b16 = ((hxmath.math.Vector2Default) (this54) );
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self32 = ((hxmath.math.Vector2Default) (vec2) );
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this55 = new hxmath.math.Vector2Default(self32.x, self32.y);
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self33 = ((hxmath.math.Vector2Default) (this55) );
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		self33.x += b16.x;
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		self33.y += b16.y;
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this56 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b17 = ((hxmath.math.Vector2Default) (this56) );
		//line 99 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self33 == null ) && ( b17 == null ) ) || ( ( ( ( self33 != null ) && ( b17 != null ) ) && ( self33.x == b17.x ) ) && ( self33.y == b17.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (99) )) )}));
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this57 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b18 = ((hxmath.math.Vector2Default) (this57) );
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self34 = ((hxmath.math.Vector2Default) (vec2) );
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this58 = new hxmath.math.Vector2Default(self34.x, self34.y);
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self35 = ((hxmath.math.Vector2Default) (this58) );
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		self35.x += b18.x;
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		self35.y += b18.y;
		//line 100 "/shared/hxmath/test/TestStructures.hx"
		vec2 = self35;
		//line 101 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this59 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 101 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b19 = ((hxmath.math.Vector2Default) (this59) );
		//line 101 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self35 == null ) && ( b19 == null ) ) || ( ( ( ( self35 != null ) && ( b19 != null ) ) && ( self35.x == b19.x ) ) && ( self35.y == b19.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (101) )) )}));
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this60 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b20 = ((hxmath.math.Vector2Default) (this60) );
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self36 = ((hxmath.math.Vector2Default) (self35) );
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this61 = new hxmath.math.Vector2Default(self36.x, self36.y);
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self37 = ((hxmath.math.Vector2Default) (this61) );
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		self37.x -= b20.x;
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		self37.y -= b20.y;
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this62 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b21 = ((hxmath.math.Vector2Default) (this62) );
		//line 102 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self37 == null ) && ( b21 == null ) ) || ( ( ( ( self37 != null ) && ( b21 != null ) ) && ( self37.x == b21.x ) ) && ( self37.y == b21.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (102) )) )}));
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this63 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b22 = ((hxmath.math.Vector2Default) (this63) );
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self38 = ((hxmath.math.Vector2Default) (self35) );
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this64 = new hxmath.math.Vector2Default(self38.x, self38.y);
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self39 = ((hxmath.math.Vector2Default) (this64) );
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		self39.x -= b22.x;
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		self39.y -= b22.y;
		//line 103 "/shared/hxmath/test/TestStructures.hx"
		vec2 = self39;
		//line 104 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this65 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 104 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b23 = ((hxmath.math.Vector2Default) (this65) );
		//line 104 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self39 == null ) && ( b23 == null ) ) || ( ( ( ( self39 != null ) && ( b23 != null ) ) && ( self39.x == b23.x ) ) && ( self39.y == b23.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (104) )) )}));
		//line 106 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this66 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 106 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default vec3 = ((hxmath.math.Vector3Default) (this66) );
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this67 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b24 = ((hxmath.math.Vector3Default) (this67) );
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self40 = ((hxmath.math.Vector3Default) (vec3) );
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this68 = new hxmath.math.Vector3Default(self40.x, self40.y, self40.z);
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self41 = ((hxmath.math.Vector3Default) (this68) );
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		self41.x += b24.x;
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		self41.y += b24.y;
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		self41.z += b24.z;
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this69 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b25 = ((hxmath.math.Vector3Default) (this69) );
		//line 107 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self41 == null ) && ( b25 == null ) ) || ( ( ( ( ( self41 != null ) && ( b25 != null ) ) && ( self41.x == b25.x ) ) && ( self41.y == b25.y ) ) && ( self41.z == b25.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (107) )) )}));
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this70 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b26 = ((hxmath.math.Vector3Default) (this70) );
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self42 = ((hxmath.math.Vector3Default) (vec3) );
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this71 = new hxmath.math.Vector3Default(self42.x, self42.y, self42.z);
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self43 = ((hxmath.math.Vector3Default) (this71) );
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		self43.x += b26.x;
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		self43.y += b26.y;
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		self43.z += b26.z;
		//line 108 "/shared/hxmath/test/TestStructures.hx"
		vec3 = self43;
		//line 109 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this72 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 109 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b27 = ((hxmath.math.Vector3Default) (this72) );
		//line 109 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self43 == null ) && ( b27 == null ) ) || ( ( ( ( ( self43 != null ) && ( b27 != null ) ) && ( self43.x == b27.x ) ) && ( self43.y == b27.y ) ) && ( self43.z == b27.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (109) )) )}));
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this73 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b28 = ((hxmath.math.Vector3Default) (this73) );
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self44 = ((hxmath.math.Vector3Default) (self43) );
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this74 = new hxmath.math.Vector3Default(self44.x, self44.y, self44.z);
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self45 = ((hxmath.math.Vector3Default) (this74) );
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		self45.x -= b28.x;
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		self45.y -= b28.y;
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		self45.z -= b28.z;
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this75 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b29 = ((hxmath.math.Vector3Default) (this75) );
		//line 110 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self45 == null ) && ( b29 == null ) ) || ( ( ( ( ( self45 != null ) && ( b29 != null ) ) && ( self45.x == b29.x ) ) && ( self45.y == b29.y ) ) && ( self45.z == b29.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (110) )) )}));
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this76 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b30 = ((hxmath.math.Vector3Default) (this76) );
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self46 = ((hxmath.math.Vector3Default) (self43) );
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this77 = new hxmath.math.Vector3Default(self46.x, self46.y, self46.z);
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self47 = ((hxmath.math.Vector3Default) (this77) );
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		self47.x -= b30.x;
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		self47.y -= b30.y;
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		self47.z -= b30.z;
		//line 111 "/shared/hxmath/test/TestStructures.hx"
		vec3 = self47;
		//line 112 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this78 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 112 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b31 = ((hxmath.math.Vector3Default) (this78) );
		//line 112 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self47 == null ) && ( b31 == null ) ) || ( ( ( ( ( self47 != null ) && ( b31 != null ) ) && ( self47.x == b31.x ) ) && ( self47.y == b31.y ) ) && ( self47.z == b31.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (112) )) )}));
		//line 114 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this79 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 114 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default vec4 = ((hxmath.math.Vector4Default) (this79) );
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this80 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b32 = ((hxmath.math.Vector4Default) (this80) );
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self48 = ((hxmath.math.Vector4Default) (vec4) );
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this81 = new hxmath.math.Vector4Default(self48.x, self48.y, self48.z, self48.w);
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self49 = ((hxmath.math.Vector4Default) (this81) );
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		self49.x += b32.x;
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		self49.y += b32.y;
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		self49.z += b32.z;
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		self49.w += b32.w;
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this82 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b33 = ((hxmath.math.Vector4Default) (this82) );
		//line 115 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self49 == null ) && ( b33 == null ) ) || ( ( ( ( ( ( self49 != null ) && ( b33 != null ) ) && ( self49.x == b33.x ) ) && ( self49.y == b33.y ) ) && ( self49.z == b33.z ) ) && ( self49.w == b33.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (115) )) )}));
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this83 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b34 = ((hxmath.math.Vector4Default) (this83) );
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self50 = ((hxmath.math.Vector4Default) (vec4) );
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this84 = new hxmath.math.Vector4Default(self50.x, self50.y, self50.z, self50.w);
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self51 = ((hxmath.math.Vector4Default) (this84) );
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		self51.x += b34.x;
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		self51.y += b34.y;
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		self51.z += b34.z;
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		self51.w += b34.w;
		//line 116 "/shared/hxmath/test/TestStructures.hx"
		vec4 = self51;
		//line 117 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this85 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 117 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b35 = ((hxmath.math.Vector4Default) (this85) );
		//line 117 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self51 == null ) && ( b35 == null ) ) || ( ( ( ( ( ( self51 != null ) && ( b35 != null ) ) && ( self51.x == b35.x ) ) && ( self51.y == b35.y ) ) && ( self51.z == b35.z ) ) && ( self51.w == b35.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (117) )) )}));
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this86 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b36 = ((hxmath.math.Vector4Default) (this86) );
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self52 = ((hxmath.math.Vector4Default) (self51) );
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this87 = new hxmath.math.Vector4Default(self52.x, self52.y, self52.z, self52.w);
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self53 = ((hxmath.math.Vector4Default) (this87) );
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		self53.x -= b36.x;
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		self53.y -= b36.y;
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		self53.z -= b36.z;
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		self53.w -= b36.w;
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this88 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b37 = ((hxmath.math.Vector4Default) (this88) );
		//line 118 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self53 == null ) && ( b37 == null ) ) || ( ( ( ( ( ( self53 != null ) && ( b37 != null ) ) && ( self53.x == b37.x ) ) && ( self53.y == b37.y ) ) && ( self53.z == b37.z ) ) && ( self53.w == b37.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (118) )) )}));
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this89 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b38 = ((hxmath.math.Vector4Default) (this89) );
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self54 = ((hxmath.math.Vector4Default) (self51) );
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this90 = new hxmath.math.Vector4Default(self54.x, self54.y, self54.z, self54.w);
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self55 = ((hxmath.math.Vector4Default) (this90) );
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		self55.x -= b38.x;
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		self55.y -= b38.y;
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		self55.z -= b38.z;
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		self55.w -= b38.w;
		//line 119 "/shared/hxmath/test/TestStructures.hx"
		vec4 = self55;
		//line 120 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this91 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 120 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b39 = ((hxmath.math.Vector4Default) (this91) );
		//line 120 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self55 == null ) && ( b39 == null ) ) || ( ( ( ( ( ( self55 != null ) && ( b39 != null ) ) && ( self55.x == b39.x ) ) && ( self55.y == b39.y ) ) && ( self55.z == b39.z ) ) && ( self55.w == b39.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (120) )) )}));
		//line 122 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this92 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 122 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault q = ((hxmath.math.QuaternionDefault) (this92) );
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this93 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b40 = ((hxmath.math.QuaternionDefault) (this93) );
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self56 = ((hxmath.math.QuaternionDefault) (q) );
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this94 = new hxmath.math.QuaternionDefault(self56.s, self56.x, self56.y, self56.z);
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self57 = ((hxmath.math.QuaternionDefault) (this94) );
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		self57.s += b40.s;
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		self57.x += b40.x;
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		self57.y += b40.y;
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		self57.z += b40.z;
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this95 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b41 = ((hxmath.math.QuaternionDefault) (this95) );
		//line 123 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self57 == null ) && ( b41 == null ) ) || ( ( ( ( ( ( self57 != null ) && ( b41 != null ) ) && ( self57.s == b41.s ) ) && ( self57.x == b41.x ) ) && ( self57.y == b41.y ) ) && ( self57.z == b41.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (123) )) )}));
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this96 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b42 = ((hxmath.math.QuaternionDefault) (this96) );
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self58 = ((hxmath.math.QuaternionDefault) (q) );
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this97 = new hxmath.math.QuaternionDefault(self58.s, self58.x, self58.y, self58.z);
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self59 = ((hxmath.math.QuaternionDefault) (this97) );
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		self59.s += b42.s;
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		self59.x += b42.x;
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		self59.y += b42.y;
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		self59.z += b42.z;
		//line 124 "/shared/hxmath/test/TestStructures.hx"
		q = self59;
		//line 125 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this98 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 125 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b43 = ((hxmath.math.QuaternionDefault) (this98) );
		//line 125 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self59 == null ) && ( b43 == null ) ) || ( ( ( ( ( ( self59 != null ) && ( b43 != null ) ) && ( self59.s == b43.s ) ) && ( self59.x == b43.x ) ) && ( self59.y == b43.y ) ) && ( self59.z == b43.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (125) )) )}));
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this99 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b44 = ((hxmath.math.QuaternionDefault) (this99) );
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self60 = ((hxmath.math.QuaternionDefault) (self59) );
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this100 = new hxmath.math.QuaternionDefault(self60.s, self60.x, self60.y, self60.z);
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self61 = ((hxmath.math.QuaternionDefault) (this100) );
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		self61.s -= b44.s;
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		self61.x -= b44.x;
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		self61.y -= b44.y;
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		self61.z -= b44.z;
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this101 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b45 = ((hxmath.math.QuaternionDefault) (this101) );
		//line 126 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self61 == null ) && ( b45 == null ) ) || ( ( ( ( ( ( self61 != null ) && ( b45 != null ) ) && ( self61.s == b45.s ) ) && ( self61.x == b45.x ) ) && ( self61.y == b45.y ) ) && ( self61.z == b45.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (126) )) )}));
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this102 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b46 = ((hxmath.math.QuaternionDefault) (this102) );
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self62 = ((hxmath.math.QuaternionDefault) (self59) );
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this103 = new hxmath.math.QuaternionDefault(self62.s, self62.x, self62.y, self62.z);
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self63 = ((hxmath.math.QuaternionDefault) (this103) );
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		self63.s -= b46.s;
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		self63.x -= b46.x;
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		self63.y -= b46.y;
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		self63.z -= b46.z;
		//line 127 "/shared/hxmath/test/TestStructures.hx"
		q = self63;
		//line 128 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this104 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 128 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault b47 = ((hxmath.math.QuaternionDefault) (this104) );
		//line 128 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self63 == null ) && ( b47 == null ) ) || ( ( ( ( ( ( self63 != null ) && ( b47 != null ) ) && ( self63.s == b47.s ) ) && ( self63.x == b47.x ) ) && ( self63.y == b47.y ) ) && ( self63.z == b47.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (128) )) )}));
		//line 130 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default intVec2 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b48 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self64 = ((hxmath.math.IntVector2Default) (intVec2) );
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self65 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(self64.x, self64.y)) );
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		self65.x += b48.x;
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		self65.y += b48.y;
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b49 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 131 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self65 == null ) && ( b49 == null ) ) || ( ( ( ( self65 != null ) && ( b49 != null ) ) && ( self65.x == b49.x ) ) && ( self65.y == b49.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (131) )) )}));
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b50 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self66 = ((hxmath.math.IntVector2Default) (intVec2) );
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self67 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(self66.x, self66.y)) );
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		self67.x += b50.x;
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		self67.y += b50.y;
		//line 132 "/shared/hxmath/test/TestStructures.hx"
		intVec2 = self67;
		//line 133 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b51 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 133 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self67 == null ) && ( b51 == null ) ) || ( ( ( ( self67 != null ) && ( b51 != null ) ) && ( self67.x == b51.x ) ) && ( self67.y == b51.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (133) )) )}));
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b52 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self68 = ((hxmath.math.IntVector2Default) (self67) );
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self69 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(self68.x, self68.y)) );
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		self69.x -= b52.x;
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		self69.y -= b52.y;
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b53 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 134 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self69 == null ) && ( b53 == null ) ) || ( ( ( ( self69 != null ) && ( b53 != null ) ) && ( self69.x == b53.x ) ) && ( self69.y == b53.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (134) )) )}));
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b54 = hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0);
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self70 = ((hxmath.math.IntVector2Default) (self67) );
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self71 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(self70.x, self70.y)) );
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		self71.x -= b54.x;
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		self71.y -= b54.y;
		//line 135 "/shared/hxmath/test/TestStructures.hx"
		intVec2 = self71;
		//line 136 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b55 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 136 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self71 == null ) && ( b55 == null ) ) || ( ( ( ( self71 != null ) && ( b55 != null ) ) && ( self71.x == b55.x ) ) && ( self71.y == b55.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (136) )) )}));
		//line 138 "/shared/hxmath/test/TestStructures.hx"
		int shortVec2 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 0);
		//line 139 "/shared/hxmath/test/TestStructures.hx"
		int b56 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0);
		//line 139 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._ShortVector2.ShortVector2_Impl_._new(( (( ((int) (shortVec2) ) & 65535 )) + (( ((int) (b56) ) & 65535 )) ), ( (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) + (( ( ((int) (b56) ) >> 16 ) & 65535 )) )) == hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (139) )) )}));
		//line 140 "/shared/hxmath/test/TestStructures.hx"
		int b57 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0);
		//line 140 "/shared/hxmath/test/TestStructures.hx"
		shortVec2 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(( (( ((int) (shortVec2) ) & 65535 )) + (( ((int) (b57) ) & 65535 )) ), ( (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) + (( ( ((int) (b57) ) >> 16 ) & 65535 )) ));
		//line 141 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( shortVec2 == hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (141) )) )}));
		//line 142 "/shared/hxmath/test/TestStructures.hx"
		int b58 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0);
		//line 142 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._ShortVector2.ShortVector2_Impl_._new(( (( ((int) (shortVec2) ) & 65535 )) - (( ((int) (b58) ) & 65535 )) ), ( (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) - (( ( ((int) (b58) ) >> 16 ) & 65535 )) )) == hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (142) )) )}));
		//line 143 "/shared/hxmath/test/TestStructures.hx"
		int b59 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0);
		//line 143 "/shared/hxmath/test/TestStructures.hx"
		shortVec2 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(( (( ((int) (shortVec2) ) & 65535 )) - (( ((int) (b59) ) & 65535 )) ), ( (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) - (( ( ((int) (b59) ) >> 16 ) & 65535 )) ));
		//line 144 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( shortVec2 == hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testAddSub"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (144) )) )}));
	}
	
	
	public void testDeterminant()
	{
		//line 149 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this1 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 149 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self = ((hxmath.math.Matrix2x2Default) (this1) );
		//line 149 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( self.a * self.d ) - ( self.b * self.c ) )) ), ((java.lang.Object) (0.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (149) )) )})) ));
		//line 150 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this2 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
		//line 150 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self1 = ((hxmath.math.Matrix2x2Default) (this2) );
		//line 150 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( self1.a * self1.d ) - ( self1.b * self1.c ) )) ), ((java.lang.Object) (1.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (150) )) )})) ));
		//line 152 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 152 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 152 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 10 ))
			{
				//line 152 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 154 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default a = this.randomMatrix2x2(null);
				//line 155 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default b = this.randomMatrix2x2(null);
				//line 156 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default this3 = new hxmath.math.Matrix2x2Default(( ( a.a * b.a ) + ( a.b * b.c ) ), ( ( a.a * b.b ) + ( a.b * b.d ) ), ( ( a.c * b.a ) + ( a.d * b.c ) ), ( ( a.c * b.b ) + ( a.d * b.d ) ));
				//line 156 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default self2 = ((hxmath.math.Matrix2x2Default) (this3) );
				//line 156 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(( ( self2.a * self2.d ) - ( self2.b * self2.c ) ), ( (( ( a.a * a.d ) - ( a.b * a.c ) )) * (( ( b.a * b.d ) - ( b.b * b.c ) )) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (156) )) )}));
			}
			
		}
		
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this4 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self3 = ((hxmath.math.Matrix3x3Default) (this4) );
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m00 = self3.m00;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m10 = self3.m10;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m20 = self3.m20;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m01 = self3.m01;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m11 = self3.m11;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m21 = self3.m21;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m02 = self3.m02;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m12 = self3.m12;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		double m22 = self3.m22;
		//line 159 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( ( m00 * (( ( m11 * m22 ) - ( m21 * m12 ) )) ) - ( m10 * (( ( m01 * m22 ) - ( m21 * m02 ) )) ) ) + ( m20 * (( ( m01 * m12 ) - ( m11 * m02 ) )) ) )) ), ((java.lang.Object) (0.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (159) )) )})) ));
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this5 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self4 = ((hxmath.math.Matrix3x3Default) (this5) );
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m001 = self4.m00;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m101 = self4.m10;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m201 = self4.m20;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m011 = self4.m01;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m111 = self4.m11;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m211 = self4.m21;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m021 = self4.m02;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m121 = self4.m12;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		double m221 = self4.m22;
		//line 160 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( ( m001 * (( ( m111 * m221 ) - ( m211 * m121 ) )) ) - ( m101 * (( ( m011 * m221 ) - ( m211 * m021 ) )) ) ) + ( m201 * (( ( m011 * m121 ) - ( m111 * m021 ) )) ) )) ), ((java.lang.Object) (1.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (160) )) )})) ));
		//line 162 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 162 "/shared/hxmath/test/TestStructures.hx"
			int _g1 = 0;
			//line 162 "/shared/hxmath/test/TestStructures.hx"
			while (( _g1 < 10 ))
			{
				//line 162 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g1;
				//line 164 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default a1 = this.randomMatrix3x3(null);
				//line 165 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default b1 = this.randomMatrix3x3(null);
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(( ( ( a1.m00 * b1.m00 ) + ( a1.m10 * b1.m01 ) ) + ( a1.m20 * b1.m02 ) ), ( ( ( a1.m00 * b1.m10 ) + ( a1.m10 * b1.m11 ) ) + ( a1.m20 * b1.m12 ) ), ( ( ( a1.m00 * b1.m20 ) + ( a1.m10 * b1.m21 ) ) + ( a1.m20 * b1.m22 ) ), ( ( ( a1.m01 * b1.m00 ) + ( a1.m11 * b1.m01 ) ) + ( a1.m21 * b1.m02 ) ), ( ( ( a1.m01 * b1.m10 ) + ( a1.m11 * b1.m11 ) ) + ( a1.m21 * b1.m12 ) ), ( ( ( a1.m01 * b1.m20 ) + ( a1.m11 * b1.m21 ) ) + ( a1.m21 * b1.m22 ) ), ( ( ( a1.m02 * b1.m00 ) + ( a1.m12 * b1.m01 ) ) + ( a1.m22 * b1.m02 ) ), ( ( ( a1.m02 * b1.m10 ) + ( a1.m12 * b1.m11 ) ) + ( a1.m22 * b1.m12 ) ), ( ( ( a1.m02 * b1.m20 ) + ( a1.m12 * b1.m21 ) ) + ( a1.m22 * b1.m22 ) ));
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default self5 = ((hxmath.math.Matrix3x3Default) (this6) );
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m002 = self5.m00;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m102 = self5.m10;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m202 = self5.m20;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m012 = self5.m01;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m112 = self5.m11;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m212 = self5.m21;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m022 = self5.m02;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m122 = self5.m12;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m222 = self5.m22;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double tmp = ( ( ( m002 * (( ( m112 * m222 ) - ( m212 * m122 ) )) ) - ( m102 * (( ( m012 * m222 ) - ( m212 * m022 ) )) ) ) + ( m202 * (( ( m012 * m122 ) - ( m112 * m022 ) )) ) );
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m003 = a1.m00;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m103 = a1.m10;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m203 = a1.m20;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m013 = a1.m01;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m113 = a1.m11;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m213 = a1.m21;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m023 = a1.m02;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m123 = a1.m12;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m223 = a1.m22;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double tmp1 = ( ( ( m003 * (( ( m113 * m223 ) - ( m213 * m123 ) )) ) - ( m103 * (( ( m013 * m223 ) - ( m213 * m023 ) )) ) ) + ( m203 * (( ( m013 * m123 ) - ( m113 * m023 ) )) ) );
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m004 = b1.m00;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m104 = b1.m10;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m204 = b1.m20;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m014 = b1.m01;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m114 = b1.m11;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m214 = b1.m21;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m024 = b1.m02;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m124 = b1.m12;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				double m224 = b1.m22;
				//line 166 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(tmp, ( tmp1 * (( ( ( m004 * (( ( m114 * m224 ) - ( m214 * m124 ) )) ) - ( m104 * (( ( m014 * m224 ) - ( m214 * m024 ) )) ) ) + ( m204 * (( ( m014 * m124 ) - ( m114 * m024 ) )) ) )) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (166) )) )}));
			}
			
		}
		
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self6 = ((hxmath.math.Matrix4x4Default) (this7) );
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m005 = self6.m00;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m105 = self6.m10;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m205 = self6.m20;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m30 = self6.m30;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m015 = self6.m01;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m115 = self6.m11;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m215 = self6.m21;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m31 = self6.m31;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m025 = self6.m02;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m125 = self6.m12;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m225 = self6.m22;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m32 = self6.m32;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m03 = self6.m03;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m13 = self6.m13;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m23 = self6.m23;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		double m33 = self6.m33;
		//line 169 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( ( ( m005 * (( ( ( m115 * (( ( m225 * m33 ) - ( m32 * m23 ) )) ) - ( m215 * (( ( m125 * m33 ) - ( m32 * m13 ) )) ) ) + ( m31 * (( ( m125 * m23 ) - ( m225 * m13 ) )) ) )) ) - ( m105 * (( ( ( m015 * (( ( m225 * m33 ) - ( m32 * m23 ) )) ) - ( m215 * (( ( m025 * m33 ) - ( m32 * m03 ) )) ) ) + ( m31 * (( ( m025 * m23 ) - ( m225 * m03 ) )) ) )) ) ) + ( m205 * (( ( ( m015 * (( ( m125 * m33 ) - ( m32 * m13 ) )) ) - ( m115 * (( ( m025 * m33 ) - ( m32 * m03 ) )) ) ) + ( m31 * (( ( m025 * m13 ) - ( m125 * m03 ) )) ) )) ) ) - ( m30 * (( ( ( m015 * (( ( m125 * m23 ) - ( m225 * m13 ) )) ) - ( m115 * (( ( m025 * m23 ) - ( m225 * m03 ) )) ) ) + ( m215 * (( ( m025 * m13 ) - ( m125 * m03 ) )) ) )) ) )) ), ((java.lang.Object) (0.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (169) )) )})) ));
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this8 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self7 = ((hxmath.math.Matrix4x4Default) (this8) );
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m006 = self7.m00;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m106 = self7.m10;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m206 = self7.m20;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m301 = self7.m30;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m016 = self7.m01;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m116 = self7.m11;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m216 = self7.m21;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m311 = self7.m31;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m026 = self7.m02;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m126 = self7.m12;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m226 = self7.m22;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m321 = self7.m32;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m031 = self7.m03;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m131 = self7.m13;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m231 = self7.m23;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		double m331 = self7.m33;
		//line 170 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (( ( ( ( m006 * (( ( ( m116 * (( ( m226 * m331 ) - ( m321 * m231 ) )) ) - ( m216 * (( ( m126 * m331 ) - ( m321 * m131 ) )) ) ) + ( m311 * (( ( m126 * m231 ) - ( m226 * m131 ) )) ) )) ) - ( m106 * (( ( ( m016 * (( ( m226 * m331 ) - ( m321 * m231 ) )) ) - ( m216 * (( ( m026 * m331 ) - ( m321 * m031 ) )) ) ) + ( m311 * (( ( m026 * m231 ) - ( m226 * m031 ) )) ) )) ) ) + ( m206 * (( ( ( m016 * (( ( m126 * m331 ) - ( m321 * m131 ) )) ) - ( m116 * (( ( m026 * m331 ) - ( m321 * m031 ) )) ) ) + ( m311 * (( ( m026 * m131 ) - ( m126 * m031 ) )) ) )) ) ) - ( m301 * (( ( ( m016 * (( ( m126 * m231 ) - ( m226 * m131 ) )) ) - ( m116 * (( ( m026 * m231 ) - ( m226 * m031 ) )) ) ) + ( m216 * (( ( m026 * m131 ) - ( m126 * m031 ) )) ) )) ) )) ), ((java.lang.Object) (1.0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (170) )) )})) ));
		//line 172 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 172 "/shared/hxmath/test/TestStructures.hx"
			int _g2 = 0;
			//line 172 "/shared/hxmath/test/TestStructures.hx"
			while (( _g2 < 1 ))
			{
				//line 172 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g2;
				//line 174 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default a2 = this.randomMatrix4x4(null);
				//line 175 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default b2 = this.randomMatrix4x4(null);
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default this9 = new hxmath.math.Matrix4x4Default(( ( ( ( a2.m00 * b2.m00 ) + ( a2.m10 * b2.m01 ) ) + ( a2.m20 * b2.m02 ) ) + ( a2.m30 * b2.m03 ) ), ( ( ( ( a2.m00 * b2.m10 ) + ( a2.m10 * b2.m11 ) ) + ( a2.m20 * b2.m12 ) ) + ( a2.m30 * b2.m13 ) ), ( ( ( ( a2.m00 * b2.m20 ) + ( a2.m10 * b2.m21 ) ) + ( a2.m20 * b2.m22 ) ) + ( a2.m30 * b2.m23 ) ), ( ( ( ( a2.m00 * b2.m30 ) + ( a2.m10 * b2.m31 ) ) + ( a2.m20 * b2.m32 ) ) + ( a2.m30 * b2.m33 ) ), ( ( ( ( a2.m01 * b2.m00 ) + ( a2.m11 * b2.m01 ) ) + ( a2.m21 * b2.m02 ) ) + ( a2.m31 * b2.m03 ) ), ( ( ( ( a2.m01 * b2.m10 ) + ( a2.m11 * b2.m11 ) ) + ( a2.m21 * b2.m12 ) ) + ( a2.m31 * b2.m13 ) ), ( ( ( ( a2.m01 * b2.m20 ) + ( a2.m11 * b2.m21 ) ) + ( a2.m21 * b2.m22 ) ) + ( a2.m31 * b2.m23 ) ), ( ( ( ( a2.m01 * b2.m30 ) + ( a2.m11 * b2.m31 ) ) + ( a2.m21 * b2.m32 ) ) + ( a2.m31 * b2.m33 ) ), ( ( ( ( a2.m02 * b2.m00 ) + ( a2.m12 * b2.m01 ) ) + ( a2.m22 * b2.m02 ) ) + ( a2.m32 * b2.m03 ) ), ( ( ( ( a2.m02 * b2.m10 ) + ( a2.m12 * b2.m11 ) ) + ( a2.m22 * b2.m12 ) ) + ( a2.m32 * b2.m13 ) ), ( ( ( ( a2.m02 * b2.m20 ) + ( a2.m12 * b2.m21 ) ) + ( a2.m22 * b2.m22 ) ) + ( a2.m32 * b2.m23 ) ), ( ( ( ( a2.m02 * b2.m30 ) + ( a2.m12 * b2.m31 ) ) + ( a2.m22 * b2.m32 ) ) + ( a2.m32 * b2.m33 ) ), ( ( ( ( a2.m03 * b2.m00 ) + ( a2.m13 * b2.m01 ) ) + ( a2.m23 * b2.m02 ) ) + ( a2.m33 * b2.m03 ) ), ( ( ( ( a2.m03 * b2.m10 ) + ( a2.m13 * b2.m11 ) ) + ( a2.m23 * b2.m12 ) ) + ( a2.m33 * b2.m13 ) ), ( ( ( ( a2.m03 * b2.m20 ) + ( a2.m13 * b2.m21 ) ) + ( a2.m23 * b2.m22 ) ) + ( a2.m33 * b2.m23 ) ), ( ( ( ( a2.m03 * b2.m30 ) + ( a2.m13 * b2.m31 ) ) + ( a2.m23 * b2.m32 ) ) + ( a2.m33 * b2.m33 ) ));
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default self8 = ((hxmath.math.Matrix4x4Default) (this9) );
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m007 = self8.m00;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m107 = self8.m10;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m207 = self8.m20;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m302 = self8.m30;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m017 = self8.m01;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m117 = self8.m11;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m217 = self8.m21;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m312 = self8.m31;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m027 = self8.m02;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m127 = self8.m12;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m227 = self8.m22;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m322 = self8.m32;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m032 = self8.m03;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m132 = self8.m13;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m232 = self8.m23;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m332 = self8.m33;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double tmp2 = ( ( ( ( m007 * (( ( ( m117 * (( ( m227 * m332 ) - ( m322 * m232 ) )) ) - ( m217 * (( ( m127 * m332 ) - ( m322 * m132 ) )) ) ) + ( m312 * (( ( m127 * m232 ) - ( m227 * m132 ) )) ) )) ) - ( m107 * (( ( ( m017 * (( ( m227 * m332 ) - ( m322 * m232 ) )) ) - ( m217 * (( ( m027 * m332 ) - ( m322 * m032 ) )) ) ) + ( m312 * (( ( m027 * m232 ) - ( m227 * m032 ) )) ) )) ) ) + ( m207 * (( ( ( m017 * (( ( m127 * m332 ) - ( m322 * m132 ) )) ) - ( m117 * (( ( m027 * m332 ) - ( m322 * m032 ) )) ) ) + ( m312 * (( ( m027 * m132 ) - ( m127 * m032 ) )) ) )) ) ) - ( m302 * (( ( ( m017 * (( ( m127 * m232 ) - ( m227 * m132 ) )) ) - ( m117 * (( ( m027 * m232 ) - ( m227 * m032 ) )) ) ) + ( m217 * (( ( m027 * m132 ) - ( m127 * m032 ) )) ) )) ) );
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m008 = a2.m00;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m108 = a2.m10;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m208 = a2.m20;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m303 = a2.m30;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m018 = a2.m01;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m118 = a2.m11;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m218 = a2.m21;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m313 = a2.m31;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m028 = a2.m02;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m128 = a2.m12;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m228 = a2.m22;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m323 = a2.m32;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m033 = a2.m03;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m133 = a2.m13;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m233 = a2.m23;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m333 = a2.m33;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double tmp3 = ( ( ( ( m008 * (( ( ( m118 * (( ( m228 * m333 ) - ( m323 * m233 ) )) ) - ( m218 * (( ( m128 * m333 ) - ( m323 * m133 ) )) ) ) + ( m313 * (( ( m128 * m233 ) - ( m228 * m133 ) )) ) )) ) - ( m108 * (( ( ( m018 * (( ( m228 * m333 ) - ( m323 * m233 ) )) ) - ( m218 * (( ( m028 * m333 ) - ( m323 * m033 ) )) ) ) + ( m313 * (( ( m028 * m233 ) - ( m228 * m033 ) )) ) )) ) ) + ( m208 * (( ( ( m018 * (( ( m128 * m333 ) - ( m323 * m133 ) )) ) - ( m118 * (( ( m028 * m333 ) - ( m323 * m033 ) )) ) ) + ( m313 * (( ( m028 * m133 ) - ( m128 * m033 ) )) ) )) ) ) - ( m303 * (( ( ( m018 * (( ( m128 * m233 ) - ( m228 * m133 ) )) ) - ( m118 * (( ( m028 * m233 ) - ( m228 * m033 ) )) ) ) + ( m218 * (( ( m028 * m133 ) - ( m128 * m033 ) )) ) )) ) );
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m009 = b2.m00;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m109 = b2.m10;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m209 = b2.m20;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m304 = b2.m30;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m019 = b2.m01;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m119 = b2.m11;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m219 = b2.m21;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m314 = b2.m31;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m029 = b2.m02;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m129 = b2.m12;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m229 = b2.m22;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m324 = b2.m32;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m034 = b2.m03;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m134 = b2.m13;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m234 = b2.m23;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				double m334 = b2.m33;
				//line 176 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(tmp2, ( tmp3 * (( ( ( ( m009 * (( ( ( m119 * (( ( m229 * m334 ) - ( m324 * m234 ) )) ) - ( m219 * (( ( m129 * m334 ) - ( m324 * m134 ) )) ) ) + ( m314 * (( ( m129 * m234 ) - ( m229 * m134 ) )) ) )) ) - ( m109 * (( ( ( m019 * (( ( m229 * m334 ) - ( m324 * m234 ) )) ) - ( m219 * (( ( m029 * m334 ) - ( m324 * m034 ) )) ) ) + ( m314 * (( ( m029 * m234 ) - ( m229 * m034 ) )) ) )) ) ) + ( m209 * (( ( ( m019 * (( ( m129 * m334 ) - ( m324 * m134 ) )) ) - ( m119 * (( ( m029 * m334 ) - ( m324 * m034 ) )) ) ) + ( m314 * (( ( m029 * m134 ) - ( m129 * m034 ) )) ) )) ) ) - ( m304 * (( ( ( m019 * (( ( m129 * m234 ) - ( m229 * m134 ) )) ) - ( m119 * (( ( m029 * m234 ) - ( m229 * m034 ) )) ) ) + ( m219 * (( ( m029 * m134 ) - ( m129 * m034 ) )) ) )) ) )) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDeterminant"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (176) )) )}));
			}
			
		}
		
	}
	
	
	public void testArrayAccess()
	{
		//line 182 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 182 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default vec2 = ((hxmath.math.Vector2Default) (this1) );
		//line 183 "/shared/hxmath/test/TestStructures.hx"
		vec2.y = 1.0;
		//line 184 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (vec2.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (184) )) )})) ));
		//line 185 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (vec2.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (185) )) )})) ));
		//line 187 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 187 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default vec3 = ((hxmath.math.Vector3Default) (this2) );
		//line 188 "/shared/hxmath/test/TestStructures.hx"
		vec3.y = 1.0;
		//line 189 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (vec3.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (189) )) )})) ));
		//line 190 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (vec3.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (190) )) )})) ));
		//line 192 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 192 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default vec4 = ((hxmath.math.Vector4Default) (this3) );
		//line 193 "/shared/hxmath/test/TestStructures.hx"
		vec4.y = 1.0;
		//line 194 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (vec4.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (194) )) )})) ));
		//line 195 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (vec4.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (195) )) )})) ));
		//line 197 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 197 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default mat2x2 = ((hxmath.math.Matrix2x2Default) (this4) );
		//line 198 "/shared/hxmath/test/TestStructures.hx"
		mat2x2.c = 1.0;
		//line 199 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (mat2x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (199) )) )})) ));
		//line 200 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat2x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (200) )) )})) ));
		//line 201 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat2x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (201) )) )})) ));
		//line 203 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 203 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default mat3x2 = ((hxmath.math.Matrix3x2Default) (this5) );
		//line 204 "/shared/hxmath/test/TestStructures.hx"
		mat3x2.c = 1.0;
		//line 205 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (mat3x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (205) )) )})) ));
		//line 206 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat3x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (206) )) )})) ));
		//line 207 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat3x2.c) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (207) )) )})) ));
		//line 209 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 209 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default mat3x3 = ((hxmath.math.Matrix3x3Default) (this6) );
		//line 210 "/shared/hxmath/test/TestStructures.hx"
		mat3x3.m21 = 1.0;
		//line 211 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (mat3x3.m21) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (211) )) )})) ));
		//line 212 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat3x3.m21) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (212) )) )})) ));
		//line 213 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat3x3.m21) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (213) )) )})) ));
		//line 215 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 215 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default mat4x4 = ((hxmath.math.Matrix4x4Default) (this7) );
		//line 216 "/shared/hxmath/test/TestStructures.hx"
		mat4x4.m11 = 1.0;
		//line 217 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (mat4x4.m11) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (217) )) )})) ));
		//line 218 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat4x4.m11) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (218) )) )})) ));
		//line 219 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (mat4x4.m11) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (219) )) )})) ));
		//line 221 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this8 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 221 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault quat = ((hxmath.math.QuaternionDefault) (this8) );
		//line 222 "/shared/hxmath/test/TestStructures.hx"
		quat.y = 1.0;
		//line 223 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (quat.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (223) )) )})) ));
		//line 224 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1.0) ), ((double) (quat.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (224) )) )})) ));
		//line 226 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default intVec2 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 227 "/shared/hxmath/test/TestStructures.hx"
		intVec2.y = 1;
		//line 228 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1) ), ((java.lang.Object) (intVec2.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (228) )) )})) ));
		//line 229 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1) ), ((int) (intVec2.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (229) )) )})) ));
		//line 232 "/shared/hxmath/test/TestStructures.hx"
		int shortVec2 = hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 1);
		//line 233 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1) ), ((java.lang.Object) (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (233) )) )})) ));
		//line 234 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (1) ), ((int) (( ( ((int) (shortVec2) ) >> 16 ) & 65535 )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testArrayAccess"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (234) )) )})) ));
	}
	
	
	public void testApplyScalarFunc()
	{
		//line 242 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 240 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp = null;
		//line 240 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 241 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl1 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "applyScalarFunc")) );
			//line 244 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl2 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "getArrayElement")) );
			//line 245 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl3 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "setArrayElement")) );
			//line 240 "/shared/hxmath/test/TestStructures.hx"
			tmp = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, ((hxmath.math.Vector2Default) (this1) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (2) )) )});
		}
		
		//line 249 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 247 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp1 = null;
		//line 247 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 248 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl4 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "applyScalarFunc")) );
			//line 251 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl5 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "getArrayElement")) );
			//line 252 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl6 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "setArrayElement")) );
			//line 247 "/shared/hxmath/test/TestStructures.hx"
			tmp1 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl4, __temp_odecl5, __temp_odecl6, ((hxmath.math.Vector3Default) (this2) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (3) )) )});
		}
		
		//line 256 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 254 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp2 = null;
		//line 254 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 255 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl7 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "applyScalarFunc")) );
			//line 258 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl8 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "getArrayElement")) );
			//line 259 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl9 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "setArrayElement")) );
			//line 254 "/shared/hxmath/test/TestStructures.hx"
			tmp2 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl7, __temp_odecl8, __temp_odecl9, ((hxmath.math.Vector4Default) (this3) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (4) )) )});
		}
		
		//line 263 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 261 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp3 = null;
		//line 261 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 262 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl10 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix2x2.Matrix2x2_Impl_.class, "applyScalarFunc")) );
			//line 265 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl11 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix2x2.Matrix2x2_Impl_.class, "getArrayElement")) );
			//line 266 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl12 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix2x2.Matrix2x2_Impl_.class, "setArrayElement")) );
			//line 261 "/shared/hxmath/test/TestStructures.hx"
			tmp3 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl10, __temp_odecl11, __temp_odecl12, ((hxmath.math.Matrix2x2Default) (this4) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (4) )) )});
		}
		
		//line 270 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 268 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp4 = null;
		//line 268 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 269 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl13 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x2.Matrix3x2_Impl_.class, "applyScalarFunc")) );
			//line 272 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl14 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x2.Matrix3x2_Impl_.class, "getArrayElement")) );
			//line 273 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl15 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x2.Matrix3x2_Impl_.class, "setArrayElement")) );
			//line 268 "/shared/hxmath/test/TestStructures.hx"
			tmp4 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl13, __temp_odecl14, __temp_odecl15, ((hxmath.math.Matrix3x2Default) (this5) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (6) )) )});
		}
		
		//line 277 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 275 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp5 = null;
		//line 275 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 276 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl16 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x3.Matrix3x3_Impl_.class, "applyScalarFunc")) );
			//line 279 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl17 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x3.Matrix3x3_Impl_.class, "getArrayElement")) );
			//line 280 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl18 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix3x3.Matrix3x3_Impl_.class, "setArrayElement")) );
			//line 275 "/shared/hxmath/test/TestStructures.hx"
			tmp5 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl16, __temp_odecl17, __temp_odecl18, ((hxmath.math.Matrix3x3Default) (this6) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (9) )) )});
		}
		
		//line 284 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 282 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object tmp6 = null;
		//line 282 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 283 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl19 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix4x4.Matrix4x4_Impl_.class, "applyScalarFunc")) );
			//line 286 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl20 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix4x4.Matrix4x4_Impl_.class, "getArrayElement")) );
			//line 287 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl21 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Matrix4x4.Matrix4x4_Impl_.class, "setArrayElement")) );
			//line 282 "/shared/hxmath/test/TestStructures.hx"
			tmp6 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl19, __temp_odecl20, __temp_odecl21, ((hxmath.math.Matrix4x4Default) (this7) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (16) )) )});
		}
		
		//line 291 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this8 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 289 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object __temp_stmt25 = null;
		//line 289 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 290 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl22 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Quaternion.Quaternion_Impl_.class, "applyScalarFunc")) );
			//line 293 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl23 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Quaternion.Quaternion_Impl_.class, "getArrayElement")) );
			//line 294 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl24 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Quaternion.Quaternion_Impl_.class, "setArrayElement")) );
			//line 289 "/shared/hxmath/test/TestStructures.hx"
			__temp_stmt25 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl22, __temp_odecl23, __temp_odecl24, ((hxmath.math.QuaternionDefault) (this8) )}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (4) )) )});
		}
		
		//line 239 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array testData = new haxe.root.Array(new java.lang.Object[]{tmp, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, __temp_stmt25});
		//line 297 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 297 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 297 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < testData.length ))
			{
				//line 297 "/shared/hxmath/test/TestStructures.hx"
				java.lang.Object data = testData.__get(_g);
				//line 297 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 299 "/shared/hxmath/test/TestStructures.hx"
				java.lang.Object v = haxe.lang.Runtime.getField(data, "zero", true);
				//line 300 "/shared/hxmath/test/TestStructures.hx"
				haxe.lang.Runtime.callField(data, "set", new haxe.root.Array(new java.lang.Object[]{v, 1, 0.1}));
				//line 301 "/shared/hxmath/test/TestStructures.hx"
				haxe.lang.Runtime.callField(data, "f", new haxe.root.Array(new java.lang.Object[]{v, ((haxe.lang.Function) (new haxe.lang.Closure(java.lang.Math.class, "ceil")) )}));
				//line 303 "/shared/hxmath/test/TestStructures.hx"
				double sum = 0.0;
				//line 304 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 304 "/shared/hxmath/test/TestStructures.hx"
					int _g2 = 0;
					//line 304 "/shared/hxmath/test/TestStructures.hx"
					int _g1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(data, "count", true))) );
					//line 304 "/shared/hxmath/test/TestStructures.hx"
					while (( _g2 < _g1 ))
					{
						//line 304 "/shared/hxmath/test/TestStructures.hx"
						int i = _g2++;
						//line 306 "/shared/hxmath/test/TestStructures.hx"
						sum = ((double) (haxe.lang.Runtime.toDouble(haxe.lang.Runtime.plus(sum, ((java.lang.Object) (haxe.lang.Runtime.callField(data, "get", new haxe.root.Array(new java.lang.Object[]{v, i}))) )))) );
					}
					
				}
				
				//line 309 "/shared/hxmath/test/TestStructures.hx"
				this.assertEquals(((java.lang.Object) (1.0) ), ((java.lang.Object) (sum) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testApplyScalarFunc"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (309) )) )})) ));
			}
			
		}
		
	}
	
	
	public void testIntApplyScalarFunc()
	{
		//line 316 "/shared/hxmath/test/TestStructures.hx"
		java.lang.Object __temp_stmt5 = null;
		//line 316 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 317 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl1 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "applyScalarFunc")) );
			//line 318 "/shared/hxmath/test/TestStructures.hx"
			hxmath.math.IntVector2Default __temp_odecl2 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
			//line 320 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl3 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "getArrayElement")) );
			//line 321 "/shared/hxmath/test/TestStructures.hx"
			haxe.lang.Function __temp_odecl4 = ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "setArrayElement")) );
			//line 316 "/shared/hxmath/test/TestStructures.hx"
			__temp_stmt5 = new haxe.lang.DynamicObject(new java.lang.String[]{"f", "get", "set", "zero"}, new java.lang.Object[]{__temp_odecl1, __temp_odecl3, __temp_odecl4, __temp_odecl2}, new java.lang.String[]{"count"}, new double[]{((double) (((double) (2) )) )});
		}
		
		//line 315 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array testData = new haxe.root.Array(new java.lang.Object[]{__temp_stmt5});
		//line 324 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 324 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 324 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < testData.length ))
			{
				//line 324 "/shared/hxmath/test/TestStructures.hx"
				java.lang.Object data = testData.__get(_g);
				//line 324 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 326 "/shared/hxmath/test/TestStructures.hx"
				java.lang.Object v = haxe.lang.Runtime.getField(data, "zero", true);
				//line 327 "/shared/hxmath/test/TestStructures.hx"
				haxe.lang.Runtime.callField(data, "set", new haxe.root.Array(new java.lang.Object[]{v, 1, 1}));
				//line 328 "/shared/hxmath/test/TestStructures.hx"
				haxe.lang.Runtime.callField(data, "f", new haxe.root.Array(new java.lang.Object[]{v, ( (( test.TestStructures_testIntApplyScalarFunc_328__Fun.__hx_current != null )) ? (test.TestStructures_testIntApplyScalarFunc_328__Fun.__hx_current) : (test.TestStructures_testIntApplyScalarFunc_328__Fun.__hx_current = ((test.TestStructures_testIntApplyScalarFunc_328__Fun) (new test.TestStructures_testIntApplyScalarFunc_328__Fun()) )) )}));
				//line 330 "/shared/hxmath/test/TestStructures.hx"
				int sum = 0;
				//line 331 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 331 "/shared/hxmath/test/TestStructures.hx"
					int _g2 = 0;
					//line 331 "/shared/hxmath/test/TestStructures.hx"
					int _g1 = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.getField(data, "count", true))) );
					//line 331 "/shared/hxmath/test/TestStructures.hx"
					while (( _g2 < _g1 ))
					{
						//line 331 "/shared/hxmath/test/TestStructures.hx"
						int i = _g2++;
						//line 333 "/shared/hxmath/test/TestStructures.hx"
						sum = ((int) (haxe.lang.Runtime.toInt(haxe.lang.Runtime.plus(sum, ((java.lang.Object) (haxe.lang.Runtime.callField(data, "get", new haxe.root.Array(new java.lang.Object[]{v, i}))) )))) );
					}
					
				}
				
				//line 336 "/shared/hxmath/test/TestStructures.hx"
				this.assertEquals(((java.lang.Object) (2) ), ((java.lang.Object) (sum) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testIntApplyScalarFunc"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (336) )) )})) ));
			}
			
		}
		
	}
	
	
	public void testCopyToFrom()
	{
		//line 342 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default vec2a = this.randomVector2(null);
		//line 343 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 343 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default vec2b = ((hxmath.math.Vector2Default) (this1) );
		//line 344 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 344 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 344 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 2 ))
			{
				//line 344 "/shared/hxmath/test/TestStructures.hx"
				int i = _g++;
				//line 344 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 344 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp = null;
					//line 344 "/shared/hxmath/test/TestStructures.hx"
					switch (i)
					{
						case 0:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							tmp = vec2a.x;
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							tmp = vec2a.y;
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 344 "/shared/hxmath/test/TestStructures.hx"
					double value = ((double) (haxe.lang.Runtime.toDouble(tmp)) );
					//line 344 "/shared/hxmath/test/TestStructures.hx"
					switch (i)
					{
						case 0:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							vec2b.x = value;
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							vec2b.y = value;
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 344 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 345 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( vec2a == null ) && ( vec2b == null ) ) || ( ( ( ( vec2a != null ) && ( vec2b != null ) ) && ( vec2a.x == vec2b.x ) ) && ( vec2a.y == vec2b.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (345) )) )}));
		//line 347 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default vec3a = this.randomVector3(null);
		//line 348 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 348 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default vec3b = ((hxmath.math.Vector3Default) (this2) );
		//line 349 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 349 "/shared/hxmath/test/TestStructures.hx"
			int _g1 = 0;
			//line 349 "/shared/hxmath/test/TestStructures.hx"
			while (( _g1 < 3 ))
			{
				//line 349 "/shared/hxmath/test/TestStructures.hx"
				int i1 = _g1++;
				//line 349 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 349 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp1 = null;
					//line 349 "/shared/hxmath/test/TestStructures.hx"
					switch (i1)
					{
						case 0:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							tmp1 = vec3a.x;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							tmp1 = vec3a.y;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							tmp1 = vec3a.z;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 349 "/shared/hxmath/test/TestStructures.hx"
					double value1 = ((double) (haxe.lang.Runtime.toDouble(tmp1)) );
					//line 349 "/shared/hxmath/test/TestStructures.hx"
					switch (i1)
					{
						case 0:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							vec3b.x = value1;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							vec3b.y = value1;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							vec3b.z = value1;
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 349 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 350 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( vec3a == null ) && ( vec3b == null ) ) || ( ( ( ( ( vec3a != null ) && ( vec3b != null ) ) && ( vec3a.x == vec3b.x ) ) && ( vec3a.y == vec3b.y ) ) && ( vec3a.z == vec3b.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (350) )) )}));
		//line 352 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default vec4a = this.randomVector4(null);
		//line 353 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 353 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default vec4b = ((hxmath.math.Vector4Default) (this3) );
		//line 354 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 354 "/shared/hxmath/test/TestStructures.hx"
			int _g2 = 0;
			//line 354 "/shared/hxmath/test/TestStructures.hx"
			while (( _g2 < 4 ))
			{
				//line 354 "/shared/hxmath/test/TestStructures.hx"
				int i2 = _g2++;
				//line 354 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 354 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp2 = null;
					//line 354 "/shared/hxmath/test/TestStructures.hx"
					switch (i2)
					{
						case 0:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							tmp2 = vec4a.x;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							tmp2 = vec4a.y;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							tmp2 = vec4a.z;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							tmp2 = vec4a.w;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 354 "/shared/hxmath/test/TestStructures.hx"
					double value2 = ((double) (haxe.lang.Runtime.toDouble(tmp2)) );
					//line 354 "/shared/hxmath/test/TestStructures.hx"
					switch (i2)
					{
						case 0:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							vec4b.x = value2;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							vec4b.y = value2;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							vec4b.z = value2;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							vec4b.w = value2;
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 354 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 355 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( vec4a == null ) && ( vec4b == null ) ) || ( ( ( ( ( ( vec4a != null ) && ( vec4b != null ) ) && ( vec4a.x == vec4b.x ) ) && ( vec4a.y == vec4b.y ) ) && ( vec4a.z == vec4b.z ) ) && ( vec4a.w == vec4b.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (355) )) )}));
		//line 357 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default mat2x2a = this.randomMatrix2x2(null);
		//line 358 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 358 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default mat2x2b = ((hxmath.math.Matrix2x2Default) (this4) );
		//line 359 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 359 "/shared/hxmath/test/TestStructures.hx"
			int _g3 = 0;
			//line 359 "/shared/hxmath/test/TestStructures.hx"
			while (( _g3 < 4 ))
			{
				//line 359 "/shared/hxmath/test/TestStructures.hx"
				int i3 = _g3++;
				//line 359 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 359 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp3 = null;
					//line 359 "/shared/hxmath/test/TestStructures.hx"
					switch (i3)
					{
						case 0:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = mat2x2a.a;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = mat2x2a.b;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = mat2x2a.c;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = mat2x2a.d;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 359 "/shared/hxmath/test/TestStructures.hx"
					double value3 = ((double) (haxe.lang.Runtime.toDouble(tmp3)) );
					//line 359 "/shared/hxmath/test/TestStructures.hx"
					switch (i3)
					{
						case 0:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							mat2x2b.a = value3;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							mat2x2b.b = value3;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							mat2x2b.c = value3;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							mat2x2b.d = value3;
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 359 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 360 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( mat2x2a == null ) && ( mat2x2b == null ) ) || ( ( ( ( ( ( mat2x2a != null ) && ( mat2x2b != null ) ) && ( mat2x2a.a == mat2x2b.a ) ) && ( mat2x2a.b == mat2x2b.b ) ) && ( mat2x2a.c == mat2x2b.c ) ) && ( mat2x2a.d == mat2x2b.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (360) )) )}));
		//line 362 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default mat3x2a = this.randomMatrix3x2(null);
		//line 363 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 363 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default mat3x2b = ((hxmath.math.Matrix3x2Default) (this5) );
		//line 364 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 364 "/shared/hxmath/test/TestStructures.hx"
			int _g4 = 0;
			//line 364 "/shared/hxmath/test/TestStructures.hx"
			while (( _g4 < 6 ))
			{
				//line 364 "/shared/hxmath/test/TestStructures.hx"
				int i4 = _g4++;
				//line 364 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 364 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp4 = null;
					//line 364 "/shared/hxmath/test/TestStructures.hx"
					switch (i4)
					{
						case 0:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.a;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.b;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.tx;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.c;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.d;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = mat3x2a.ty;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 364 "/shared/hxmath/test/TestStructures.hx"
					double value4 = ((double) (haxe.lang.Runtime.toDouble(tmp4)) );
					//line 364 "/shared/hxmath/test/TestStructures.hx"
					switch (i4)
					{
						case 0:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.a = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.b = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.tx = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.c = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.d = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							mat3x2b.ty = value4;
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 364 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 365 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( mat3x2a == null ) && ( mat3x2b == null ) ) || ( ( ( ( ( ( ( ( mat3x2a != null ) && ( mat3x2b != null ) ) && ( mat3x2a.a == mat3x2b.a ) ) && ( mat3x2a.b == mat3x2b.b ) ) && ( mat3x2a.c == mat3x2b.c ) ) && ( mat3x2a.d == mat3x2b.d ) ) && ( mat3x2a.tx == mat3x2b.tx ) ) && ( mat3x2a.ty == mat3x2b.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (365) )) )}));
		//line 367 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default mat3x3a = this.randomMatrix3x3(null);
		//line 368 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 368 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default mat3x3b = ((hxmath.math.Matrix3x3Default) (this6) );
		//line 369 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 369 "/shared/hxmath/test/TestStructures.hx"
			int _g5 = 0;
			//line 369 "/shared/hxmath/test/TestStructures.hx"
			while (( _g5 < 9 ))
			{
				//line 369 "/shared/hxmath/test/TestStructures.hx"
				int i5 = _g5++;
				//line 369 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 369 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp5 = null;
					//line 369 "/shared/hxmath/test/TestStructures.hx"
					switch (i5)
					{
						case 0:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m00;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m10;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m20;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m01;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m11;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m21;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 6:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m02;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 7:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m12;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 8:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = mat3x3a.m22;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 369 "/shared/hxmath/test/TestStructures.hx"
					double value5 = ((double) (haxe.lang.Runtime.toDouble(tmp5)) );
					//line 369 "/shared/hxmath/test/TestStructures.hx"
					switch (i5)
					{
						case 0:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m00 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m10 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m20 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m01 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m11 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m21 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 6:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m02 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 7:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m12 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 8:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							mat3x3b.m22 = value5;
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 369 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 370 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( mat3x3a == null ) && ( mat3x3b == null ) ) || ( ( ( ( ( ( ( ( ( ( ( mat3x3a != null ) && ( mat3x3b != null ) ) && ( mat3x3a.m00 == mat3x3b.m00 ) ) && ( mat3x3a.m10 == mat3x3b.m10 ) ) && ( mat3x3a.m20 == mat3x3b.m20 ) ) && ( mat3x3a.m01 == mat3x3b.m01 ) ) && ( mat3x3a.m11 == mat3x3b.m11 ) ) && ( mat3x3a.m21 == mat3x3b.m21 ) ) && ( mat3x3a.m02 == mat3x3b.m02 ) ) && ( mat3x3a.m12 == mat3x3b.m12 ) ) && ( mat3x3a.m22 == mat3x3b.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (370) )) )}));
		//line 372 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default mat4x4a = this.randomMatrix4x4(null);
		//line 373 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 373 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default mat4x4b = ((hxmath.math.Matrix4x4Default) (this7) );
		//line 374 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 374 "/shared/hxmath/test/TestStructures.hx"
			int _g6 = 0;
			//line 374 "/shared/hxmath/test/TestStructures.hx"
			while (( _g6 < 16 ))
			{
				//line 374 "/shared/hxmath/test/TestStructures.hx"
				int i6 = _g6++;
				//line 374 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 374 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp6 = null;
					//line 374 "/shared/hxmath/test/TestStructures.hx"
					switch (i6)
					{
						case 0:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m00;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m10;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m20;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m30;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m01;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m11;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 6:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m21;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 7:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m31;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 8:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m02;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 9:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m12;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 10:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m22;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 11:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m32;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 12:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m03;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 13:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m13;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 14:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m23;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 15:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							tmp6 = mat4x4a.m33;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 374 "/shared/hxmath/test/TestStructures.hx"
					double value6 = ((double) (haxe.lang.Runtime.toDouble(tmp6)) );
					//line 374 "/shared/hxmath/test/TestStructures.hx"
					switch (i6)
					{
						case 0:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m00 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m10 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m20 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m30 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 4:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m01 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 5:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m11 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 6:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m21 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 7:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m31 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 8:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m02 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 9:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m12 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 10:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m22 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 11:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m32 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 12:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m03 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 13:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m13 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 14:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m23 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 15:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							mat4x4b.m33 = value6;
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 374 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 375 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( mat4x4a == null ) && ( mat4x4b == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( mat4x4a != null ) && ( mat4x4b != null ) ) && ( mat4x4a.m00 == mat4x4b.m00 ) ) && ( mat4x4a.m10 == mat4x4b.m10 ) ) && ( mat4x4a.m20 == mat4x4b.m20 ) ) && ( mat4x4a.m30 == mat4x4b.m30 ) ) && ( mat4x4a.m01 == mat4x4b.m01 ) ) && ( mat4x4a.m11 == mat4x4b.m11 ) ) && ( mat4x4a.m21 == mat4x4b.m21 ) ) && ( mat4x4a.m31 == mat4x4b.m31 ) ) && ( mat4x4a.m02 == mat4x4b.m02 ) ) && ( mat4x4a.m12 == mat4x4b.m12 ) ) && ( mat4x4a.m22 == mat4x4b.m22 ) ) && ( mat4x4a.m32 == mat4x4b.m32 ) ) && ( mat4x4a.m03 == mat4x4b.m03 ) ) && ( mat4x4a.m13 == mat4x4b.m13 ) ) && ( mat4x4a.m23 == mat4x4b.m23 ) ) && ( mat4x4a.m33 == mat4x4b.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (375) )) )}));
		//line 377 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault quatA = this.randomQuaternion(null);
		//line 378 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this8 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 378 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault quatB = ((hxmath.math.QuaternionDefault) (this8) );
		//line 379 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 379 "/shared/hxmath/test/TestStructures.hx"
			int _g7 = 0;
			//line 379 "/shared/hxmath/test/TestStructures.hx"
			while (( _g7 < 4 ))
			{
				//line 379 "/shared/hxmath/test/TestStructures.hx"
				int i7 = _g7++;
				//line 379 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 379 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp7 = null;
					//line 379 "/shared/hxmath/test/TestStructures.hx"
					switch (i7)
					{
						case 0:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							tmp7 = quatA.s;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							tmp7 = quatA.x;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							tmp7 = quatA.y;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							tmp7 = quatA.z;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 379 "/shared/hxmath/test/TestStructures.hx"
					double value7 = ((double) (haxe.lang.Runtime.toDouble(tmp7)) );
					//line 379 "/shared/hxmath/test/TestStructures.hx"
					switch (i7)
					{
						case 0:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							quatB.s = value7;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							quatB.x = value7;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							quatB.y = value7;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							quatB.z = value7;
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 379 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 380 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( quatA == null ) && ( quatB == null ) ) || ( ( ( ( ( ( quatA != null ) && ( quatB != null ) ) && ( quatA.s == quatB.s ) ) && ( quatA.x == quatB.x ) ) && ( quatA.y == quatB.y ) ) && ( quatA.z == quatB.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (380) )) )}));
		//line 382 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default intVec2a = this.randomIntVector2();
		//line 383 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default intVec2b = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 384 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 384 "/shared/hxmath/test/TestStructures.hx"
			int _g8 = 0;
			//line 384 "/shared/hxmath/test/TestStructures.hx"
			while (( _g8 < 2 ))
			{
				//line 384 "/shared/hxmath/test/TestStructures.hx"
				int i8 = _g8++;
				//line 384 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 384 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp8 = null;
					//line 384 "/shared/hxmath/test/TestStructures.hx"
					switch (i8)
					{
						case 0:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							tmp8 = intVec2a.x;
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							tmp8 = intVec2a.y;
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 384 "/shared/hxmath/test/TestStructures.hx"
					int value8 = ((int) (haxe.lang.Runtime.toInt(tmp8)) );
					//line 384 "/shared/hxmath/test/TestStructures.hx"
					switch (i8)
					{
						case 0:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							intVec2b.x = value8;
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							intVec2b.y = value8;
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 384 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 385 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( intVec2a == null ) && ( intVec2b == null ) ) || ( ( ( ( intVec2a != null ) && ( intVec2b != null ) ) && ( intVec2a.x == intVec2b.x ) ) && ( intVec2a.y == intVec2b.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testCopyToFrom"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (385) )) )}));
	}
	
	
	public void testRowColAccessors()
	{
		//line 390 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 390 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp = ((hxmath.math.Vector2Default) (this1) );
		//line 390 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 390 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector2Default> basis2 = new haxe.root.Array<hxmath.math.Vector2Default>(new hxmath.math.Vector2Default[]{tmp, ((hxmath.math.Vector2Default) (this2) )});
		//line 392 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 392 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 392 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 2 ))
			{
				//line 392 "/shared/hxmath/test/TestStructures.hx"
				int i = _g++;
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default this3 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default self = ((hxmath.math.Matrix2x2Default) (this3) );
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default a = null;
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				switch (i)
				{
					case 0:
					{
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this4 = new hxmath.math.Vector2Default(self.a, self.c);
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						a = ((hxmath.math.Vector2Default) (this4) );
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this5 = new hxmath.math.Vector2Default(self.b, self.d);
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						a = ((hxmath.math.Vector2Default) (this5) );
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 394 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid column");
					}
					
				}
				
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default b = basis2.__get(i);
				//line 394 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a == null ) && ( b == null ) ) || ( ( ( ( a != null ) && ( b != null ) ) && ( a.x == b.x ) ) && ( a.y == b.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (394) )) )}));
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default this6 = new hxmath.math.Matrix2x2Default(1.0, 0.0, 0.0, 1.0);
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix2x2Default self1 = ((hxmath.math.Matrix2x2Default) (this6) );
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default a1 = null;
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				switch (i)
				{
					case 0:
					{
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this7 = new hxmath.math.Vector2Default(self1.a, self1.b);
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						a1 = ((hxmath.math.Vector2Default) (this7) );
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this8 = new hxmath.math.Vector2Default(self1.c, self1.d);
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						a1 = ((hxmath.math.Vector2Default) (this8) );
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 395 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid row");
					}
					
				}
				
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default b1 = basis2.__get(i);
				//line 395 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a1 == null ) && ( b1 == null ) ) || ( ( ( ( a1 != null ) && ( b1 != null ) ) && ( a1.x == b1.x ) ) && ( a1.y == b1.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (395) )) )}));
			}
			
		}
		
		//line 398 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this9 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 398 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp1 = ((hxmath.math.Vector3Default) (this9) );
		//line 398 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this10 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 398 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector3Default> basis32Rows = new haxe.root.Array<hxmath.math.Vector3Default>(new hxmath.math.Vector3Default[]{tmp1, ((hxmath.math.Vector3Default) (this10) )});
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this11 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp2 = ((hxmath.math.Vector2Default) (this11) );
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this12 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp3 = ((hxmath.math.Vector2Default) (this12) );
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this13 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 399 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector2Default> basis32Cols = new haxe.root.Array<hxmath.math.Vector2Default>(new hxmath.math.Vector2Default[]{tmp2, tmp3, ((hxmath.math.Vector2Default) (this13) )});
		//line 401 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 401 "/shared/hxmath/test/TestStructures.hx"
			int _g1 = 0;
			//line 401 "/shared/hxmath/test/TestStructures.hx"
			while (( _g1 < 2 ))
			{
				//line 401 "/shared/hxmath/test/TestStructures.hx"
				int i1 = _g1++;
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x2Default this14 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x2Default self2 = ((hxmath.math.Matrix3x2Default) (this14) );
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default a2 = null;
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				switch (i1)
				{
					case 0:
					{
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this15 = new hxmath.math.Vector3Default(self2.a, self2.b, self2.tx);
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						a2 = ((hxmath.math.Vector3Default) (this15) );
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this16 = new hxmath.math.Vector3Default(self2.c, self2.d, self2.ty);
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						a2 = ((hxmath.math.Vector3Default) (this16) );
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 403 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid row");
					}
					
				}
				
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default b2 = basis32Rows.__get(i1);
				//line 403 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a2 == null ) && ( b2 == null ) ) || ( ( ( ( ( a2 != null ) && ( b2 != null ) ) && ( a2.x == b2.x ) ) && ( a2.y == b2.y ) ) && ( a2.z == b2.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (403) )) )}));
			}
			
		}
		
		//line 406 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 406 "/shared/hxmath/test/TestStructures.hx"
			int _g2 = 0;
			//line 406 "/shared/hxmath/test/TestStructures.hx"
			while (( _g2 < 3 ))
			{
				//line 406 "/shared/hxmath/test/TestStructures.hx"
				int i2 = _g2++;
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x2Default this17 = new hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x2Default self3 = ((hxmath.math.Matrix3x2Default) (this17) );
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default a3 = null;
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				switch (i2)
				{
					case 0:
					{
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this18 = new hxmath.math.Vector2Default(self3.a, self3.c);
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						a3 = ((hxmath.math.Vector2Default) (this18) );
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this19 = new hxmath.math.Vector2Default(self3.b, self3.d);
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						a3 = ((hxmath.math.Vector2Default) (this19) );
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 2:
					{
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector2Default this20 = new hxmath.math.Vector2Default(self3.tx, self3.ty);
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						a3 = ((hxmath.math.Vector2Default) (this20) );
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 408 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid column");
					}
					
				}
				
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default b3 = basis32Cols.__get(i2);
				//line 408 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a3 == null ) && ( b3 == null ) ) || ( ( ( ( a3 != null ) && ( b3 != null ) ) && ( a3.x == b3.x ) ) && ( a3.y == b3.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (408) )) )}));
			}
			
		}
		
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this21 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp4 = ((hxmath.math.Vector3Default) (this21) );
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this22 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp5 = ((hxmath.math.Vector3Default) (this22) );
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this23 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 411 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector3Default> basis3 = new haxe.root.Array<hxmath.math.Vector3Default>(new hxmath.math.Vector3Default[]{tmp4, tmp5, ((hxmath.math.Vector3Default) (this23) )});
		//line 413 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 413 "/shared/hxmath/test/TestStructures.hx"
			int _g3 = 0;
			//line 413 "/shared/hxmath/test/TestStructures.hx"
			while (( _g3 < 3 ))
			{
				//line 413 "/shared/hxmath/test/TestStructures.hx"
				int i3 = _g3++;
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default this24 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default self4 = ((hxmath.math.Matrix3x3Default) (this24) );
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default a4 = null;
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				switch (i3)
				{
					case 0:
					{
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this25 = new hxmath.math.Vector3Default(self4.m00, self4.m01, self4.m02);
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						a4 = ((hxmath.math.Vector3Default) (this25) );
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this26 = new hxmath.math.Vector3Default(self4.m10, self4.m11, self4.m12);
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						a4 = ((hxmath.math.Vector3Default) (this26) );
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 2:
					{
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this27 = new hxmath.math.Vector3Default(self4.m20, self4.m21, self4.m22);
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						a4 = ((hxmath.math.Vector3Default) (this27) );
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 415 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid column");
					}
					
				}
				
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default b4 = basis3.__get(i3);
				//line 415 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a4 == null ) && ( b4 == null ) ) || ( ( ( ( ( a4 != null ) && ( b4 != null ) ) && ( a4.x == b4.x ) ) && ( a4.y == b4.y ) ) && ( a4.z == b4.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (415) )) )}));
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default this28 = new hxmath.math.Matrix3x3Default(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix3x3Default self5 = ((hxmath.math.Matrix3x3Default) (this28) );
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default a5 = null;
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				switch (i3)
				{
					case 0:
					{
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this29 = new hxmath.math.Vector3Default(self5.m00, self5.m10, self5.m20);
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						a5 = ((hxmath.math.Vector3Default) (this29) );
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this30 = new hxmath.math.Vector3Default(self5.m01, self5.m11, self5.m21);
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						a5 = ((hxmath.math.Vector3Default) (this30) );
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 2:
					{
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector3Default this31 = new hxmath.math.Vector3Default(self5.m02, self5.m12, self5.m22);
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						a5 = ((hxmath.math.Vector3Default) (this31) );
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 416 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid row");
					}
					
				}
				
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default b5 = basis3.__get(i3);
				//line 416 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a5 == null ) && ( b5 == null ) ) || ( ( ( ( ( a5 != null ) && ( b5 != null ) ) && ( a5.x == b5.x ) ) && ( a5.y == b5.y ) ) && ( a5.z == b5.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (416) )) )}));
			}
			
		}
		
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this32 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp6 = ((hxmath.math.Vector4Default) (this32) );
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this33 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp7 = ((hxmath.math.Vector4Default) (this33) );
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this34 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp8 = ((hxmath.math.Vector4Default) (this34) );
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this35 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 419 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector4Default> basis4 = new haxe.root.Array<hxmath.math.Vector4Default>(new hxmath.math.Vector4Default[]{tmp6, tmp7, tmp8, ((hxmath.math.Vector4Default) (this35) )});
		//line 421 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 421 "/shared/hxmath/test/TestStructures.hx"
			int _g4 = 0;
			//line 421 "/shared/hxmath/test/TestStructures.hx"
			while (( _g4 < 4 ))
			{
				//line 421 "/shared/hxmath/test/TestStructures.hx"
				int i4 = _g4++;
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default this36 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default self6 = ((hxmath.math.Matrix4x4Default) (this36) );
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default a6 = null;
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				switch (i4)
				{
					case 0:
					{
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this37 = new hxmath.math.Vector4Default(self6.m00, self6.m01, self6.m02, self6.m03);
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						a6 = ((hxmath.math.Vector4Default) (this37) );
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this38 = new hxmath.math.Vector4Default(self6.m10, self6.m11, self6.m12, self6.m13);
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						a6 = ((hxmath.math.Vector4Default) (this38) );
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 2:
					{
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this39 = new hxmath.math.Vector4Default(self6.m20, self6.m21, self6.m22, self6.m23);
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						a6 = ((hxmath.math.Vector4Default) (this39) );
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 3:
					{
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this40 = new hxmath.math.Vector4Default(self6.m30, self6.m31, self6.m32, self6.m33);
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						a6 = ((hxmath.math.Vector4Default) (this40) );
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 423 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid column");
					}
					
				}
				
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default b6 = basis4.__get(i4);
				//line 423 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a6 == null ) && ( b6 == null ) ) || ( ( ( ( ( ( a6 != null ) && ( b6 != null ) ) && ( a6.x == b6.x ) ) && ( a6.y == b6.y ) ) && ( a6.z == b6.z ) ) && ( a6.w == b6.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (423) )) )}));
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default this41 = new hxmath.math.Matrix4x4Default(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Matrix4x4Default self7 = ((hxmath.math.Matrix4x4Default) (this41) );
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default a7 = null;
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				switch (i4)
				{
					case 0:
					{
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this42 = new hxmath.math.Vector4Default(self7.m00, self7.m10, self7.m20, self7.m30);
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						a7 = ((hxmath.math.Vector4Default) (this42) );
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 1:
					{
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this43 = new hxmath.math.Vector4Default(self7.m01, self7.m11, self7.m21, self7.m31);
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						a7 = ((hxmath.math.Vector4Default) (this43) );
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 2:
					{
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this44 = new hxmath.math.Vector4Default(self7.m02, self7.m12, self7.m22, self7.m32);
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						a7 = ((hxmath.math.Vector4Default) (this44) );
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					case 3:
					{
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						hxmath.math.Vector4Default this45 = new hxmath.math.Vector4Default(self7.m03, self7.m13, self7.m23, self7.m33);
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						a7 = ((hxmath.math.Vector4Default) (this45) );
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						break;
					}
					
					
					default:
					{
						//line 424 "/shared/hxmath/test/TestStructures.hx"
						throw haxe.lang.HaxeException.wrap("Invalid row");
					}
					
				}
				
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default b7 = basis4.__get(i4);
				//line 424 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( a7 == null ) && ( b7 == null ) ) || ( ( ( ( ( ( a7 != null ) && ( b7 != null ) ) && ( a7.x == b7.x ) ) && ( a7.y == b7.y ) ) && ( a7.z == b7.z ) ) && ( a7.w == b7.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testRowColAccessors"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (424) )) )}));
			}
			
		}
		
	}
	
	
	public void testEqualsNullShouldNotThrow()
	{
		//line 433 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 433 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Vector2Default) (this1) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (433) )) )}));
		//line 434 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 434 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Vector3Default) (this2) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (434) )) )}));
		//line 435 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 435 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Vector4Default) (this3) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (435) )) )}));
		//line 436 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 436 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Matrix2x2Default) (this4) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (436) )) )}));
		//line 437 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 437 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Matrix3x2Default) (this5) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (437) )) )}));
		//line 438 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 438 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Matrix3x3Default) (this6) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (438) )) )}));
		//line 439 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 439 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.Matrix4x4Default) (this7) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (439) )) )}));
		//line 440 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this8 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 440 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ((hxmath.math.QuaternionDefault) (this8) ) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (440) )) )}));
		//line 441 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0) != null ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testEqualsNullShouldNotThrow"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (441) )) )}));
	}
	
	
	public void testHasToString()
	{
		//line 447 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(((double) (0) ), ((double) (23) ));
		//line 447 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp = ((hxmath.math.Vector2Default) (this1) );
		//line 448 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(((double) (0) ), ((double) (23) ), ((double) (0) ));
		//line 448 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp1 = ((hxmath.math.Vector3Default) (this2) );
		//line 449 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(((double) (0) ), ((double) (23) ), ((double) (0) ), ((double) (0) ));
		//line 449 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp2 = ((hxmath.math.Vector4Default) (this3) );
		//line 450 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this4 = new hxmath.math.Matrix2x2Default(((double) (0) ), ((double) (0) ), ((double) (23) ), ((double) (0) ));
		//line 450 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default tmp3 = ((hxmath.math.Matrix2x2Default) (this4) );
		//line 451 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this5 = new hxmath.math.Matrix3x2Default(((double) (0) ), ((double) (0) ), ((double) (23) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 451 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default tmp4 = ((hxmath.math.Matrix3x2Default) (this5) );
		//line 452 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this6 = new hxmath.math.Matrix3x3Default(((double) (0) ), ((double) (0) ), ((double) (23) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 452 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default tmp5 = ((hxmath.math.Matrix3x3Default) (this6) );
		//line 453 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this7 = new hxmath.math.Matrix4x4Default(((double) (0) ), ((double) (0) ), ((double) (23) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 453 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default tmp6 = ((hxmath.math.Matrix4x4Default) (this7) );
		//line 454 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this8 = new hxmath.math.QuaternionDefault(((double) (1) ), ((double) (0) ), ((double) (23) ), ((double) (0) ));
		//line 446 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array structures = new haxe.root.Array(new java.lang.Object[]{tmp, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, ((hxmath.math.QuaternionDefault) (this8) ), hxmath.math._IntVector2.IntVector2_Impl_._new(0, 23)});
		//line 457 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 457 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 457 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < structures.length ))
			{
				//line 457 "/shared/hxmath/test/TestStructures.hx"
				java.lang.Object x = structures.__get(_g);
				//line 457 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 459 "/shared/hxmath/test/TestStructures.hx"
				if (( haxe.lang.StringExt.indexOf((( "" + haxe.root.Std.string(x) )), "23", null) == -1 )) 
				{
					//line 461 "/shared/hxmath/test/TestStructures.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, x, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testHasToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (461) )) )}));
					//line 462 "/shared/hxmath/test/TestStructures.hx"
					this.assertTrue(false, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testHasToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (462) )) )}));
				}
				
			}
			
		}
		
	}
	
	
	public void testVectorMinMax()
	{
		//line 469 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 469 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp = ((hxmath.math.Vector2Default) (this1) );
		//line 469 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 469 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector2Default> v2Axes = new haxe.root.Array<hxmath.math.Vector2Default>(new hxmath.math.Vector2Default[]{tmp, ((hxmath.math.Vector2Default) (this2) )});
		//line 470 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this3 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 470 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default v2AxesMax = ((hxmath.math.Vector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "max")) ), ((hxmath.math.Vector2Default) (this3) ))) );
		//line 471 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this4 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 471 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default v2AxesMin = ((hxmath.math.Vector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "min")) ), ((hxmath.math.Vector2Default) (this4) ))) );
		//line 472 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this5 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 472 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default v2AxesSum = ((hxmath.math.Vector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector2.Vector2_Impl_.class, "add")) ), ((hxmath.math.Vector2Default) (this5) ))) );
		//line 474 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v2AxesMax == null ) && ( v2AxesSum == null ) ) || ( ( ( ( v2AxesMax != null ) && ( v2AxesSum != null ) ) && ( v2AxesMax.x == v2AxesSum.x ) ) && ( v2AxesMax.y == v2AxesSum.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (474) )) )}));
		//line 475 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this6 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 475 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b = ((hxmath.math.Vector2Default) (this6) );
		//line 475 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v2AxesMin == null ) && ( b == null ) ) || ( ( ( ( v2AxesMin != null ) && ( b != null ) ) && ( v2AxesMin.x == b.x ) ) && ( v2AxesMin.y == b.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (475) )) )}));
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this7 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp1 = ((hxmath.math.Vector3Default) (this7) );
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this8 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp2 = ((hxmath.math.Vector3Default) (this8) );
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this9 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 477 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector3Default> v3Axes = new haxe.root.Array<hxmath.math.Vector3Default>(new hxmath.math.Vector3Default[]{tmp1, tmp2, ((hxmath.math.Vector3Default) (this9) )});
		//line 478 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this10 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 478 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default v3AxesMax = ((hxmath.math.Vector3Default) (haxe.root.Lambda.fold(((java.lang.Object) (v3Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "max")) ), ((hxmath.math.Vector3Default) (this10) ))) );
		//line 479 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this11 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 479 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default v3AxesMin = ((hxmath.math.Vector3Default) (haxe.root.Lambda.fold(((java.lang.Object) (v3Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "min")) ), ((hxmath.math.Vector3Default) (this11) ))) );
		//line 480 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this12 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 480 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default v3AxesSum = ((hxmath.math.Vector3Default) (haxe.root.Lambda.fold(((java.lang.Object) (v3Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector3.Vector3_Impl_.class, "add")) ), ((hxmath.math.Vector3Default) (this12) ))) );
		//line 482 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v3AxesMax == null ) && ( v3AxesSum == null ) ) || ( ( ( ( ( v3AxesMax != null ) && ( v3AxesSum != null ) ) && ( v3AxesMax.x == v3AxesSum.x ) ) && ( v3AxesMax.y == v3AxesSum.y ) ) && ( v3AxesMax.z == v3AxesSum.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (482) )) )}));
		//line 483 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this13 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 483 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b1 = ((hxmath.math.Vector3Default) (this13) );
		//line 483 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v3AxesMin == null ) && ( b1 == null ) ) || ( ( ( ( ( v3AxesMin != null ) && ( b1 != null ) ) && ( v3AxesMin.x == b1.x ) ) && ( v3AxesMin.y == b1.y ) ) && ( v3AxesMin.z == b1.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (483) )) )}));
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this14 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp3 = ((hxmath.math.Vector4Default) (this14) );
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this15 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp4 = ((hxmath.math.Vector4Default) (this15) );
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this16 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp5 = ((hxmath.math.Vector4Default) (this16) );
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this17 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 485 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector4Default> v4Axes = new haxe.root.Array<hxmath.math.Vector4Default>(new hxmath.math.Vector4Default[]{tmp3, tmp4, tmp5, ((hxmath.math.Vector4Default) (this17) )});
		//line 486 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this18 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 486 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default v4AxesMax = ((hxmath.math.Vector4Default) (haxe.root.Lambda.fold(((java.lang.Object) (v4Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "max")) ), ((hxmath.math.Vector4Default) (this18) ))) );
		//line 487 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this19 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 487 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default v4AxesMin = ((hxmath.math.Vector4Default) (haxe.root.Lambda.fold(((java.lang.Object) (v4Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "min")) ), ((hxmath.math.Vector4Default) (this19) ))) );
		//line 488 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this20 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 488 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default v4AxesSum = ((hxmath.math.Vector4Default) (haxe.root.Lambda.fold(((java.lang.Object) (v4Axes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._Vector4.Vector4_Impl_.class, "add")) ), ((hxmath.math.Vector4Default) (this20) ))) );
		//line 490 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v4AxesMax == null ) && ( v4AxesSum == null ) ) || ( ( ( ( ( ( v4AxesMax != null ) && ( v4AxesSum != null ) ) && ( v4AxesMax.x == v4AxesSum.x ) ) && ( v4AxesMax.y == v4AxesSum.y ) ) && ( v4AxesMax.z == v4AxesSum.z ) ) && ( v4AxesMax.w == v4AxesSum.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (490) )) )}));
		//line 491 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this21 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 491 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b2 = ((hxmath.math.Vector4Default) (this21) );
		//line 491 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v4AxesMin == null ) && ( b2 == null ) ) || ( ( ( ( ( ( v4AxesMin != null ) && ( b2 != null ) ) && ( v4AxesMin.x == b2.x ) ) && ( v4AxesMin.y == b2.y ) ) && ( v4AxesMin.z == b2.z ) ) && ( v4AxesMin.w == b2.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (491) )) )}));
		//line 493 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.IntVector2Default> v2iAxes = new haxe.root.Array<hxmath.math.IntVector2Default>(new hxmath.math.IntVector2Default[]{hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0), hxmath.math._IntVector2.IntVector2_Impl_._new(0, 1)});
		//line 494 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default v2iAxesMax = ((hxmath.math.IntVector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2iAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "max")) ), ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0)) ))) );
		//line 495 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default v2iAxesMin = ((hxmath.math.IntVector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2iAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "min")) ), ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(1, 0)) ))) );
		//line 496 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default v2iAxesSum = ((hxmath.math.IntVector2Default) (haxe.root.Lambda.fold(((java.lang.Object) (v2iAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._IntVector2.IntVector2_Impl_.class, "add")) ), ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0)) ))) );
		//line 498 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v2iAxesMax == null ) && ( v2iAxesSum == null ) ) || ( ( ( ( v2iAxesMax != null ) && ( v2iAxesSum != null ) ) && ( v2iAxesMax.x == v2iAxesSum.x ) ) && ( v2iAxesMax.y == v2iAxesSum.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (498) )) )}));
		//line 499 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default b3 = hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0);
		//line 499 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( v2iAxesMin == null ) && ( b3 == null ) ) || ( ( ( ( v2iAxesMin != null ) && ( b3 != null ) ) && ( v2iAxesMin.x == b3.x ) ) && ( v2iAxesMin.y == b3.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (499) )) )}));
		//line 501 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<java.lang.Object> v2sAxes = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0), hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 1)});
		//line 502 "/shared/hxmath/test/TestStructures.hx"
		int v2sAxesMax = ((int) (haxe.lang.Runtime.toInt(haxe.root.Lambda.fold(((java.lang.Object) (v2sAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._ShortVector2.ShortVector2_Impl_.class, "max")) ), ((java.lang.Object) (hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0)) )))) );
		//line 503 "/shared/hxmath/test/TestStructures.hx"
		int v2sAxesMin = ((int) (haxe.lang.Runtime.toInt(haxe.root.Lambda.fold(((java.lang.Object) (v2sAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._ShortVector2.ShortVector2_Impl_.class, "min")) ), ((java.lang.Object) (hxmath.math._ShortVector2.ShortVector2_Impl_._new(1, 0)) )))) );
		//line 504 "/shared/hxmath/test/TestStructures.hx"
		int v2sAxesSum = ((int) (haxe.lang.Runtime.toInt(haxe.root.Lambda.fold(((java.lang.Object) (v2sAxes) ), ((haxe.lang.Function) (new haxe.lang.Closure(hxmath.math._ShortVector2.ShortVector2_Impl_.class, "add")) ), ((java.lang.Object) (hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 0)) )))) );
		//line 506 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( v2sAxesMax == v2sAxesSum ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (506) )) )}));
		//line 507 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( v2sAxesMin == hxmath.math._ShortVector2.ShortVector2_Impl_._new(0, 0) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorMinMax"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (507) )) )}));
	}
	
	
	public void testVectorProj()
	{
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default a = ((hxmath.math.Vector2Default) (this1) );
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b = ((hxmath.math.Vector2Default) (this2) );
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this3 = new hxmath.math.Vector2Default(a.x, a.y);
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this3) );
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		double s = ( (( ( self.x * b.x ) + ( self.y * b.y ) )) / (( ( b.x * b.x ) + ( b.y * b.y ) )) );
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 512 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 512 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 2 ))
			{
				//line 512 "/shared/hxmath/test/TestStructures.hx"
				int i = _g++;
				//line 512 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 512 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp = null;
					//line 512 "/shared/hxmath/test/TestStructures.hx"
					switch (i)
					{
						case 0:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							tmp = b.x;
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							tmp = b.y;
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 512 "/shared/hxmath/test/TestStructures.hx"
					double value = ((double) (haxe.lang.Runtime.toDouble(tmp)) );
					//line 512 "/shared/hxmath/test/TestStructures.hx"
					switch (i)
					{
						case 0:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							self.x = value;
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							self.y = value;
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 512 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 512 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 512 "/shared/hxmath/test/TestStructures.hx"
			self.x *= s;
			//line 512 "/shared/hxmath/test/TestStructures.hx"
			self.y *= s;
		}
		
		//line 514 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this4 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 514 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b1 = ((hxmath.math.Vector2Default) (this4) );
		//line 514 "/shared/hxmath/test/TestStructures.hx"
		this.assertTrue(( ( ( self == null ) && ( b1 == null ) ) || ( ( ( ( self != null ) && ( b1 != null ) ) && ( self.x == b1.x ) ) && ( self.y == b1.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (514) )) )}));
		//line 516 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this5 = new hxmath.math.Vector2Default(0.5, 0.5);
		//line 516 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default v2Mid = ((hxmath.math.Vector2Default) (this5) );
		//line 517 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this6 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 517 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default tmp1 = ((hxmath.math.Vector2Default) (this6) );
		//line 517 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this7 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 517 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector2Default> v2Axes = new haxe.root.Array<hxmath.math.Vector2Default>(new hxmath.math.Vector2Default[]{tmp1, ((hxmath.math.Vector2Default) (this7) )});
		//line 518 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.List<hxmath.math.Vector2Default> v2MidProjOntoAxes = ((haxe.root.List<hxmath.math.Vector2Default>) (((haxe.root.List) (haxe.root.Lambda.map(((java.lang.Object) (v2Axes) ), ((haxe.lang.Function) (new test.TestStructures_testVectorProj_518__Fun(v2Mid)) ))) )) );
		//line 520 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 520 "/shared/hxmath/test/TestStructures.hx"
			_List.ListNode<hxmath.math.Vector2Default> _g_head = v2MidProjOntoAxes.h;
			//line 520 "/shared/hxmath/test/TestStructures.hx"
			while (( _g_head != null ))
			{
				//line 520 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default val = _g_head.item;
				//line 510 "/shared/hxmath/test/TestStructures.hx"
				_g_head = _g_head.next;
				//line 522 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(0.5, java.lang.Math.sqrt(( ( val.x * val.x ) + ( val.y * val.y ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (522) )) )}));
			}
			
		}
		
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this9 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default a2 = ((hxmath.math.Vector3Default) (this9) );
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this10 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b2 = ((hxmath.math.Vector3Default) (this10) );
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this11 = new hxmath.math.Vector3Default(a2.x, a2.y, a2.z);
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self3 = ((hxmath.math.Vector3Default) (this11) );
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		double s2 = ( (( ( ( self3.x * b2.x ) + ( self3.y * b2.y ) ) + ( self3.z * b2.z ) )) / (( ( ( b2.x * b2.x ) + ( b2.y * b2.y ) ) + ( b2.z * b2.z ) )) );
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 526 "/shared/hxmath/test/TestStructures.hx"
			int _g2 = 0;
			//line 526 "/shared/hxmath/test/TestStructures.hx"
			while (( _g2 < 3 ))
			{
				//line 526 "/shared/hxmath/test/TestStructures.hx"
				int i2 = _g2++;
				//line 526 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 526 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp3 = null;
					//line 526 "/shared/hxmath/test/TestStructures.hx"
					switch (i2)
					{
						case 0:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = b2.x;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = b2.y;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							tmp3 = b2.z;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 526 "/shared/hxmath/test/TestStructures.hx"
					double value2 = ((double) (haxe.lang.Runtime.toDouble(tmp3)) );
					//line 526 "/shared/hxmath/test/TestStructures.hx"
					switch (i2)
					{
						case 0:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							self3.x = value2;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							self3.y = value2;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							self3.z = value2;
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 526 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 526 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 526 "/shared/hxmath/test/TestStructures.hx"
			self3.x *= s2;
			//line 526 "/shared/hxmath/test/TestStructures.hx"
			self3.y *= s2;
			//line 526 "/shared/hxmath/test/TestStructures.hx"
			self3.z *= s2;
		}
		
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this12 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default a3 = ((hxmath.math.Vector3Default) (this12) );
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this13 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b3 = ((hxmath.math.Vector3Default) (this13) );
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this14 = new hxmath.math.Vector3Default(a3.x, a3.y, a3.z);
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self4 = ((hxmath.math.Vector3Default) (this14) );
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		double s3 = ( (( ( ( self4.x * b3.x ) + ( self4.y * b3.y ) ) + ( self4.z * b3.z ) )) / (( ( ( b3.x * b3.x ) + ( b3.y * b3.y ) ) + ( b3.z * b3.z ) )) );
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 527 "/shared/hxmath/test/TestStructures.hx"
			int _g3 = 0;
			//line 527 "/shared/hxmath/test/TestStructures.hx"
			while (( _g3 < 3 ))
			{
				//line 527 "/shared/hxmath/test/TestStructures.hx"
				int i3 = _g3++;
				//line 527 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 527 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp4 = null;
					//line 527 "/shared/hxmath/test/TestStructures.hx"
					switch (i3)
					{
						case 0:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = b3.x;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = b3.y;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							tmp4 = b3.z;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 527 "/shared/hxmath/test/TestStructures.hx"
					double value3 = ((double) (haxe.lang.Runtime.toDouble(tmp4)) );
					//line 527 "/shared/hxmath/test/TestStructures.hx"
					switch (i3)
					{
						case 0:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							self4.x = value3;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							self4.y = value3;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							self4.z = value3;
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 527 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 527 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 527 "/shared/hxmath/test/TestStructures.hx"
			self4.x *= s3;
			//line 527 "/shared/hxmath/test/TestStructures.hx"
			self4.y *= s3;
			//line 527 "/shared/hxmath/test/TestStructures.hx"
			self4.z *= s3;
		}
		
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this15 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default a4 = ((hxmath.math.Vector3Default) (this15) );
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this16 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b4 = ((hxmath.math.Vector3Default) (this16) );
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this17 = new hxmath.math.Vector3Default(a4.x, a4.y, a4.z);
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self5 = ((hxmath.math.Vector3Default) (this17) );
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		double s4 = ( (( ( ( self5.x * b4.x ) + ( self5.y * b4.y ) ) + ( self5.z * b4.z ) )) / (( ( ( b4.x * b4.x ) + ( b4.y * b4.y ) ) + ( b4.z * b4.z ) )) );
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 528 "/shared/hxmath/test/TestStructures.hx"
			int _g4 = 0;
			//line 528 "/shared/hxmath/test/TestStructures.hx"
			while (( _g4 < 3 ))
			{
				//line 528 "/shared/hxmath/test/TestStructures.hx"
				int i4 = _g4++;
				//line 528 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 528 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp5 = null;
					//line 528 "/shared/hxmath/test/TestStructures.hx"
					switch (i4)
					{
						case 0:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = b4.x;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = b4.y;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							tmp5 = b4.z;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 528 "/shared/hxmath/test/TestStructures.hx"
					double value4 = ((double) (haxe.lang.Runtime.toDouble(tmp5)) );
					//line 528 "/shared/hxmath/test/TestStructures.hx"
					switch (i4)
					{
						case 0:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							self5.x = value4;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							self5.y = value4;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							self5.z = value4;
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 528 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 528 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 528 "/shared/hxmath/test/TestStructures.hx"
			self5.x *= s4;
			//line 528 "/shared/hxmath/test/TestStructures.hx"
			self5.y *= s4;
			//line 528 "/shared/hxmath/test/TestStructures.hx"
			self5.z *= s4;
		}
		
		//line 525 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector3Default> v3AxesProj = new haxe.root.Array<hxmath.math.Vector3Default>(new hxmath.math.Vector3Default[]{self3, self4, self5});
		//line 531 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 531 "/shared/hxmath/test/TestStructures.hx"
			int _g5 = 0;
			//line 531 "/shared/hxmath/test/TestStructures.hx"
			while (( _g5 < v3AxesProj.length ))
			{
				//line 531 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default v = v3AxesProj.__get(_g5);
				//line 531 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g5;
				//line 533 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default this18 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
				//line 533 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default b5 = ((hxmath.math.Vector3Default) (this18) );
				//line 533 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( v == null ) && ( b5 == null ) ) || ( ( ( ( ( v != null ) && ( b5 != null ) ) && ( v.x == b5.x ) ) && ( v.y == b5.y ) ) && ( v.z == b5.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (533) )) )}));
			}
			
		}
		
		//line 536 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this19 = new hxmath.math.Vector3Default(0.5, 0.5, 0.5);
		//line 536 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default v3Mid = ((hxmath.math.Vector3Default) (this19) );
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this20 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp6 = ((hxmath.math.Vector3Default) (this20) );
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this21 = new hxmath.math.Vector3Default(0.0, 1.0, 0.0);
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default tmp7 = ((hxmath.math.Vector3Default) (this21) );
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this22 = new hxmath.math.Vector3Default(0.0, 0.0, 1.0);
		//line 537 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector3Default> v3Axes = new haxe.root.Array<hxmath.math.Vector3Default>(new hxmath.math.Vector3Default[]{tmp6, tmp7, ((hxmath.math.Vector3Default) (this22) )});
		//line 538 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.List<hxmath.math.Vector3Default> v3MidProjOntoAxes = ((haxe.root.List<hxmath.math.Vector3Default>) (((haxe.root.List) (haxe.root.Lambda.map(((java.lang.Object) (v3Axes) ), ((haxe.lang.Function) (new test.TestStructures_testVectorProj_538__Fun(v3Mid)) ))) )) );
		//line 540 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 540 "/shared/hxmath/test/TestStructures.hx"
			_List.ListNode<hxmath.math.Vector3Default> _g_head1 = v3MidProjOntoAxes.h;
			//line 540 "/shared/hxmath/test/TestStructures.hx"
			while (( _g_head1 != null ))
			{
				//line 540 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default val1 = _g_head1.item;
				//line 510 "/shared/hxmath/test/TestStructures.hx"
				_g_head1 = _g_head1.next;
				//line 542 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(0.5, java.lang.Math.sqrt(( ( ( val1.x * val1.x ) + ( val1.y * val1.y ) ) + ( val1.z * val1.z ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (542) )) )}));
			}
			
		}
		
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this24 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a6 = ((hxmath.math.Vector4Default) (this24) );
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this25 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b6 = ((hxmath.math.Vector4Default) (this25) );
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this26 = new hxmath.math.Vector4Default(a6.x, a6.y, a6.z, a6.w);
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self8 = ((hxmath.math.Vector4Default) (this26) );
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		double s6 = ( (( ( ( ( self8.x * b6.x ) + ( self8.y * b6.y ) ) + ( self8.z * b6.z ) ) + ( self8.w * b6.w ) )) / (( ( ( ( b6.x * b6.x ) + ( b6.y * b6.y ) ) + ( b6.z * b6.z ) ) + ( b6.w * b6.w ) )) );
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			int _g7 = 0;
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			while (( _g7 < 4 ))
			{
				//line 546 "/shared/hxmath/test/TestStructures.hx"
				int i6 = _g7++;
				//line 546 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 546 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp9 = null;
					//line 546 "/shared/hxmath/test/TestStructures.hx"
					switch (i6)
					{
						case 0:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							tmp9 = b6.x;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							tmp9 = b6.y;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							tmp9 = b6.z;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							tmp9 = b6.w;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 546 "/shared/hxmath/test/TestStructures.hx"
					double value6 = ((double) (haxe.lang.Runtime.toDouble(tmp9)) );
					//line 546 "/shared/hxmath/test/TestStructures.hx"
					switch (i6)
					{
						case 0:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							self8.x = value6;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							self8.y = value6;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							self8.z = value6;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							self8.w = value6;
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 546 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 546 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			self8.x *= s6;
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			self8.y *= s6;
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			self8.z *= s6;
			//line 546 "/shared/hxmath/test/TestStructures.hx"
			self8.w *= s6;
		}
		
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this27 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a7 = ((hxmath.math.Vector4Default) (this27) );
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this28 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b7 = ((hxmath.math.Vector4Default) (this28) );
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this29 = new hxmath.math.Vector4Default(a7.x, a7.y, a7.z, a7.w);
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self9 = ((hxmath.math.Vector4Default) (this29) );
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		double s7 = ( (( ( ( ( self9.x * b7.x ) + ( self9.y * b7.y ) ) + ( self9.z * b7.z ) ) + ( self9.w * b7.w ) )) / (( ( ( ( b7.x * b7.x ) + ( b7.y * b7.y ) ) + ( b7.z * b7.z ) ) + ( b7.w * b7.w ) )) );
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			int _g8 = 0;
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			while (( _g8 < 4 ))
			{
				//line 547 "/shared/hxmath/test/TestStructures.hx"
				int i7 = _g8++;
				//line 547 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 547 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp10 = null;
					//line 547 "/shared/hxmath/test/TestStructures.hx"
					switch (i7)
					{
						case 0:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							tmp10 = b7.x;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							tmp10 = b7.y;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							tmp10 = b7.z;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							tmp10 = b7.w;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 547 "/shared/hxmath/test/TestStructures.hx"
					double value7 = ((double) (haxe.lang.Runtime.toDouble(tmp10)) );
					//line 547 "/shared/hxmath/test/TestStructures.hx"
					switch (i7)
					{
						case 0:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							self9.x = value7;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							self9.y = value7;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							self9.z = value7;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							self9.w = value7;
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 547 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 547 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			self9.x *= s7;
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			self9.y *= s7;
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			self9.z *= s7;
			//line 547 "/shared/hxmath/test/TestStructures.hx"
			self9.w *= s7;
		}
		
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this30 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a8 = ((hxmath.math.Vector4Default) (this30) );
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this31 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b8 = ((hxmath.math.Vector4Default) (this31) );
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this32 = new hxmath.math.Vector4Default(a8.x, a8.y, a8.z, a8.w);
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self10 = ((hxmath.math.Vector4Default) (this32) );
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		double s8 = ( (( ( ( ( self10.x * b8.x ) + ( self10.y * b8.y ) ) + ( self10.z * b8.z ) ) + ( self10.w * b8.w ) )) / (( ( ( ( b8.x * b8.x ) + ( b8.y * b8.y ) ) + ( b8.z * b8.z ) ) + ( b8.w * b8.w ) )) );
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			int _g9 = 0;
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			while (( _g9 < 4 ))
			{
				//line 548 "/shared/hxmath/test/TestStructures.hx"
				int i8 = _g9++;
				//line 548 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 548 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp11 = null;
					//line 548 "/shared/hxmath/test/TestStructures.hx"
					switch (i8)
					{
						case 0:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							tmp11 = b8.x;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							tmp11 = b8.y;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							tmp11 = b8.z;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							tmp11 = b8.w;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 548 "/shared/hxmath/test/TestStructures.hx"
					double value8 = ((double) (haxe.lang.Runtime.toDouble(tmp11)) );
					//line 548 "/shared/hxmath/test/TestStructures.hx"
					switch (i8)
					{
						case 0:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							self10.x = value8;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							self10.y = value8;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							self10.z = value8;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							self10.w = value8;
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 548 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 548 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			self10.x *= s8;
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			self10.y *= s8;
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			self10.z *= s8;
			//line 548 "/shared/hxmath/test/TestStructures.hx"
			self10.w *= s8;
		}
		
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this33 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a9 = ((hxmath.math.Vector4Default) (this33) );
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this34 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b9 = ((hxmath.math.Vector4Default) (this34) );
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this35 = new hxmath.math.Vector4Default(a9.x, a9.y, a9.z, a9.w);
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self11 = ((hxmath.math.Vector4Default) (this35) );
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		double s9 = ( (( ( ( ( self11.x * b9.x ) + ( self11.y * b9.y ) ) + ( self11.z * b9.z ) ) + ( self11.w * b9.w ) )) / (( ( ( ( b9.x * b9.x ) + ( b9.y * b9.y ) ) + ( b9.z * b9.z ) ) + ( b9.w * b9.w ) )) );
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			int _g10 = 0;
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			while (( _g10 < 4 ))
			{
				//line 549 "/shared/hxmath/test/TestStructures.hx"
				int i9 = _g10++;
				//line 549 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 549 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp12 = null;
					//line 549 "/shared/hxmath/test/TestStructures.hx"
					switch (i9)
					{
						case 0:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							tmp12 = b9.x;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							tmp12 = b9.y;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							tmp12 = b9.z;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							tmp12 = b9.w;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 549 "/shared/hxmath/test/TestStructures.hx"
					double value9 = ((double) (haxe.lang.Runtime.toDouble(tmp12)) );
					//line 549 "/shared/hxmath/test/TestStructures.hx"
					switch (i9)
					{
						case 0:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							self11.x = value9;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							self11.y = value9;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							self11.z = value9;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							self11.w = value9;
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 549 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 549 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			self11.x *= s9;
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			self11.y *= s9;
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			self11.z *= s9;
			//line 549 "/shared/hxmath/test/TestStructures.hx"
			self11.w *= s9;
		}
		
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this36 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a10 = ((hxmath.math.Vector4Default) (this36) );
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this37 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b10 = ((hxmath.math.Vector4Default) (this37) );
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this38 = new hxmath.math.Vector4Default(a10.x, a10.y, a10.z, a10.w);
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self12 = ((hxmath.math.Vector4Default) (this38) );
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		double s10 = ( (( ( ( ( self12.x * b10.x ) + ( self12.y * b10.y ) ) + ( self12.z * b10.z ) ) + ( self12.w * b10.w ) )) / (( ( ( ( b10.x * b10.x ) + ( b10.y * b10.y ) ) + ( b10.z * b10.z ) ) + ( b10.w * b10.w ) )) );
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			int _g11 = 0;
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			while (( _g11 < 4 ))
			{
				//line 550 "/shared/hxmath/test/TestStructures.hx"
				int i10 = _g11++;
				//line 550 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 550 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp13 = null;
					//line 550 "/shared/hxmath/test/TestStructures.hx"
					switch (i10)
					{
						case 0:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							tmp13 = b10.x;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							tmp13 = b10.y;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							tmp13 = b10.z;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							tmp13 = b10.w;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 550 "/shared/hxmath/test/TestStructures.hx"
					double value10 = ((double) (haxe.lang.Runtime.toDouble(tmp13)) );
					//line 550 "/shared/hxmath/test/TestStructures.hx"
					switch (i10)
					{
						case 0:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							self12.x = value10;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							self12.y = value10;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							self12.z = value10;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							self12.w = value10;
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 550 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 550 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			self12.x *= s10;
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			self12.y *= s10;
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			self12.z *= s10;
			//line 550 "/shared/hxmath/test/TestStructures.hx"
			self12.w *= s10;
		}
		
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this39 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default a11 = ((hxmath.math.Vector4Default) (this39) );
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this40 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b11 = ((hxmath.math.Vector4Default) (this40) );
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this41 = new hxmath.math.Vector4Default(a11.x, a11.y, a11.z, a11.w);
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self13 = ((hxmath.math.Vector4Default) (this41) );
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		double s11 = ( (( ( ( ( self13.x * b11.x ) + ( self13.y * b11.y ) ) + ( self13.z * b11.z ) ) + ( self13.w * b11.w ) )) / (( ( ( ( b11.x * b11.x ) + ( b11.y * b11.y ) ) + ( b11.z * b11.z ) ) + ( b11.w * b11.w ) )) );
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			int _g12 = 0;
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			while (( _g12 < 4 ))
			{
				//line 551 "/shared/hxmath/test/TestStructures.hx"
				int i11 = _g12++;
				//line 551 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 551 "/shared/hxmath/test/TestStructures.hx"
					java.lang.Object tmp14 = null;
					//line 551 "/shared/hxmath/test/TestStructures.hx"
					switch (i11)
					{
						case 0:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							tmp14 = b11.x;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							tmp14 = b11.y;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							tmp14 = b11.z;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							tmp14 = b11.w;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
					//line 551 "/shared/hxmath/test/TestStructures.hx"
					double value11 = ((double) (haxe.lang.Runtime.toDouble(tmp14)) );
					//line 551 "/shared/hxmath/test/TestStructures.hx"
					switch (i11)
					{
						case 0:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							self13.x = value11;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 1:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							self13.y = value11;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 2:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							self13.z = value11;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						case 3:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							self13.w = value11;
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							break;
						}
						
						
						default:
						{
							//line 551 "/shared/hxmath/test/TestStructures.hx"
							throw haxe.lang.HaxeException.wrap("Invalid element");
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 551 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			self13.x *= s11;
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			self13.y *= s11;
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			self13.z *= s11;
			//line 551 "/shared/hxmath/test/TestStructures.hx"
			self13.w *= s11;
		}
		
		//line 545 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector4Default> v4AxesProj = new haxe.root.Array<hxmath.math.Vector4Default>(new hxmath.math.Vector4Default[]{self8, self9, self10, self11, self12, self13});
		//line 554 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 554 "/shared/hxmath/test/TestStructures.hx"
			int _g13 = 0;
			//line 554 "/shared/hxmath/test/TestStructures.hx"
			while (( _g13 < v4AxesProj.length ))
			{
				//line 554 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default v1 = v4AxesProj.__get(_g13);
				//line 554 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g13;
				//line 556 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default this42 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
				//line 556 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default b12 = ((hxmath.math.Vector4Default) (this42) );
				//line 556 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( ( ( v1 == null ) && ( b12 == null ) ) || ( ( ( ( ( ( v1 != null ) && ( b12 != null ) ) && ( v1.x == b12.x ) ) && ( v1.y == b12.y ) ) && ( v1.z == b12.z ) ) && ( v1.w == b12.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (556) )) )}));
			}
			
		}
		
		//line 559 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this43 = new hxmath.math.Vector4Default(0.5, 0.5, 0.5, 0.5);
		//line 559 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default v4Mid = ((hxmath.math.Vector4Default) (this43) );
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this44 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp15 = ((hxmath.math.Vector4Default) (this44) );
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this45 = new hxmath.math.Vector4Default(0.0, 1.0, 0.0, 0.0);
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp16 = ((hxmath.math.Vector4Default) (this45) );
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this46 = new hxmath.math.Vector4Default(0.0, 0.0, 1.0, 0.0);
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default tmp17 = ((hxmath.math.Vector4Default) (this46) );
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this47 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 1.0);
		//line 560 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.Array<hxmath.math.Vector4Default> v4Axes = new haxe.root.Array<hxmath.math.Vector4Default>(new hxmath.math.Vector4Default[]{tmp15, tmp16, tmp17, ((hxmath.math.Vector4Default) (this47) )});
		//line 561 "/shared/hxmath/test/TestStructures.hx"
		haxe.root.List<hxmath.math.Vector4Default> v4MidProjOntoAxes = ((haxe.root.List<hxmath.math.Vector4Default>) (((haxe.root.List) (haxe.root.Lambda.map(((java.lang.Object) (v4Axes) ), ((haxe.lang.Function) (new test.TestStructures_testVectorProj_561__Fun(v4Mid)) ))) )) );
		//line 563 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 563 "/shared/hxmath/test/TestStructures.hx"
			_List.ListNode<hxmath.math.Vector4Default> _g_head2 = v4MidProjOntoAxes.h;
			//line 563 "/shared/hxmath/test/TestStructures.hx"
			while (( _g_head2 != null ))
			{
				//line 563 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default val2 = _g_head2.item;
				//line 510 "/shared/hxmath/test/TestStructures.hx"
				_g_head2 = _g_head2.next;
				//line 565 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(0.5, java.lang.Math.sqrt(( ( ( ( val2.x * val2.x ) + ( val2.y * val2.y ) ) + ( val2.z * val2.z ) ) + ( val2.w * val2.w ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testVectorProj"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (565) )) )}));
			}
			
		}
		
	}
	
	
	public void testNormalizeTo()
	{
		//line 571 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 571 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 571 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 30 ))
			{
				//line 571 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 573 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default v = this.randomVector2(null);
				//line 574 "/shared/hxmath/test/TestStructures.hx"
				double newLength = java.lang.Math.abs(this.randomFloat(null, null, null));
				//line 575 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 575 "/shared/hxmath/test/TestStructures.hx"
					double length = java.lang.Math.sqrt(( ( v.x * v.x ) + ( v.y * v.y ) ));
					//line 575 "/shared/hxmath/test/TestStructures.hx"
					if (( length > 0.0 )) 
					{
						//line 575 "/shared/hxmath/test/TestStructures.hx"
						v.x /= length;
						//line 575 "/shared/hxmath/test/TestStructures.hx"
						v.y /= length;
					}
					
				}
				
				//line 575 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 575 "/shared/hxmath/test/TestStructures.hx"
					v.x *= newLength;
					//line 575 "/shared/hxmath/test/TestStructures.hx"
					v.y *= newLength;
				}
				
				//line 575 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (v) );
				//line 575 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(newLength, java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testNormalizeTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (575) )) )}));
			}
			
		}
		
		//line 578 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 578 "/shared/hxmath/test/TestStructures.hx"
			int _g1 = 0;
			//line 578 "/shared/hxmath/test/TestStructures.hx"
			while (( _g1 < 30 ))
			{
				//line 578 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g1;
				//line 580 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default v1 = this.randomVector3(null);
				//line 581 "/shared/hxmath/test/TestStructures.hx"
				double newLength1 = java.lang.Math.abs(this.randomFloat(null, null, null));
				//line 582 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 582 "/shared/hxmath/test/TestStructures.hx"
					double length1 = java.lang.Math.sqrt(( ( ( v1.x * v1.x ) + ( v1.y * v1.y ) ) + ( v1.z * v1.z ) ));
					//line 582 "/shared/hxmath/test/TestStructures.hx"
					if (( length1 > 0.0 )) 
					{
						//line 582 "/shared/hxmath/test/TestStructures.hx"
						v1.x /= length1;
						//line 582 "/shared/hxmath/test/TestStructures.hx"
						v1.y /= length1;
						//line 582 "/shared/hxmath/test/TestStructures.hx"
						v1.z /= length1;
					}
					
				}
				
				//line 582 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 582 "/shared/hxmath/test/TestStructures.hx"
					v1.x *= newLength1;
					//line 582 "/shared/hxmath/test/TestStructures.hx"
					v1.y *= newLength1;
					//line 582 "/shared/hxmath/test/TestStructures.hx"
					v1.z *= newLength1;
				}
				
				//line 582 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default self1 = ((hxmath.math.Vector3Default) (v1) );
				//line 582 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(newLength1, java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testNormalizeTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (582) )) )}));
			}
			
		}
		
		//line 585 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 585 "/shared/hxmath/test/TestStructures.hx"
			int _g2 = 0;
			//line 585 "/shared/hxmath/test/TestStructures.hx"
			while (( _g2 < 30 ))
			{
				//line 585 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g2;
				//line 587 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default v2 = this.randomVector4(null);
				//line 588 "/shared/hxmath/test/TestStructures.hx"
				double newLength2 = java.lang.Math.abs(this.randomFloat(null, null, null));
				//line 589 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					double length2 = java.lang.Math.sqrt(( ( ( ( v2.x * v2.x ) + ( v2.y * v2.y ) ) + ( v2.z * v2.z ) ) + ( v2.w * v2.w ) ));
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					if (( length2 > 0.0 )) 
					{
						//line 589 "/shared/hxmath/test/TestStructures.hx"
						v2.x /= length2;
						//line 589 "/shared/hxmath/test/TestStructures.hx"
						v2.y /= length2;
						//line 589 "/shared/hxmath/test/TestStructures.hx"
						v2.z /= length2;
						//line 589 "/shared/hxmath/test/TestStructures.hx"
						v2.w /= length2;
					}
					
				}
				
				//line 589 "/shared/hxmath/test/TestStructures.hx"
				{
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					v2.x *= newLength2;
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					v2.y *= newLength2;
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					v2.z *= newLength2;
					//line 589 "/shared/hxmath/test/TestStructures.hx"
					v2.w *= newLength2;
				}
				
				//line 589 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default self2 = ((hxmath.math.Vector4Default) (v2) );
				//line 589 "/shared/hxmath/test/TestStructures.hx"
				this.assertApproxEquals(newLength2, java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testNormalizeTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (589) )) )}));
			}
			
		}
		
	}
	
	
	public void testClamp()
	{
		//line 595 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 595 "/shared/hxmath/test/TestStructures.hx"
			int _g = 0;
			//line 595 "/shared/hxmath/test/TestStructures.hx"
			while (( _g < 30 ))
			{
				//line 595 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g;
				//line 597 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default _g2 = this.randomVector2(null);
				//line 597 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(_g2.x, _g2.y);
				//line 597 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this1) );
				//line 597 "/shared/hxmath/test/TestStructures.hx"
				self.x *= 10.0;
				//line 597 "/shared/hxmath/test/TestStructures.hx"
				self.y *= 10.0;
				//line 602 "/shared/hxmath/test/TestStructures.hx"
				double length = java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) ));
				//line 602 "/shared/hxmath/test/TestStructures.hx"
				if (( length < 3.0 )) 
				{
					//line 602 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						double length1 = java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) ));
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						if (( length1 > 0.0 )) 
						{
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							self.x /= length1;
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							self.y /= length1;
						}
						
					}
					
					//line 602 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						self.x *= 3.0;
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						self.y *= 3.0;
					}
					
				}
				else
				{
					//line 602 "/shared/hxmath/test/TestStructures.hx"
					if (( length > 7.0 )) 
					{
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							double length2 = java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) ));
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							if (( length2 > 0.0 )) 
							{
								//line 602 "/shared/hxmath/test/TestStructures.hx"
								self.x /= length2;
								//line 602 "/shared/hxmath/test/TestStructures.hx"
								self.y /= length2;
							}
							
						}
						
						//line 602 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							self.x *= 7.0;
							//line 602 "/shared/hxmath/test/TestStructures.hx"
							self.y *= 7.0;
						}
						
					}
					
				}
				
				//line 604 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) )) >= 2.999999 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (604) )) )}));
				//line 605 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( self.x * self.x ) + ( self.y * self.y ) )) <= 7.000001 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (605) )) )}));
			}
			
		}
		
		//line 608 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 608 "/shared/hxmath/test/TestStructures.hx"
			int _g1 = 0;
			//line 608 "/shared/hxmath/test/TestStructures.hx"
			while (( _g1 < 30 ))
			{
				//line 608 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g1;
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default _g21 = this.randomVector3(null);
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(_g21.x, _g21.y, _g21.z);
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector3Default self1 = ((hxmath.math.Vector3Default) (this2) );
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				self1.x *= 10.0;
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				self1.y *= 10.0;
				//line 610 "/shared/hxmath/test/TestStructures.hx"
				self1.z *= 10.0;
				//line 615 "/shared/hxmath/test/TestStructures.hx"
				double length3 = java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) ));
				//line 615 "/shared/hxmath/test/TestStructures.hx"
				if (( length3 < 3.0 )) 
				{
					//line 615 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						double length4 = java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) ));
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						if (( length4 > 0.0 )) 
						{
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.x /= length4;
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.y /= length4;
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.z /= length4;
						}
						
					}
					
					//line 615 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						self1.x *= 3.0;
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						self1.y *= 3.0;
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						self1.z *= 3.0;
					}
					
				}
				else
				{
					//line 615 "/shared/hxmath/test/TestStructures.hx"
					if (( length3 > 7.0 )) 
					{
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							double length5 = java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) ));
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							if (( length5 > 0.0 )) 
							{
								//line 615 "/shared/hxmath/test/TestStructures.hx"
								self1.x /= length5;
								//line 615 "/shared/hxmath/test/TestStructures.hx"
								self1.y /= length5;
								//line 615 "/shared/hxmath/test/TestStructures.hx"
								self1.z /= length5;
							}
							
						}
						
						//line 615 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.x *= 7.0;
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.y *= 7.0;
							//line 615 "/shared/hxmath/test/TestStructures.hx"
							self1.z *= 7.0;
						}
						
					}
					
				}
				
				//line 617 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) )) >= 2.999999 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (617) )) )}));
				//line 618 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( ( self1.x * self1.x ) + ( self1.y * self1.y ) ) + ( self1.z * self1.z ) )) <= 7.000001 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (618) )) )}));
			}
			
		}
		
		//line 621 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 621 "/shared/hxmath/test/TestStructures.hx"
			int _g3 = 0;
			//line 621 "/shared/hxmath/test/TestStructures.hx"
			while (( _g3 < 30 ))
			{
				//line 621 "/shared/hxmath/test/TestStructures.hx"
				 ++ _g3;
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default _g22 = this.randomVector4(null);
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(_g22.x, _g22.y, _g22.z, _g22.w);
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				hxmath.math.Vector4Default self2 = ((hxmath.math.Vector4Default) (this3) );
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				self2.x *= 10.0;
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				self2.y *= 10.0;
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				self2.z *= 10.0;
				//line 623 "/shared/hxmath/test/TestStructures.hx"
				self2.w *= 10.0;
				//line 628 "/shared/hxmath/test/TestStructures.hx"
				double length6 = java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) ));
				//line 628 "/shared/hxmath/test/TestStructures.hx"
				if (( length6 < 3.0 )) 
				{
					//line 628 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						double length7 = java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) ));
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						if (( length7 > 0.0 )) 
						{
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.x /= length7;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.y /= length7;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.z /= length7;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.w /= length7;
						}
						
					}
					
					//line 628 "/shared/hxmath/test/TestStructures.hx"
					{
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						self2.x *= 3.0;
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						self2.y *= 3.0;
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						self2.z *= 3.0;
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						self2.w *= 3.0;
					}
					
				}
				else
				{
					//line 628 "/shared/hxmath/test/TestStructures.hx"
					if (( length6 > 7.0 )) 
					{
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							double length8 = java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) ));
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							if (( length8 > 0.0 )) 
							{
								//line 628 "/shared/hxmath/test/TestStructures.hx"
								self2.x /= length8;
								//line 628 "/shared/hxmath/test/TestStructures.hx"
								self2.y /= length8;
								//line 628 "/shared/hxmath/test/TestStructures.hx"
								self2.z /= length8;
								//line 628 "/shared/hxmath/test/TestStructures.hx"
								self2.w /= length8;
							}
							
						}
						
						//line 628 "/shared/hxmath/test/TestStructures.hx"
						{
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.x *= 7.0;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.y *= 7.0;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.z *= 7.0;
							//line 628 "/shared/hxmath/test/TestStructures.hx"
							self2.w *= 7.0;
						}
						
					}
					
				}
				
				//line 630 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) )) >= 2.999999 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (630) )) )}));
				//line 631 "/shared/hxmath/test/TestStructures.hx"
				this.assertTrue(( java.lang.Math.sqrt(( ( ( ( self2.x * self2.x ) + ( self2.y * self2.y ) ) + ( self2.z * self2.z ) ) + ( self2.w * self2.w ) )) <= 7.000001 ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testClamp"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (631) )) )}));
			}
			
		}
		
	}
	
	
	public void testDistanceTo()
	{
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(1.0, 0.0);
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default b = ((hxmath.math.Vector2Default) (this2) );
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this1) );
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this3 = new hxmath.math.Vector2Default(self.x, self.y);
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self1 = ((hxmath.math.Vector2Default) (this3) );
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		self1.x -= b.x;
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		self1.y -= b.y;
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self2 = ((hxmath.math.Vector2Default) (self1) );
		//line 637 "/shared/hxmath/test/TestStructures.hx"
		this.assertApproxEquals(1.0, java.lang.Math.sqrt(( ( self2.x * self2.x ) + ( self2.y * self2.y ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDistanceTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (637) )) )}));
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this4 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this5 = new hxmath.math.Vector3Default(1.0, 0.0, 0.0);
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default b1 = ((hxmath.math.Vector3Default) (this5) );
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self3 = ((hxmath.math.Vector3Default) (this4) );
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this6 = new hxmath.math.Vector3Default(self3.x, self3.y, self3.z);
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self4 = ((hxmath.math.Vector3Default) (this6) );
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		self4.x -= b1.x;
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		self4.y -= b1.y;
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		self4.z -= b1.z;
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self5 = ((hxmath.math.Vector3Default) (self4) );
		//line 638 "/shared/hxmath/test/TestStructures.hx"
		this.assertApproxEquals(1.0, java.lang.Math.sqrt(( ( ( self5.x * self5.x ) + ( self5.y * self5.y ) ) + ( self5.z * self5.z ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDistanceTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (638) )) )}));
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this7 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this8 = new hxmath.math.Vector4Default(1.0, 0.0, 0.0, 0.0);
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default b2 = ((hxmath.math.Vector4Default) (this8) );
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self6 = ((hxmath.math.Vector4Default) (this7) );
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this9 = new hxmath.math.Vector4Default(self6.x, self6.y, self6.z, self6.w);
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self7 = ((hxmath.math.Vector4Default) (this9) );
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		self7.x -= b2.x;
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		self7.y -= b2.y;
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		self7.z -= b2.z;
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		self7.w -= b2.w;
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self8 = ((hxmath.math.Vector4Default) (self7) );
		//line 639 "/shared/hxmath/test/TestStructures.hx"
		this.assertApproxEquals(1.0, java.lang.Math.sqrt(( ( ( ( self8.x * self8.x ) + ( self8.y * self8.y ) ) + ( self8.z * self8.z ) ) + ( self8.w * self8.w ) )), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testDistanceTo"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (639) )) )}));
	}
	
	
	public void testSetAllFields()
	{
		//line 644 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 644 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector2Default self = ((hxmath.math.Vector2Default) (this1) );
		//line 644 "/shared/hxmath/test/TestStructures.hx"
		self.x = ((double) (23) );
		//line 644 "/shared/hxmath/test/TestStructures.hx"
		self.y = ((double) (0) );
		//line 645 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (645) )) )})) ));
		//line 647 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default this2 = new hxmath.math.Vector3Default(0.0, 0.0, 0.0);
		//line 647 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector3Default self1 = ((hxmath.math.Vector3Default) (this2) );
		//line 647 "/shared/hxmath/test/TestStructures.hx"
		self1.x = ((double) (23) );
		//line 647 "/shared/hxmath/test/TestStructures.hx"
		self1.y = ((double) (0) );
		//line 647 "/shared/hxmath/test/TestStructures.hx"
		self1.z = ((double) (0) );
		//line 648 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self1.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (648) )) )})) ));
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default this3 = new hxmath.math.Vector4Default(0.0, 0.0, 0.0, 0.0);
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Vector4Default self2 = ((hxmath.math.Vector4Default) (this3) );
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		self2.x = ((double) (23) );
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		self2.y = ((double) (0) );
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		self2.z = ((double) (0) );
		//line 650 "/shared/hxmath/test/TestStructures.hx"
		self2.w = ((double) (0) );
		//line 651 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self2.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (651) )) )})) ));
		//line 653 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.IntVector2Default self3 = ((hxmath.math.IntVector2Default) (hxmath.math._IntVector2.IntVector2_Impl_._new(0, 0)) );
		//line 653 "/shared/hxmath/test/TestStructures.hx"
		self3.x = 23;
		//line 653 "/shared/hxmath/test/TestStructures.hx"
		self3.y = 0;
		//line 654 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23) ), ((java.lang.Object) (self3.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (654) )) )})) ));
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault this4 = new hxmath.math.QuaternionDefault(((double) (0) ), ((double) (0) ), ((double) (0) ), ((double) (0) ));
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.QuaternionDefault self4 = ((hxmath.math.QuaternionDefault) (this4) );
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		self4.s = ((double) (23) );
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		self4.x = ((double) (0) );
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		self4.y = ((double) (0) );
		//line 656 "/shared/hxmath/test/TestStructures.hx"
		self4.z = ((double) (0) );
		//line 657 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self4.s) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (657) )) )})) ));
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default this5 = new hxmath.math.Matrix2x2Default(0.0, 0.0, 0.0, 0.0);
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default self5 = ((hxmath.math.Matrix2x2Default) (this5) );
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		self5.a = ((double) (23) );
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		self5.b = ((double) (0) );
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		self5.c = ((double) (0) );
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		self5.d = ((double) (0) );
		//line 659 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix2x2Default m22 = ((hxmath.math.Matrix2x2Default) (this5) );
		//line 660 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (m22.a) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (660) )) )})) ));
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default this6 = new hxmath.math.Matrix3x2Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x2Default self6 = ((hxmath.math.Matrix3x2Default) (this6) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.a = ((double) (23) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.b = ((double) (0) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.c = ((double) (0) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.d = ((double) (0) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.tx = ((double) (0) );
		//line 662 "/shared/hxmath/test/TestStructures.hx"
		self6.ty = ((double) (0) );
		//line 663 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self6.a) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (663) )) )})) ));
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default this7 = new hxmath.math.Matrix3x3Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix3x3Default self7 = ((hxmath.math.Matrix3x3Default) (this7) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m00 = ((double) (23) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m10 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m20 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m01 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m11 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m21 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m02 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m12 = ((double) (0) );
		//line 665 "/shared/hxmath/test/TestStructures.hx"
		self7.m22 = ((double) (0) );
		//line 666 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self7.m00) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (666) )) )})) ));
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default this8 = new hxmath.math.Matrix4x4Default(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		hxmath.math.Matrix4x4Default self8 = ((hxmath.math.Matrix4x4Default) (this8) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m00 = ((double) (23) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m10 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m20 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m30 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m01 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m11 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m21 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m31 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m02 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m12 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m22 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m32 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m03 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m13 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m23 = ((double) (0) );
		//line 668 "/shared/hxmath/test/TestStructures.hx"
		self8.m33 = ((double) (0) );
		//line 669 "/shared/hxmath/test/TestStructures.hx"
		this.assertEquals(((java.lang.Object) (23.0) ), ((java.lang.Object) (self8.m00) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestStructures", "TestStructures.hx", "testSetAllFields"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (669) )) )})) ));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			boolean __temp_executeDef1 = true;
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			switch (field.hashCode())
			{
				case 1756292906:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testSetAllFields")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testSetAllFields")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testEquals")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEquals")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1617919874:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testDistanceTo")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDistanceTo")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1206209557:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testClone")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testClone")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1206223031:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testClamp")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testClamp")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1197209873:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testAddSub")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAddSub")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -911208842:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testNormalizeTo")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testNormalizeTo")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -597989789:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testDeterminant")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testDeterminant")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -695684750:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testVectorProj")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testVectorProj")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -466132693:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testArrayAccess")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testArrayAccess")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1367599751:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testVectorMinMax")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testVectorMinMax")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1360213012:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testApplyScalarFunc")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testApplyScalarFunc")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 438059828:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testHasToString")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testHasToString")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1773440223:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testIntApplyScalarFunc")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIntApplyScalarFunc")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 825394398:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testEqualsNullShouldNotThrow")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testEqualsNullShouldNotThrow")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1603377460:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testCopyToFrom")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testCopyToFrom")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1653158260:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testRowColAccessors")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testRowColAccessors")) );
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
			}
			
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			if (__temp_executeDef1) 
			{
				//line 18 "/shared/hxmath/test/TestStructures.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 18 "/shared/hxmath/test/TestStructures.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		{
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			boolean __temp_executeDef1 = true;
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			switch (field.hashCode())
			{
				case 1756292906:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testSetAllFields")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testSetAllFields();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1324251889:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testEquals")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testEquals();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1617919874:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testDistanceTo")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testDistanceTo();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1206209557:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testClone")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testClone();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1206223031:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testClamp")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testClamp();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1197209873:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testAddSub")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testAddSub();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -911208842:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testNormalizeTo")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testNormalizeTo();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -597989789:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testDeterminant")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testDeterminant();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -695684750:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testVectorProj")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testVectorProj();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -466132693:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testArrayAccess")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testArrayAccess();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1367599751:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testVectorMinMax")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testVectorMinMax();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1360213012:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testApplyScalarFunc")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testApplyScalarFunc();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 438059828:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testHasToString")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testHasToString();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1773440223:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testIntApplyScalarFunc")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testIntApplyScalarFunc();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 825394398:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testEqualsNullShouldNotThrow")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testEqualsNullShouldNotThrow();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case -1603377460:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testCopyToFrom")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testCopyToFrom();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
				case 1653158260:
				{
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					if (field.equals("testRowColAccessors")) 
					{
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						__temp_executeDef1 = false;
						//line 18 "/shared/hxmath/test/TestStructures.hx"
						this.testRowColAccessors();
					}
					
					//line 18 "/shared/hxmath/test/TestStructures.hx"
					break;
				}
				
				
			}
			
			//line 18 "/shared/hxmath/test/TestStructures.hx"
			if (__temp_executeDef1) 
			{
				//line 18 "/shared/hxmath/test/TestStructures.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 18 "/shared/hxmath/test/TestStructures.hx"
		return null;
	}
	
	
}


