// Generated by Haxe 3.3.0
package test;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestMathUtil extends test.MathTestCase
{
	public TestMathUtil(haxe.lang.EmptyObject empty)
	{
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public TestMathUtil(java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		test.TestMathUtil.__hx_ctor_test_TestMathUtil(this, posInfos);
	}
	
	
	public static void __hx_ctor_test_TestMathUtil(test.TestMathUtil __temp_me63, java.lang.Object posInfos)
	{
		//line 29 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestCase.hx"
		test.MathTestCase.__hx_ctor_test_MathTestCase(__temp_me63, posInfos);
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		return new test.TestMathUtil(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		return new test.TestMathUtil(((java.lang.Object) (arr.__get(0)) ));
	}
	
	
	public void testOrient2D()
	{
		//line 16 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 16 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default a = ((hxmath.math.Vector2Default) (this1) );
		//line 17 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(0.0, 1.0);
		//line 17 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default b = ((hxmath.math.Vector2Default) (this2) );
		//line 18 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default this3 = new hxmath.math.Vector2Default(-0.5, 0.5);
		//line 18 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default c = ((hxmath.math.Vector2Default) (this3) );
		//line 19 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default this4 = new hxmath.math.Vector2Default(0.5, 0.5);
		//line 19 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default d = ((hxmath.math.Vector2Default) (this4) );
		//line 20 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default this5 = new hxmath.math.Vector2Default(0.0, -1.0);
		//line 20 "/shared/hxmath/test/TestMathUtil.hx"
		hxmath.math.Vector2Default e = ((hxmath.math.Vector2Default) (this5) );
		//line 22 "/shared/hxmath/test/TestMathUtil.hx"
		double result = ( ( (( a.x - c.x )) * (( b.y - c.y )) ) - ( (( a.y - c.y )) * (( b.x - c.x )) ) );
		//line 22 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (( (( result > 0 )) ? (((int) (1) )) : (( (( result < 0 )) ? (((int) (-1) )) : (((int) (0) )) )) )) ), ((int) (1) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testOrient2D"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (22) )) )})) ));
		//line 23 "/shared/hxmath/test/TestMathUtil.hx"
		double result1 = ( ( (( a.x - d.x )) * (( b.y - d.y )) ) - ( (( a.y - d.y )) * (( b.x - d.x )) ) );
		//line 23 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (( (( result1 > 0 )) ? (((int) (1) )) : (( (( result1 < 0 )) ? (((int) (-1) )) : (((int) (0) )) )) )) ), ((int) (-1) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testOrient2D"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (23) )) )})) ));
		//line 24 "/shared/hxmath/test/TestMathUtil.hx"
		double result2 = ( ( (( a.x - e.x )) * (( b.y - e.y )) ) - ( (( a.y - e.y )) * (( b.x - e.x )) ) );
		//line 24 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (( (( result2 > 0 )) ? (((int) (1) )) : (( (( result2 < 0 )) ? (((int) (-1) )) : (((int) (0) )) )) )) ), ((int) (0) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testOrient2D"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )})) ));
	}
	
	
	public void testWrapAngle()
	{
		//line 29 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (0.0) ), ((java.lang.Object) (( 0.0 % 360.0 )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testWrapAngle"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (29) )) )})) ));
		//line 30 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (0.0) ), ((java.lang.Object) (( 360.0 % 360.0 )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testWrapAngle"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (30) )) )})) ));
		//line 31 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (359.999999) ), ((java.lang.Object) (( 359.999999 % 360 )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testWrapAngle"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (31) )) )})) ));
		//line 34 "/shared/hxmath/test/TestMathUtil.hx"
		this.assertEquals(((java.lang.Object) (189.0) ), ((java.lang.Object) (( 360.0 - ( 531. % 360.0 ) )) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestMathUtil", "TestMathUtil.hx", "testWrapAngle"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (34) )) )})) ));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		{
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			switch (field.hashCode())
			{
				case 606287415:
				{
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					if (field.equals("testWrapAngle")) 
					{
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testWrapAngle")) );
					}
					
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					break;
				}
				
				
				case 2091689993:
				{
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					if (field.equals("testOrient2D")) 
					{
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testOrient2D")) );
					}
					
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/hxmath/test/TestMathUtil.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 5 "/shared/hxmath/test/TestMathUtil.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		{
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			boolean __temp_executeDef1 = true;
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			switch (field.hashCode())
			{
				case 606287415:
				{
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					if (field.equals("testWrapAngle")) 
					{
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						this.testWrapAngle();
					}
					
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					break;
				}
				
				
				case 2091689993:
				{
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					if (field.equals("testOrient2D")) 
					{
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						__temp_executeDef1 = false;
						//line 5 "/shared/hxmath/test/TestMathUtil.hx"
						this.testOrient2D();
					}
					
					//line 5 "/shared/hxmath/test/TestMathUtil.hx"
					break;
				}
				
				
			}
			
			//line 5 "/shared/hxmath/test/TestMathUtil.hx"
			if (__temp_executeDef1) 
			{
				//line 5 "/shared/hxmath/test/TestMathUtil.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 5 "/shared/hxmath/test/TestMathUtil.hx"
		return null;
	}
	
	
}


