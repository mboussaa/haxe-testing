// Generated by Haxe 3.3.0
package nanotest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class NanoTestRunner extends haxe.lang.HxObject
{
	public NanoTestRunner(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public NanoTestRunner(haxe.lang.Function printError)
	{
		//line 115 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		nanotest.NanoTestRunner.__hx_ctor_nanotest_NanoTestRunner(this, printError);
	}
	
	
	public static void __hx_ctor_nanotest_NanoTestRunner(nanotest.NanoTestRunner __temp_me37, haxe.lang.Function printError)
	{
		//line 110 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		__temp_me37.print = ( (( nanotest.NanoTestRunner___hx_ctor_nanotest_NanoTestRunner_110__Fun.__hx_current != null )) ? (nanotest.NanoTestRunner___hx_ctor_nanotest_NanoTestRunner_110__Fun.__hx_current) : (nanotest.NanoTestRunner___hx_ctor_nanotest_NanoTestRunner_110__Fun.__hx_current = ((nanotest.NanoTestRunner___hx_ctor_nanotest_NanoTestRunner_110__Fun) (new nanotest.NanoTestRunner___hx_ctor_nanotest_NanoTestRunner_110__Fun()) )) );
		//line 116 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		__temp_me37.cases = new haxe.root.Array<nanotest.NanoTestCase>(new nanotest.NanoTestCase[]{});
		//line 118 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if (( printError == null )) 
		{
			//line 119 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			__temp_me37.printError = ((haxe.lang.Function) (new haxe.lang.Closure(nanotest.NanoTestRunner.class, "warning")) );
		}
		else
		{
			//line 121 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			__temp_me37.printError = printError;
		}
		
	}
	
	
	public static void error(java.lang.String message, java.lang.Object position)
	{
	}
	
	
	public static void warning(java.lang.String message, java.lang.Object position)
	{
		//line 230 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		haxe.unit.TestRunner.print.__hx_invoke1_o(0.0, ( ( ( ( ( nanotest.NanoTestRunner.fileFromPosInfos(position) + ":" ) + ((int) (haxe.lang.Runtime.getField_f(position, "lineNumber", true)) ) ) + ": " ) + message ) + "\n" ));
	}
	
	
	public static java.lang.String fileFromPosInfos(java.lang.Object posInfos)
	{
		//line 238 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "className", true)) == null )) 
		{
			//line 238 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true));
		}
		
		//line 239 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true)) == null )) 
		{
			//line 239 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			return null;
		}
		
		//line 241 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		haxe.root.Array<java.lang.String> fsegs = new haxe.root.EReg("\\\\|/", "").split(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true)));
		//line 242 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if (( fsegs.length > 1 )) 
		{
			//line 242 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true));
		}
		
		//line 244 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		java.lang.String f = haxe.lang.Runtime.toString(fsegs.pop());
		//line 246 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if ( ! (haxe.lang.Runtime.valEq(haxe.lang.StringExt.substr(f, ( f.length() - 3 ), null), ".hx")) ) 
		{
			//line 246 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true));
		}
		
		//line 248 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		haxe.root.Array<java.lang.String> segs = haxe.lang.StringExt.split(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "className", true)), ".");
		//line 249 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		segs.pop();
		//line 250 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		segs.push(f);
		//line 251 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		return segs.join("/");
	}
	
	
	public static java.lang.Object posInfosToPosition(java.lang.Object posInfos)
	{
		//line 280 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 281 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			java.lang.String __temp_odecl1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(posInfos, "fileName", true));
			//line 280 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"file"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"max", "min"}, new double[]{((double) (((double) (0) )) ), ((double) (((double) (0) )) )});
		}
		
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		return new nanotest.NanoTestRunner(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		return new nanotest.NanoTestRunner(((haxe.lang.Function) (arr.__get(0)) ));
	}
	
	
	public haxe.root.Array<nanotest.NanoTestCase> cases;
	
	public haxe.lang.Function printError;
	
	public haxe.lang.Function print;
	
	public void add(nanotest.NanoTestCase testCase)
	{
		//line 126 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		this.cases.push(testCase);
	}
	
	
	public boolean run()
	{
		//line 135 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		haxe.root.Array<java.lang.Object> results = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			int _g = 0;
			//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			haxe.root.Array<nanotest.NanoTestCase> _g1 = this.cases;
			//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			while (( _g < _g1.length ))
			{
				//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				nanotest.NanoTestCase c = _g1.__get(_g);
				//line 136 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				 ++ _g;
				//line 137 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				haxe.root.Array<java.lang.Object> rs = c.run(this.print);
				//line 138 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				{
					//line 138 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					int _g2 = 0;
					//line 138 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					while (( _g2 < rs.length ))
					{
						//line 138 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						java.lang.Object r = rs.__get(_g2);
						//line 138 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						 ++ _g2;
						//line 139 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						results.push(r);
					}
					
				}
				
			}
			
		}
		
		//line 143 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		int failures = 0;
		//line 144 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 144 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			int _g3 = 0;
			//line 144 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			while (( _g3 < results.length ))
			{
				//line 144 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				java.lang.Object result = results.__get(_g3);
				//line 144 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				 ++ _g3;
				//line 145 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				if (haxe.lang.Runtime.toBool(haxe.lang.Runtime.getField(result, "failed", true))) 
				{
					//line 146 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					this.print.__hx_invoke1_o(0.0, ( ( ( ( "* " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(result, "className", true)) ) + "::" ) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(result, "method", true)) ) + "()\n" ));
					//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					{
						//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						int _g11 = 0;
						//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						haxe.root.Array<nanotest.NanoTestStatus> _g21 = ((haxe.root.Array<nanotest.NanoTestStatus>) (haxe.lang.Runtime.getField(result, "status", true)) );
						//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						while (( _g11 < _g21.length ))
						{
							//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
							nanotest.NanoTestStatus status = _g21.__get(_g11);
							//line 148 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
							 ++ _g11;
							//line 149 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
							switch (status.index)
							{
								case 0:
								{
									//line 150 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									break;
								}
								
								
								case 1:
								{
									//line 151 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									java.lang.Object posInfos = status.params[1];
									//line 151 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									java.lang.String message = haxe.lang.Runtime.toString(status.params[0]);
									//line 152 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									this.printError.__hx_invoke2_o(0.0, ( "Test failed : " + message ), 0.0, posInfos);
									//line 151 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									break;
								}
								
								
								case 2:
								{
									//line 153 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									haxe.root.Array<haxe.StackItem> callStack = ((haxe.root.Array<haxe.StackItem>) (status.params[1]) );
									//line 153 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									java.lang.String message1 = haxe.lang.Runtime.toString(status.params[0]);
									//line 153 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									{
										//line 154 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
										boolean first = true;
										//line 155 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
										{
											//line 155 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
											int _g31 = 0;
											//line 155 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
											while (( _g31 < callStack.length ))
											{
												//line 155 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
												haxe.StackItem item = callStack.__get(_g31);
												//line 155 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
												 ++ _g31;
												//line 157 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
												switch (item.index)
												{
													case 0:
													{
														//line 159 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														this.print.__hx_invoke1_o(0.0, ( "Called from" + " : a C function\n" ));
														//line 159 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														break;
													}
													
													
													case 1:
													{
														//line 160 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														java.lang.String m = haxe.lang.Runtime.toString(item.params[0]);
														//line 161 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														this.print.__hx_invoke1_o(0.0, ( ( ( "Called from" + " : module " ) + m ) + "\n" ));
														//line 160 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														break;
													}
													
													
													case 2:
													{
														//line 162 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														int line = ((int) (haxe.lang.Runtime.toInt(item.params[2])) );
														//line 162 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														java.lang.String file = haxe.lang.Runtime.toString(item.params[1]);
														//line 162 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														{
															//line 163 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
															java.lang.Object posInfos1 = null;
															//line 163 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
															{
																//line 166 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																java.lang.String __temp_odecl1 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(result, "className", true));
																//line 167 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																java.lang.String __temp_odecl2 = haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(result, "method", true));
																//line 163 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																posInfos1 = new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{__temp_odecl1, file, __temp_odecl2}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (line) )) )});
															}
															
															//line 169 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
															if (first) 
															{
																//line 170 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																this.printError.__hx_invoke2_o(0.0, ( "exception thrown : " + message1 ), 0.0, posInfos1);
																//line 171 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																first = false;
															}
															else
															{
																//line 173 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
																this.printError.__hx_invoke2_o(0.0, "Called from", 0.0, posInfos1);
															}
															
														}
														
														//line 162 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														break;
													}
													
													
													case 3:
													{
														//line 175 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														java.lang.String meth = haxe.lang.Runtime.toString(item.params[1]);
														//line 175 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														java.lang.String cname = haxe.lang.Runtime.toString(item.params[0]);
														//line 176 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														this.print.__hx_invoke1_o(0.0, ( ( ( ( ( "Called from" + " : " ) + cname ) + "." ) + meth ) + "\n" ));
														//line 175 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														break;
													}
													
													
													case 4:
													{
														//line 178 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														java.lang.Object n = item.params[0];
														//line 182 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														this.print.__hx_invoke1_o(0.0, ( ( haxe.lang.Runtime.toString(( "Called from" + " : local function #" )) + haxe.lang.Runtime.toString(n) ) + "\n" ));
														//line 178 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
														break;
													}
													
													
												}
												
											}
											
										}
										
										//line 186 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
										if (first) 
										{
											//line 187 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
											this.printError.__hx_invoke2_o(0.0, ( "exception thrown : " + message1 ), 0.0, ((nanotest.NanoTestCase) (haxe.lang.Runtime.getField(result, "testCase", true)) ).posInfos);
										}
										
									}
									
									//line 153 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
									break;
								}
								
								
							}
							
						}
						
					}
					
					//line 195 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					this.print.__hx_invoke1_o(0.0, "\n");
					//line 196 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					 ++ failures;
				}
				
			}
			
		}
		
		//line 200 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		if (( failures == 0 )) 
		{
			//line 201 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			this.print.__hx_invoke1_o(0.0, "OK ");
		}
		else
		{
			//line 203 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			this.print.__hx_invoke1_o(0.0, "FAILED ");
		}
		
		//line 205 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		this.print.__hx_invoke1_o(0.0, ( ( ( ( ( results.length + " tests, " ) + failures ) + " failed, " ) + (( results.length - failures )) ) + " success\n" ));
		//line 212 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		return ( failures == 0 );
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			switch (field.hashCode())
			{
				case 106934957:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("print")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						this.print = ((haxe.lang.Function) (value) );
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return value;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 94432067:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("cases")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						this.cases = ((haxe.root.Array<nanotest.NanoTestCase>) (value) );
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return value;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 114807643:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("printError")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						this.printError = ((haxe.lang.Function) (value) );
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return value;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
			}
			
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			switch (field.hashCode())
			{
				case 113291:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("run")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "run")) );
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 94432067:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("cases")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return this.cases;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 96417:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("add")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "add")) );
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 114807643:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("printError")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return this.printError;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 106934957:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("print")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return this.print;
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
			}
			
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			boolean __temp_executeDef1 = true;
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			switch (field.hashCode())
			{
				case 113291:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("run")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						return this.run();
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
				case 96417:
				{
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					if (field.equals("add")) 
					{
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						__temp_executeDef1 = false;
						//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
						this.add(((nanotest.NanoTestCase) (dynargs.__get(0)) ));
					}
					
					//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
					break;
				}
				
				
			}
			
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			if (__temp_executeDef1) 
			{
				//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		baseArr.push("print");
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		baseArr.push("printError");
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		baseArr.push("cases");
		//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
		{
			//line 14 "/usr/lib/haxe/lib/nanotest/1,0,0/nanotest/NanoTestRunner.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


