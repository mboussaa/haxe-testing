// Generated by Haxe 3.3.0
package test;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestConverters extends test.MathTestCase
{
	public TestConverters(haxe.lang.EmptyObject empty)
	{
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		super(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public TestConverters()
	{
		//line 44 "/shared/hxmath/test/TestConverters.hx"
		super(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
		//line 44 "/shared/hxmath/test/TestConverters.hx"
		test.TestConverters.__hx_ctor_test_TestConverters(this);
	}
	
	
	public static void __hx_ctor_test_TestConverters(test.TestConverters __temp_me67)
	{
		//line 44 "/shared/hxmath/test/TestConverters.hx"
		test.MathTestCase.__hx_ctor_test_MathTestCase(__temp_me67, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (44) )) )}));
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		return new test.TestConverters(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		return new test.TestConverters();
	}
	
	
	public void testShapeSimilarConversion()
	{
		//line 49 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default v2a = this.randomVector2(null);
		//line 50 "/shared/hxmath/test/TestConverters.hx"
		double v2b_y = 0.0;
		//line 50 "/shared/hxmath/test/TestConverters.hx"
		double v2b_x = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v2b_y = 0.0;
		//line 51 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default v2c = this.randomVector2(null);
		//line 52 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v2b_x = v2a.x;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v2b_y = v2a.y;
		}
		
		//line 53 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 53 "/shared/hxmath/test/TestConverters.hx"
			v2c.x = v2b_x;
			//line 53 "/shared/hxmath/test/TestConverters.hx"
			v2c.y = v2b_y;
		}
		
		//line 54 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( v2a == null ) && ( v2c == null ) ) || ( ( ( ( v2a != null ) && ( v2c != null ) ) && ( v2a.x == v2c.x ) ) && ( v2a.y == v2c.y ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (54) )) )}));
		//line 56 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector3Default v3a = this.randomVector3(null);
		//line 57 "/shared/hxmath/test/TestConverters.hx"
		double v3b_z = 0.0;
		//line 57 "/shared/hxmath/test/TestConverters.hx"
		double v3b_y = 0.0;
		//line 57 "/shared/hxmath/test/TestConverters.hx"
		double v3b_x = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v3b_y = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v3b_z = 0.0;
		//line 58 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector3Default v3c = this.randomVector3(null);
		//line 59 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v3b_x = v3a.x;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v3b_y = v3a.y;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v3b_z = v3a.z;
		}
		
		//line 60 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 60 "/shared/hxmath/test/TestConverters.hx"
			v3c.x = v3b_x;
			//line 60 "/shared/hxmath/test/TestConverters.hx"
			v3c.y = v3b_y;
			//line 60 "/shared/hxmath/test/TestConverters.hx"
			v3c.z = v3b_z;
		}
		
		//line 61 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( v3a == null ) && ( v3c == null ) ) || ( ( ( ( ( v3a != null ) && ( v3c != null ) ) && ( v3a.x == v3c.x ) ) && ( v3a.y == v3c.y ) ) && ( v3a.z == v3c.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (61) )) )}));
		//line 63 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector4Default v4a = this.randomVector4(null);
		//line 64 "/shared/hxmath/test/TestConverters.hx"
		double v4b_z = 0.0;
		//line 64 "/shared/hxmath/test/TestConverters.hx"
		double v4b_y = 0.0;
		//line 64 "/shared/hxmath/test/TestConverters.hx"
		double v4b_x = 0.0;
		//line 64 "/shared/hxmath/test/TestConverters.hx"
		double v4b_w = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v4b_x = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v4b_y = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v4b_z = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		v4b_w = 0.0;
		//line 65 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector4Default v4c = this.randomVector4(null);
		//line 66 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v4b_x = v4a.x;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v4b_y = v4a.y;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v4b_z = v4a.z;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			v4b_w = v4a.w;
		}
		
		//line 67 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 67 "/shared/hxmath/test/TestConverters.hx"
			v4c.x = v4b_x;
			//line 67 "/shared/hxmath/test/TestConverters.hx"
			v4c.y = v4b_y;
			//line 67 "/shared/hxmath/test/TestConverters.hx"
			v4c.z = v4b_z;
			//line 67 "/shared/hxmath/test/TestConverters.hx"
			v4c.w = v4b_w;
		}
		
		//line 68 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( v4a == null ) && ( v4c == null ) ) || ( ( ( ( ( ( v4a != null ) && ( v4c != null ) ) && ( v4a.x == v4c.x ) ) && ( v4a.y == v4c.y ) ) && ( v4a.z == v4c.z ) ) && ( v4a.w == v4c.w ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (68) )) )}));
		//line 70 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix2x2Default m22a = this.randomMatrix2x2(null);
		//line 71 "/shared/hxmath/test/TestConverters.hx"
		double m22b_d = 0.0;
		//line 71 "/shared/hxmath/test/TestConverters.hx"
		double m22b_c = 0.0;
		//line 71 "/shared/hxmath/test/TestConverters.hx"
		double m22b_b = 0.0;
		//line 71 "/shared/hxmath/test/TestConverters.hx"
		double m22b_a = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m22b_b = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m22b_c = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m22b_d = 0.0;
		//line 75 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix2x2Default m22c = this.randomMatrix2x2(null);
		//line 76 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m22b_a = m22a.a;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m22b_b = m22a.b;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m22b_c = m22a.c;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m22b_d = m22a.d;
		}
		
		//line 77 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 77 "/shared/hxmath/test/TestConverters.hx"
			m22c.a = m22b_a;
			//line 77 "/shared/hxmath/test/TestConverters.hx"
			m22c.b = m22b_b;
			//line 77 "/shared/hxmath/test/TestConverters.hx"
			m22c.c = m22b_c;
			//line 77 "/shared/hxmath/test/TestConverters.hx"
			m22c.d = m22b_d;
		}
		
		//line 78 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( m22a == null ) && ( m22c == null ) ) || ( ( ( ( ( ( m22a != null ) && ( m22c != null ) ) && ( m22a.a == m22c.a ) ) && ( m22a.b == m22c.b ) ) && ( m22a.c == m22c.c ) ) && ( m22a.d == m22c.d ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (78) )) )}));
		//line 80 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix3x2Default m32a = this.randomMatrix3x2(null);
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_ty = 0.0;
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_tx = 0.0;
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_d = 0.0;
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_c = 0.0;
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_b = 0.0;
		//line 81 "/shared/hxmath/test/TestConverters.hx"
		double m32b_a = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m32b_b = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m32b_c = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m32b_d = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m32b_tx = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m32b_ty = 0.0;
		//line 86 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix3x2Default m32c = this.randomMatrix3x2(null);
		//line 87 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_a = m32a.a;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_b = m32a.b;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_c = m32a.c;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_d = m32a.d;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_tx = m32a.tx;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m32b_ty = m32a.ty;
		}
		
		//line 88 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.a = m32b_a;
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.b = m32b_b;
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.c = m32b_c;
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.d = m32b_d;
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.tx = m32b_tx;
			//line 88 "/shared/hxmath/test/TestConverters.hx"
			m32c.ty = m32b_ty;
		}
		
		//line 89 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( m32a == null ) && ( m32c == null ) ) || ( ( ( ( ( ( ( ( m32a != null ) && ( m32c != null ) ) && ( m32a.a == m32c.a ) ) && ( m32a.b == m32c.b ) ) && ( m32a.c == m32c.c ) ) && ( m32a.d == m32c.d ) ) && ( m32a.tx == m32c.tx ) ) && ( m32a.ty == m32c.ty ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
		//line 91 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix3x3Default m33a = this.randomMatrix3x3(null);
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m22 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m21 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m20 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m12 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m11 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m10 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m02 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m01 = 0.0;
		//line 92 "/shared/hxmath/test/TestConverters.hx"
		double m33b_m00 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m01 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m02 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m10 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m11 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m12 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m20 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m21 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m33b_m22 = 0.0;
		//line 97 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix3x3Default m33c = this.randomMatrix3x3(null);
		//line 98 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m00 = m33a.m00;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m01 = m33a.m01;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m02 = m33a.m02;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m10 = m33a.m10;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m11 = m33a.m11;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m12 = m33a.m12;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m20 = m33a.m20;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m21 = m33a.m21;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m33b_m22 = m33a.m22;
		}
		
		//line 99 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m00 = m33b_m00;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m01 = m33b_m01;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m02 = m33b_m02;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m10 = m33b_m10;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m11 = m33b_m11;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m12 = m33b_m12;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m20 = m33b_m20;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m21 = m33b_m21;
			//line 99 "/shared/hxmath/test/TestConverters.hx"
			m33c.m22 = m33b_m22;
		}
		
		//line 100 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( m33a == null ) && ( m33c == null ) ) || ( ( ( ( ( ( ( ( ( ( ( m33a != null ) && ( m33c != null ) ) && ( m33a.m00 == m33c.m00 ) ) && ( m33a.m10 == m33c.m10 ) ) && ( m33a.m20 == m33c.m20 ) ) && ( m33a.m01 == m33c.m01 ) ) && ( m33a.m11 == m33c.m11 ) ) && ( m33a.m21 == m33c.m21 ) ) && ( m33a.m02 == m33c.m02 ) ) && ( m33a.m12 == m33c.m12 ) ) && ( m33a.m22 == m33c.m22 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (100) )) )}));
		//line 102 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix4x4Default m44a = this.randomMatrix4x4(null);
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m33 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m32 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m31 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m30 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m23 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m22 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m21 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m20 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m13 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m12 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m11 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m10 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m03 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m02 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m01 = 0.0;
		//line 103 "/shared/hxmath/test/TestConverters.hx"
		double m44b_m00 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m01 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m02 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m03 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m10 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m11 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m12 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m13 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m20 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m21 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m22 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m23 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m30 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m31 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m32 = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		m44b_m33 = 0.0;
		//line 109 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Matrix4x4Default m44c = this.randomMatrix4x4(null);
		//line 110 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m00 = m44a.m00;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m01 = m44a.m01;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m02 = m44a.m02;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m03 = m44a.m03;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m10 = m44a.m10;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m11 = m44a.m11;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m12 = m44a.m12;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m13 = m44a.m13;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m20 = m44a.m20;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m21 = m44a.m21;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m22 = m44a.m22;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m23 = m44a.m23;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m30 = m44a.m30;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m31 = m44a.m31;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m32 = m44a.m32;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			m44b_m33 = m44a.m33;
		}
		
		//line 111 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m00 = m44b_m00;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m01 = m44b_m01;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m02 = m44b_m02;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m03 = m44b_m03;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m10 = m44b_m10;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m11 = m44b_m11;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m12 = m44b_m12;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m13 = m44b_m13;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m20 = m44b_m20;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m21 = m44b_m21;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m22 = m44b_m22;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m23 = m44b_m23;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m30 = m44b_m30;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m31 = m44b_m31;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m32 = m44b_m32;
			//line 111 "/shared/hxmath/test/TestConverters.hx"
			m44c.m33 = m44b_m33;
		}
		
		//line 112 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( m44a == null ) && ( m44c == null ) ) || ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( m44a != null ) && ( m44c != null ) ) && ( m44a.m00 == m44c.m00 ) ) && ( m44a.m10 == m44c.m10 ) ) && ( m44a.m20 == m44c.m20 ) ) && ( m44a.m30 == m44c.m30 ) ) && ( m44a.m01 == m44c.m01 ) ) && ( m44a.m11 == m44c.m11 ) ) && ( m44a.m21 == m44c.m21 ) ) && ( m44a.m31 == m44c.m31 ) ) && ( m44a.m02 == m44c.m02 ) ) && ( m44a.m12 == m44c.m12 ) ) && ( m44a.m22 == m44c.m22 ) ) && ( m44a.m32 == m44c.m32 ) ) && ( m44a.m03 == m44c.m03 ) ) && ( m44a.m13 == m44c.m13 ) ) && ( m44a.m23 == m44c.m23 ) ) && ( m44a.m33 == m44c.m33 ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (112) )) )}));
		//line 114 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.QuaternionDefault qa = this.randomQuaternion(null);
		//line 115 "/shared/hxmath/test/TestConverters.hx"
		double qb_z = 0.0;
		//line 115 "/shared/hxmath/test/TestConverters.hx"
		double qb_y = 0.0;
		//line 115 "/shared/hxmath/test/TestConverters.hx"
		double qb_x = 0.0;
		//line 115 "/shared/hxmath/test/TestConverters.hx"
		double qb_s = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		qb_x = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		qb_y = 0.0;
		//line 47 "/shared/hxmath/test/TestConverters.hx"
		qb_z = 0.0;
		//line 116 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.QuaternionDefault qc = this.randomQuaternion(null);
		//line 117 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			qb_s = qa.s;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			qb_x = qa.x;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			qb_y = qa.y;
			//line 47 "/shared/hxmath/test/TestConverters.hx"
			qb_z = qa.z;
		}
		
		//line 118 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 118 "/shared/hxmath/test/TestConverters.hx"
			qc.s = qb_s;
			//line 118 "/shared/hxmath/test/TestConverters.hx"
			qc.x = qb_x;
			//line 118 "/shared/hxmath/test/TestConverters.hx"
			qc.y = qb_y;
			//line 118 "/shared/hxmath/test/TestConverters.hx"
			qc.z = qb_z;
		}
		
		//line 119 "/shared/hxmath/test/TestConverters.hx"
		this.assertTrue(( ( ( qa == null ) && ( qc == null ) ) || ( ( ( ( ( ( qa != null ) && ( qc != null ) ) && ( qa.s == qc.s ) ) && ( qa.x == qc.x ) ) && ( qa.y == qc.y ) ) && ( qa.z == qc.z ) ) ), new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testShapeSimilarConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (119) )) )}));
	}
	
	
	public void testFlxPointConversion()
	{
		//line 124 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default this1 = new hxmath.math.Vector2Default(3.0, 1.0);
		//line 124 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default v = ((hxmath.math.Vector2Default) (this1) );
		//line 126 "/shared/hxmath/test/TestConverters.hx"
		test.FlxPointMock q = new test.FlxPointMock(null, null);
		//line 127 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 127 "/shared/hxmath/test/TestConverters.hx"
			q.set_x(v.x);
			//line 127 "/shared/hxmath/test/TestConverters.hx"
			q.set_y(v.y);
		}
		
		//line 128 "/shared/hxmath/test/TestConverters.hx"
		this.assertEquals(((java.lang.Object) (v.x) ), ((java.lang.Object) (q.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testFlxPointConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (128) )) )})) ));
		//line 129 "/shared/hxmath/test/TestConverters.hx"
		this.assertEquals(((java.lang.Object) (v.y) ), ((java.lang.Object) (q.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testFlxPointConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (129) )) )})) ));
		//line 131 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default this2 = new hxmath.math.Vector2Default(0.0, 0.0);
		//line 131 "/shared/hxmath/test/TestConverters.hx"
		hxmath.math.Vector2Default u = ((hxmath.math.Vector2Default) (this2) );
		//line 132 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 132 "/shared/hxmath/test/TestConverters.hx"
			u.x = q.x;
			//line 132 "/shared/hxmath/test/TestConverters.hx"
			u.y = q.y;
		}
		
		//line 133 "/shared/hxmath/test/TestConverters.hx"
		this.assertEquals(((java.lang.Object) (u.x) ), ((java.lang.Object) (q.x) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testFlxPointConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (133) )) )})) ));
		//line 134 "/shared/hxmath/test/TestConverters.hx"
		this.assertEquals(((java.lang.Object) (u.y) ), ((java.lang.Object) (q.y) ), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TestConverters", "TestConverters.hx", "testFlxPointConversion"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (134) )) )})) ));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			boolean __temp_executeDef1 = true;
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			switch (field.hashCode())
			{
				case 1037106214:
				{
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					if (field.equals("testFlxPointConversion")) 
					{
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						__temp_executeDef1 = false;
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlxPointConversion")) );
					}
					
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					break;
				}
				
				
				case 854797042:
				{
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					if (field.equals("testShapeSimilarConversion")) 
					{
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						__temp_executeDef1 = false;
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testShapeSimilarConversion")) );
					}
					
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					break;
				}
				
				
			}
			
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			if (__temp_executeDef1) 
			{
				//line 40 "/shared/hxmath/test/TestConverters.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 40 "/shared/hxmath/test/TestConverters.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		{
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			boolean __temp_executeDef1 = true;
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			switch (field.hashCode())
			{
				case 1037106214:
				{
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					if (field.equals("testFlxPointConversion")) 
					{
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						__temp_executeDef1 = false;
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						this.testFlxPointConversion();
					}
					
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					break;
				}
				
				
				case 854797042:
				{
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					if (field.equals("testShapeSimilarConversion")) 
					{
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						__temp_executeDef1 = false;
						//line 40 "/shared/hxmath/test/TestConverters.hx"
						this.testShapeSimilarConversion();
					}
					
					//line 40 "/shared/hxmath/test/TestConverters.hx"
					break;
				}
				
				
			}
			
			//line 40 "/shared/hxmath/test/TestConverters.hx"
			if (__temp_executeDef1) 
			{
				//line 40 "/shared/hxmath/test/TestConverters.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 40 "/shared/hxmath/test/TestConverters.hx"
		return null;
	}
	
	
}


