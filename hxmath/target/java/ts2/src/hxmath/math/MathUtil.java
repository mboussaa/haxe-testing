// Generated by Haxe 3.3.0
package hxmath.math;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class MathUtil extends haxe.lang.HxObject
{
	static
	{
		//line 14 "/shared/hxmath/hxmath/math/MathUtil.hx"
		hxmath.math.MathUtil.eps = 1e-6;
	}
	
	public MathUtil(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public MathUtil()
	{
		//line 11 "/shared/hxmath/hxmath/math/MathUtil.hx"
		hxmath.math.MathUtil.__hx_ctor_hxmath_math_MathUtil(this);
	}
	
	
	public static void __hx_ctor_hxmath_math_MathUtil(hxmath.math.MathUtil __temp_me19)
	{
	}
	
	
	public static double eps;
	
	public static int intMax(int a, int b)
	{
		//line 25 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( b > a )) 
		{
			//line 25 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return b;
		}
		else
		{
			//line 25 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return a;
		}
		
	}
	
	
	public static int intMin(int a, int b)
	{
		//line 37 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( b < a )) 
		{
			//line 37 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return b;
		}
		else
		{
			//line 37 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return a;
		}
		
	}
	
	
	public static double lerpCyclic(double a, double b, double t, double max)
	{
		//line 52 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( java.lang.Math.abs(( a - b )) > ( 0.5 * max ) )) 
		{
			//line 55 "/shared/hxmath/hxmath/math/MathUtil.hx"
			if (( a < b )) 
			{
				//line 57 "/shared/hxmath/hxmath/math/MathUtil.hx"
				a += max;
			}
			else
			{
				//line 61 "/shared/hxmath/hxmath/math/MathUtil.hx"
				b += max;
			}
			
		}
		
		//line 65 "/shared/hxmath/hxmath/math/MathUtil.hx"
		double x = ( ( (( 1.0 - t )) * a ) + ( t * b ) );
		//line 65 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( x < 0 )) 
		{
			//line 65 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( max - (  - (x)  % max ) );
		}
		else
		{
			//line 65 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( x % max );
		}
		
	}
	
	
	public static int sign(double x, java.lang.Object w)
	{
		//line 77 "/shared/hxmath/hxmath/math/MathUtil.hx"
		double __temp_w18 = ( (haxe.lang.Runtime.eq(w, null)) ? (((double) (0) )) : (((double) (haxe.lang.Runtime.toDouble(w)) )) );
		//line 77 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( java.lang.Math.abs(x) < __temp_w18 )) 
		{
			//line 79 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return 0;
		}
		else
		{
			//line 83 "/shared/hxmath/hxmath/math/MathUtil.hx"
			if (( x <=  - (__temp_w18)  )) 
			{
				//line 83 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return -1;
			}
			else
			{
				//line 83 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return 1;
			}
			
		}
		
	}
	
	
	public static double rangeDistance(double aStart, double aWidth, double bStart, double bWidth)
	{
		//line 98 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( ( aStart + aWidth ) < bStart )) 
		{
			//line 100 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( bStart - (( aStart + aWidth )) );
		}
		else
		{
			//line 102 "/shared/hxmath/hxmath/math/MathUtil.hx"
			if (( ( bStart + bWidth ) < aStart )) 
			{
				//line 104 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return ( aStart - (( bStart + bWidth )) );
			}
			else
			{
				//line 108 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return ((double) (0) );
			}
			
		}
		
	}
	
	
	public static boolean openRangeContains(double aStart, double aWidth, double x)
	{
		//line 122 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( x > aStart )) 
		{
			//line 122 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( x < ( aStart + aWidth ) );
		}
		else
		{
			//line 122 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return false;
		}
		
	}
	
	
	public static boolean openRangesIntersect(double aStart, double aWidth, double bStart, double bWidth)
	{
		//line 137 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return  ! ((( ( aStart >= ( bStart + bWidth ) ) || ( bStart >= ( aStart + aWidth ) ) ))) ;
	}
	
	
	public static boolean closedRangeContains(double aStart, double aWidth, double x)
	{
		//line 151 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( x >= aStart )) 
		{
			//line 151 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( x <= ( aStart + aWidth ) );
		}
		else
		{
			//line 151 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return false;
		}
		
	}
	
	
	public static double radToDeg(double rad)
	{
		//line 161 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return ( ( 180 / java.lang.Math.PI ) * rad );
	}
	
	
	public static double degToRad(double deg)
	{
		//line 169 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return ( ( java.lang.Math.PI / 180 ) * deg );
	}
	
	
	public static double wrap(double x, double n)
	{
		//line 181 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( x < 0 )) 
		{
			//line 185 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( n - (  - (x)  % n ) );
		}
		else
		{
			//line 189 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ( x % n );
		}
		
	}
	
	
	public static double clamp(double value, double min, double max)
	{
		//line 202 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( value < min )) 
		{
			//line 204 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return min;
		}
		else
		{
			//line 206 "/shared/hxmath/hxmath/math/MathUtil.hx"
			if (( value > max )) 
			{
				//line 208 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return max;
			}
			else
			{
				//line 212 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return value;
			}
			
		}
		
	}
	
	
	public static int orient2d(hxmath.math.Vector2Default a, hxmath.math.Vector2Default b, hxmath.math.Vector2Default c)
	{
		//line 227 "/shared/hxmath/hxmath/math/MathUtil.hx"
		double result = ( ( (( a.x - c.x )) * (( b.y - c.y )) ) - ( (( a.y - c.y )) * (( b.x - c.x )) ) );
		//line 231 "/shared/hxmath/hxmath/math/MathUtil.hx"
		if (( result > 0 )) 
		{
			//line 233 "/shared/hxmath/hxmath/math/MathUtil.hx"
			return ((int) (1) );
		}
		else
		{
			//line 238 "/shared/hxmath/hxmath/math/MathUtil.hx"
			if (( result < 0 )) 
			{
				//line 240 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return ((int) (-1) );
			}
			else
			{
				//line 246 "/shared/hxmath/hxmath/math/MathUtil.hx"
				return ((int) (0) );
			}
			
		}
		
	}
	
	
	public static double det2x2(double m00, double m10, double m01, double m11)
	{
		//line 263 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return ( ( m00 * m11 ) - ( m10 * m01 ) );
	}
	
	
	public static double det3x3(double m00, double m10, double m20, double m01, double m11, double m21, double m02, double m12, double m22)
	{
		//line 285 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return ( ( ( m00 * (( ( m11 * m22 ) - ( m21 * m12 ) )) ) - ( m10 * (( ( m01 * m22 ) - ( m21 * m02 ) )) ) ) + ( m20 * (( ( m01 * m12 ) - ( m11 * m02 ) )) ) );
	}
	
	
	public static double det4x4(double m00, double m10, double m20, double m30, double m01, double m11, double m21, double m31, double m02, double m12, double m22, double m32, double m03, double m13, double m23, double m33)
	{
		//line 324 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return ( ( ( ( m00 * (( ( ( m11 * (( ( m22 * m33 ) - ( m32 * m23 ) )) ) - ( m21 * (( ( m12 * m33 ) - ( m32 * m13 ) )) ) ) + ( m31 * (( ( m12 * m23 ) - ( m22 * m13 ) )) ) )) ) - ( m10 * (( ( ( m01 * (( ( m22 * m33 ) - ( m32 * m23 ) )) ) - ( m21 * (( ( m02 * m33 ) - ( m32 * m03 ) )) ) ) + ( m31 * (( ( m02 * m23 ) - ( m22 * m03 ) )) ) )) ) ) + ( m20 * (( ( ( m01 * (( ( m12 * m33 ) - ( m32 * m13 ) )) ) - ( m11 * (( ( m02 * m33 ) - ( m32 * m03 ) )) ) ) + ( m31 * (( ( m02 * m13 ) - ( m12 * m03 ) )) ) )) ) ) - ( m30 * (( ( ( m01 * (( ( m12 * m23 ) - ( m22 * m13 ) )) ) - ( m11 * (( ( m02 * m23 ) - ( m22 * m03 ) )) ) ) + ( m21 * (( ( m02 * m13 ) - ( m12 * m03 ) )) ) )) ) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 11 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return new hxmath.math.MathUtil(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 11 "/shared/hxmath/hxmath/math/MathUtil.hx"
		return new hxmath.math.MathUtil();
	}
	
	
}


