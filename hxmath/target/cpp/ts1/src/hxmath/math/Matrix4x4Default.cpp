// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_hxmath_math_Matrix4x4Default
#include <hxmath/math/Matrix4x4Default.h>
#endif

namespace hxmath{
namespace math{

void Matrix4x4Default_obj::__construct(Float m00,Float m10,Float m20,Float m30,Float m01,Float m11,Float m21,Float m31,Float m02,Float m12,Float m22,Float m32,Float m03,Float m13,Float m23,Float m33){
            	HX_STACK_FRAME("hxmath.math.Matrix4x4Default","new",0x2ee2c594,"hxmath.math.Matrix4x4Default.new","hxmath/math/Matrix4x4.hx",57,0x11ea859f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(m00,"m00")
            	HX_STACK_ARG(m10,"m10")
            	HX_STACK_ARG(m20,"m20")
            	HX_STACK_ARG(m30,"m30")
            	HX_STACK_ARG(m01,"m01")
            	HX_STACK_ARG(m11,"m11")
            	HX_STACK_ARG(m21,"m21")
            	HX_STACK_ARG(m31,"m31")
            	HX_STACK_ARG(m02,"m02")
            	HX_STACK_ARG(m12,"m12")
            	HX_STACK_ARG(m22,"m22")
            	HX_STACK_ARG(m32,"m32")
            	HX_STACK_ARG(m03,"m03")
            	HX_STACK_ARG(m13,"m13")
            	HX_STACK_ARG(m23,"m23")
            	HX_STACK_ARG(m33,"m33")
HXLINE(  58)		this->m00 = m00;
HXLINE(  59)		this->m10 = m10;
HXLINE(  60)		this->m20 = m20;
HXLINE(  61)		this->m30 = m30;
HXLINE(  63)		this->m01 = m01;
HXLINE(  64)		this->m11 = m11;
HXLINE(  65)		this->m21 = m21;
HXLINE(  66)		this->m31 = m31;
HXLINE(  68)		this->m02 = m02;
HXLINE(  69)		this->m12 = m12;
HXLINE(  70)		this->m22 = m22;
HXLINE(  71)		this->m32 = m32;
HXLINE(  73)		this->m03 = m03;
HXLINE(  74)		this->m13 = m13;
HXLINE(  75)		this->m23 = m23;
HXLINE(  76)		this->m33 = m33;
            	}

Dynamic Matrix4x4Default_obj::__CreateEmpty() { return new Matrix4x4Default_obj; }

hx::ObjectPtr< Matrix4x4Default_obj > Matrix4x4Default_obj::__new(Float m00,Float m10,Float m20,Float m30,Float m01,Float m11,Float m21,Float m31,Float m02,Float m12,Float m22,Float m32,Float m03,Float m13,Float m23,Float m33)
{
	hx::ObjectPtr< Matrix4x4Default_obj > _hx_result = new Matrix4x4Default_obj();
	_hx_result->__construct(m00,m10,m20,m30,m01,m11,m21,m31,m02,m12,m22,m32,m03,m13,m23,m33);
	return _hx_result;
}

Dynamic Matrix4x4Default_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Matrix4x4Default_obj > _hx_result = new Matrix4x4Default_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12],inArgs[13],inArgs[14],inArgs[15]);
	return _hx_result;
}

::String Matrix4x4Default_obj::toString(){
            	HX_STACK_FRAME("hxmath.math.Matrix4x4Default","toString",0xc1167ef8,"hxmath.math.Matrix4x4Default.toString","hxmath/math/Matrix4x4.hx",81,0x11ea859f)
            	HX_STACK_THIS(this)
HXLINE(  81)		return ((((((((((((((((((((((((((((((((HX_("[[",a0,4f,00,00) + this->m00) + HX_(", ",74,26,00,00)) + this->m10) + HX_(", ",74,26,00,00)) + this->m20) + HX_(", ",74,26,00,00)) + this->m30) + HX_("], [",2a,57,9a,3d)) + this->m01) + HX_(", ",74,26,00,00)) + this->m11) + HX_(", ",74,26,00,00)) + this->m21) + HX_(", ",74,26,00,00)) + this->m31) + HX_("], [",2a,57,9a,3d)) + this->m02) + HX_(", ",74,26,00,00)) + this->m12) + HX_(", ",74,26,00,00)) + this->m22) + HX_(", ",74,26,00,00)) + this->m32) + HX_("], [",2a,57,9a,3d)) + this->m03) + HX_(", ",74,26,00,00)) + this->m13) + HX_(", ",74,26,00,00)) + this->m23) + HX_(", ",74,26,00,00)) + this->m33) + HX_("]]",60,51,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Matrix4x4Default_obj,toString,return )


Matrix4x4Default_obj::Matrix4x4Default_obj()
{
}

hx::Val Matrix4x4Default_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"m00") ) { return hx::Val( m00); }
		if (HX_FIELD_EQ(inName,"m01") ) { return hx::Val( m01); }
		if (HX_FIELD_EQ(inName,"m02") ) { return hx::Val( m02); }
		if (HX_FIELD_EQ(inName,"m03") ) { return hx::Val( m03); }
		if (HX_FIELD_EQ(inName,"m10") ) { return hx::Val( m10); }
		if (HX_FIELD_EQ(inName,"m11") ) { return hx::Val( m11); }
		if (HX_FIELD_EQ(inName,"m12") ) { return hx::Val( m12); }
		if (HX_FIELD_EQ(inName,"m13") ) { return hx::Val( m13); }
		if (HX_FIELD_EQ(inName,"m20") ) { return hx::Val( m20); }
		if (HX_FIELD_EQ(inName,"m21") ) { return hx::Val( m21); }
		if (HX_FIELD_EQ(inName,"m22") ) { return hx::Val( m22); }
		if (HX_FIELD_EQ(inName,"m23") ) { return hx::Val( m23); }
		if (HX_FIELD_EQ(inName,"m30") ) { return hx::Val( m30); }
		if (HX_FIELD_EQ(inName,"m31") ) { return hx::Val( m31); }
		if (HX_FIELD_EQ(inName,"m32") ) { return hx::Val( m32); }
		if (HX_FIELD_EQ(inName,"m33") ) { return hx::Val( m33); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Matrix4x4Default_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"m00") ) { m00=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m01") ) { m01=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m02") ) { m02=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m03") ) { m03=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m10") ) { m10=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m11") ) { m11=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m12") ) { m12=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m13") ) { m13=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m20") ) { m20=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m21") ) { m21=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m22") ) { m22=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m23") ) { m23=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m30") ) { m30=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m31") ) { m31=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m32") ) { m32=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m33") ) { m33=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Matrix4x4Default_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("m00","\xad","\xdf","\x52","\x00"));
	outFields->push(HX_HCSTRING("m01","\xae","\xdf","\x52","\x00"));
	outFields->push(HX_HCSTRING("m02","\xaf","\xdf","\x52","\x00"));
	outFields->push(HX_HCSTRING("m03","\xb0","\xdf","\x52","\x00"));
	outFields->push(HX_HCSTRING("m10","\x8c","\xe0","\x52","\x00"));
	outFields->push(HX_HCSTRING("m11","\x8d","\xe0","\x52","\x00"));
	outFields->push(HX_HCSTRING("m12","\x8e","\xe0","\x52","\x00"));
	outFields->push(HX_HCSTRING("m13","\x8f","\xe0","\x52","\x00"));
	outFields->push(HX_HCSTRING("m20","\x6b","\xe1","\x52","\x00"));
	outFields->push(HX_HCSTRING("m21","\x6c","\xe1","\x52","\x00"));
	outFields->push(HX_HCSTRING("m22","\x6d","\xe1","\x52","\x00"));
	outFields->push(HX_HCSTRING("m23","\x6e","\xe1","\x52","\x00"));
	outFields->push(HX_HCSTRING("m30","\x4a","\xe2","\x52","\x00"));
	outFields->push(HX_HCSTRING("m31","\x4b","\xe2","\x52","\x00"));
	outFields->push(HX_HCSTRING("m32","\x4c","\xe2","\x52","\x00"));
	outFields->push(HX_HCSTRING("m33","\x4d","\xe2","\x52","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Matrix4x4Default_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m00),HX_HCSTRING("m00","\xad","\xdf","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m01),HX_HCSTRING("m01","\xae","\xdf","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m02),HX_HCSTRING("m02","\xaf","\xdf","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m03),HX_HCSTRING("m03","\xb0","\xdf","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m10),HX_HCSTRING("m10","\x8c","\xe0","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m11),HX_HCSTRING("m11","\x8d","\xe0","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m12),HX_HCSTRING("m12","\x8e","\xe0","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m13),HX_HCSTRING("m13","\x8f","\xe0","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m20),HX_HCSTRING("m20","\x6b","\xe1","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m21),HX_HCSTRING("m21","\x6c","\xe1","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m22),HX_HCSTRING("m22","\x6d","\xe1","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m23),HX_HCSTRING("m23","\x6e","\xe1","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m30),HX_HCSTRING("m30","\x4a","\xe2","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m31),HX_HCSTRING("m31","\x4b","\xe2","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m32),HX_HCSTRING("m32","\x4c","\xe2","\x52","\x00")},
	{hx::fsFloat,(int)offsetof(Matrix4x4Default_obj,m33),HX_HCSTRING("m33","\x4d","\xe2","\x52","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Matrix4x4Default_obj_sStaticStorageInfo = 0;
#endif

static ::String Matrix4x4Default_obj_sMemberFields[] = {
	HX_HCSTRING("m00","\xad","\xdf","\x52","\x00"),
	HX_HCSTRING("m01","\xae","\xdf","\x52","\x00"),
	HX_HCSTRING("m02","\xaf","\xdf","\x52","\x00"),
	HX_HCSTRING("m03","\xb0","\xdf","\x52","\x00"),
	HX_HCSTRING("m10","\x8c","\xe0","\x52","\x00"),
	HX_HCSTRING("m11","\x8d","\xe0","\x52","\x00"),
	HX_HCSTRING("m12","\x8e","\xe0","\x52","\x00"),
	HX_HCSTRING("m13","\x8f","\xe0","\x52","\x00"),
	HX_HCSTRING("m20","\x6b","\xe1","\x52","\x00"),
	HX_HCSTRING("m21","\x6c","\xe1","\x52","\x00"),
	HX_HCSTRING("m22","\x6d","\xe1","\x52","\x00"),
	HX_HCSTRING("m23","\x6e","\xe1","\x52","\x00"),
	HX_HCSTRING("m30","\x4a","\xe2","\x52","\x00"),
	HX_HCSTRING("m31","\x4b","\xe2","\x52","\x00"),
	HX_HCSTRING("m32","\x4c","\xe2","\x52","\x00"),
	HX_HCSTRING("m33","\x4d","\xe2","\x52","\x00"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Matrix4x4Default_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Matrix4x4Default_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Matrix4x4Default_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Matrix4x4Default_obj::__mClass,"__mClass");
};

#endif

hx::Class Matrix4x4Default_obj::__mClass;

void Matrix4x4Default_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hxmath.math.Matrix4x4Default","\xa2","\xab","\x8b","\xa2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Matrix4x4Default_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Matrix4x4Default_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Matrix4x4Default_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Matrix4x4Default_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Matrix4x4Default_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Matrix4x4Default_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxmath
} // end namespace math
