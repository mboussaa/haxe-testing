// Generated by Haxe 3.3.0
#ifndef INCLUDED_test_Distribution
#define INCLUDED_test_Distribution

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(test,Distribution)

namespace test{


class HXCPP_CLASS_ATTRIBUTES Distribution_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Distribution_obj OBJ_;
		Distribution_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="test.Distribution")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"test.Distribution"); }
		static hx::ObjectPtr< Distribution_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Distribution_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Distribution","\xa4","\x19","\x87","\xa9"); }

		Float center;
		Float width;
		Float precision;
};

} // end namespace test

#endif /* INCLUDED_test_Distribution */ 
