// Generated by Haxe 3.3.0
#ifndef INCLUDED_test_TestStress
#define INCLUDED_test_TestStress

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_test_MathTestCase
#include <test/MathTestCase.h>
#endif
HX_DECLARE_CLASS1(nanotest,NanoTestCase)
HX_DECLARE_CLASS1(test,MathTestCase)
HX_DECLARE_CLASS1(test,TestStress)

namespace test{


class HXCPP_CLASS_ATTRIBUTES TestStress_obj : public  ::test::MathTestCase_obj
{
	public:
		typedef  ::test::MathTestCase_obj super;
		typedef TestStress_obj OBJ_;
		TestStress_obj();
		void __construct( ::Dynamic posInfos);

	public:
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="test.TestStress")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		static hx::ObjectPtr< TestStress_obj > __new( ::Dynamic posInfos);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestStress_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("TestStress","\x46","\x6e","\xd2","\x20"); }

		Int a;
		void testDotProduct();
		::Dynamic testDotProduct_dyn();

		void testMatrixProduct();
		::Dynamic testMatrixProduct_dyn();

		void testMatrix3x2Constructor();
		::Dynamic testMatrix3x2Constructor_dyn();

		void testMatrix4x4Constructor();
		::Dynamic testMatrix4x4Constructor_dyn();

};

} // end namespace test

#endif /* INCLUDED_test_TestStress */ 
