// Generated by Haxe 3.3.0
#ifndef INCLUDED_hxmath_frames__Frame3_Frame3_Impl_
#define INCLUDED_hxmath_frames__Frame3_Frame3_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxmath,frames,IFrame3)
HX_DECLARE_CLASS3(hxmath,frames,_Frame3,Frame3_Impl_)
HX_DECLARE_CLASS2(hxmath,math,Matrix3x3Default)
HX_DECLARE_CLASS2(hxmath,math,Matrix4x4Default)
HX_DECLARE_CLASS2(hxmath,math,QuaternionDefault)
HX_DECLARE_CLASS2(hxmath,math,Vector3Default)

namespace hxmath{
namespace frames{
namespace _Frame3{


class HXCPP_CLASS_ATTRIBUTES Frame3_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Frame3_Impl__obj OBJ_;
		Frame3_Impl__obj();
		void __construct();

	public:
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxmath.frames._Frame3.Frame3_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		static hx::ObjectPtr< Frame3_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Frame3_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Frame3_Impl_","\xa6","\xc8","\x9b","\x30"); }

		static ::Dynamic _new( ::hxmath::math::Vector3Default offset, ::hxmath::math::QuaternionDefault orientation);
		static ::Dynamic _new_dyn();

		static  ::hxmath::math::Matrix4x4Default calculateMatrix( ::hxmath::math::Matrix4x4Default matrix, ::hxmath::math::Vector3Default offset, ::hxmath::math::QuaternionDefault orientation);
		static ::Dynamic calculateMatrix_dyn();

		static ::Dynamic lerp(::Dynamic frameA,::Dynamic frameB,Float t);
		static ::Dynamic lerp_dyn();

		static ::Dynamic concat(::Dynamic this1,::Dynamic other);
		static ::Dynamic concat_dyn();

		static ::Dynamic concatWith(::Dynamic this1,::Dynamic other);
		static ::Dynamic concatWith_dyn();

		static  ::hxmath::math::Vector3Default transformFrom(::Dynamic this1, ::hxmath::math::Vector3Default p);
		static ::Dynamic transformFrom_dyn();

		static  ::hxmath::math::Vector3Default transformTo(::Dynamic this1, ::hxmath::math::Vector3Default p);
		static ::Dynamic transformTo_dyn();

		static  ::hxmath::math::Vector3Default linearTransformFrom(::Dynamic this1, ::hxmath::math::Vector3Default v);
		static ::Dynamic linearTransformFrom_dyn();

		static  ::hxmath::math::Vector3Default linearTransformTo(::Dynamic this1, ::hxmath::math::Vector3Default v);
		static ::Dynamic linearTransformTo_dyn();

		static ::Dynamic inverse(::Dynamic this1);
		static ::Dynamic inverse_dyn();

		static ::Dynamic clone(::Dynamic this1);
		static ::Dynamic clone_dyn();

		static  ::hxmath::math::Matrix3x3Default get_linearMatrix(::Dynamic this1);
		static ::Dynamic get_linearMatrix_dyn();

};

} // end namespace hxmath
} // end namespace frames
} // end namespace _Frame3

#endif /* INCLUDED_hxmath_frames__Frame3_Frame3_Impl_ */ 
