// Generated by Haxe 3.3.0
#ifndef INCLUDED_hxmath_math_Vector2Default
#define INCLUDED_hxmath_math_Vector2Default

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxmath,math,Vector2Default)

namespace hxmath{
namespace math{


class HXCPP_CLASS_ATTRIBUTES Vector2Default_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Vector2Default_obj OBJ_;
		Vector2Default_obj();
		void __construct(Float x,Float y);

	public:
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxmath.math.Vector2Default")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		static hx::ObjectPtr< Vector2Default_obj > __new(Float x,Float y);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Vector2Default_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Vector2Default","\x92","\x8a","\xb5","\xa1"); }

		Float x;
		Float y;
		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace hxmath
} // end namespace math

#endif /* INCLUDED_hxmath_math_Vector2Default */ 
