// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_hxmath_math_Vector2Default
#include <hxmath/math/Vector2Default.h>
#endif
#ifndef INCLUDED_hxmath_math__ShortVector2_ShortVector2_Impl_
#include <hxmath/math/_ShortVector2/ShortVector2_Impl_.h>
#endif

namespace hxmath{
namespace math{
namespace _ShortVector2{

void ShortVector2_Impl__obj::__construct() { }

Dynamic ShortVector2_Impl__obj::__CreateEmpty() { return new ShortVector2_Impl__obj; }

hx::ObjectPtr< ShortVector2_Impl__obj > ShortVector2_Impl__obj::__new()
{
	hx::ObjectPtr< ShortVector2_Impl__obj > _hx_result = new ShortVector2_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic ShortVector2_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ShortVector2_Impl__obj > _hx_result = new ShortVector2_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Int ShortVector2_Impl__obj::elementCount;

Int ShortVector2_Impl__obj::bitsPerField;

Int ShortVector2_Impl__obj::fieldMax;

Int ShortVector2_Impl__obj::_new(Int x,Int y){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","_new",0x5e5d25f0,"hxmath.math._ShortVector2.ShortVector2_Impl_._new","hxmath/math/ShortVector2.hx",54,0xe7dccbdb)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(  54)		HX_VAR_NAME( Int,this1,"this");
HXLINE(  56)		Bool _hx_tmp;
HXDLIN(  56)		Bool _hx_tmp1;
HXDLIN(  56)		Bool _hx_tmp2;
HXDLIN(  56)		if ((x >= (int)0)) {
HXLINE(  56)			_hx_tmp2 = (y >= (int)0);
            		}
            		else {
HXLINE(  56)			_hx_tmp2 = false;
            		}
HXDLIN(  56)		if (_hx_tmp2) {
HXLINE(  56)			_hx_tmp1 = (x <= (int)65535);
            		}
            		else {
HXLINE(  56)			_hx_tmp1 = false;
            		}
HXDLIN(  56)		if (_hx_tmp1) {
HXLINE(  56)			_hx_tmp = (y <= (int)65535);
            		}
            		else {
HXLINE(  56)			_hx_tmp = false;
            		}
HXDLIN(  56)		if (!(_hx_tmp)) {
HXLINE(  58)			HX_STACK_DO_THROW(((((((HX_("Specified (x=",dd,9b,83,fe) + x) + HX_(", y=",18,15,2e,1d)) + y) + HX_(") fields not in the range [0, ",b9,46,9c,1a)) + (int)65535) + HX_("]",5d,00,00,00)));
            		}
HXLINE(  61)		this1 = ((int)((int)y << (int)(int)16) | (int)x);
HXLINE(  54)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,_new,return )

Int ShortVector2_Impl__obj::fromArray(::Array< Int > rawData){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","fromArray",0x9ce8e0e0,"hxmath.math._ShortVector2.ShortVector2_Impl_.fromArray","hxmath/math/ShortVector2.hx",71,0xe7dccbdb)
            	HX_STACK_ARG(rawData,"rawData")
HXLINE(  72)		if ((rawData->length != (int)2)) {
HXLINE(  74)			HX_STACK_DO_THROW(HX_("Invalid rawData.",25,ca,34,44));
            		}
HXLINE(  77)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(rawData->__get((int)0),rawData->__get((int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,fromArray,return )

Int ShortVector2_Impl__obj::dot(Int a,Int b){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","dot",0xc955b8da,"hxmath.math._ShortVector2.ShortVector2_Impl_.dot","hxmath/math/ShortVector2.hx",90,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  90)		return ((((int)a & (int)(int)65535) * ((int)b & (int)(int)65535)) + (((int)((int)a >> (int)(int)16) & (int)(int)65535) * ((int)((int)b >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,dot,return )

Int ShortVector2_Impl__obj::multiply(Int a,Int s){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","multiply",0xf05fe633,"hxmath.math._ShortVector2.ShortVector2_Impl_.multiply","hxmath/math/ShortVector2.hx",106,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(s,"s")
HXLINE( 106)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((s * ((int)a & (int)(int)65535)),(s * ((int)((int)a >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,multiply,return )

Int ShortVector2_Impl__obj::add(Int a,Int b){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","add",0xc9536872,"hxmath.math._ShortVector2.ShortVector2_Impl_.add","hxmath/math/ShortVector2.hx",121,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 121)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((((int)a & (int)(int)65535) + ((int)b & (int)(int)65535)),(((int)((int)a >> (int)(int)16) & (int)(int)65535) + ((int)((int)b >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,add,return )

Int ShortVector2_Impl__obj::subtract(Int a,Int b){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","subtract",0x4de47923,"hxmath.math._ShortVector2.ShortVector2_Impl_.subtract","hxmath/math/ShortVector2.hx",136,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 136)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((((int)a & (int)(int)65535) - ((int)b & (int)(int)65535)),(((int)((int)a >> (int)(int)16) & (int)(int)65535) - ((int)((int)b >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,subtract,return )

Int ShortVector2_Impl__obj::negate(Int a){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","negate",0x5e67d411,"hxmath.math._ShortVector2.ShortVector2_Impl_.negate","hxmath/math/ShortVector2.hx",150,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
HXLINE( 150)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(-(((int)a & (int)(int)65535)),-(((int)((int)a >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,negate,return )

Int ShortVector2_Impl__obj::max(Int a,Int b){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","max",0xc95c80f5,"hxmath.math._ShortVector2.ShortVector2_Impl_.max","hxmath/math/ShortVector2.hx",164,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 165)		HX_VARI_NAME( Int,a1,"a") = ((int)a & (int)(int)65535);
HXDLIN( 165)		HX_VARI_NAME( Int,b1,"b") = ((int)b & (int)(int)65535);
HXDLIN( 165)		Int _hx_tmp;
HXDLIN( 165)		if ((b1 > a1)) {
HXLINE( 165)			_hx_tmp = b1;
            		}
            		else {
HXLINE( 165)			_hx_tmp = a1;
            		}
HXLINE( 166)		HX_VARI_NAME( Int,a2,"a") = ((int)((int)a >> (int)(int)16) & (int)(int)65535);
HXDLIN( 166)		HX_VARI_NAME( Int,b2,"b") = ((int)((int)b >> (int)(int)16) & (int)(int)65535);
HXDLIN( 166)		Int _hx_tmp1;
HXDLIN( 166)		if ((b2 > a2)) {
HXLINE( 166)			_hx_tmp1 = b2;
            		}
            		else {
HXLINE( 166)			_hx_tmp1 = a2;
            		}
HXLINE( 164)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,max,return )

Int ShortVector2_Impl__obj::min(Int a,Int b){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","min",0xc95c87e3,"hxmath.math._ShortVector2.ShortVector2_Impl_.min","hxmath/math/ShortVector2.hx",178,0xe7dccbdb)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 179)		HX_VARI_NAME( Int,a1,"a") = ((int)a & (int)(int)65535);
HXDLIN( 179)		HX_VARI_NAME( Int,b1,"b") = ((int)b & (int)(int)65535);
HXDLIN( 179)		Int _hx_tmp;
HXDLIN( 179)		if ((b1 < a1)) {
HXLINE( 179)			_hx_tmp = b1;
            		}
            		else {
HXLINE( 179)			_hx_tmp = a1;
            		}
HXLINE( 180)		HX_VARI_NAME( Int,a2,"a") = ((int)((int)a >> (int)(int)16) & (int)(int)65535);
HXDLIN( 180)		HX_VARI_NAME( Int,b2,"b") = ((int)((int)b >> (int)(int)16) & (int)(int)65535);
HXDLIN( 180)		Int _hx_tmp1;
HXDLIN( 180)		if ((b2 < a2)) {
HXLINE( 180)			_hx_tmp1 = b2;
            		}
            		else {
HXLINE( 180)			_hx_tmp1 = a2;
            		}
HXLINE( 178)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,min,return )

Int ShortVector2_Impl__obj::getArrayElement(Int this1,Int i){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","getArrayElement",0x58e8bfaa,"hxmath.math._ShortVector2.ShortVector2_Impl_.getArrayElement","hxmath/math/ShortVector2.hx",191,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(i,"i")
HXLINE( 192)		HX_VARI( Int,self) = this1;
HXLINE( 193)		switch((int)(i)){
            			case (int)0: {
HXLINE( 196)				return ((int)self & (int)(int)65535);
            			}
            			break;
            			case (int)1: {
HXLINE( 198)				return ((int)((int)self >> (int)(int)16) & (int)(int)65535);
            			}
            			break;
            			default:{
HXLINE( 200)				HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            			}
            		}
HXLINE( 193)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,getArrayElement,return )

 ::hxmath::math::Vector2Default ShortVector2_Impl__obj::toVector2(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","toVector2",0xcd01bae5,"hxmath.math._ShortVector2.ShortVector2_Impl_.toVector2","hxmath/math/ShortVector2.hx",211,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 212)		HX_VARI( Int,self) = this1;
HXLINE( 213)		return  ::hxmath::math::Vector2Default_obj::__new(((int)self & (int)(int)65535),((int)((int)self >> (int)(int)16) & (int)(int)65535));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,toVector2,return )

Bool ShortVector2_Impl__obj::indexInBounds(Int x,Int y){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","indexInBounds",0xd4076efd,"hxmath.math._ShortVector2.ShortVector2_Impl_.indexInBounds","hxmath/math/ShortVector2.hx",224,0xe7dccbdb)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 224)		Bool _hx_tmp;
HXDLIN( 224)		Bool _hx_tmp1;
HXDLIN( 224)		if ((x >= (int)0)) {
HXLINE( 224)			_hx_tmp1 = (y >= (int)0);
            		}
            		else {
HXLINE( 224)			_hx_tmp1 = false;
            		}
HXDLIN( 224)		if (_hx_tmp1) {
HXLINE( 224)			_hx_tmp = (x <= (int)65535);
            		}
            		else {
HXLINE( 224)			_hx_tmp = false;
            		}
HXDLIN( 224)		if (_hx_tmp) {
HXLINE( 224)			return (y <= (int)65535);
            		}
            		else {
HXLINE( 224)			return false;
            		}
HXDLIN( 224)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ShortVector2_Impl__obj,indexInBounds,return )

Int ShortVector2_Impl__obj::get_zero(){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_zero",0x267ecec0,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_zero","hxmath/math/ShortVector2.hx",229,0xe7dccbdb)
HXLINE( 229)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((int)0,(int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ShortVector2_Impl__obj,get_zero,return )

Int ShortVector2_Impl__obj::get_xAxis(){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_xAxis",0x49e1caa1,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_xAxis","hxmath/math/ShortVector2.hx",234,0xe7dccbdb)
HXLINE( 234)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((int)1,(int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ShortVector2_Impl__obj,get_xAxis,return )

Int ShortVector2_Impl__obj::get_yAxis(){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_yAxis",0xdd485f22,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_yAxis","hxmath/math/ShortVector2.hx",239,0xe7dccbdb)
HXLINE( 239)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new((int)0,(int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ShortVector2_Impl__obj,get_yAxis,return )

Int ShortVector2_Impl__obj::get_x(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_x",0xc87111e0,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_x","hxmath/math/ShortVector2.hx",244,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 244)		return ((int)this1 & (int)(int)65535);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,get_x,return )

Int ShortVector2_Impl__obj::get_y(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_y",0xc87111e1,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_y","hxmath/math/ShortVector2.hx",249,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 249)		return ((int)((int)this1 >> (int)(int)16) & (int)(int)65535);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,get_y,return )

Int ShortVector2_Impl__obj::get_lengthSq(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_lengthSq",0x4d84cebc,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_lengthSq","hxmath/math/ShortVector2.hx",253,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 254)		HX_VARI( Int,self) = this1;
HXLINE( 255)		return ((((int)self & (int)(int)65535) * ((int)self & (int)(int)65535)) + (((int)((int)self >> (int)(int)16) & (int)(int)65535) * ((int)((int)self >> (int)(int)16) & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,get_lengthSq,return )

Int ShortVector2_Impl__obj::get_rotatedLeft(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_rotatedLeft",0x4462e9b8,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_rotatedLeft","hxmath/math/ShortVector2.hx",263,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 263)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(-(((int)((int)this1 >> (int)(int)16) & (int)(int)65535)),((int)this1 & (int)(int)65535));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,get_rotatedLeft,return )

Int ShortVector2_Impl__obj::get_rotatedRight(Int this1){
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","get_rotatedRight",0x0936a50b,"hxmath.math._ShortVector2.ShortVector2_Impl_.get_rotatedRight","hxmath/math/ShortVector2.hx",269,0xe7dccbdb)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 269)		return ::hxmath::math::_ShortVector2::ShortVector2_Impl__obj::_new(((int)((int)this1 >> (int)(int)16) & (int)(int)65535),-(((int)this1 & (int)(int)65535)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShortVector2_Impl__obj,get_rotatedRight,return )


ShortVector2_Impl__obj::ShortVector2_Impl__obj()
{
}

bool ShortVector2_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"dot") ) { outValue = dot_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"max") ) { outValue = max_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"min") ) { outValue = min_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_x") ) { outValue = get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y") ) { outValue = get_y_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"multiply") ) { outValue = multiply_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtract") ) { outValue = subtract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_zero") ) { outValue = get_zero_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toVector2") ) { outValue = toVector2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_xAxis") ) { outValue = get_xAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_yAxis") ) { outValue = get_yAxis_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_lengthSq") ) { outValue = get_lengthSq_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"indexInBounds") ) { outValue = indexInBounds_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getArrayElement") ) { outValue = getArrayElement_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_rotatedLeft") ) { outValue = get_rotatedLeft_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_rotatedRight") ) { outValue = get_rotatedRight_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ShortVector2_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo ShortVector2_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &ShortVector2_Impl__obj::elementCount,HX_HCSTRING("elementCount","\x73","\x1c","\x9d","\xaa")},
	{hx::fsInt,(void *) &ShortVector2_Impl__obj::bitsPerField,HX_HCSTRING("bitsPerField","\xc3","\x1b","\xde","\x5a")},
	{hx::fsInt,(void *) &ShortVector2_Impl__obj::fieldMax,HX_HCSTRING("fieldMax","\x0a","\x5e","\x0d","\xac")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ShortVector2_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ShortVector2_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ShortVector2_Impl__obj::elementCount,"elementCount");
	HX_MARK_MEMBER_NAME(ShortVector2_Impl__obj::bitsPerField,"bitsPerField");
	HX_MARK_MEMBER_NAME(ShortVector2_Impl__obj::fieldMax,"fieldMax");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ShortVector2_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ShortVector2_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ShortVector2_Impl__obj::elementCount,"elementCount");
	HX_VISIT_MEMBER_NAME(ShortVector2_Impl__obj::bitsPerField,"bitsPerField");
	HX_VISIT_MEMBER_NAME(ShortVector2_Impl__obj::fieldMax,"fieldMax");
};

#endif

hx::Class ShortVector2_Impl__obj::__mClass;

static ::String ShortVector2_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("elementCount","\x73","\x1c","\x9d","\xaa"),
	HX_HCSTRING("bitsPerField","\xc3","\x1b","\xde","\x5a"),
	HX_HCSTRING("fieldMax","\x0a","\x5e","\x0d","\xac"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("dot","\x89","\x42","\x4c","\x00"),
	HX_HCSTRING("multiply","\x24","\xe2","\x8c","\x9a"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("subtract","\x14","\x75","\x11","\xf8"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("max","\xa4","\x0a","\x53","\x00"),
	HX_HCSTRING("min","\x92","\x11","\x53","\x00"),
	HX_HCSTRING("getArrayElement","\xd9","\x93","\x9e","\xda"),
	HX_HCSTRING("toVector2","\xd4","\x31","\x31","\x0a"),
	HX_HCSTRING("indexInBounds","\x6c","\x89","\xee","\xb9"),
	HX_HCSTRING("get_zero","\xb1","\xca","\xab","\xd0"),
	HX_HCSTRING("get_xAxis","\x90","\x41","\x11","\x87"),
	HX_HCSTRING("get_yAxis","\x11","\xd6","\x77","\x1a"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("get_lengthSq","\x2d","\x17","\xdd","\xd4"),
	HX_HCSTRING("get_rotatedLeft","\xe7","\xbd","\x18","\xc6"),
	HX_HCSTRING("get_rotatedRight","\xfc","\x79","\x9a","\x06"),
	::String(null())
};

void ShortVector2_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hxmath.math._ShortVector2.ShortVector2_Impl_","\x3f","\x1a","\x4e","\xba");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ShortVector2_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ShortVector2_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ShortVector2_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ShortVector2_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ShortVector2_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ShortVector2_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ShortVector2_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ShortVector2_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","boot",0x605994c1,"hxmath.math._ShortVector2.ShortVector2_Impl_.boot","hxmath/math/ShortVector2.hx",16,0xe7dccbdb)
HXLINE(  16)		elementCount = (int)2;
            	}
{
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","boot",0x605994c1,"hxmath.math._ShortVector2.ShortVector2_Impl_.boot","hxmath/math/ShortVector2.hx",19,0xe7dccbdb)
HXLINE(  19)		bitsPerField = (int)16;
            	}
{
            	HX_STACK_FRAME("hxmath.math._ShortVector2.ShortVector2_Impl_","boot",0x605994c1,"hxmath.math._ShortVector2.ShortVector2_Impl_.boot","hxmath/math/ShortVector2.hx",22,0xe7dccbdb)
HXLINE(  22)		fieldMax = (int)65535;
            	}
}

} // end namespace hxmath
} // end namespace math
} // end namespace _ShortVector2
