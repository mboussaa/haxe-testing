// Generated by Haxe 3.3.0
#ifndef INCLUDED_hxmath_geom_Rect
#define INCLUDED_hxmath_geom_Rect

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxmath,geom,Rect)
HX_DECLARE_CLASS2(hxmath,math,Matrix3x2Default)
HX_DECLARE_CLASS2(hxmath,math,Vector2Default)

namespace hxmath{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES Rect_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Rect_obj OBJ_;
		Rect_obj();
		void __construct(Float x,Float y,Float width,Float height);

	public:
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxmath.geom.Rect")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		static hx::ObjectPtr< Rect_obj > __new(Float x,Float y,Float width,Float height);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Rect_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Rect","\x44","\x79","\x80","\x36"); }

		static  ::hxmath::geom::Rect fromTwoPoints( ::hxmath::math::Vector2Default pointA, ::hxmath::math::Vector2Default pointB);
		static ::Dynamic fromTwoPoints_dyn();

		static  ::hxmath::geom::Rect fromRectShape( ::Dynamic r);
		static ::Dynamic fromRectShape_dyn();

		static  ::hxmath::geom::Rect fromMatrix( ::hxmath::math::Matrix3x2Default m);
		static ::Dynamic fromMatrix_dyn();

		Float x;
		Float y;
		Float width;
		Float height;
		Bool equals( ::hxmath::geom::Rect r);
		::Dynamic equals_dyn();

		 ::hxmath::geom::Rect clone();
		::Dynamic clone_dyn();

		void copyTo( ::Dynamic r);
		::Dynamic copyTo_dyn();

		Bool overlaps( ::hxmath::geom::Rect r);
		::Dynamic overlaps_dyn();

		 ::hxmath::geom::Rect intersect( ::hxmath::geom::Rect r);
		::Dynamic intersect_dyn();

		 ::hxmath::geom::Rect intersectWith( ::hxmath::geom::Rect r);
		::Dynamic intersectWith_dyn();

		Bool containsPoint( ::hxmath::math::Vector2Default p);
		::Dynamic containsPoint_dyn();

		Float distanceToPoint( ::hxmath::math::Vector2Default p);
		::Dynamic distanceToPoint_dyn();

		Float distanceToRect( ::hxmath::geom::Rect r);
		::Dynamic distanceToRect_dyn();

		 ::hxmath::geom::Rect addWith( ::hxmath::math::Vector2Default v);
		::Dynamic addWith_dyn();

		 ::hxmath::math::Vector2Default getVertex(Int index);
		::Dynamic getVertex_dyn();

		 ::hxmath::math::Vector2Default get_center();
		::Dynamic get_center_dyn();

		 ::hxmath::math::Matrix3x2Default get_matrix();
		::Dynamic get_matrix_dyn();

		Float get_area();
		::Dynamic get_area_dyn();

		Bool get_isEmpty();
		::Dynamic get_isEmpty_dyn();

};

} // end namespace hxmath
} // end namespace geom

#endif /* INCLUDED_hxmath_geom_Rect */ 
