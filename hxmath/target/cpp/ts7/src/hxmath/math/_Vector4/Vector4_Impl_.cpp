// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_hxmath_math_Vector4Default
#include <hxmath/math/Vector4Default.h>
#endif
#ifndef INCLUDED_hxmath_math__Vector4_Vector4_Impl_
#include <hxmath/math/_Vector4/Vector4_Impl_.h>
#endif

namespace hxmath{
namespace math{
namespace _Vector4{

void Vector4_Impl__obj::__construct() { }

Dynamic Vector4_Impl__obj::__CreateEmpty() { return new Vector4_Impl__obj; }

hx::ObjectPtr< Vector4_Impl__obj > Vector4_Impl__obj::__new()
{
	hx::ObjectPtr< Vector4_Impl__obj > _hx_result = new Vector4_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Vector4_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Vector4_Impl__obj > _hx_result = new Vector4_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Int Vector4_Impl__obj::elementCount;

 ::hxmath::math::Vector4Default Vector4_Impl__obj::_new(Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","_new",0x991711ca,"hxmath.math._Vector4.Vector4_Impl_._new","hxmath/math/Vector4.hx",79,0xc211031d)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(  79)		return  ::hxmath::math::Vector4Default_obj::__new(x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Vector4_Impl__obj,_new,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::fromArray(::Array< Float > rawData){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","fromArray",0xeb27bec6,"hxmath.math._Vector4.Vector4_Impl_.fromArray","hxmath/math/Vector4.hx",95,0xc211031d)
            	HX_STACK_ARG(rawData,"rawData")
HXLINE(  96)		if ((rawData->length != (int)4)) {
HXLINE(  98)			HX_STACK_DO_THROW(HX_("Invalid rawData.",25,ca,34,44));
            		}
HXLINE( 101)		return  ::hxmath::math::Vector4Default_obj::__new(rawData->__get((int)0),rawData->__get((int)1),rawData->__get((int)2),rawData->__get((int)3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,fromArray,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::fromVector4Shape( ::Dynamic other){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","fromVector4Shape",0xe4d619c3,"hxmath.math._Vector4.Vector4_Impl_.fromVector4Shape","hxmath/math/Vector4.hx",113,0xc211031d)
            	HX_STACK_ARG(other,"other")
HXLINE( 113)		return  ::hxmath::math::Vector4Default_obj::__new( ::Dynamic(other->__Field(HX_("x",78,00,00,00),hx::paccDynamic)), ::Dynamic(other->__Field(HX_("y",79,00,00,00),hx::paccDynamic)), ::Dynamic(other->__Field(HX_("z",7a,00,00,00),hx::paccDynamic)), ::Dynamic(other->__Field(HX_("w",77,00,00,00),hx::paccDynamic)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,fromVector4Shape,return )

Float Vector4_Impl__obj::dot( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","dot",0xed2f8640,"hxmath.math._Vector4.Vector4_Impl_.dot","hxmath/math/Vector4.hx",126,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 126)		return ((((a->x * b->x) + (a->y * b->y)) + (a->z * b->z)) + (a->w * b->w));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,dot,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::multiply( ::hxmath::math::Vector4Default a,Float s){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","multiply",0x2b45c70d,"hxmath.math._Vector4.Vector4_Impl_.multiply","hxmath/math/Vector4.hx",144,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(s,"s")
HXLINE( 144)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 144)		hx::MultEq(self->x,s);
HXDLIN( 144)		hx::MultEq(self->y,s);
HXDLIN( 144)		hx::MultEq(self->z,s);
HXDLIN( 144)		hx::MultEq(self->w,s);
HXDLIN( 144)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,multiply,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::divide( ::hxmath::math::Vector4Default a,Float s){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","divide",0x8450d822,"hxmath.math._Vector4.Vector4_Impl_.divide","hxmath/math/Vector4.hx",158,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(s,"s")
HXLINE( 158)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 158)		hx::DivEq(self->x,s);
HXDLIN( 158)		hx::DivEq(self->y,s);
HXDLIN( 158)		hx::DivEq(self->z,s);
HXDLIN( 158)		hx::DivEq(self->w,s);
HXDLIN( 158)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,divide,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::add( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","add",0xed2d35d8,"hxmath.math._Vector4.Vector4_Impl_.add","hxmath/math/Vector4.hx",172,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 172)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 172)		hx::AddEq(self->x,b->x);
HXDLIN( 172)		hx::AddEq(self->y,b->y);
HXDLIN( 172)		hx::AddEq(self->z,b->z);
HXDLIN( 172)		hx::AddEq(self->w,b->w);
HXDLIN( 172)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,add,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::subtract( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","subtract",0x88ca59fd,"hxmath.math._Vector4.Vector4_Impl_.subtract","hxmath/math/Vector4.hx",186,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 186)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 186)		hx::SubEq(self->x,b->x);
HXDLIN( 186)		hx::SubEq(self->y,b->y);
HXDLIN( 186)		hx::SubEq(self->z,b->z);
HXDLIN( 186)		hx::SubEq(self->w,b->w);
HXDLIN( 186)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,subtract,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::negate( ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","negate",0x2c57ea6b,"hxmath.math._Vector4.Vector4_Impl_.negate","hxmath/math/Vector4.hx",199,0xc211031d)
            	HX_STACK_ARG(a,"a")
HXLINE( 199)		return  ::hxmath::math::Vector4Default_obj::__new(-(a->x),-(a->y),-(a->z),-(a->w));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,negate,return )

Bool Vector4_Impl__obj::equals( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","equals",0x853196e8,"hxmath.math._Vector4.Vector4_Impl_.equals","hxmath/math/Vector4.hx",217,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 217)		Bool _hx_tmp;
HXDLIN( 217)		if (hx::IsNull( a )) {
HXLINE( 217)			_hx_tmp = hx::IsNull( b );
            		}
            		else {
HXLINE( 217)			_hx_tmp = false;
            		}
HXDLIN( 217)		if (!(_hx_tmp)) {
HXLINE( 218)			Bool _hx_tmp1;
HXDLIN( 218)			Bool _hx_tmp2;
HXDLIN( 218)			Bool _hx_tmp3;
HXDLIN( 218)			Bool _hx_tmp4;
HXDLIN( 218)			if (hx::IsNotNull( a )) {
HXLINE( 218)				_hx_tmp4 = hx::IsNotNull( b );
            			}
            			else {
HXLINE( 218)				_hx_tmp4 = false;
            			}
HXDLIN( 218)			if (_hx_tmp4) {
HXLINE( 218)				_hx_tmp3 = (a->x == b->x);
            			}
            			else {
HXLINE( 218)				_hx_tmp3 = false;
            			}
HXDLIN( 218)			if (_hx_tmp3) {
HXLINE( 218)				_hx_tmp2 = (a->y == b->y);
            			}
            			else {
HXLINE( 218)				_hx_tmp2 = false;
            			}
HXDLIN( 218)			if (_hx_tmp2) {
HXLINE( 218)				_hx_tmp1 = (a->z == b->z);
            			}
            			else {
HXLINE( 218)				_hx_tmp1 = false;
            			}
HXDLIN( 218)			if (_hx_tmp1) {
HXLINE( 217)				return (a->w == b->w);
            			}
            			else {
HXLINE( 217)				return false;
            			}
            		}
            		else {
HXLINE( 217)			return true;
            		}
HXDLIN( 217)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,equals,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::lerp( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b,Float t){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","lerp",0xa1a80ee0,"hxmath.math._Vector4.Vector4_Impl_.lerp","hxmath/math/Vector4.hx",236,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(t,"t")
HXLINE( 236)		return  ::hxmath::math::Vector4Default_obj::__new((((((Float)1.0) - t) * a->x) + (t * b->x)),(((((Float)1.0) - t) * a->y) + (t * b->y)),(((((Float)1.0) - t) * a->z) + (t * b->z)),(((((Float)1.0) - t) * a->w) + (t * b->w)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector4_Impl__obj,lerp,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::max( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","max",0xed364e5b,"hxmath.math._Vector4.Vector4_Impl_.max","hxmath/math/Vector4.hx",252,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 252)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 252)		self->x = ::Math_obj::max(self->x,b->x);
HXDLIN( 252)		self->y = ::Math_obj::max(self->y,b->y);
HXDLIN( 252)		self->z = ::Math_obj::max(self->z,b->z);
HXDLIN( 252)		self->w = ::Math_obj::max(self->w,b->w);
HXDLIN( 252)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,max,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::min( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","min",0xed365549,"hxmath.math._Vector4.Vector4_Impl_.min","hxmath/math/Vector4.hx",265,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 265)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 265)		self->x = ::Math_obj::min(self->x,b->x);
HXDLIN( 265)		self->y = ::Math_obj::min(self->y,b->y);
HXDLIN( 265)		self->z = ::Math_obj::min(self->z,b->z);
HXDLIN( 265)		self->w = ::Math_obj::min(self->w,b->w);
HXDLIN( 265)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,min,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::project( ::hxmath::math::Vector4Default a, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","project",0xc77ffe10,"hxmath.math._Vector4.Vector4_Impl_.project","hxmath/math/Vector4.hx",278,0xc211031d)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 278)		HX_VARI(  ::hxmath::math::Vector4Default,self) =  ::hxmath::math::Vector4Default_obj::__new(a->x,a->y,a->z,a->w);
HXDLIN( 278)		HX_VARI( Float,s) = ((Float)((((self->x * b->x) + (self->y * b->y)) + (self->z * b->z)) + (self->w * b->w)) / (Float)((((b->x * b->x) + (b->y * b->y)) + (b->z * b->z)) + (b->w * b->w)));
HXDLIN( 278)		{
HXLINE( 278)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 278)			while((_g < (int)4)){
HXLINE( 278)				HX_VARI( Int,i) = _g++;
HXDLIN( 278)				{
HXLINE( 278)					 ::Dynamic _hx_tmp;
HXDLIN( 278)					switch((int)(i)){
            						case (int)0: {
HXLINE( 278)							_hx_tmp = b->x;
            						}
            						break;
            						case (int)1: {
HXLINE( 278)							_hx_tmp = b->y;
            						}
            						break;
            						case (int)2: {
HXLINE( 278)							_hx_tmp = b->z;
            						}
            						break;
            						case (int)3: {
HXLINE( 278)							_hx_tmp = b->w;
            						}
            						break;
            						default:{
HXLINE( 278)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
HXDLIN( 278)					HX_VARI( Float,value) = ( (Float)(_hx_tmp) );
HXDLIN( 278)					switch((int)(i)){
            						case (int)0: {
HXLINE( 278)							self->x = value;
            						}
            						break;
            						case (int)1: {
HXLINE( 278)							self->y = value;
            						}
            						break;
            						case (int)2: {
HXLINE( 278)							self->z = value;
            						}
            						break;
            						case (int)3: {
HXLINE( 278)							self->w = value;
            						}
            						break;
            						default:{
HXLINE( 278)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
            				}
            			}
            		}
HXDLIN( 278)		{
HXLINE( 278)			hx::MultEq(self->x,s);
HXDLIN( 278)			hx::MultEq(self->y,s);
HXDLIN( 278)			hx::MultEq(self->z,s);
HXDLIN( 278)			hx::MultEq(self->w,s);
            		}
HXDLIN( 278)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,project,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::set( ::hxmath::math::Vector4Default this1,Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","set",0xed3adf59,"hxmath.math._Vector4.Vector4_Impl_.set","hxmath/math/Vector4.hx",292,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE( 293)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 295)		self->x = x;
HXLINE( 296)		self->y = y;
HXLINE( 297)		self->z = z;
HXLINE( 298)		self->w = w;
HXLINE( 300)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Vector4_Impl__obj,set,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::multiplyWith( ::hxmath::math::Vector4Default this1,Float s){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","multiplyWith",0x253c73b3,"hxmath.math._Vector4.Vector4_Impl_.multiplyWith","hxmath/math/Vector4.hx",311,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(s,"s")
HXLINE( 312)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 314)		hx::MultEq(self->x,s);
HXLINE( 315)		hx::MultEq(self->y,s);
HXLINE( 316)		hx::MultEq(self->z,s);
HXLINE( 317)		hx::MultEq(self->w,s);
HXLINE( 319)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,multiplyWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::divideWith( ::hxmath::math::Vector4Default this1,Float s){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","divideWith",0x470e3348,"hxmath.math._Vector4.Vector4_Impl_.divideWith","hxmath/math/Vector4.hx",330,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(s,"s")
HXLINE( 331)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 333)		hx::DivEq(self->x,s);
HXLINE( 334)		hx::DivEq(self->y,s);
HXLINE( 335)		hx::DivEq(self->z,s);
HXLINE( 336)		hx::DivEq(self->w,s);
HXLINE( 338)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,divideWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::addWith( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","addWith",0x5ccaa3fe,"hxmath.math._Vector4.Vector4_Impl_.addWith","hxmath/math/Vector4.hx",349,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE( 350)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 352)		hx::AddEq(self->x,a->x);
HXLINE( 353)		hx::AddEq(self->y,a->y);
HXLINE( 354)		hx::AddEq(self->z,a->z);
HXLINE( 355)		hx::AddEq(self->w,a->w);
HXLINE( 357)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,addWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::subtractWith( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","subtractWith",0x459d3ea3,"hxmath.math._Vector4.Vector4_Impl_.subtractWith","hxmath/math/Vector4.hx",368,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE( 369)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 371)		hx::SubEq(self->x,a->x);
HXLINE( 372)		hx::SubEq(self->y,a->y);
HXLINE( 373)		hx::SubEq(self->z,a->z);
HXLINE( 374)		hx::SubEq(self->w,a->w);
HXLINE( 376)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,subtractWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::maxWith( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","maxWith",0xa0bdba01,"hxmath.math._Vector4.Vector4_Impl_.maxWith","hxmath/math/Vector4.hx",387,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE( 388)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 390)		self->x = ::Math_obj::max(self->x,a->x);
HXLINE( 391)		self->y = ::Math_obj::max(self->y,a->y);
HXLINE( 392)		self->z = ::Math_obj::max(self->z,a->z);
HXLINE( 393)		self->w = ::Math_obj::max(self->w,a->w);
HXLINE( 395)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,maxWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::minWith( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","minWith",0x1196cfef,"hxmath.math._Vector4.Vector4_Impl_.minWith","hxmath/math/Vector4.hx",406,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE( 407)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 409)		self->x = ::Math_obj::min(self->x,a->x);
HXLINE( 410)		self->y = ::Math_obj::min(self->y,a->y);
HXLINE( 411)		self->z = ::Math_obj::min(self->z,a->z);
HXLINE( 412)		self->w = ::Math_obj::min(self->w,a->w);
HXLINE( 414)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,minWith,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::projectOnto( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default a){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","projectOnto",0x254bfe8a,"hxmath.math._Vector4.Vector4_Impl_.projectOnto","hxmath/math/Vector4.hx",424,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(a,"a")
HXLINE( 425)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 427)		HX_VARI( Float,s) = ((Float)((((self->x * a->x) + (self->y * a->y)) + (self->z * a->z)) + (self->w * a->w)) / (Float)((((a->x * a->x) + (a->y * a->y)) + (a->z * a->z)) + (a->w * a->w)));
HXLINE( 430)		{
HXLINE( 430)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 430)			while((_g < (int)4)){
HXLINE( 430)				HX_VARI( Int,i) = _g++;
HXDLIN( 430)				{
HXLINE( 430)					 ::Dynamic _hx_tmp;
HXDLIN( 430)					switch((int)(i)){
            						case (int)0: {
HXLINE( 430)							_hx_tmp = a->x;
            						}
            						break;
            						case (int)1: {
HXLINE( 430)							_hx_tmp = a->y;
            						}
            						break;
            						case (int)2: {
HXLINE( 430)							_hx_tmp = a->z;
            						}
            						break;
            						case (int)3: {
HXLINE( 430)							_hx_tmp = a->w;
            						}
            						break;
            						default:{
HXLINE( 430)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
HXDLIN( 430)					HX_VARI( Float,value) = ( (Float)(_hx_tmp) );
HXDLIN( 430)					switch((int)(i)){
            						case (int)0: {
HXLINE( 430)							self->x = value;
            						}
            						break;
            						case (int)1: {
HXLINE( 430)							self->y = value;
            						}
            						break;
            						case (int)2: {
HXLINE( 430)							self->z = value;
            						}
            						break;
            						case (int)3: {
HXLINE( 430)							self->w = value;
            						}
            						break;
            						default:{
HXLINE( 430)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
            				}
            			}
            		}
HXLINE( 431)		{
HXLINE( 431)			hx::MultEq(self->x,s);
HXDLIN( 431)			hx::MultEq(self->y,s);
HXDLIN( 431)			hx::MultEq(self->z,s);
HXDLIN( 431)			hx::MultEq(self->w,s);
            		}
HXLINE( 433)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,projectOnto,return )

void Vector4_Impl__obj::copyTo( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default target){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","copyTo",0x8e71c539,"hxmath.math._Vector4.Vector4_Impl_.copyTo","hxmath/math/Vector4.hx",443,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(target,"target")
HXLINE( 444)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 446)		{
HXLINE( 446)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 446)			while((_g < (int)4)){
HXLINE( 446)				HX_VARI( Int,i) = _g++;
HXLINE( 448)				{
HXLINE( 448)					 ::Dynamic _hx_tmp;
HXDLIN( 448)					switch((int)(i)){
            						case (int)0: {
HXLINE( 448)							_hx_tmp = self->x;
            						}
            						break;
            						case (int)1: {
HXLINE( 448)							_hx_tmp = self->y;
            						}
            						break;
            						case (int)2: {
HXLINE( 448)							_hx_tmp = self->z;
            						}
            						break;
            						case (int)3: {
HXLINE( 448)							_hx_tmp = self->w;
            						}
            						break;
            						default:{
HXLINE( 448)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
HXDLIN( 448)					HX_VARI( Float,value) = ( (Float)(_hx_tmp) );
HXDLIN( 448)					switch((int)(i)){
            						case (int)0: {
HXLINE( 448)							target->x = value;
            						}
            						break;
            						case (int)1: {
HXLINE( 448)							target->y = value;
            						}
            						break;
            						case (int)2: {
HXLINE( 448)							target->z = value;
            						}
            						break;
            						case (int)3: {
HXLINE( 448)							target->w = value;
            						}
            						break;
            						default:{
HXLINE( 448)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,copyTo,(void))

void Vector4_Impl__obj::copyToShape( ::hxmath::math::Vector4Default this1, ::Dynamic target){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","copyToShape",0x9fa5ff28,"hxmath.math._Vector4.Vector4_Impl_.copyToShape","hxmath/math/Vector4.hx",458,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(target,"target")
HXLINE( 459)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 461)		target->__SetField(HX_("x",78,00,00,00),self->x,hx::paccDynamic);
HXLINE( 462)		target->__SetField(HX_("y",79,00,00,00),self->y,hx::paccDynamic);
HXLINE( 463)		target->__SetField(HX_("z",7a,00,00,00),self->z,hx::paccDynamic);
HXLINE( 464)		target->__SetField(HX_("w",77,00,00,00),self->w,hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,copyToShape,(void))

void Vector4_Impl__obj::copyFromShape( ::hxmath::math::Vector4Default this1, ::Dynamic source){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","copyFromShape",0xee1f0159,"hxmath.math._Vector4.Vector4_Impl_.copyFromShape","hxmath/math/Vector4.hx",473,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(source,"source")
HXLINE( 474)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 476)		self->x = ( (Float)(source->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) );
HXLINE( 477)		self->y = ( (Float)(source->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) );
HXLINE( 478)		self->z = ( (Float)(source->__Field(HX_("z",7a,00,00,00),hx::paccDynamic)) );
HXLINE( 479)		self->w = ( (Float)(source->__Field(HX_("w",77,00,00,00),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,copyFromShape,(void))

 ::hxmath::math::Vector4Default Vector4_Impl__obj::clone( ::hxmath::math::Vector4Default this1){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","clone",0xa767f2d4,"hxmath.math._Vector4.Vector4_Impl_.clone","hxmath/math/Vector4.hx",488,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 489)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 490)		return  ::hxmath::math::Vector4Default_obj::__new(self->x,self->y,self->z,self->w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,clone,return )

Float Vector4_Impl__obj::getArrayElement( ::hxmath::math::Vector4Default this1,Int i){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","getArrayElement",0x4d740e10,"hxmath.math._Vector4.Vector4_Impl_.getArrayElement","hxmath/math/Vector4.hx",501,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(i,"i")
HXLINE( 502)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 503)		switch((int)(i)){
            			case (int)0: {
HXLINE( 506)				return self->x;
            			}
            			break;
            			case (int)1: {
HXLINE( 508)				return self->y;
            			}
            			break;
            			case (int)2: {
HXLINE( 510)				return self->z;
            			}
            			break;
            			case (int)3: {
HXLINE( 512)				return self->w;
            			}
            			break;
            			default:{
HXLINE( 514)				HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            			}
            		}
HXLINE( 503)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,getArrayElement,return )

Float Vector4_Impl__obj::setArrayElement( ::hxmath::math::Vector4Default this1,Int i,Float value){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","setArrayElement",0x493f8b1c,"hxmath.math._Vector4.Vector4_Impl_.setArrayElement","hxmath/math/Vector4.hx",527,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(i,"i")
            	HX_STACK_ARG(value,"value")
HXLINE( 528)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 529)		switch((int)(i)){
            			case (int)0: {
HXLINE( 532)				return (self->x = value);
            			}
            			break;
            			case (int)1: {
HXLINE( 534)				return (self->y = value);
            			}
            			break;
            			case (int)2: {
HXLINE( 536)				return (self->z = value);
            			}
            			break;
            			case (int)3: {
HXLINE( 538)				return (self->w = value);
            			}
            			break;
            			default:{
HXLINE( 540)				HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            			}
            		}
HXLINE( 529)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector4_Impl__obj,setArrayElement,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::applyScalarFunc( ::hxmath::math::Vector4Default this1, ::Dynamic func){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","applyScalarFunc",0xf9b15dd5,"hxmath.math._Vector4.Vector4_Impl_.applyScalarFunc","hxmath/math/Vector4.hx",551,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(func,"func")
HXLINE( 552)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 554)		{
HXLINE( 554)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 554)			while((_g < (int)4)){
HXLINE( 554)				HX_VARI( Int,i) = _g++;
HXLINE( 556)				{
HXLINE( 556)					 ::Dynamic _hx_tmp;
HXDLIN( 556)					switch((int)(i)){
            						case (int)0: {
HXLINE( 556)							_hx_tmp = self->x;
            						}
            						break;
            						case (int)1: {
HXLINE( 556)							_hx_tmp = self->y;
            						}
            						break;
            						case (int)2: {
HXLINE( 556)							_hx_tmp = self->z;
            						}
            						break;
            						case (int)3: {
HXLINE( 556)							_hx_tmp = self->w;
            						}
            						break;
            						default:{
HXLINE( 556)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
HXDLIN( 556)					HX_VARI( Float,value) = ( (Float)(func(( (Float)(_hx_tmp) ))) );
HXDLIN( 556)					switch((int)(i)){
            						case (int)0: {
HXLINE( 556)							self->x = value;
            						}
            						break;
            						case (int)1: {
HXLINE( 556)							self->y = value;
            						}
            						break;
            						case (int)2: {
HXLINE( 556)							self->z = value;
            						}
            						break;
            						case (int)3: {
HXLINE( 556)							self->w = value;
            						}
            						break;
            						default:{
HXLINE( 556)							HX_STACK_DO_THROW(HX_("Invalid element",73,24,cd,01));
            						}
            					}
            				}
            			}
            		}
HXLINE( 559)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,applyScalarFunc,return )

Float Vector4_Impl__obj::distanceTo( ::hxmath::math::Vector4Default this1, ::hxmath::math::Vector4Default b){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","distanceTo",0x68578539,"hxmath.math._Vector4.Vector4_Impl_.distanceTo","hxmath/math/Vector4.hx",569,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(b,"b")
HXLINE( 570)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 572)		HX_VARI_NAME(  ::hxmath::math::Vector4Default,self1,"self") =  ::hxmath::math::Vector4Default_obj::__new(self->x,self->y,self->z,self->w);
HXDLIN( 572)		hx::SubEq(self1->x,b->x);
HXDLIN( 572)		hx::SubEq(self1->y,b->y);
HXDLIN( 572)		hx::SubEq(self1->z,b->z);
HXDLIN( 572)		hx::SubEq(self1->w,b->w);
HXDLIN( 572)		HX_VARI_NAME(  ::hxmath::math::Vector4Default,self2,"self") = self1;
HXDLIN( 572)		Float _hx_tmp = ((((self2->x * self2->x) + (self2->y * self2->y)) + (self2->z * self2->z)) + (self2->w * self2->w));
HXDLIN( 572)		return ::Math_obj::sqrt(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,distanceTo,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::normalize( ::hxmath::math::Vector4Default this1){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","normalize",0xbcb09e84,"hxmath.math._Vector4.Vector4_Impl_.normalize","hxmath/math/Vector4.hx",581,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 582)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 584)		Float _hx_tmp = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXDLIN( 584)		HX_VARI( Float,length) = ::Math_obj::sqrt(_hx_tmp);
HXLINE( 586)		if ((length > ((Float)0.0))) {
HXLINE( 588)			hx::DivEq(self->x,length);
HXDLIN( 588)			hx::DivEq(self->y,length);
HXDLIN( 588)			hx::DivEq(self->z,length);
HXDLIN( 588)			hx::DivEq(self->w,length);
            		}
HXLINE( 591)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,normalize,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::normalizeTo( ::hxmath::math::Vector4Default this1,Float newLength){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","normalizeTo",0xc0f8911f,"hxmath.math._Vector4.Vector4_Impl_.normalizeTo","hxmath/math/Vector4.hx",601,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(newLength,"newLength")
HXLINE( 602)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 604)		{
HXLINE( 604)			Float _hx_tmp = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXDLIN( 604)			HX_VARI( Float,length) = ::Math_obj::sqrt(_hx_tmp);
HXDLIN( 604)			if ((length > ((Float)0.0))) {
HXLINE( 604)				hx::DivEq(self->x,length);
HXDLIN( 604)				hx::DivEq(self->y,length);
HXDLIN( 604)				hx::DivEq(self->z,length);
HXDLIN( 604)				hx::DivEq(self->w,length);
            			}
            		}
HXLINE( 605)		{
HXLINE( 605)			hx::MultEq(self->x,newLength);
HXDLIN( 605)			hx::MultEq(self->y,newLength);
HXDLIN( 605)			hx::MultEq(self->z,newLength);
HXDLIN( 605)			hx::MultEq(self->w,newLength);
            		}
HXLINE( 607)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector4_Impl__obj,normalizeTo,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::clamp( ::hxmath::math::Vector4Default this1,Float min,Float max){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","clamp",0xa75d5272,"hxmath.math._Vector4.Vector4_Impl_.clamp","hxmath/math/Vector4.hx",618,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(min,"min")
            	HX_STACK_ARG(max,"max")
HXLINE( 619)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 621)		Float _hx_tmp = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXDLIN( 621)		HX_VARI( Float,length) = ::Math_obj::sqrt(_hx_tmp);
HXLINE( 623)		if ((length < min)) {
HXLINE( 625)			{
HXLINE( 625)				Float _hx_tmp1 = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXDLIN( 625)				HX_VARI_NAME( Float,length1,"length") = ::Math_obj::sqrt(_hx_tmp1);
HXDLIN( 625)				if ((length1 > ((Float)0.0))) {
HXLINE( 625)					hx::DivEq(self->x,length1);
HXDLIN( 625)					hx::DivEq(self->y,length1);
HXDLIN( 625)					hx::DivEq(self->z,length1);
HXDLIN( 625)					hx::DivEq(self->w,length1);
            				}
            			}
HXDLIN( 625)			{
HXLINE( 625)				hx::MultEq(self->x,min);
HXDLIN( 625)				hx::MultEq(self->y,min);
HXDLIN( 625)				hx::MultEq(self->z,min);
HXDLIN( 625)				hx::MultEq(self->w,min);
            			}
            		}
            		else {
HXLINE( 627)			if ((length > max)) {
HXLINE( 629)				{
HXLINE( 629)					Float _hx_tmp2 = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXDLIN( 629)					HX_VARI_NAME( Float,length2,"length") = ::Math_obj::sqrt(_hx_tmp2);
HXDLIN( 629)					if ((length2 > ((Float)0.0))) {
HXLINE( 629)						hx::DivEq(self->x,length2);
HXDLIN( 629)						hx::DivEq(self->y,length2);
HXDLIN( 629)						hx::DivEq(self->z,length2);
HXDLIN( 629)						hx::DivEq(self->w,length2);
            					}
            				}
HXDLIN( 629)				{
HXLINE( 629)					hx::MultEq(self->x,max);
HXDLIN( 629)					hx::MultEq(self->y,max);
HXDLIN( 629)					hx::MultEq(self->z,max);
HXDLIN( 629)					hx::MultEq(self->w,max);
            				}
            			}
            		}
HXLINE( 632)		return self;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector4_Impl__obj,clamp,return )

Float Vector4_Impl__obj::get_length( ::hxmath::math::Vector4Default this1){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_length",0x6bf9b5d8,"hxmath.math._Vector4.Vector4_Impl_.get_length","hxmath/math/Vector4.hx",636,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 637)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 639)		Float _hx_tmp = ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
HXLINE( 638)		return ::Math_obj::sqrt(_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,get_length,return )

Float Vector4_Impl__obj::get_lengthSq( ::hxmath::math::Vector4Default this1){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_lengthSq",0xa6352496,"hxmath.math._Vector4.Vector4_Impl_.get_lengthSq","hxmath/math/Vector4.hx",646,0xc211031d)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 647)		HX_VARI(  ::hxmath::math::Vector4Default,self) = this1;
HXLINE( 648)		return ((((self->x * self->x) + (self->y * self->y)) + (self->z * self->z)) + (self->w * self->w));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector4_Impl__obj,get_lengthSq,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::get_zero(){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_zero",0x6164af9a,"hxmath.math._Vector4.Vector4_Impl_.get_zero","hxmath/math/Vector4.hx",657,0xc211031d)
HXLINE( 657)		return  ::hxmath::math::Vector4Default_obj::__new(((Float)0.0),((Float)0.0),((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vector4_Impl__obj,get_zero,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::get_xAxis(){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_xAxis",0x9820a887,"hxmath.math._Vector4.Vector4_Impl_.get_xAxis","hxmath/math/Vector4.hx",662,0xc211031d)
HXLINE( 662)		return  ::hxmath::math::Vector4Default_obj::__new(((Float)1.0),((Float)0.0),((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vector4_Impl__obj,get_xAxis,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::get_yAxis(){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_yAxis",0x2b873d08,"hxmath.math._Vector4.Vector4_Impl_.get_yAxis","hxmath/math/Vector4.hx",667,0xc211031d)
HXLINE( 667)		return  ::hxmath::math::Vector4Default_obj::__new(((Float)0.0),((Float)1.0),((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vector4_Impl__obj,get_yAxis,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::get_zAxis(){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_zAxis",0xbeedd189,"hxmath.math._Vector4.Vector4_Impl_.get_zAxis","hxmath/math/Vector4.hx",672,0xc211031d)
HXLINE( 672)		return  ::hxmath::math::Vector4Default_obj::__new(((Float)0.0),((Float)0.0),((Float)1.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vector4_Impl__obj,get_zAxis,return )

 ::hxmath::math::Vector4Default Vector4_Impl__obj::get_wAxis(){
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","get_wAxis",0x04ba1406,"hxmath.math._Vector4.Vector4_Impl_.get_wAxis","hxmath/math/Vector4.hx",677,0xc211031d)
HXLINE( 677)		return  ::hxmath::math::Vector4Default_obj::__new(((Float)0.0),((Float)0.0),((Float)0.0),((Float)1.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vector4_Impl__obj,get_wAxis,return )


Vector4_Impl__obj::Vector4_Impl__obj()
{
}

bool Vector4_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"dot") ) { outValue = dot_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"max") ) { outValue = max_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"min") ) { outValue = min_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lerp") ) { outValue = lerp_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { outValue = clone_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clamp") ) { outValue = clamp_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"divide") ) { outValue = divide_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyTo") ) { outValue = copyTo_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"project") ) { outValue = project_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addWith") ) { outValue = addWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"maxWith") ) { outValue = maxWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"minWith") ) { outValue = minWith_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"multiply") ) { outValue = multiply_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtract") ) { outValue = subtract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_zero") ) { outValue = get_zero_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"normalize") ) { outValue = normalize_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_xAxis") ) { outValue = get_xAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_yAxis") ) { outValue = get_yAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_zAxis") ) { outValue = get_zAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_wAxis") ) { outValue = get_wAxis_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"divideWith") ) { outValue = divideWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"distanceTo") ) { outValue = distanceTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"projectOnto") ) { outValue = projectOnto_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyToShape") ) { outValue = copyToShape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"normalizeTo") ) { outValue = normalizeTo_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"multiplyWith") ) { outValue = multiplyWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtractWith") ) { outValue = subtractWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_lengthSq") ) { outValue = get_lengthSq_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"copyFromShape") ) { outValue = copyFromShape_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getArrayElement") ) { outValue = getArrayElement_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setArrayElement") ) { outValue = setArrayElement_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"applyScalarFunc") ) { outValue = applyScalarFunc_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"fromVector4Shape") ) { outValue = fromVector4Shape_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Vector4_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo Vector4_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Vector4_Impl__obj::elementCount,HX_HCSTRING("elementCount","\x73","\x1c","\x9d","\xaa")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Vector4_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Vector4_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Vector4_Impl__obj::elementCount,"elementCount");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Vector4_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Vector4_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Vector4_Impl__obj::elementCount,"elementCount");
};

#endif

hx::Class Vector4_Impl__obj::__mClass;

static ::String Vector4_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("elementCount","\x73","\x1c","\x9d","\xaa"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("fromVector4Shape","\xda","\xa3","\xe0","\xdc"),
	HX_HCSTRING("dot","\x89","\x42","\x4c","\x00"),
	HX_HCSTRING("multiply","\x24","\xe2","\x8c","\x9a"),
	HX_HCSTRING("divide","\x79","\x2f","\x12","\xbf"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("subtract","\x14","\x75","\x11","\xf8"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("lerp","\x77","\x12","\xb0","\x47"),
	HX_HCSTRING("max","\xa4","\x0a","\x53","\x00"),
	HX_HCSTRING("min","\x92","\x11","\x53","\x00"),
	HX_HCSTRING("project","\xd9","\x12","\xeb","\xf5"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("multiplyWith","\x4a","\x66","\xe4","\x53"),
	HX_HCSTRING("divideWith","\x1f","\x82","\xa3","\x6a"),
	HX_HCSTRING("addWith","\xc7","\xb8","\x35","\x8b"),
	HX_HCSTRING("subtractWith","\x3a","\x31","\x45","\x74"),
	HX_HCSTRING("maxWith","\xca","\xce","\x28","\xcf"),
	HX_HCSTRING("minWith","\xb8","\xe4","\x01","\x40"),
	HX_HCSTRING("projectOnto","\xd3","\xab","\x5b","\x24"),
	HX_HCSTRING("copyTo","\x90","\x1c","\x33","\xc9"),
	HX_HCSTRING("copyToShape","\x71","\xac","\xb5","\x9e"),
	HX_HCSTRING("copyFromShape","\xe2","\x52","\x6b","\x92"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("getArrayElement","\xd9","\x93","\x9e","\xda"),
	HX_HCSTRING("setArrayElement","\xe5","\x10","\x6a","\xd6"),
	HX_HCSTRING("applyScalarFunc","\x9e","\xe3","\xdb","\x86"),
	HX_HCSTRING("distanceTo","\x10","\xd4","\xec","\x8b"),
	HX_HCSTRING("normalize","\x8d","\x37","\xa1","\xab"),
	HX_HCSTRING("normalizeTo","\x68","\x3e","\x08","\xc0"),
	HX_HCSTRING("clamp","\xfb","\x72","\x58","\x48"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("get_lengthSq","\x2d","\x17","\xdd","\xd4"),
	HX_HCSTRING("get_zero","\xb1","\xca","\xab","\xd0"),
	HX_HCSTRING("get_xAxis","\x90","\x41","\x11","\x87"),
	HX_HCSTRING("get_yAxis","\x11","\xd6","\x77","\x1a"),
	HX_HCSTRING("get_zAxis","\x92","\x6a","\xde","\xad"),
	HX_HCSTRING("get_wAxis","\x0f","\xad","\xaa","\xf3"),
	::String(null())
};

void Vector4_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("hxmath.math._Vector4.Vector4_Impl_","\xa5","\xbc","\xcf","\x64");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vector4_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Vector4_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Vector4_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Vector4_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Vector4_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vector4_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vector4_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Vector4_Impl__obj::__boot()
{
{
            	HX_STACK_FRAME("hxmath.math._Vector4.Vector4_Impl_","boot",0x9b13809b,"hxmath.math._Vector4.Vector4_Impl_.boot","hxmath/math/Vector4.hx",48,0xc211031d)
HXLINE(  48)		elementCount = (int)4;
            	}
}

} // end namespace hxmath
} // end namespace math
} // end namespace _Vector4
