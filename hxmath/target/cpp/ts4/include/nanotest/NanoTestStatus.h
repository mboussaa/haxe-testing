// Generated by Haxe 3.3.0
#ifndef INCLUDED_nanotest_NanoTestStatus
#define INCLUDED_nanotest_NanoTestStatus

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,StackItem)
HX_DECLARE_CLASS1(nanotest,NanoTestStatus)
namespace nanotest{


class NanoTestStatus_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef NanoTestStatus_obj OBJ_;

	public:
		NanoTestStatus_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("nanotest.NanoTestStatus","\x80","\xb7","\xc2","\x0f"); }
		::String __ToString() const { return HX_HCSTRING("NanoTestStatus.","\x96","\xa3","\x77","\x7a") + _hx_tag; }

		static ::nanotest::NanoTestStatus ERROR(::String message,::Array< ::Dynamic> callStack);
		static ::Dynamic ERROR_dyn();
		static ::nanotest::NanoTestStatus FAIL(::String message, ::Dynamic posInfos);
		static ::Dynamic FAIL_dyn();
		static ::nanotest::NanoTestStatus SUCCESS( ::Dynamic posInfos);
		static ::Dynamic SUCCESS_dyn();
};

} // end namespace nanotest

#endif /* INCLUDED_nanotest_NanoTestStatus */ 
