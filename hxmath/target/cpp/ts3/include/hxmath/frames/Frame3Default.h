// Generated by Haxe 3.3.0
#ifndef INCLUDED_hxmath_frames_Frame3Default
#define INCLUDED_hxmath_frames_Frame3Default

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_hxmath_frames_IFrame3
#include <hxmath/frames/IFrame3.h>
#endif
HX_DECLARE_CLASS2(hxmath,frames,Frame3Default)
HX_DECLARE_CLASS2(hxmath,frames,IFrame3)
HX_DECLARE_CLASS2(hxmath,math,Matrix4x4Default)
HX_DECLARE_CLASS2(hxmath,math,QuaternionDefault)
HX_DECLARE_CLASS2(hxmath,math,Vector3Default)

namespace hxmath{
namespace frames{


class HXCPP_CLASS_ATTRIBUTES Frame3Default_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Frame3Default_obj OBJ_;
		Frame3Default_obj();

	public:
		void __construct( ::hxmath::math::Vector3Default offset, ::hxmath::math::QuaternionDefault orientation,hx::Null< Bool >  __o_isCached);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxmath.frames.Frame3Default")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"hxmath.frames.Frame3Default"); }
		static hx::ObjectPtr< Frame3Default_obj > __new( ::hxmath::math::Vector3Default offset, ::hxmath::math::QuaternionDefault orientation,hx::Null< Bool >  __o_isCached);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Frame3Default_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("Frame3Default","\xdb","\xf9","\x3c","\x15"); }

		 ::hxmath::math::Matrix4x4Default internalMatrix;
		 ::hxmath::math::Vector3Default internalOffset;
		 ::hxmath::math::QuaternionDefault internalOrientation;
		Bool isCached;
		Bool isDirty;
		virtual ::String toString();
		::Dynamic toString_dyn();

		 ::hxmath::math::Matrix4x4Default get_matrix();
		::Dynamic get_matrix_dyn();

		 ::hxmath::math::Vector3Default get_offset();
		::Dynamic get_offset_dyn();

		 ::hxmath::math::Vector3Default set_offset( ::hxmath::math::Vector3Default offset);
		::Dynamic set_offset_dyn();

		 ::hxmath::math::QuaternionDefault get_orientation();
		::Dynamic get_orientation_dyn();

		 ::hxmath::math::QuaternionDefault set_orientation( ::hxmath::math::QuaternionDefault orientation);
		::Dynamic set_orientation_dyn();

};

} // end namespace hxmath
} // end namespace frames

#endif /* INCLUDED_hxmath_frames_Frame3Default */ 
