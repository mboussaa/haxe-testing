// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace test {
	public class Distribution : global::haxe.lang.HxObject {
		
		public Distribution(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Distribution() {
			global::test.Distribution.__hx_ctor_test_Distribution(this);
		}
		
		
		public static void __hx_ctor_test_Distribution(global::test.Distribution __temp_me41) {
			__temp_me41.precision = 1e-4;
			__temp_me41.width = 1.0;
			__temp_me41.center = 0.0;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::test.Distribution(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::test.Distribution();
		}
		
		
		public double center;
		
		public double width;
		
		public double precision;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 13096254:
					{
						this.precision = ((double) (@value) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((double) (@value) );
						return @value;
					}
					
					
					case 98248149:
					{
						this.center = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 13096254:
					{
						this.precision = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 98248149:
					{
						this.center = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 13096254:
					{
						return this.precision;
					}
					
					
					case 1247983110:
					{
						return this.width;
					}
					
					
					case 98248149:
					{
						return this.center;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 13096254:
					{
						return this.precision;
					}
					
					
					case 1247983110:
					{
						return this.width;
					}
					
					
					case 98248149:
					{
						return this.center;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("precision");
			baseArr.push("width");
			baseArr.push("center");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


