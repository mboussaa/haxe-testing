// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace nanotest {
	public class NanoTestAssertResult : global::haxe.lang.HxObject {
		
		public NanoTestAssertResult(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public NanoTestAssertResult(object _result, int position) {
			global::nanotest.NanoTestAssertResult.__hx_ctor_nanotest_NanoTestAssertResult(this, _result, position);
		}
		
		
		public static void __hx_ctor_nanotest_NanoTestAssertResult(global::nanotest.NanoTestAssertResult __temp_me40, object _result, int position) {
			__temp_me40.result = _result;
			__temp_me40.position = position;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::nanotest.NanoTestAssertResult(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::nanotest.NanoTestAssertResult(arr[0], ((int) (global::haxe.lang.Runtime.toInt(arr[1])) ));
			}
		}
		
		
		public object result;
		
		public int position;
		
		public virtual global::nanotest.NanoTestAssertResult label(object d) {
			unchecked {
				{
					global::nanotest.NanoTestStatus _g = ((global::nanotest.NanoTestStatus) (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(this.result, "status", 100394802, true)) ))) )[this.position]) );
					switch (_g.index) {
						case 0:
						{
							break;
						}
						
						
						case 1:
						{
							((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(this.result, "status", 100394802, true)) ))) )[this.position] = global::nanotest.NanoTestStatus.FAIL(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", global::haxe.lang.Runtime.toString(_g.@params[0])), " ["), global::Std.@string(d)), "]"), _g.@params[1]);
							break;
						}
						
						
						case 2:
						{
							((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(this.result, "status", 100394802, true)) ))) )[this.position] = global::nanotest.NanoTestStatus.ERROR(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", global::haxe.lang.Runtime.toString(_g.@params[0])), " ["), global::Std.@string(d)), "]"), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ));
							break;
						}
						
						
					}
					
				}
				
				return this;
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1257939113:
					{
						this.position = ((int) (@value) );
						return @value;
					}
					
					
					case 142895325:
					{
						this.result = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1257939113:
					{
						this.position = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 142895325:
					{
						this.result = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1873743348:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "label", 1873743348)) );
					}
					
					
					case 1257939113:
					{
						return this.position;
					}
					
					
					case 142895325:
					{
						return this.result;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1257939113:
					{
						return ((double) (this.position) );
					}
					
					
					case 142895325:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.result)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1873743348:
					{
						return this.label(dynargs[0]);
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("position");
			baseArr.push("result");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


