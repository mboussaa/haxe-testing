// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxmath.frames {
	public class Frame2Default : global::haxe.lang.HxObject, global::hxmath.frames.IFrame2 {
		
		public Frame2Default(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Frame2Default(global::hxmath.math.Vector2Default offset, global::haxe.lang.Null<double> angleDegrees, global::haxe.lang.Null<bool> isCached) {
			global::hxmath.frames.Frame2Default.__hx_ctor_hxmath_frames_Frame2Default(this, offset, angleDegrees, isCached);
		}
		
		
		public static void __hx_ctor_hxmath_frames_Frame2Default(global::hxmath.frames.Frame2Default __temp_me22, global::hxmath.math.Vector2Default offset, global::haxe.lang.Null<double> angleDegrees, global::haxe.lang.Null<bool> isCached) {
			__temp_me22.isDirty = true;
			__temp_me22.isCached = true;
			bool __temp_isCached21 = ( ( ! (isCached.hasValue) ) ? (true) : ((isCached).@value) );
			double __temp_angleDegrees20 = ( ( ! (angleDegrees.hasValue) ) ? (0.0) : ((angleDegrees).@value) );
			__temp_me22.internalOffset = ( (( offset == null )) ? (((global::hxmath.math.Vector2Default) (new global::hxmath.math.Vector2Default(0.0, 0.0)) )) : (offset) );
			__temp_me22.internalAngleDegrees = __temp_angleDegrees20;
			__temp_me22.isCached = __temp_isCached21;
			__temp_me22.isDirty = true;
			__temp_me22.internalMatrix = ((global::hxmath.math.Matrix3x2Default) (new global::hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)) );
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::hxmath.frames.Frame2Default(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			unchecked {
				return new global::hxmath.frames.Frame2Default(((global::hxmath.math.Vector2Default) (arr[0]) ), global::haxe.lang.Null<object>.ofDynamic<double>(arr[1]), global::haxe.lang.Null<object>.ofDynamic<bool>(arr[2]));
			}
		}
		
		
		
		
		
		
		
		
		public global::hxmath.math.Matrix3x2Default internalMatrix;
		
		public global::hxmath.math.Vector2Default internalOffset;
		
		public double internalAngleDegrees;
		
		public bool isCached;
		
		public bool isDirty;
		
		public virtual string toString() {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Frame2 { offset: ", global::Std.@string(this.internalOffset)), ", angleDegrees: "), global::haxe.lang.Runtime.toString(this.internalAngleDegrees)), " }");
		}
		
		
		public global::hxmath.math.Matrix3x2Default get_matrix() {
			unchecked {
				if ((  ! (this.isCached)  || this.isDirty )) {
					{
						global::hxmath.math.Matrix3x2Default matrix = this.internalMatrix;
						global::hxmath.math.Vector2Default offset = this.internalOffset;
						{
							double angle = ( ( global::Math.PI / 180 ) * this.internalAngleDegrees );
							double s = global::System.Math.Sin(((double) (angle) ));
							double c = global::System.Math.Cos(((double) (angle) ));
							matrix.a = c;
							matrix.b =  - (s) ;
							matrix.c = s;
							matrix.d = c;
						}
						
						{
							double x = offset.x;
							double y = offset.y;
							matrix.tx = x;
							matrix.ty = y;
						}
						
					}
					
					this.isDirty = false;
				}
				
				return this.internalMatrix;
			}
		}
		
		
		public global::hxmath.math.Vector2Default get_offset() {
			return this.internalOffset;
		}
		
		
		public global::hxmath.math.Vector2Default set_offset(global::hxmath.math.Vector2Default offset) {
			this.internalOffset = offset;
			this.isDirty = true;
			return offset;
		}
		
		
		public double get_angleDegrees() {
			return this.internalAngleDegrees;
		}
		
		
		public double set_angleDegrees(double angleDegrees) {
			this.internalAngleDegrees = angleDegrees;
			this.isDirty = true;
			return angleDegrees;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 409031409:
					{
						this.internalAngleDegrees = ((double) (@value) );
						return @value;
					}
					
					
					case 1031550996:
					{
						this.set_angleDegrees(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1985344456:
					{
						this.isDirty = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 157023084:
					{
						this.isCached = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 409031409:
					{
						this.internalAngleDegrees = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 86965936:
					{
						this.internalOffset = ((global::hxmath.math.Vector2Default) (@value) );
						return @value;
					}
					
					
					case 1622646110:
					{
						this.internalMatrix = ((global::hxmath.math.Matrix3x2Default) (@value) );
						return @value;
					}
					
					
					case 1031550996:
					{
						this.set_angleDegrees(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 1614780307:
					{
						this.set_offset(((global::hxmath.math.Vector2Default) (@value) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 408752657:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_angleDegrees", 408752657)) );
					}
					
					
					case 1109075101:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_angleDegrees", 1109075101)) );
					}
					
					
					case 1413785040:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_offset", 1413785040)) );
					}
					
					
					case 1355220828:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_offset", 1355220828)) );
					}
					
					
					case 743417354:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_matrix", 743417354)) );
					}
					
					
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 1985344456:
					{
						return this.isDirty;
					}
					
					
					case 157023084:
					{
						return this.isCached;
					}
					
					
					case 409031409:
					{
						return this.internalAngleDegrees;
					}
					
					
					case 86965936:
					{
						return this.internalOffset;
					}
					
					
					case 1622646110:
					{
						return this.internalMatrix;
					}
					
					
					case 1031550996:
					{
						return this.get_angleDegrees();
					}
					
					
					case 1614780307:
					{
						return this.get_offset();
					}
					
					
					case 1002976833:
					{
						return this.get_matrix();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 409031409:
					{
						return this.internalAngleDegrees;
					}
					
					
					case 1031550996:
					{
						return this.get_angleDegrees();
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 408752657:
					{
						return this.set_angleDegrees(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 1109075101:
					{
						return this.get_angleDegrees();
					}
					
					
					case 1413785040:
					{
						return this.set_offset(((global::hxmath.math.Vector2Default) (dynargs[0]) ));
					}
					
					
					case 1355220828:
					{
						return this.get_offset();
					}
					
					
					case 743417354:
					{
						return this.get_matrix();
					}
					
					
					case 946786476:
					{
						return this.toString();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("isDirty");
			baseArr.push("isCached");
			baseArr.push("internalAngleDegrees");
			baseArr.push("internalOffset");
			baseArr.push("internalMatrix");
			baseArr.push("angleDegrees");
			baseArr.push("offset");
			baseArr.push("matrix");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}


