// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxmath.frames.adapters {
	public class FlxSpriteFrame2 : global::haxe.lang.HxObject, global::hxmath.frames.IFrame2 {
		
		public FlxSpriteFrame2(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FlxSpriteFrame2(object owner) {
			global::hxmath.frames.adapters.FlxSpriteFrame2.__hx_ctor_hxmath_frames_adapters_FlxSpriteFrame2(this, owner);
		}
		
		
		public static void __hx_ctor_hxmath_frames_adapters_FlxSpriteFrame2(global::hxmath.frames.adapters.FlxSpriteFrame2 __temp_me25, object owner) {
			{
				global::hxmath.math.Matrix3x2Default this1 = null;
				this1 = new global::hxmath.math.Matrix3x2Default(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
				__temp_me25.internalMatrix = ((global::hxmath.math.Matrix3x2Default) (this1) );
			}
			
			__temp_me25.owner = owner;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::hxmath.frames.adapters.FlxSpriteFrame2(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::hxmath.frames.adapters.FlxSpriteFrame2(((object) (arr[0]) ));
		}
		
		
		public object owner;
		
		public global::hxmath.math.Matrix3x2Default internalMatrix;
		
		
		
		
		
		
		
		public global::hxmath.math.Matrix3x2Default get_matrix() {
			unchecked {
				global::hxmath.math.Matrix3x2Default matrix = this.internalMatrix;
				global::hxmath.math.Vector2Default offset = ((global::hxmath.math.Vector2Default) (new global::hxmath.math.Vector2Default(global::haxe.lang.Runtime.getField_f(this.owner, "x", 120, true), global::haxe.lang.Runtime.getField_f(this.owner, "y", 121, true))) );
				{
					double angle = ( ((double) (( global::Math.PI / 180 )) ) * ((double) (global::haxe.lang.Runtime.getField_f(this.owner, "angle", 585253843, true)) ) );
					double s = global::System.Math.Sin(((double) (angle) ));
					double c = global::System.Math.Cos(((double) (angle) ));
					matrix.a = c;
					matrix.b =  - (s) ;
					matrix.c = s;
					matrix.d = c;
				}
				
				{
					double x = offset.x;
					double y = offset.y;
					matrix.tx = x;
					matrix.ty = y;
				}
				
				return matrix;
			}
		}
		
		
		public global::hxmath.math.Vector2Default get_offset() {
			return ((global::hxmath.math.Vector2Default) (new global::hxmath.math.Vector2Default(global::haxe.lang.Runtime.getField_f(this.owner, "x", 120, true), global::haxe.lang.Runtime.getField_f(this.owner, "y", 121, true))) );
		}
		
		
		public global::hxmath.math.Vector2Default set_offset(global::hxmath.math.Vector2Default offset) {
			global::haxe.lang.Runtime.callField(this.owner, "set_x", 2049940315, new global::Array<object>(new object[]{offset.x}));
			global::haxe.lang.Runtime.callField(this.owner, "set_y", 2049940316, new global::Array<object>(new object[]{offset.y}));
			return offset;
		}
		
		
		public double get_angleDegrees() {
			return global::haxe.lang.Runtime.getField_f(this.owner, "angle", 585253843, true);
		}
		
		
		public double set_angleDegrees(double angleDegrees) {
			return ((double) (global::haxe.lang.Runtime.toDouble(global::haxe.lang.Runtime.callField(this.owner, "set_angle", 1239190582, new global::Array<object>(new object[]{angleDegrees})))) );
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1031550996:
					{
						this.set_angleDegrees(@value);
						return @value;
					}
					
					
					case 947296307:
					{
						this.owner = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1031550996:
					{
						this.set_angleDegrees(((double) (global::haxe.lang.Runtime.toDouble(@value)) ));
						return @value;
					}
					
					
					case 1614780307:
					{
						this.set_offset(((global::hxmath.math.Vector2Default) (@value) ));
						return @value;
					}
					
					
					case 1622646110:
					{
						this.internalMatrix = ((global::hxmath.math.Matrix3x2Default) (@value) );
						return @value;
					}
					
					
					case 947296307:
					{
						this.owner = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 408752657:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_angleDegrees", 408752657)) );
					}
					
					
					case 1109075101:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_angleDegrees", 1109075101)) );
					}
					
					
					case 1413785040:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_offset", 1413785040)) );
					}
					
					
					case 1355220828:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_offset", 1355220828)) );
					}
					
					
					case 743417354:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_matrix", 743417354)) );
					}
					
					
					case 1031550996:
					{
						return this.get_angleDegrees();
					}
					
					
					case 1614780307:
					{
						return this.get_offset();
					}
					
					
					case 1002976833:
					{
						return this.get_matrix();
					}
					
					
					case 1622646110:
					{
						return this.internalMatrix;
					}
					
					
					case 947296307:
					{
						return this.owner;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1031550996:
					{
						return this.get_angleDegrees();
					}
					
					
					case 947296307:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.owner)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 408752657:
					{
						return this.set_angleDegrees(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					case 1109075101:
					{
						return this.get_angleDegrees();
					}
					
					
					case 1413785040:
					{
						return this.set_offset(((global::hxmath.math.Vector2Default) (dynargs[0]) ));
					}
					
					
					case 1355220828:
					{
						return this.get_offset();
					}
					
					
					case 743417354:
					{
						return this.get_matrix();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("angleDegrees");
			baseArr.push("offset");
			baseArr.push("matrix");
			baseArr.push("internalMatrix");
			baseArr.push("owner");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


