<?php

// Generated by Haxe 3.3.0
class hxmath_math_Vector4Default {
	public function __construct($x, $y, $z, $w) {
		if(!php_Boot::$skip_constructor) {
		$this->x = $x;
		$this->y = $y;
		$this->z = $z;
		$this->w = $w;
	}}
	public $x;
	public $y;
	public $z;
	public $w;
	public function toString() {
		return "(" . _hx_string_rec($this->x, "") . ", " . _hx_string_rec($this->y, "") . ", " . _hx_string_rec($this->z, "") . ", " . _hx_string_rec($this->w, "") . ")";
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
