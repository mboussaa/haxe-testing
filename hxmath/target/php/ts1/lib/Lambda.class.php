<?php

// Generated by Haxe 3.3.0
class Lambda {
	public function __construct(){}
	static function map($it, $f) {
		$l = new HList();
		{
			$tmp = $it->iterator();
			while(true) {
				$tmp1 = !$tmp->hasNext();
				if($tmp1) {
					break;
				}
				$x = $tmp->next();
				$tmp2 = call_user_func_array($f, array($x));
				$l->add($tmp2);
				unset($x,$tmp2,$tmp1);
			}
		}
		return $l;
	}
	static function fold($it, $f, $first) {
		{
			$tmp = $it->iterator();
			while(true) {
				$tmp1 = !$tmp->hasNext();
				if($tmp1) {
					break;
				}
				$x = $tmp->next();
				$first = call_user_func_array($f, array($x, $first));
				unset($x,$tmp1);
			}
		}
		return $first;
	}
	function __toString() { return 'Lambda'; }
}
