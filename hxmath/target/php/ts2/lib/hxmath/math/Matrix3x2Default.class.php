<?php

// Generated by Haxe 3.3.0
class hxmath_math_Matrix3x2Default {
	public function __construct($a, $b, $c, $d, $tx, $ty) {
		if(!php_Boot::$skip_constructor) {
		$this->a = $a;
		$this->b = $b;
		$this->c = $c;
		$this->d = $d;
		$this->tx = $tx;
		$this->ty = $ty;
	}}
	public $a;
	public $b;
	public $c;
	public $d;
	public $tx;
	public $ty;
	public function toString() {
		return "[a: " . _hx_string_rec($this->a, "") . ", b: " . _hx_string_rec($this->b, "") . ", c: " . _hx_string_rec($this->c, "") . ", d: " . _hx_string_rec($this->d, "") . ", tx: " . _hx_string_rec($this->tx, "") . ", ty: " . _hx_string_rec($this->ty, "") . "]";
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
