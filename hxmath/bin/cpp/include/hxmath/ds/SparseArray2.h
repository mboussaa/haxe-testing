// Generated by Haxe 3.3.0
#ifndef INCLUDED_hxmath_ds_SparseArray2
#define INCLUDED_hxmath_ds_SparseArray2

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_hxmath_ds_IArray2
#include <hxmath/ds/IArray2.h>
#endif
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(hxmath,ds,DenseArray2)
HX_DECLARE_CLASS2(hxmath,ds,IArray2)
HX_DECLARE_CLASS2(hxmath,ds,SparseArray2)

namespace hxmath{
namespace ds{


class HXCPP_CLASS_ATTRIBUTES SparseArray2_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SparseArray2_obj OBJ_;
		SparseArray2_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxmath.ds.SparseArray2")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"hxmath.ds.SparseArray2"); }
		static hx::ObjectPtr< SparseArray2_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SparseArray2_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("SparseArray2","\x99","\xaf","\x3d","\x84"); }

		 ::haxe::ds::IntMap hash;
		 ::Dynamic iterator();
		::Dynamic iterator_dyn();

		Bool inBounds(Int x,Int y);
		::Dynamic inBounds_dyn();

		 ::Dynamic get(Int x,Int y);
		::Dynamic get_dyn();

		 ::Dynamic getByKey(Int key);
		::Dynamic getByKey_dyn();

		void set(Int x,Int y, ::Dynamic item);
		::Dynamic set_dyn();

		Bool exists(Int x,Int y);
		::Dynamic exists_dyn();

		Bool remove(Int x,Int y);
		::Dynamic remove_dyn();

		 ::hxmath::ds::SparseArray2 clone();
		::Dynamic clone_dyn();

		 ::hxmath::ds::DenseArray2 toDenseArray();
		::Dynamic toDenseArray_dyn();

		 ::Dynamic get_keys();
		::Dynamic get_keys_dyn();

		 ::Dynamic get_orderedKeys();
		::Dynamic get_orderedKeys_dyn();

};

} // end namespace hxmath
} // end namespace ds

#endif /* INCLUDED_hxmath_ds_SparseArray2 */ 
