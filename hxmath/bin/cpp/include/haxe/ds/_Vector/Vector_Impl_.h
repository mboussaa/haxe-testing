// Generated by Haxe 3.3.0
#ifndef INCLUDED_haxe_ds__Vector_Vector_Impl_
#define INCLUDED_haxe_ds__Vector_Vector_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(haxe,ds,_Vector,Vector_Impl_)

namespace haxe{
namespace ds{
namespace _Vector{


class HXCPP_CLASS_ATTRIBUTES Vector_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Vector_Impl__obj OBJ_;
		Vector_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ds._Vector.Vector_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxe.ds._Vector.Vector_Impl_"); }
		static hx::ObjectPtr< Vector_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Vector_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Vector_Impl_","\xc3","\xad","\x36","\x7e"); }

		static ::cpp::VirtualArray _new(Int length);
		static ::Dynamic _new_dyn();

		static  ::Dynamic get(::cpp::VirtualArray this1,Int index);
		static ::Dynamic get_dyn();

		static  ::Dynamic set(::cpp::VirtualArray this1,Int index, ::Dynamic val);
		static ::Dynamic set_dyn();

		static Int get_length(::cpp::VirtualArray this1);
		static ::Dynamic get_length_dyn();

		static void blit(::cpp::VirtualArray src,Int srcPos,::cpp::VirtualArray dest,Int destPos,Int len);
		static ::Dynamic blit_dyn();

		static ::cpp::VirtualArray toArray(::cpp::VirtualArray this1);
		static ::Dynamic toArray_dyn();

		static ::cpp::VirtualArray toData(::cpp::VirtualArray this1);
		static ::Dynamic toData_dyn();

		static ::cpp::VirtualArray fromData(::cpp::VirtualArray data);
		static ::Dynamic fromData_dyn();

		static ::cpp::VirtualArray fromArrayCopy(::cpp::VirtualArray array);
		static ::Dynamic fromArrayCopy_dyn();

		static ::cpp::VirtualArray copy(::cpp::VirtualArray this1);
		static ::Dynamic copy_dyn();

		static ::String join(::cpp::VirtualArray this1,::String sep);
		static ::Dynamic join_dyn();

		static ::cpp::VirtualArray map(::cpp::VirtualArray this1, ::Dynamic f);
		static ::Dynamic map_dyn();

		static void sort(::cpp::VirtualArray this1, ::Dynamic f);
		static ::Dynamic sort_dyn();

};

} // end namespace haxe
} // end namespace ds
} // end namespace _Vector

#endif /* INCLUDED_haxe_ds__Vector_Vector_Impl_ */ 
