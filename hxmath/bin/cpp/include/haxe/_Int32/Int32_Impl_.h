// Generated by Haxe 3.3.0
#ifndef INCLUDED_haxe__Int32_Int32_Impl_
#define INCLUDED_haxe__Int32_Int32_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,_Int32,Int32_Impl_)

namespace haxe{
namespace _Int32{


class HXCPP_CLASS_ATTRIBUTES Int32_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Int32_Impl__obj OBJ_;
		Int32_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe._Int32.Int32_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxe._Int32.Int32_Impl_"); }
		static hx::ObjectPtr< Int32_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Int32_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Int32_Impl_","\x4e","\xd6","\x96","\xc5"); }

		static Int preIncrement(Int this1);
		static ::Dynamic preIncrement_dyn();

		static Int postIncrement(Int this1);
		static ::Dynamic postIncrement_dyn();

		static Int preDecrement(Int this1);
		static ::Dynamic preDecrement_dyn();

		static Int postDecrement(Int this1);
		static ::Dynamic postDecrement_dyn();

		static Int add(Int a,Int b);
		static ::Dynamic add_dyn();

		static Int addInt(Int a,Int b);
		static ::Dynamic addInt_dyn();

		static Int sub(Int a,Int b);
		static ::Dynamic sub_dyn();

		static Int subInt(Int a,Int b);
		static ::Dynamic subInt_dyn();

		static Int intSub(Int a,Int b);
		static ::Dynamic intSub_dyn();

		static Float toFloat(Int this1);
		static ::Dynamic toFloat_dyn();

		static Int ucompare(Int a,Int b);
		static ::Dynamic ucompare_dyn();

		static Int clamp(Int x);
		static ::Dynamic clamp_dyn();

};

} // end namespace haxe
} // end namespace _Int32

#endif /* INCLUDED_haxe__Int32_Int32_Impl_ */ 
