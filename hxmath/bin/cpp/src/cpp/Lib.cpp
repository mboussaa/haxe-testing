// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif

namespace cpp{

void Lib_obj::__construct() { }

Dynamic Lib_obj::__CreateEmpty() { return new Lib_obj; }

hx::ObjectPtr< Lib_obj > Lib_obj::__new()
{
	hx::ObjectPtr< Lib_obj > _hx_result = new Lib_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Lib_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Lib_obj > _hx_result = new Lib_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Lib_obj::load(::String lib,::String prim,Int nargs){
            	HX_STACK_FRAME("cpp.Lib","load",0xd2b2dcba,"cpp.Lib.load","/usr/lib/haxe/std/cpp/Lib.hx",38,0x5e20c0c6)
            	HX_STACK_ARG(lib,"lib")
            	HX_STACK_ARG(prim,"prim")
            	HX_STACK_ARG(nargs,"nargs")
HXLINE(  38)		return ::__loadprim(lib,prim,nargs);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,load,return )

Int Lib_obj::unloadAllLibraries(){
            	HX_STACK_FRAME("cpp.Lib","unloadAllLibraries",0xe74297eb,"cpp.Lib.unloadAllLibraries","/usr/lib/haxe/std/cpp/Lib.hx",47,0x5e20c0c6)
HXLINE(  47)		return ::__hxcpp_unload_all_libraries();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,unloadAllLibraries,return )

 ::Dynamic Lib_obj::_loadPrime(::String lib,::String prim,::String signature,hx::Null< Bool >  __o_quietFail){
Bool quietFail = __o_quietFail.Default(false);
            	HX_STACK_FRAME("cpp.Lib","_loadPrime",0x4ba6888e,"cpp.Lib._loadPrime","/usr/lib/haxe/std/cpp/Lib.hx",50,0x5e20c0c6)
            	HX_STACK_ARG(lib,"lib")
            	HX_STACK_ARG(prim,"prim")
            	HX_STACK_ARG(signature,"signature")
            	HX_STACK_ARG(quietFail,"quietFail")
HXLINE(  51)		HX_VARI( ::cpp::Function<   ::hx::Object *(const char*) >,factory) = ::__hxcpp_cast_get_proc_address(lib,(prim + HX_("__prime",1f,b0,e9,32)),quietFail);
HXLINE(  53)		if (hx::IsNotNull( factory )) {
HXLINE(  55)			HX_VARI_NAME( const char*,this1,"this") = signature.__s;
HXDLIN(  55)			HX_VARI(  ::hx::Object *,inVal) = ( ( ::hx::Object *)(factory(this1)) );
HXDLIN(  55)			HX_VARI(  ::Dynamic,func) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(  56)			Bool _hx_tmp;
HXDLIN(  56)			if (hx::IsNull( func )) {
HXLINE(  56)				_hx_tmp = !(quietFail);
            			}
            			else {
HXLINE(  56)				_hx_tmp = false;
            			}
HXDLIN(  56)			if (_hx_tmp) {
HXLINE(  57)				HX_STACK_DO_THROW((((HX_("",00,00,00,00) + prim) + HX_(" does not have signature ",0c,77,54,95)) + signature));
            			}
HXLINE(  58)			return func;
            		}
HXLINE(  60)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Lib_obj,_loadPrime,return )

 ::Dynamic Lib_obj::loadLazy( ::Dynamic lib, ::Dynamic prim,Int nargs){
            	HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",69,0x5e20c0c6)
            	HX_STACK_ARG(lib,"lib")
            	HX_STACK_ARG(prim,"prim")
            	HX_STACK_ARG(nargs,"nargs")
HXLINE(  69)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  70)			return ::__loadprim(lib,prim,nargs);
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE(  72)				switch((int)(nargs)){
            					case (int)0: {
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,e) HXARGC(0)
            						void _hx_run(){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",73,0x5e20c0c6)
HXLINE(  73)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC0((void))

HXLINE(  73)						return  ::Dynamic(new _hx_Closure_1(e));
            					}
            					break;
            					case (int)2: {
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::Dynamic,e) HXARGC(2)
            						void _hx_run( ::Dynamic _1, ::Dynamic _2){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",74,0x5e20c0c6)
            							HX_STACK_ARG(_1,"_1")
            							HX_STACK_ARG(_2,"_2")
HXLINE(  74)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC2((void))

HXLINE(  74)						return  ::Dynamic(new _hx_Closure_2(e));
            					}
            					break;
            					case (int)3: {
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::Dynamic,e) HXARGC(3)
            						void _hx_run( ::Dynamic _11, ::Dynamic _21, ::Dynamic _3){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",75,0x5e20c0c6)
            							HX_STACK_ARG(_11,"_11")
            							HX_STACK_ARG(_21,"_21")
            							HX_STACK_ARG(_3,"_3")
HXLINE(  75)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC3((void))

HXLINE(  75)						return  ::Dynamic(new _hx_Closure_3(e));
            					}
            					break;
            					case (int)4: {
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::Dynamic,e) HXARGC(4)
            						void _hx_run( ::Dynamic _12, ::Dynamic _22, ::Dynamic _31, ::Dynamic _4){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",76,0x5e20c0c6)
            							HX_STACK_ARG(_12,"_12")
            							HX_STACK_ARG(_22,"_22")
            							HX_STACK_ARG(_31,"_31")
            							HX_STACK_ARG(_4,"_4")
HXLINE(  76)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC4((void))

HXLINE(  76)						return  ::Dynamic(new _hx_Closure_4(e));
            					}
            					break;
            					case (int)5: {
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::Dynamic,e) HXARGC(5)
            						void _hx_run( ::Dynamic _13, ::Dynamic _23, ::Dynamic _32, ::Dynamic _41, ::Dynamic _5){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",77,0x5e20c0c6)
            							HX_STACK_ARG(_13,"_13")
            							HX_STACK_ARG(_23,"_23")
            							HX_STACK_ARG(_32,"_32")
            							HX_STACK_ARG(_41,"_41")
            							HX_STACK_ARG(_5,"_5")
HXLINE(  77)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC5((void))

HXLINE(  77)						return  ::Dynamic(new _hx_Closure_5(e));
            					}
            					break;
            					default:{
            						HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,e) HXARGC(1)
            						void _hx_run( ::Dynamic _14){
            							HX_STACK_FRAME("cpp.Lib","loadLazy",0x865efe4e,"cpp.Lib.loadLazy","/usr/lib/haxe/std/cpp/Lib.hx",78,0x5e20c0c6)
            							HX_STACK_ARG(_14,"_14")
HXLINE(  78)							HX_STACK_DO_THROW(e);
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE(  78)						return  ::Dynamic(new _hx_Closure_0(e));
            					}
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(  69)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,loadLazy,return )

void Lib_obj::rethrow( ::Dynamic inExp){
            	HX_STACK_FRAME("cpp.Lib","rethrow",0x3bf8427f,"cpp.Lib.rethrow","/usr/lib/haxe/std/cpp/Lib.hx",84,0x5e20c0c6)
            	HX_STACK_ARG(inExp,"inExp")
HXLINE(  84)		HX_STACK_DO_THROW(inExp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,rethrow,(void))

::String Lib_obj::stringReference( ::haxe::io::Bytes inBytes){
            	HX_STACK_FRAME("cpp.Lib","stringReference",0x72c1faa6,"cpp.Lib.stringReference","/usr/lib/haxe/std/cpp/Lib.hx",87,0x5e20c0c6)
            	HX_STACK_ARG(inBytes,"inBytes")
HXLINE(  88)		HX_VARI( ::String,result) = HX_("",00,00,00,00);
HXLINE(  89)		::__hxcpp_string_of_bytes(inBytes->b,result,(int)0,(int)0,true);
HXLINE(  90)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,stringReference,return )

void Lib_obj::pushDllSearchPath(::String inPath){
            	HX_STACK_FRAME("cpp.Lib","pushDllSearchPath",0x96ed5ce3,"cpp.Lib.pushDllSearchPath","/usr/lib/haxe/std/cpp/Lib.hx",94,0x5e20c0c6)
            	HX_STACK_ARG(inPath,"inPath")
HXLINE(  94)		::__hxcpp_push_dll_path(inPath);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,pushDllSearchPath,(void))

::String Lib_obj::getDllExtension(){
            	HX_STACK_FRAME("cpp.Lib","getDllExtension",0x63a7ca9d,"cpp.Lib.getDllExtension","/usr/lib/haxe/std/cpp/Lib.hx",97,0x5e20c0c6)
HXLINE(  97)		return ::__hxcpp_get_dll_extension();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,getDllExtension,return )

::String Lib_obj::getBinDirectory(){
            	HX_STACK_FRAME("cpp.Lib","getBinDirectory",0x0956fc48,"cpp.Lib.getBinDirectory","/usr/lib/haxe/std/cpp/Lib.hx",100,0x5e20c0c6)
HXLINE( 100)		return ::__hxcpp_get_bin_dir();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,getBinDirectory,return )

 ::haxe::io::Bytes Lib_obj::bytesReference(::String s){
            	HX_STACK_FRAME("cpp.Lib","bytesReference",0x89d6bd74,"cpp.Lib.bytesReference","/usr/lib/haxe/std/cpp/Lib.hx",108,0x5e20c0c6)
            	HX_STACK_ARG(s,"s")
HXLINE( 109)		HX_VARI( ::Array< unsigned char >,bytes) = ::Array_obj< unsigned char >::__new();
HXLINE( 110)		bytes->__unsafeStringReference(s);
HXLINE( 111)		return ::haxe::io::Bytes_obj::ofData(bytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,bytesReference,return )

void Lib_obj::print( ::Dynamic v){
            	HX_STACK_FRAME("cpp.Lib","print",0xd96a5719,"cpp.Lib.print","/usr/lib/haxe/std/cpp/Lib.hx",118,0x5e20c0c6)
            	HX_STACK_ARG(v,"v")
HXLINE( 118)		::__hxcpp_print(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,print,(void))

 ::Dynamic Lib_obj::haxeToNeko( ::Dynamic v){
            	HX_STACK_FRAME("cpp.Lib","haxeToNeko",0x02e89710,"cpp.Lib.haxeToNeko","/usr/lib/haxe/std/cpp/Lib.hx",126,0x5e20c0c6)
            	HX_STACK_ARG(v,"v")
HXLINE( 126)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,haxeToNeko,return )

 ::Dynamic Lib_obj::nekoToHaxe( ::Dynamic v){
            	HX_STACK_FRAME("cpp.Lib","nekoToHaxe",0x84b99cd0,"cpp.Lib.nekoToHaxe","/usr/lib/haxe/std/cpp/Lib.hx",134,0x5e20c0c6)
            	HX_STACK_ARG(v,"v")
HXLINE( 134)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,nekoToHaxe,return )

void Lib_obj::println( ::Dynamic v){
            	HX_STACK_FRAME("cpp.Lib","println",0xca016ddb,"cpp.Lib.println","/usr/lib/haxe/std/cpp/Lib.hx",140,0x5e20c0c6)
            	HX_STACK_ARG(v,"v")
HXLINE( 140)		::__hxcpp_println(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,println,(void))

void Lib_obj::setFloatFormat(::String inFormat){
            	HX_STACK_FRAME("cpp.Lib","setFloatFormat",0x5765e505,"cpp.Lib.setFloatFormat","/usr/lib/haxe/std/cpp/Lib.hx",145,0x5e20c0c6)
            	HX_STACK_ARG(inFormat,"inFormat")
HXLINE( 145)		::__hxcpp_set_float_format(inFormat);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,setFloatFormat,(void))


Lib_obj::Lib_obj()
{
}

bool Lib_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"print") ) { outValue = print_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rethrow") ) { outValue = rethrow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"println") ) { outValue = println_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"loadLazy") ) { outValue = loadLazy_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_loadPrime") ) { outValue = _loadPrime_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"haxeToNeko") ) { outValue = haxeToNeko_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nekoToHaxe") ) { outValue = nekoToHaxe_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bytesReference") ) { outValue = bytesReference_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloatFormat") ) { outValue = setFloatFormat_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"stringReference") ) { outValue = stringReference_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDllExtension") ) { outValue = getDllExtension_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBinDirectory") ) { outValue = getBinDirectory_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"pushDllSearchPath") ) { outValue = pushDllSearchPath_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"unloadAllLibraries") ) { outValue = unloadAllLibraries_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Lib_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Lib_obj_sStaticStorageInfo = 0;
#endif

static void Lib_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Lib_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Lib_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Lib_obj::__mClass,"__mClass");
};

#endif

hx::Class Lib_obj::__mClass;

static ::String Lib_obj_sStaticFields[] = {
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("unloadAllLibraries","\x57","\x7a","\x5f","\x3a"),
	HX_HCSTRING("_loadPrime","\xfa","\x1e","\x65","\x3f"),
	HX_HCSTRING("loadLazy","\xba","\xe1","\x4c","\xb8"),
	HX_HCSTRING("rethrow","\x93","\xb0","\x2a","\xf6"),
	HX_HCSTRING("stringReference","\xba","\x9c","\xee","\xe4"),
	HX_HCSTRING("pushDllSearchPath","\xf7","\xab","\x15","\x67"),
	HX_HCSTRING("getDllExtension","\xb1","\x6c","\xd4","\xd5"),
	HX_HCSTRING("getBinDirectory","\x5c","\x9e","\x83","\x7b"),
	HX_HCSTRING("bytesReference","\xe0","\xf9","\xde","\x7e"),
	HX_HCSTRING("print","\x2d","\x58","\x8b","\xc8"),
	HX_HCSTRING("haxeToNeko","\x7c","\x2d","\xa7","\xf6"),
	HX_HCSTRING("nekoToHaxe","\x3c","\x33","\x78","\x78"),
	HX_HCSTRING("println","\xef","\xdb","\x33","\x84"),
	HX_HCSTRING("setFloatFormat","\x71","\x21","\x6e","\x4c"),
	::String(null())
};

void Lib_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("cpp.Lib","\x5a","\x26","\x48","\x78");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Lib_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Lib_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Lib_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Lib_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Lib_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Lib_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Lib_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cpp
