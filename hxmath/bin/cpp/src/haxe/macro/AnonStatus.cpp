// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_macro_AnonStatus
#include <haxe/macro/AnonStatus.h>
#endif
namespace haxe{
namespace macro{

::haxe::macro::AnonStatus AnonStatus_obj::AAbstractStatics( ::Dynamic t)
{
	return hx::CreateEnum< AnonStatus_obj >(HX_("AAbstractStatics",02,dc,de,ce),6,1)->_hx_init(0,t);
}

::haxe::macro::AnonStatus AnonStatus_obj::AClassStatics( ::Dynamic t)
{
	return hx::CreateEnum< AnonStatus_obj >(HX_("AClassStatics",8e,0c,d8,9c),4,1)->_hx_init(0,t);
}

::haxe::macro::AnonStatus AnonStatus_obj::AClosed;

::haxe::macro::AnonStatus AnonStatus_obj::AConst;

::haxe::macro::AnonStatus AnonStatus_obj::AEnumStatics( ::Dynamic t)
{
	return hx::CreateEnum< AnonStatus_obj >(HX_("AEnumStatics",43,38,13,d4),5,1)->_hx_init(0,t);
}

::haxe::macro::AnonStatus AnonStatus_obj::AExtend( ::Dynamic tl)
{
	return hx::CreateEnum< AnonStatus_obj >(HX_("AExtend",fb,6c,a2,8a),3,1)->_hx_init(0,tl);
}

::haxe::macro::AnonStatus AnonStatus_obj::AOpened;

bool AnonStatus_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AAbstractStatics",02,dc,de,ce)) { outValue = AnonStatus_obj::AAbstractStatics_dyn(); return true; }
	if (inName==HX_("AClassStatics",8e,0c,d8,9c)) { outValue = AnonStatus_obj::AClassStatics_dyn(); return true; }
	if (inName==HX_("AClosed",cd,44,d9,d1)) { outValue = AnonStatus_obj::AClosed; return true; }
	if (inName==HX_("AConst",62,dd,bd,da)) { outValue = AnonStatus_obj::AConst; return true; }
	if (inName==HX_("AEnumStatics",43,38,13,d4)) { outValue = AnonStatus_obj::AEnumStatics_dyn(); return true; }
	if (inName==HX_("AExtend",fb,6c,a2,8a)) { outValue = AnonStatus_obj::AExtend_dyn(); return true; }
	if (inName==HX_("AOpened",ca,fd,1b,e5)) { outValue = AnonStatus_obj::AOpened; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(AnonStatus_obj)

int AnonStatus_obj::__FindIndex(::String inName)
{
	if (inName==HX_("AAbstractStatics",02,dc,de,ce)) return 6;
	if (inName==HX_("AClassStatics",8e,0c,d8,9c)) return 4;
	if (inName==HX_("AClosed",cd,44,d9,d1)) return 0;
	if (inName==HX_("AConst",62,dd,bd,da)) return 2;
	if (inName==HX_("AEnumStatics",43,38,13,d4)) return 5;
	if (inName==HX_("AExtend",fb,6c,a2,8a)) return 3;
	if (inName==HX_("AOpened",ca,fd,1b,e5)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(AnonStatus_obj,AAbstractStatics,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(AnonStatus_obj,AClassStatics,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(AnonStatus_obj,AEnumStatics,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(AnonStatus_obj,AExtend,return)

int AnonStatus_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("AAbstractStatics",02,dc,de,ce)) return 1;
	if (inName==HX_("AClassStatics",8e,0c,d8,9c)) return 1;
	if (inName==HX_("AClosed",cd,44,d9,d1)) return 0;
	if (inName==HX_("AConst",62,dd,bd,da)) return 0;
	if (inName==HX_("AEnumStatics",43,38,13,d4)) return 1;
	if (inName==HX_("AExtend",fb,6c,a2,8a)) return 1;
	if (inName==HX_("AOpened",ca,fd,1b,e5)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val AnonStatus_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AAbstractStatics",02,dc,de,ce)) return AAbstractStatics_dyn();
	if (inName==HX_("AClassStatics",8e,0c,d8,9c)) return AClassStatics_dyn();
	if (inName==HX_("AClosed",cd,44,d9,d1)) return AClosed;
	if (inName==HX_("AConst",62,dd,bd,da)) return AConst;
	if (inName==HX_("AEnumStatics",43,38,13,d4)) return AEnumStatics_dyn();
	if (inName==HX_("AExtend",fb,6c,a2,8a)) return AExtend_dyn();
	if (inName==HX_("AOpened",ca,fd,1b,e5)) return AOpened;
	return super::__Field(inName,inCallProp);
}

static ::String AnonStatus_obj_sStaticFields[] = {
	HX_("AClosed",cd,44,d9,d1),
	HX_("AOpened",ca,fd,1b,e5),
	HX_("AConst",62,dd,bd,da),
	HX_("AExtend",fb,6c,a2,8a),
	HX_("AClassStatics",8e,0c,d8,9c),
	HX_("AEnumStatics",43,38,13,d4),
	HX_("AAbstractStatics",02,dc,de,ce),
	::String(null())
};

static void AnonStatus_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AnonStatus_obj::AClosed,"AClosed");
	HX_MARK_MEMBER_NAME(AnonStatus_obj::AConst,"AConst");
	HX_MARK_MEMBER_NAME(AnonStatus_obj::AOpened,"AOpened");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AnonStatus_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AnonStatus_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(AnonStatus_obj::AClosed,"AClosed");
	HX_VISIT_MEMBER_NAME(AnonStatus_obj::AConst,"AConst");
	HX_VISIT_MEMBER_NAME(AnonStatus_obj::AOpened,"AOpened");
};
#endif

hx::Class AnonStatus_obj::__mClass;

Dynamic __Create_AnonStatus_obj() { return new AnonStatus_obj; }

void AnonStatus_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("haxe.macro.AnonStatus","\x28","\xe2","\xfe","\xc2"), hx::TCanCast< AnonStatus_obj >,AnonStatus_obj_sStaticFields,0,
	&__Create_AnonStatus_obj, &__Create,
	&super::__SGetClass(), &CreateAnonStatus_obj, AnonStatus_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , AnonStatus_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &AnonStatus_obj::__GetStatic;
}

void AnonStatus_obj::__boot()
{
AClosed = hx::CreateEnum< AnonStatus_obj >(HX_HCSTRING("AClosed","\xcd","\x44","\xd9","\xd1"),0,0);
AConst = hx::CreateEnum< AnonStatus_obj >(HX_HCSTRING("AConst","\x62","\xdd","\xbd","\xda"),2,0);
AOpened = hx::CreateEnum< AnonStatus_obj >(HX_HCSTRING("AOpened","\xca","\xfd","\x1b","\xe5"),1,0);
}


} // end namespace haxe
} // end namespace macro
