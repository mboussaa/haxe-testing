// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_macro_MethodKind
#include <haxe/macro/MethodKind.h>
#endif
namespace haxe{
namespace macro{

::haxe::macro::MethodKind MethodKind_obj::MethDynamic;

::haxe::macro::MethodKind MethodKind_obj::MethInline;

::haxe::macro::MethodKind MethodKind_obj::MethMacro;

::haxe::macro::MethodKind MethodKind_obj::MethNormal;

bool MethodKind_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MethDynamic",f3,45,90,75)) { outValue = MethodKind_obj::MethDynamic; return true; }
	if (inName==HX_("MethInline",65,ae,0c,ad)) { outValue = MethodKind_obj::MethInline; return true; }
	if (inName==HX_("MethMacro",80,d1,9e,06)) { outValue = MethodKind_obj::MethMacro; return true; }
	if (inName==HX_("MethNormal",33,56,36,44)) { outValue = MethodKind_obj::MethNormal; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(MethodKind_obj)

int MethodKind_obj::__FindIndex(::String inName)
{
	if (inName==HX_("MethDynamic",f3,45,90,75)) return 2;
	if (inName==HX_("MethInline",65,ae,0c,ad)) return 1;
	if (inName==HX_("MethMacro",80,d1,9e,06)) return 3;
	if (inName==HX_("MethNormal",33,56,36,44)) return 0;
	return super::__FindIndex(inName);
}

int MethodKind_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("MethDynamic",f3,45,90,75)) return 0;
	if (inName==HX_("MethInline",65,ae,0c,ad)) return 0;
	if (inName==HX_("MethMacro",80,d1,9e,06)) return 0;
	if (inName==HX_("MethNormal",33,56,36,44)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val MethodKind_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MethDynamic",f3,45,90,75)) return MethDynamic;
	if (inName==HX_("MethInline",65,ae,0c,ad)) return MethInline;
	if (inName==HX_("MethMacro",80,d1,9e,06)) return MethMacro;
	if (inName==HX_("MethNormal",33,56,36,44)) return MethNormal;
	return super::__Field(inName,inCallProp);
}

static ::String MethodKind_obj_sStaticFields[] = {
	HX_("MethNormal",33,56,36,44),
	HX_("MethInline",65,ae,0c,ad),
	HX_("MethDynamic",f3,45,90,75),
	HX_("MethMacro",80,d1,9e,06),
	::String(null())
};

static void MethodKind_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MethodKind_obj::MethDynamic,"MethDynamic");
	HX_MARK_MEMBER_NAME(MethodKind_obj::MethInline,"MethInline");
	HX_MARK_MEMBER_NAME(MethodKind_obj::MethMacro,"MethMacro");
	HX_MARK_MEMBER_NAME(MethodKind_obj::MethNormal,"MethNormal");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MethodKind_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MethodKind_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MethodKind_obj::MethDynamic,"MethDynamic");
	HX_VISIT_MEMBER_NAME(MethodKind_obj::MethInline,"MethInline");
	HX_VISIT_MEMBER_NAME(MethodKind_obj::MethMacro,"MethMacro");
	HX_VISIT_MEMBER_NAME(MethodKind_obj::MethNormal,"MethNormal");
};
#endif

hx::Class MethodKind_obj::__mClass;

Dynamic __Create_MethodKind_obj() { return new MethodKind_obj; }

void MethodKind_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("haxe.macro.MethodKind","\x5f","\x03","\x7d","\x6d"), hx::TCanCast< MethodKind_obj >,MethodKind_obj_sStaticFields,0,
	&__Create_MethodKind_obj, &__Create,
	&super::__SGetClass(), &CreateMethodKind_obj, MethodKind_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , MethodKind_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &MethodKind_obj::__GetStatic;
}

void MethodKind_obj::__boot()
{
MethDynamic = hx::CreateEnum< MethodKind_obj >(HX_HCSTRING("MethDynamic","\xf3","\x45","\x90","\x75"),2,0);
MethInline = hx::CreateEnum< MethodKind_obj >(HX_HCSTRING("MethInline","\x65","\xae","\x0c","\xad"),1,0);
MethMacro = hx::CreateEnum< MethodKind_obj >(HX_HCSTRING("MethMacro","\x80","\xd1","\x9e","\x06"),3,0);
MethNormal = hx::CreateEnum< MethodKind_obj >(HX_HCSTRING("MethNormal","\x33","\x56","\x36","\x44"),0,0);
}


} // end namespace haxe
} // end namespace macro
