// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_macro_VarAccess
#include <haxe/macro/VarAccess.h>
#endif
namespace haxe{
namespace macro{

::haxe::macro::VarAccess VarAccess_obj::AccCall;

::haxe::macro::VarAccess VarAccess_obj::AccInline;

::haxe::macro::VarAccess VarAccess_obj::AccNever;

::haxe::macro::VarAccess VarAccess_obj::AccNo;

::haxe::macro::VarAccess VarAccess_obj::AccNormal;

::haxe::macro::VarAccess VarAccess_obj::AccRequire(::String r,::String msg)
{
	return hx::CreateEnum< VarAccess_obj >(HX_("AccRequire",44,3c,9f,96),6,2)->_hx_init(0,r)->_hx_init(1,msg);
}

::haxe::macro::VarAccess VarAccess_obj::AccResolve;

bool VarAccess_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AccCall",5f,92,86,51)) { outValue = VarAccess_obj::AccCall; return true; }
	if (inName==HX_("AccInline",5a,f6,6e,90)) { outValue = VarAccess_obj::AccInline; return true; }
	if (inName==HX_("AccNever",ab,4d,4e,5c)) { outValue = VarAccess_obj::AccNever; return true; }
	if (inName==HX_("AccNo",c2,37,c7,ae)) { outValue = VarAccess_obj::AccNo; return true; }
	if (inName==HX_("AccNormal",28,9e,98,27)) { outValue = VarAccess_obj::AccNormal; return true; }
	if (inName==HX_("AccRequire",44,3c,9f,96)) { outValue = VarAccess_obj::AccRequire_dyn(); return true; }
	if (inName==HX_("AccResolve",cb,67,77,b9)) { outValue = VarAccess_obj::AccResolve; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(VarAccess_obj)

int VarAccess_obj::__FindIndex(::String inName)
{
	if (inName==HX_("AccCall",5f,92,86,51)) return 4;
	if (inName==HX_("AccInline",5a,f6,6e,90)) return 5;
	if (inName==HX_("AccNever",ab,4d,4e,5c)) return 2;
	if (inName==HX_("AccNo",c2,37,c7,ae)) return 1;
	if (inName==HX_("AccNormal",28,9e,98,27)) return 0;
	if (inName==HX_("AccRequire",44,3c,9f,96)) return 6;
	if (inName==HX_("AccResolve",cb,67,77,b9)) return 3;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(VarAccess_obj,AccRequire,return)

int VarAccess_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("AccCall",5f,92,86,51)) return 0;
	if (inName==HX_("AccInline",5a,f6,6e,90)) return 0;
	if (inName==HX_("AccNever",ab,4d,4e,5c)) return 0;
	if (inName==HX_("AccNo",c2,37,c7,ae)) return 0;
	if (inName==HX_("AccNormal",28,9e,98,27)) return 0;
	if (inName==HX_("AccRequire",44,3c,9f,96)) return 2;
	if (inName==HX_("AccResolve",cb,67,77,b9)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val VarAccess_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AccCall",5f,92,86,51)) return AccCall;
	if (inName==HX_("AccInline",5a,f6,6e,90)) return AccInline;
	if (inName==HX_("AccNever",ab,4d,4e,5c)) return AccNever;
	if (inName==HX_("AccNo",c2,37,c7,ae)) return AccNo;
	if (inName==HX_("AccNormal",28,9e,98,27)) return AccNormal;
	if (inName==HX_("AccRequire",44,3c,9f,96)) return AccRequire_dyn();
	if (inName==HX_("AccResolve",cb,67,77,b9)) return AccResolve;
	return super::__Field(inName,inCallProp);
}

static ::String VarAccess_obj_sStaticFields[] = {
	HX_("AccNormal",28,9e,98,27),
	HX_("AccNo",c2,37,c7,ae),
	HX_("AccNever",ab,4d,4e,5c),
	HX_("AccResolve",cb,67,77,b9),
	HX_("AccCall",5f,92,86,51),
	HX_("AccInline",5a,f6,6e,90),
	HX_("AccRequire",44,3c,9f,96),
	::String(null())
};

static void VarAccess_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccCall,"AccCall");
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccInline,"AccInline");
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccNever,"AccNever");
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccNo,"AccNo");
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccNormal,"AccNormal");
	HX_MARK_MEMBER_NAME(VarAccess_obj::AccResolve,"AccResolve");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VarAccess_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VarAccess_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccCall,"AccCall");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccInline,"AccInline");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccNever,"AccNever");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccNo,"AccNo");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccNormal,"AccNormal");
	HX_VISIT_MEMBER_NAME(VarAccess_obj::AccResolve,"AccResolve");
};
#endif

hx::Class VarAccess_obj::__mClass;

Dynamic __Create_VarAccess_obj() { return new VarAccess_obj; }

void VarAccess_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("haxe.macro.VarAccess","\xa1","\x34","\x3a","\xc5"), hx::TCanCast< VarAccess_obj >,VarAccess_obj_sStaticFields,0,
	&__Create_VarAccess_obj, &__Create,
	&super::__SGetClass(), &CreateVarAccess_obj, VarAccess_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , VarAccess_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &VarAccess_obj::__GetStatic;
}

void VarAccess_obj::__boot()
{
AccCall = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccCall","\x5f","\x92","\x86","\x51"),4,0);
AccInline = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccInline","\x5a","\xf6","\x6e","\x90"),5,0);
AccNever = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccNever","\xab","\x4d","\x4e","\x5c"),2,0);
AccNo = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccNo","\xc2","\x37","\xc7","\xae"),1,0);
AccNormal = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccNormal","\x28","\x9e","\x98","\x27"),0,0);
AccResolve = hx::CreateEnum< VarAccess_obj >(HX_HCSTRING("AccResolve","\xcb","\x67","\x77","\xb9"),3,0);
}


} // end namespace haxe
} // end namespace macro
