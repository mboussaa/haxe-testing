// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_macro_ClassKind
#include <haxe/macro/ClassKind.h>
#endif
#ifndef INCLUDED_haxe_macro_Type
#include <haxe/macro/Type.h>
#endif
namespace haxe{
namespace macro{

::haxe::macro::ClassKind ClassKind_obj::KAbstractImpl( ::Dynamic a)
{
	return hx::CreateEnum< ClassKind_obj >(HX_("KAbstractImpl",cd,95,78,37),7,1)->_hx_init(0,a);
}

::haxe::macro::ClassKind ClassKind_obj::KExpr( ::Dynamic expr)
{
	return hx::CreateEnum< ClassKind_obj >(HX_("KExpr",20,ab,04,5d),3,1)->_hx_init(0,expr);
}

::haxe::macro::ClassKind ClassKind_obj::KExtension( ::Dynamic cl,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< ClassKind_obj >(HX_("KExtension",b4,91,b4,dc),2,2)->_hx_init(0,cl)->_hx_init(1,params);
}

::haxe::macro::ClassKind ClassKind_obj::KGeneric;

::haxe::macro::ClassKind ClassKind_obj::KGenericBuild;

::haxe::macro::ClassKind ClassKind_obj::KGenericInstance( ::Dynamic cl,::Array< ::Dynamic> params)
{
	return hx::CreateEnum< ClassKind_obj >(HX_("KGenericInstance",c1,d0,08,6d),5,2)->_hx_init(0,cl)->_hx_init(1,params);
}

::haxe::macro::ClassKind ClassKind_obj::KMacroType;

::haxe::macro::ClassKind ClassKind_obj::KNormal;

::haxe::macro::ClassKind ClassKind_obj::KTypeParameter(::Array< ::Dynamic> constraints)
{
	return hx::CreateEnum< ClassKind_obj >(HX_("KTypeParameter",44,b8,9e,28),1,1)->_hx_init(0,constraints);
}

bool ClassKind_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("KAbstractImpl",cd,95,78,37)) { outValue = ClassKind_obj::KAbstractImpl_dyn(); return true; }
	if (inName==HX_("KExpr",20,ab,04,5d)) { outValue = ClassKind_obj::KExpr_dyn(); return true; }
	if (inName==HX_("KExtension",b4,91,b4,dc)) { outValue = ClassKind_obj::KExtension_dyn(); return true; }
	if (inName==HX_("KGeneric",0c,09,74,45)) { outValue = ClassKind_obj::KGeneric; return true; }
	if (inName==HX_("KGenericBuild",82,f6,ab,c6)) { outValue = ClassKind_obj::KGenericBuild; return true; }
	if (inName==HX_("KGenericInstance",c1,d0,08,6d)) { outValue = ClassKind_obj::KGenericInstance_dyn(); return true; }
	if (inName==HX_("KMacroType",1b,83,63,3f)) { outValue = ClassKind_obj::KMacroType; return true; }
	if (inName==HX_("KNormal",d2,b0,c7,93)) { outValue = ClassKind_obj::KNormal; return true; }
	if (inName==HX_("KTypeParameter",44,b8,9e,28)) { outValue = ClassKind_obj::KTypeParameter_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(ClassKind_obj)

int ClassKind_obj::__FindIndex(::String inName)
{
	if (inName==HX_("KAbstractImpl",cd,95,78,37)) return 7;
	if (inName==HX_("KExpr",20,ab,04,5d)) return 3;
	if (inName==HX_("KExtension",b4,91,b4,dc)) return 2;
	if (inName==HX_("KGeneric",0c,09,74,45)) return 4;
	if (inName==HX_("KGenericBuild",82,f6,ab,c6)) return 8;
	if (inName==HX_("KGenericInstance",c1,d0,08,6d)) return 5;
	if (inName==HX_("KMacroType",1b,83,63,3f)) return 6;
	if (inName==HX_("KNormal",d2,b0,c7,93)) return 0;
	if (inName==HX_("KTypeParameter",44,b8,9e,28)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ClassKind_obj,KAbstractImpl,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ClassKind_obj,KExpr,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(ClassKind_obj,KExtension,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(ClassKind_obj,KGenericInstance,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(ClassKind_obj,KTypeParameter,return)

int ClassKind_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("KAbstractImpl",cd,95,78,37)) return 1;
	if (inName==HX_("KExpr",20,ab,04,5d)) return 1;
	if (inName==HX_("KExtension",b4,91,b4,dc)) return 2;
	if (inName==HX_("KGeneric",0c,09,74,45)) return 0;
	if (inName==HX_("KGenericBuild",82,f6,ab,c6)) return 0;
	if (inName==HX_("KGenericInstance",c1,d0,08,6d)) return 2;
	if (inName==HX_("KMacroType",1b,83,63,3f)) return 0;
	if (inName==HX_("KNormal",d2,b0,c7,93)) return 0;
	if (inName==HX_("KTypeParameter",44,b8,9e,28)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val ClassKind_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("KAbstractImpl",cd,95,78,37)) return KAbstractImpl_dyn();
	if (inName==HX_("KExpr",20,ab,04,5d)) return KExpr_dyn();
	if (inName==HX_("KExtension",b4,91,b4,dc)) return KExtension_dyn();
	if (inName==HX_("KGeneric",0c,09,74,45)) return KGeneric;
	if (inName==HX_("KGenericBuild",82,f6,ab,c6)) return KGenericBuild;
	if (inName==HX_("KGenericInstance",c1,d0,08,6d)) return KGenericInstance_dyn();
	if (inName==HX_("KMacroType",1b,83,63,3f)) return KMacroType;
	if (inName==HX_("KNormal",d2,b0,c7,93)) return KNormal;
	if (inName==HX_("KTypeParameter",44,b8,9e,28)) return KTypeParameter_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String ClassKind_obj_sStaticFields[] = {
	HX_("KNormal",d2,b0,c7,93),
	HX_("KTypeParameter",44,b8,9e,28),
	HX_("KExtension",b4,91,b4,dc),
	HX_("KExpr",20,ab,04,5d),
	HX_("KGeneric",0c,09,74,45),
	HX_("KGenericInstance",c1,d0,08,6d),
	HX_("KMacroType",1b,83,63,3f),
	HX_("KAbstractImpl",cd,95,78,37),
	HX_("KGenericBuild",82,f6,ab,c6),
	::String(null())
};

static void ClassKind_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ClassKind_obj::KGeneric,"KGeneric");
	HX_MARK_MEMBER_NAME(ClassKind_obj::KGenericBuild,"KGenericBuild");
	HX_MARK_MEMBER_NAME(ClassKind_obj::KMacroType,"KMacroType");
	HX_MARK_MEMBER_NAME(ClassKind_obj::KNormal,"KNormal");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ClassKind_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ClassKind_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ClassKind_obj::KGeneric,"KGeneric");
	HX_VISIT_MEMBER_NAME(ClassKind_obj::KGenericBuild,"KGenericBuild");
	HX_VISIT_MEMBER_NAME(ClassKind_obj::KMacroType,"KMacroType");
	HX_VISIT_MEMBER_NAME(ClassKind_obj::KNormal,"KNormal");
};
#endif

hx::Class ClassKind_obj::__mClass;

Dynamic __Create_ClassKind_obj() { return new ClassKind_obj; }

void ClassKind_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("haxe.macro.ClassKind","\x62","\xa6","\xf4","\xf3"), hx::TCanCast< ClassKind_obj >,ClassKind_obj_sStaticFields,0,
	&__Create_ClassKind_obj, &__Create,
	&super::__SGetClass(), &CreateClassKind_obj, ClassKind_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , ClassKind_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &ClassKind_obj::__GetStatic;
}

void ClassKind_obj::__boot()
{
KGeneric = hx::CreateEnum< ClassKind_obj >(HX_HCSTRING("KGeneric","\x0c","\x09","\x74","\x45"),4,0);
KGenericBuild = hx::CreateEnum< ClassKind_obj >(HX_HCSTRING("KGenericBuild","\x82","\xf6","\xab","\xc6"),8,0);
KMacroType = hx::CreateEnum< ClassKind_obj >(HX_HCSTRING("KMacroType","\x1b","\x83","\x63","\x3f"),6,0);
KNormal = hx::CreateEnum< ClassKind_obj >(HX_HCSTRING("KNormal","\xd2","\xb0","\xc7","\x93"),0,0);
}


} // end namespace haxe
} // end namespace macro
