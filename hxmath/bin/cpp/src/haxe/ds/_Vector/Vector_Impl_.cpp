// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ds__Vector_Vector_Impl_
#include <haxe/ds/_Vector/Vector_Impl_.h>
#endif

namespace haxe{
namespace ds{
namespace _Vector{

void Vector_Impl__obj::__construct() { }

Dynamic Vector_Impl__obj::__CreateEmpty() { return new Vector_Impl__obj; }

hx::ObjectPtr< Vector_Impl__obj > Vector_Impl__obj::__new()
{
	hx::ObjectPtr< Vector_Impl__obj > _hx_result = new Vector_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Vector_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Vector_Impl__obj > _hx_result = new Vector_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

::cpp::VirtualArray Vector_Impl__obj::_new(Int length){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","_new",0x3159a4a9,"haxe.ds._Vector.Vector_Impl_._new","/usr/lib/haxe/std/haxe/ds/Vector.hx",58,0x0acfeb83)
            	HX_STACK_ARG(length,"length")
HXLINE(  58)		HX_VARI_NAME( ::cpp::VirtualArray,this1,"this") = ::cpp::VirtualArray_obj::__new();
HXLINE(  71)		_hx_array_set_size_exact(this1,length);
HXLINE(  58)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,_new,return )

 ::Dynamic Vector_Impl__obj::get(::cpp::VirtualArray this1,Int index){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","get",0x33e7724e,"haxe.ds._Vector.Vector_Impl_.get","/usr/lib/haxe/std/haxe/ds/Vector.hx",88,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(index,"index")
HXLINE(  88)		return _hx_array_unsafe_get(this1,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,get,return )

 ::Dynamic Vector_Impl__obj::set(::cpp::VirtualArray this1,Int index, ::Dynamic val){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","set",0x33f08d5a,"haxe.ds._Vector.Vector_Impl_.set","/usr/lib/haxe/std/haxe/ds/Vector.hx",104,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(val,"val")
HXLINE( 104)		return this1->__unsafe_set(index,val);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,set,return )

Int Vector_Impl__obj::get_length(::cpp::VirtualArray this1){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","get_length",0x18a839f7,"haxe.ds._Vector.Vector_Impl_.get_length","/usr/lib/haxe/std/haxe/ds/Vector.hx",127,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 127)		return this1->get_length();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,get_length,return )

void Vector_Impl__obj::blit(::cpp::VirtualArray src,Int srcPos,::cpp::VirtualArray dest,Int destPos,Int len){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","blit",0x3353c77d,"haxe.ds._Vector.Vector_Impl_.blit","/usr/lib/haxe/std/haxe/ds/Vector.hx",147,0x0acfeb83)
            	HX_STACK_ARG(src,"src")
            	HX_STACK_ARG(srcPos,"srcPos")
            	HX_STACK_ARG(dest,"dest")
            	HX_STACK_ARG(destPos,"destPos")
            	HX_STACK_ARG(len,"len")
HXLINE( 147)		 ::Dynamic(dest->__Field(HX_("blit",35,38,19,41),hx::paccDynamic))(destPos,src,srcPos,len);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Vector_Impl__obj,blit,(void))

::cpp::VirtualArray Vector_Impl__obj::toArray(::cpp::VirtualArray this1){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","toArray",0x5533e7d6,"haxe.ds._Vector.Vector_Impl_.toArray","/usr/lib/haxe/std/haxe/ds/Vector.hx",161,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 161)		return this1->copy();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,toArray,return )

::cpp::VirtualArray Vector_Impl__obj::toData(::cpp::VirtualArray this1){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","toData",0x598fb28d,"haxe.ds._Vector.Vector_Impl_.toData","/usr/lib/haxe/std/haxe/ds/Vector.hx",183,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 183)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,toData,return )

::cpp::VirtualArray Vector_Impl__obj::fromData(::cpp::VirtualArray data){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","fromData",0xf936f7fc,"haxe.ds._Vector.Vector_Impl_.fromData","/usr/lib/haxe/std/haxe/ds/Vector.hx",193,0x0acfeb83)
            	HX_STACK_ARG(data,"data")
HXLINE( 193)		return data;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,fromData,return )

::cpp::VirtualArray Vector_Impl__obj::fromArrayCopy(::cpp::VirtualArray array){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","fromArrayCopy",0xa38d1adc,"haxe.ds._Vector.Vector_Impl_.fromArrayCopy","/usr/lib/haxe/std/haxe/ds/Vector.hx",217,0x0acfeb83)
            	HX_STACK_ARG(array,"array")
HXLINE( 217)		return array->copy();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,fromArrayCopy,return )

::cpp::VirtualArray Vector_Impl__obj::copy(::cpp::VirtualArray this1){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","copy",0x33ff4afd,"haxe.ds._Vector.Vector_Impl_.copy","/usr/lib/haxe/std/haxe/ds/Vector.hx",234,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
HXLINE( 235)		HX_VARI( Int,length) = this1->get_length();
HXDLIN( 235)		HX_VARI_NAME( ::cpp::VirtualArray,this2,"this") = ::cpp::VirtualArray_obj::__new();
HXDLIN( 235)		_hx_array_set_size_exact(this2,length);
HXDLIN( 235)		HX_VARI( ::cpp::VirtualArray,r) = this2;
HXLINE( 236)		{
HXLINE( 236)			HX_VARI( Int,len) = this1->get_length();
HXDLIN( 236)			 ::Dynamic(r->__Field(HX_("blit",35,38,19,41),hx::paccDynamic))((int)0,this1,(int)0,len);
            		}
HXLINE( 237)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,copy,return )

::String Vector_Impl__obj::join(::cpp::VirtualArray this1,::String sep){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","join",0x389fc332,"haxe.ds._Vector.Vector_Impl_.join","/usr/lib/haxe/std/haxe/ds/Vector.hx",255,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(sep,"sep")
HXLINE( 255)		return this1->join(sep);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,join,return )

::cpp::VirtualArray Vector_Impl__obj::map(::cpp::VirtualArray this1, ::Dynamic f){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","map",0x33ebfc54,"haxe.ds._Vector.Vector_Impl_.map","/usr/lib/haxe/std/haxe/ds/Vector.hx",277,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE( 278)		HX_VARI( Int,length) = this1->get_length();
HXLINE( 279)		HX_VARI_NAME( ::cpp::VirtualArray,this2,"this") = ::cpp::VirtualArray_obj::__new();
HXDLIN( 279)		_hx_array_set_size_exact(this2,length);
HXDLIN( 279)		HX_VARI( ::cpp::VirtualArray,r) = this2;
HXLINE( 282)		{
HXLINE( 282)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 282)			while((_g1 < length)){
HXLINE( 282)				HX_VARI( Int,i) = _g1++;
HXLINE( 283)				HX_VARI(  ::Dynamic,v) = f(_hx_array_unsafe_get(this1,i));
HXLINE( 284)				r->__unsafe_set(i,v);
            			}
            		}
HXLINE( 286)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,map,return )

void Vector_Impl__obj::sort(::cpp::VirtualArray this1, ::Dynamic f){
            	HX_STACK_FRAME("haxe.ds._Vector.Vector_Impl_","sort",0x3e92b6a6,"haxe.ds._Vector.Vector_Impl_.sort","/usr/lib/haxe/std/haxe/ds/Vector.hx",305,0x0acfeb83)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(f,"f")
HXLINE( 305)		this1->sort(f);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,sort,(void))


Vector_Impl__obj::Vector_Impl__obj()
{
}

bool Vector_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blit") ) { outValue = blit_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sort") ) { outValue = sort_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toData") ) { outValue = toData_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fromData") ) { outValue = fromData_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromArrayCopy") ) { outValue = fromArrayCopy_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Vector_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Vector_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Vector_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Vector_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Vector_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Vector_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Vector_Impl__obj::__mClass;

static ::String Vector_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("blit","\x35","\x38","\x19","\x41"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("toData","\x45","\xc1","\x1c","\x78"),
	HX_HCSTRING("fromData","\xb4","\x24","\x2f","\xa0"),
	HX_HCSTRING("fromArrayCopy","\x24","\xd3","\x1f","\xff"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("join","\xea","\x33","\x65","\x46"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("sort","\x5e","\x27","\x58","\x4c"),
	::String(null())
};

void Vector_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.ds._Vector.Vector_Impl_","\x26","\x16","\x34","\xb9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vector_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Vector_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Vector_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Vector_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Vector_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vector_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vector_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ds
} // end namespace _Vector
