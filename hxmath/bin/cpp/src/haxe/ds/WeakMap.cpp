// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_WeakMap
#include <haxe/ds/WeakMap.h>
#endif

namespace haxe{
namespace ds{

void WeakMap_obj::__construct(){
            	HX_STACK_FRAME("haxe.ds.WeakMap","new",0x58f74bbf,"haxe.ds.WeakMap.new","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",50,0x6affb14f)
            	HX_STACK_THIS(this)
            	}

Dynamic WeakMap_obj::__CreateEmpty() { return new WeakMap_obj; }

hx::ObjectPtr< WeakMap_obj > WeakMap_obj::__new()
{
	hx::ObjectPtr< WeakMap_obj > _hx_result = new WeakMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic WeakMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WeakMap_obj > _hx_result = new WeakMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

static ::haxe::IMap_obj _hx_haxe_ds_WeakMap__hx_haxe_IMap= {
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::haxe::ds::WeakMap_obj::get,
	( void (hx::Object::*)( ::Dynamic, ::Dynamic))&::haxe::ds::WeakMap_obj::set,
	( Bool (hx::Object::*)( ::Dynamic))&::haxe::ds::WeakMap_obj::exists,
	( Bool (hx::Object::*)( ::Dynamic))&::haxe::ds::WeakMap_obj::remove,
	(  ::Dynamic (hx::Object::*)())&::haxe::ds::WeakMap_obj::keys,
	(  ::Dynamic (hx::Object::*)())&::haxe::ds::WeakMap_obj::iterator,
	( ::String (hx::Object::*)())&::haxe::ds::WeakMap_obj::toString,
};

void *WeakMap_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x09c2bd39: return &_hx_haxe_ds_WeakMap__hx_haxe_IMap;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void WeakMap_obj::set( ::Dynamic key, ::Dynamic value){
            	HX_STACK_FRAME("haxe.ds.WeakMap","set",0x58fb1701,"haxe.ds.WeakMap.set","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",53,0x6affb14f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(value,"value")
HXLINE(  53)		::__object_hash_set(this->h,key,value,true);
            	}


HX_DEFINE_DYNAMIC_FUNC2(WeakMap_obj,set,(void))

 ::Dynamic WeakMap_obj::get( ::Dynamic key){
            	HX_STACK_FRAME("haxe.ds.WeakMap","get",0x58f1fbf5,"haxe.ds.WeakMap.get","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",57,0x6affb14f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
HXLINE(  57)		return ::__object_hash_get(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(WeakMap_obj,get,return )

Bool WeakMap_obj::exists( ::Dynamic key){
            	HX_STACK_FRAME("haxe.ds.WeakMap","exists",0xbb26c7dd,"haxe.ds.WeakMap.exists","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",61,0x6affb14f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
HXLINE(  61)		return ::__object_hash_exists(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(WeakMap_obj,exists,return )

Bool WeakMap_obj::remove( ::Dynamic key){
            	HX_STACK_FRAME("haxe.ds.WeakMap","remove",0xffcf4645,"haxe.ds.WeakMap.remove","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",65,0x6affb14f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
HXLINE(  65)		return ::__object_hash_remove(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(WeakMap_obj,remove,return )

 ::Dynamic WeakMap_obj::keys(){
            	HX_STACK_FRAME("haxe.ds.WeakMap","keys",0x7d6f59b5,"haxe.ds.WeakMap.keys","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",68,0x6affb14f)
            	HX_STACK_THIS(this)
HXLINE(  69)		HX_VARI( ::cpp::VirtualArray,a) = ::__object_hash_keys(this->h);
HXLINE(  70)		return a->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WeakMap_obj,keys,return )

 ::Dynamic WeakMap_obj::iterator(){
            	HX_STACK_FRAME("haxe.ds.WeakMap","iterator",0xed60362f,"haxe.ds.WeakMap.iterator","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",73,0x6affb14f)
            	HX_STACK_THIS(this)
HXLINE(  74)		HX_VARI( ::cpp::VirtualArray,a) = ::__object_hash_values(this->h);
HXLINE(  75)		return a->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WeakMap_obj,iterator,return )

::String WeakMap_obj::toString(){
            	HX_STACK_FRAME("haxe.ds.WeakMap","toString",0x9234bced,"haxe.ds.WeakMap.toString","/usr/lib/haxe/std/cpp/_std/haxe/ds/WeakMap.hx",79,0x6affb14f)
            	HX_STACK_THIS(this)
HXLINE(  79)		return ::__object_hash_to_string(this->h);
            	}


HX_DEFINE_DYNAMIC_FUNC0(WeakMap_obj,toString,return )


WeakMap_obj::WeakMap_obj()
{
}

void WeakMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(WeakMap);
	HX_MARK_MEMBER_NAME(h,"h");
	HX_MARK_END_CLASS();
}

void WeakMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(h,"h");
}

hx::Val WeakMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"h") ) { return hx::Val( h); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return hx::Val( keys_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { return hx::Val( exists_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val WeakMap_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"h") ) { h=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void WeakMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("h","\x68","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo WeakMap_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(WeakMap_obj,h),HX_HCSTRING("h","\x68","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *WeakMap_obj_sStaticStorageInfo = 0;
#endif

static ::String WeakMap_obj_sMemberFields[] = {
	HX_HCSTRING("h","\x68","\x00","\x00","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void WeakMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WeakMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WeakMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WeakMap_obj::__mClass,"__mClass");
};

#endif

hx::Class WeakMap_obj::__mClass;

void WeakMap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.ds.WeakMap","\x4d","\x00","\xe1","\xdf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = WeakMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WeakMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WeakMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WeakMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WeakMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WeakMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ds
