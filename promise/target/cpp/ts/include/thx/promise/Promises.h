// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_promise_Promises
#define INCLUDED_thx_promise_Promises

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,promise,Future)
HX_DECLARE_CLASS2(thx,promise,Promises)

namespace thx{
namespace promise{


class HXCPP_CLASS_ATTRIBUTES Promises_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Promises_obj OBJ_;
		Promises_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.promise.Promises")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.promise.Promises"); }
		static hx::ObjectPtr< Promises_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Promises_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Promises","\x98","\xd6","\x5b","\xce"); }

		static  ::thx::promise::Future par( ::Dynamic f, ::thx::promise::Future p1, ::thx::promise::Future p2);
		static ::Dynamic par_dyn();

		static  ::thx::promise::Future par3( ::Dynamic f, ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3);
		static ::Dynamic par3_dyn();

		static  ::thx::promise::Future par4( ::Dynamic f, ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4);
		static ::Dynamic par4_dyn();

		static  ::thx::promise::Future par5( ::Dynamic f, ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4, ::thx::promise::Future p5);
		static ::Dynamic par5_dyn();

		static  ::thx::promise::Future par6( ::Dynamic f, ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4, ::thx::promise::Future p5, ::thx::promise::Future p6);
		static ::Dynamic par6_dyn();

		static  ::thx::promise::Future join( ::thx::promise::Future p1, ::thx::promise::Future p2);
		static ::Dynamic join_dyn();

		static  ::thx::promise::Future join2( ::thx::promise::Future p1, ::thx::promise::Future p2);
		static ::Dynamic join2_dyn();

		static  ::thx::promise::Future join3( ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3);
		static ::Dynamic join3_dyn();

		static  ::thx::promise::Future join4( ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4);
		static ::Dynamic join4_dyn();

		static  ::thx::promise::Future join5( ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4, ::thx::promise::Future p5);
		static ::Dynamic join5_dyn();

		static  ::thx::promise::Future join6( ::thx::promise::Future p1, ::thx::promise::Future p2, ::thx::promise::Future p3, ::thx::promise::Future p4, ::thx::promise::Future p5, ::thx::promise::Future p6);
		static ::Dynamic join6_dyn();

		static  ::thx::promise::Future log( ::thx::promise::Future promise,::String prefix);
		static ::Dynamic log_dyn();

};

} // end namespace thx
} // end namespace promise

#endif /* INCLUDED_thx_promise_Promises */ 
