// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_promise_Future
#include <thx/promise/Future.h>
#endif
#ifndef INCLUDED_thx_promise_FutureTuple2
#include <thx/promise/FutureTuple2.h>
#endif
#ifndef INCLUDED_thx_promise_Futures
#include <thx/promise/Futures.h>
#endif

namespace thx{
namespace promise{

void FutureTuple2_obj::__construct() { }

Dynamic FutureTuple2_obj::__CreateEmpty() { return new FutureTuple2_obj; }

hx::ObjectPtr< FutureTuple2_obj > FutureTuple2_obj::__new()
{
	hx::ObjectPtr< FutureTuple2_obj > _hx_result = new FutureTuple2_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic FutureTuple2_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FutureTuple2_obj > _hx_result = new FutureTuple2_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::thx::promise::Future FutureTuple2_obj::join( ::thx::promise::Future p1, ::thx::promise::Future p2){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::thx::promise::Future,p2, ::thx::promise::Future,p1) HXARGC(1)
            		void _hx_run( ::Dynamic callback){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            			void _hx_run( ::Dynamic t){
            				HX_STACK_FRAME("thx.promise.FutureTuple2","join",0x8393300e,"thx.promise.FutureTuple2.join","thx/promise/Future.hx",261,0xf68a81fc)
            				HX_STACK_ARG(t,"t")
HXLINE( 261)				HX_VARI_NAME(  ::Dynamic,this1,"this") = t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic);
HXDLIN( 261)				callback( ::Dynamic(hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("_0",f1,52,00,00), ::Dynamic(this1->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)))
            					->setFixed(1,HX_("_1",f2,52,00,00), ::Dynamic(this1->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)))
            					->setFixed(2,HX_("_2",f3,52,00,00), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)))));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACK_FRAME("thx.promise.FutureTuple2","join",0x8393300e,"thx.promise.FutureTuple2.join","thx/promise/Future.hx",260,0xf68a81fc)
            			HX_STACK_ARG(callback,"callback")
HXLINE( 260)			::thx::promise::Futures_obj::join(p1,p2)->then( ::Dynamic(new _hx_Closure_0(callback)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.promise.FutureTuple2","join",0x8393300e,"thx.promise.FutureTuple2.join","thx/promise/Future.hx",259,0xf68a81fc)
            	HX_STACK_ARG(p1,"p1")
            	HX_STACK_ARG(p2,"p2")
HXLINE( 259)		return ::thx::promise::Future_obj::create( ::Dynamic(new _hx_Closure_1(p2,p1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FutureTuple2_obj,join,return )

 ::thx::promise::Future FutureTuple2_obj::mapTuple( ::thx::promise::Future future, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.promise.FutureTuple2","mapTuple",0x1bb1e9f0,"thx.promise.FutureTuple2.mapTuple","thx/promise/Future.hx",264,0xf68a81fc)
            			HX_STACK_ARG(t,"t")
HXLINE( 264)			return callback( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.promise.FutureTuple2","mapTuple",0x1bb1e9f0,"thx.promise.FutureTuple2.mapTuple","thx/promise/Future.hx",264,0xf68a81fc)
            	HX_STACK_ARG(future,"future")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 264)		return future->map( ::Dynamic(new _hx_Closure_0(callback)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FutureTuple2_obj,mapTuple,return )

 ::thx::promise::Future FutureTuple2_obj::mapTupleAsync( ::thx::promise::Future future, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(2)
            		void _hx_run( ::Dynamic t, ::Dynamic cb){
            			HX_STACK_FRAME("thx.promise.FutureTuple2","mapTupleAsync",0xb8d37f2c,"thx.promise.FutureTuple2.mapTupleAsync","thx/promise/Future.hx",267,0xf68a81fc)
            			HX_STACK_ARG(t,"t")
            			HX_STACK_ARG(cb,"cb")
HXLINE( 267)			callback( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)),cb);
HXDLIN( 267)			return;
            		}
            		HX_END_LOCAL_FUNC2((void))

            	HX_STACK_FRAME("thx.promise.FutureTuple2","mapTupleAsync",0xb8d37f2c,"thx.promise.FutureTuple2.mapTupleAsync","thx/promise/Future.hx",267,0xf68a81fc)
            	HX_STACK_ARG(future,"future")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 267)		return future->mapAsync( ::Dynamic(new _hx_Closure_0(callback)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FutureTuple2_obj,mapTupleAsync,return )

 ::thx::promise::Future FutureTuple2_obj::mapTupleFuture( ::thx::promise::Future future, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            		 ::thx::promise::Future _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.promise.FutureTuple2","mapTupleFuture",0x23890a53,"thx.promise.FutureTuple2.mapTupleFuture","thx/promise/Future.hx",270,0xf68a81fc)
            			HX_STACK_ARG(t,"t")
HXLINE( 270)			return ( ( ::thx::promise::Future)(callback( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)))) );
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.promise.FutureTuple2","mapTupleFuture",0x23890a53,"thx.promise.FutureTuple2.mapTupleFuture","thx/promise/Future.hx",270,0xf68a81fc)
            	HX_STACK_ARG(future,"future")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 270)		return future->flatMap( ::Dynamic(new _hx_Closure_0(callback)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FutureTuple2_obj,mapTupleFuture,return )

 ::thx::promise::Future FutureTuple2_obj::tuple( ::thx::promise::Future future, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            		void _hx_run( ::Dynamic t){
            			HX_STACK_FRAME("thx.promise.FutureTuple2","tuple",0x63353f64,"thx.promise.FutureTuple2.tuple","thx/promise/Future.hx",273,0xf68a81fc)
            			HX_STACK_ARG(t,"t")
HXLINE( 273)			callback( ::Dynamic(t->__Field(HX_("_0",f1,52,00,00),hx::paccDynamic)), ::Dynamic(t->__Field(HX_("_1",f2,52,00,00),hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACK_FRAME("thx.promise.FutureTuple2","tuple",0x63353f64,"thx.promise.FutureTuple2.tuple","thx/promise/Future.hx",273,0xf68a81fc)
            	HX_STACK_ARG(future,"future")
            	HX_STACK_ARG(callback,"callback")
HXLINE( 273)		return future->then( ::Dynamic(new _hx_Closure_0(callback)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FutureTuple2_obj,tuple,return )


FutureTuple2_obj::FutureTuple2_obj()
{
}

bool FutureTuple2_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"tuple") ) { outValue = tuple_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"mapTuple") ) { outValue = mapTuple_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mapTupleAsync") ) { outValue = mapTupleAsync_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"mapTupleFuture") ) { outValue = mapTupleFuture_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FutureTuple2_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FutureTuple2_obj_sStaticStorageInfo = 0;
#endif

static void FutureTuple2_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FutureTuple2_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FutureTuple2_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FutureTuple2_obj::__mClass,"__mClass");
};

#endif

hx::Class FutureTuple2_obj::__mClass;

static ::String FutureTuple2_obj_sStaticFields[] = {
	HX_HCSTRING("join","\xea","\x33","\x65","\x46"),
	HX_HCSTRING("mapTuple","\xcc","\x0b","\x69","\x8f"),
	HX_HCSTRING("mapTupleAsync","\xd0","\x1f","\x28","\x2b"),
	HX_HCSTRING("mapTupleFuture","\x2f","\xf9","\x40","\xbb"),
	HX_HCSTRING("tuple","\x08","\x9c","\x26","\x18"),
	::String(null())
};

void FutureTuple2_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.promise.FutureTuple2","\xca","\xd6","\x2f","\x58");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FutureTuple2_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FutureTuple2_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FutureTuple2_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FutureTuple2_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FutureTuple2_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FutureTuple2_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FutureTuple2_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace promise
