// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx__Timestamp_Timestamp_Impl_
#define INCLUDED_thx__Timestamp_Timestamp_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Date)
HX_DECLARE_CLASS1(thx,TimePeriod)
HX_DECLARE_CLASS2(thx,_Timestamp,Timestamp_Impl_)

namespace thx{
namespace _Timestamp{


class HXCPP_CLASS_ATTRIBUTES Timestamp_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Timestamp_Impl__obj OBJ_;
		Timestamp_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx._Timestamp.Timestamp_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx._Timestamp.Timestamp_Impl_"); }
		static hx::ObjectPtr< Timestamp_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Timestamp_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Timestamp_Impl_","\xd6","\x5d","\xac","\x2a"); }

		static Float create(Int year, ::Dynamic month, ::Dynamic day, ::Dynamic hour, ::Dynamic minute, ::Dynamic second);
		static ::Dynamic create_dyn();

		static Float now();
		static ::Dynamic now_dyn();

		static Float fromDate( ::Date d);
		static ::Dynamic fromDate_dyn();

		static Float fromString(::String s);
		static ::Dynamic fromString_dyn();

		static  ::Date toDate(Float this1);
		static ::Dynamic toDate_dyn();

		static ::String toString(Float this1);
		static ::Dynamic toString_dyn();

		static Float snapNext(Float this1,::hx::EnumBase period);
		static ::Dynamic snapNext_dyn();

		static Float snapPrev(Float this1,::hx::EnumBase period);
		static ::Dynamic snapPrev_dyn();

		static Float snapTo(Float this1,::hx::EnumBase period);
		static ::Dynamic snapTo_dyn();

		static Float r(Float t,Float v);
		static ::Dynamic r_dyn();

		static Float f(Float t,Float v);
		static ::Dynamic f_dyn();

		static Float c(Float t,Float v);
		static ::Dynamic c_dyn();

};

} // end namespace thx
} // end namespace _Timestamp

#endif /* INCLUDED_thx__Timestamp_Timestamp_Impl_ */ 
