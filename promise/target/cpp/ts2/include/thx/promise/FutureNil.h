// Generated by Haxe 3.3.0
#ifndef INCLUDED_thx_promise_FutureNil
#define INCLUDED_thx_promise_FutureNil

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(thx,promise,Future)
HX_DECLARE_CLASS2(thx,promise,FutureNil)

namespace thx{
namespace promise{


class HXCPP_CLASS_ATTRIBUTES FutureNil_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FutureNil_obj OBJ_;
		FutureNil_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="thx.promise.FutureNil")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"thx.promise.FutureNil"); }
		static hx::ObjectPtr< FutureNil_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FutureNil_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("FutureNil","\x2e","\x1f","\x38","\x58"); }

		static  ::thx::promise::Future join( ::thx::promise::Future p1, ::thx::promise::Future p2);
		static ::Dynamic join_dyn();

		static  ::thx::promise::Future nil( ::thx::promise::Future p);
		static ::Dynamic nil_dyn();

};

} // end namespace thx
} // end namespace promise

#endif /* INCLUDED_thx_promise_FutureNil */ 
