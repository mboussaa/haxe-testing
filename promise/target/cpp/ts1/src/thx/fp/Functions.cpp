// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_thx_fp_Functions
#include <thx/fp/Functions.h>
#endif

namespace thx{
namespace fp{

void Functions_obj::__construct() { }

Dynamic Functions_obj::__CreateEmpty() { return new Functions_obj; }

hx::ObjectPtr< Functions_obj > Functions_obj::__new()
{
	hx::ObjectPtr< Functions_obj > _hx_result = new Functions_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Functions_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Functions_obj > _hx_result = new Functions_obj();
	_hx_result->__construct();
	return _hx_result;
}

 ::Dynamic Functions_obj::_hx_const( ::Dynamic b){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,b) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic a){
            			HX_STACK_FRAME("thx.fp.Functions","const",0x3822f176,"thx.fp.Functions.const","thx/fp/Functions.hx",9,0x1d708fbd)
            			HX_STACK_ARG(a,"a")
HXLINE(   9)			return b;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.fp.Functions","const",0x3822f176,"thx.fp.Functions.const","thx/fp/Functions.hx",9,0x1d708fbd)
            	HX_STACK_ARG(b,"b")
HXLINE(   9)		return  ::Dynamic(new _hx_Closure_0(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions_obj,_hx_const,return )

 ::Dynamic Functions_obj::flip( ::Dynamic f){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,f) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic b){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,b) HXARGC(1)
            			 ::Dynamic _hx_run( ::Dynamic a){
            				HX_STACK_FRAME("thx.fp.Functions","flip",0x1dc6fdfa,"thx.fp.Functions.flip","thx/fp/Functions.hx",13,0x1d708fbd)
            				HX_STACK_ARG(a,"a")
HXLINE(  13)				 ::Dynamic _hx_tmp = f(a);
HXDLIN(  13)				return _hx_tmp(b);
            			}
            			HX_END_LOCAL_FUNC1(return)

            			HX_STACK_FRAME("thx.fp.Functions","flip",0x1dc6fdfa,"thx.fp.Functions.flip","thx/fp/Functions.hx",13,0x1d708fbd)
            			HX_STACK_ARG(b,"b")
HXLINE(  13)			return  ::Dynamic(new _hx_Closure_0(f,b));
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACK_FRAME("thx.fp.Functions","flip",0x1dc6fdfa,"thx.fp.Functions.flip","thx/fp/Functions.hx",12,0x1d708fbd)
            	HX_STACK_ARG(f,"f")
HXLINE(  12)		return  ::Dynamic(new _hx_Closure_1(f));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Functions_obj,flip,return )


Functions_obj::Functions_obj()
{
}

bool Functions_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"flip") ) { outValue = flip_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"const") ) { outValue = _hx_const_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Functions_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Functions_obj_sStaticStorageInfo = 0;
#endif

static void Functions_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Functions_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Functions_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Functions_obj::__mClass,"__mClass");
};

#endif

hx::Class Functions_obj::__mClass;

static ::String Functions_obj_sStaticFields[] = {
	HX_HCSTRING("const","\x63","\xf9","\x5d","\x4a"),
	HX_HCSTRING("flip","\xad","\x12","\xbe","\x43"),
	::String(null())
};

void Functions_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("thx.fp.Functions","\x41","\x38","\xad","\x08");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Functions_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Functions_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Functions_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Functions_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Functions_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Functions_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Functions_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace thx
} // end namespace fp
