// Generated by Haxe 3.3.0
package thx.promise._Promise;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Promise_Impl__always_119__Fun<T> extends haxe.lang.Function
{
	public Promise_Impl__always_119__Fun(haxe.lang.Function handler, haxe.lang.Function cb)
	{
		//line 120 "/shared/promise/src/thx/promise/Promise.hx"
		super(1, 0);
		//line 120 "/shared/promise/src/thx/promise/Promise.hx"
		this.handler = handler;
		//line 120 "/shared/promise/src/thx/promise/Promise.hx"
		this.cb = cb;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 119 "/shared/promise/src/thx/promise/Promise.hx"
		thx.Either v = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((thx.Either) (((java.lang.Object) (__fn_float1) )) )) : (((thx.Either) (__fn_dyn1) )) );
		//line 120 "/shared/promise/src/thx/promise/Promise.hx"
		try 
		{
			//line 121 "/shared/promise/src/thx/promise/Promise.hx"
			this.handler.__hx_invoke0_o();
			//line 122 "/shared/promise/src/thx/promise/Promise.hx"
			this.cb.__hx_invoke1_o(0.0, v);
		}
		catch (java.lang.Throwable __temp_catchallException1)
		{
			//line 120 "/shared/promise/src/thx/promise/Promise.hx"
			haxe.lang.Exceptions.setException(__temp_catchallException1);
			//line 124 "/shared/promise/src/thx/promise/Promise.hx"
			java.lang.Object __temp_catchall2 = __temp_catchallException1;
			//line 124 "/shared/promise/src/thx/promise/Promise.hx"
			if (( __temp_catchall2 instanceof haxe.lang.HaxeException )) 
			{
				//line 124 "/shared/promise/src/thx/promise/Promise.hx"
				__temp_catchall2 = ((haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
			}
			
			//line 124 "/shared/promise/src/thx/promise/Promise.hx"
			{
				//line 124 "/shared/promise/src/thx/promise/Promise.hx"
				java.lang.Object e = __temp_catchall2;
				//line 124 "/shared/promise/src/thx/promise/Promise.hx"
				this.cb.__hx_invoke1_o(0.0, thx.Either.Left(thx.Error.fromDynamic(e, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise._Promise.Promise_Impl_", "Promise.hx", "always"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (124) )) )}))));
			}
			
		}
		
		
		//line 120 "/shared/promise/src/thx/promise/Promise.hx"
		return null;
	}
	
	
	public haxe.lang.Function handler;
	
	public haxe.lang.Function cb;
	
}


