// Generated by Haxe 3.3.0
package thx.promise;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestTryPromise extends haxe.lang.HxObject
{
	public TestTryPromise(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestTryPromise(int i)
	{
		//line 10 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		thx.promise.TestTryPromise.__hx_ctor_thx_promise_TestTryPromise(this, i);
	}
	
	
	public static void __hx_ctor_thx_promise_TestTryPromise(thx.promise.TestTryPromise __temp_me130, int i)
	{
		//line 11 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		__temp_me130.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		return new thx.promise.TestTryPromise(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		return new thx.promise.TestTryPromise(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testTryCreate()
	{
		//line 15 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 15 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 15 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 15 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 16 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.success(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.create(((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryCreate_16__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryCreate_16__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryCreate_16__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryCreate_16__Fun) (new thx.promise.TestTryPromise_testTryCreate_16__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryCreate_17__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryCreate_17__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryCreate_17__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryCreate_17__Fun) (new thx.promise.TestTryPromise_testTryCreate_17__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryCreate_18__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryCreate_18__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryCreate_18__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryCreate_18__Fun) (new thx.promise.TestTryPromise_testTryCreate_18__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryEitherSuccess()
	{
		//line 23 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 23 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 23 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 23 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 24 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			haxe.lang.Function done = ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) );
			//line 25 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.either(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryEitherSuccess_27__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryEitherSuccess_27__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryEitherSuccess_27__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryEitherSuccess_27__Fun) (new thx.promise.TestTryPromise_testTryEitherSuccess_27__Fun()) )) )) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryEitherSuccess_28__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryEitherSuccess_28__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryEitherSuccess_28__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryEitherSuccess_28__Fun) (new thx.promise.TestTryPromise_testTryEitherSuccess_28__Fun()) )) )) ))) ).then(new thx.promise.TestTryPromise_testTryEitherSuccess_30__Fun(done));
		}
		
	}
	
	
	public void testTryEitherFailure()
	{
		//line 40 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 40 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 40 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 40 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 41 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			haxe.lang.Function done = ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) );
			//line 42 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.either(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.fail(haxe.lang.Runtime.toString("no go"), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise.TestTryPromise", "TestTryPromise.hx", "testTryEitherFailure"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (42) )) )})) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryEitherFailure_44__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryEitherFailure_44__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryEitherFailure_44__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryEitherFailure_44__Fun) (new thx.promise.TestTryPromise_testTryEitherFailure_44__Fun()) )) )) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryEitherFailure_45__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryEitherFailure_45__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryEitherFailure_45__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryEitherFailure_45__Fun) (new thx.promise.TestTryPromise_testTryEitherFailure_45__Fun()) )) )) ))) ).then(new thx.promise.TestTryPromise_testTryEitherFailure_47__Fun(done));
		}
		
	}
	
	
	public void testTrySuccess()
	{
		//line 57 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 57 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 57 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 57 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 58 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.success(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.success(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTrySuccess_59__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTrySuccess_59__Fun.__hx_current) : (thx.promise.TestTryPromise_testTrySuccess_59__Fun.__hx_current = ((thx.promise.TestTryPromise_testTrySuccess_59__Fun) (new thx.promise.TestTryPromise_testTrySuccess_59__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTrySuccess_60__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTrySuccess_60__Fun.__hx_current) : (thx.promise.TestTryPromise_testTrySuccess_60__Fun.__hx_current = ((thx.promise.TestTryPromise_testTrySuccess_60__Fun) (new thx.promise.TestTryPromise_testTrySuccess_60__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTrySuccess_61__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTrySuccess_61__Fun.__hx_current) : (thx.promise.TestTryPromise_testTrySuccess_61__Fun.__hx_current = ((thx.promise.TestTryPromise_testTrySuccess_61__Fun) (new thx.promise.TestTryPromise_testTrySuccess_61__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryReject()
	{
		//line 66 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 66 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 66 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 66 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 67 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.success(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.fail(haxe.lang.Runtime.toString("nops"), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise.TestTryPromise", "TestTryPromise.hx", "testTryReject"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (67) )) )})) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryReject_68__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryReject_68__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryReject_68__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryReject_68__Fun) (new thx.promise.TestTryPromise_testTryReject_68__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryReject_69__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryReject_69__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryReject_69__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryReject_69__Fun) (new thx.promise.TestTryPromise_testTryReject_69__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryReject_70__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryReject_70__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryReject_70__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryReject_70__Fun) (new thx.promise.TestTryPromise_testTryReject_70__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryAlways()
	{
		//line 75 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 75 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 75 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 75 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 76 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryAlways_77__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryAlways_77__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryAlways_77__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryAlways_77__Fun) (new thx.promise.TestTryPromise_testTryAlways_77__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryAlways_78__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryAlways_78__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryAlways_78__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryAlways_78__Fun) (new thx.promise.TestTryPromise_testTryAlways_78__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryThrowFailure()
	{
		//line 83 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 83 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 83 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 83 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 84 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise.Future<thx.Either> _e = ((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.fail(haxe.lang.Runtime.toString("meh"), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise.TestTryPromise", "TestTryPromise.hx", "testTryThrowFailure"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (84) )) )})) ))) );
			//line 84 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			utest.Assert.raises(new thx.promise.TestTryPromise_testTryThrowFailure_84__Fun(_e), thx.Error.class, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise.TestTryPromise", "TestTryPromise.hx", "testTryThrowFailure"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (84) )) )}));
		}
		
	}
	
	
	public void testTryMap()
	{
		//line 88 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 88 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 88 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 88 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 89 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.map(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryMap_90__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryMap_90__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryMap_90__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryMap_90__Fun) (new thx.promise.TestTryPromise_testTryMap_90__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryMap_91__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryMap_91__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryMap_91__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryMap_91__Fun) (new thx.promise.TestTryPromise_testTryMap_91__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryFlatMap()
	{
		//line 96 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 96 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 96 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 96 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 97 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.flatMapEither(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMap_98__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMap_98__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMap_98__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMap_98__Fun) (new thx.promise.TestTryPromise_testTryFlatMap_98__Fun()) )) )) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMap_97__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMap_97__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMap_97__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMap_97__Fun) (new thx.promise.TestTryPromise_testTryFlatMap_97__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMap_99__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMap_99__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMap_99__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMap_99__Fun) (new thx.promise.TestTryPromise_testTryFlatMap_99__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryFlatMapEitherSuccess()
	{
		//line 104 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 104 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 104 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 104 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 105 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.flatMapEither(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.nil) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_107__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_107__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_107__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_107__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_107__Fun()) )) )) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_108__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_108__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_108__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_108__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_108__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_110__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_110__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_110__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_110__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherSuccess_110__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryFlatMapEitherFailure()
	{
		//line 115 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 115 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 115 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 115 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 116 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.flatMapEither(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.fail(haxe.lang.Runtime.toString("bah"), ((java.lang.Object) (new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.promise.TestTryPromise", "TestTryPromise.hx", "testTryFlatMapEitherFailure"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (116) )) )})) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherFailure_118__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_118__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_118__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherFailure_118__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherFailure_118__Fun()) )) )) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherFailure_119__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_119__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_119__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherFailure_119__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherFailure_119__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryFlatMapEitherFailure_121__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_121__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryFlatMapEitherFailure_121__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryFlatMapEitherFailure_121__Fun) (new thx.promise.TestTryPromise_testTryFlatMapEitherFailure_121__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	public void testTryRecoverNull()
	{
		//line 126 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g1 = 0;
		//line 126 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		int _g = this.x;
		//line 126 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		while (( _g1 < _g ))
		{
			//line 126 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			 ++ _g1;
			//line 127 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			thx.promise._Promise.Promise_Impl_.always(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.failure(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.recoverNull(((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.value(haxe.lang.Runtime.toString(null))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryRecoverNull_128__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryRecoverNull_128__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryRecoverNull_128__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryRecoverNull_128__Fun) (new thx.promise.TestTryPromise_testTryRecoverNull_128__Fun()) )) )) ))) ), ((haxe.lang.Function) (( (( thx.promise.TestTryPromise_testTryRecoverNull_129__Fun.__hx_current != null )) ? (thx.promise.TestTryPromise_testTryRecoverNull_129__Fun.__hx_current) : (thx.promise.TestTryPromise_testTryRecoverNull_129__Fun.__hx_current = ((thx.promise.TestTryPromise_testTryRecoverNull_129__Fun) (new thx.promise.TestTryPromise_testTryRecoverNull_129__Fun()) )) )) ))) ), ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) ));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("x")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.x = ((int) (value) );
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return value;
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
			}
			
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("x")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return value;
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
			}
			
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			switch (field.hashCode())
			{
				case 1868616066:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryRecoverNull")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryRecoverNull")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 120:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("x")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return this.x;
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 1556845579:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMapEitherFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryFlatMapEitherFailure")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 315602469:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryCreate")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryCreate")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 776249988:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMapEitherSuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryFlatMapEitherSuccess")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -1722977739:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryEitherSuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryEitherSuccess")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -613654758:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMap")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryFlatMap")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -942382148:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryEitherFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryEitherFailure")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 1754712275:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryMap")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryMap")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -1701982214:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTrySuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTrySuccess")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 2140046893:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryThrowFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryThrowFailure")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 733186248:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryReject")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryReject")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 253339448:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryAlways")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTryAlways")) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
			}
			
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("x")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						return ((double) (this.x) );
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
			}
			
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			switch (field.hashCode())
			{
				case 1868616066:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryRecoverNull")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryRecoverNull();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 315602469:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryCreate")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryCreate();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 1556845579:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMapEitherFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryFlatMapEitherFailure();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -1722977739:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryEitherSuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryEitherSuccess();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 776249988:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMapEitherSuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryFlatMapEitherSuccess();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -942382148:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryEitherFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryEitherFailure();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -613654758:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryFlatMap")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryFlatMap();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case -1701982214:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTrySuccess")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTrySuccess();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 1754712275:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryMap")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryMap();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 733186248:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryReject")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryReject();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 2140046893:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryThrowFailure")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryThrowFailure();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
				case 253339448:
				{
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					if (field.equals("testTryAlways")) 
					{
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						__temp_executeDef1 = false;
						//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
						this.testTryAlways();
					}
					
					//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
					break;
				}
				
				
			}
			
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		baseArr.push("x");
		//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
		{
			//line 8 "/shared/promise/test/thx/promise/TestTryPromise.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


