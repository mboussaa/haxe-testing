// Generated by Haxe 3.3.0
package thx.promise;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PromiseTuple2 extends haxe.lang.HxObject
{
	public PromiseTuple2(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public PromiseTuple2()
	{
		//line 440 "/shared/promise/src/thx/promise/Promise.hx"
		thx.promise.PromiseTuple2.__hx_ctor_thx_promise_PromiseTuple2(this);
	}
	
	
	public static void __hx_ctor_thx_promise_PromiseTuple2(thx.promise.PromiseTuple2 __temp_me128)
	{
	}
	
	
	public static <T1, T2, T3> thx.promise.Future<thx.Either> join(thx.promise.Future<thx.Either> p1, thx.promise.Future<thx.Either> p2)
	{
		//line 442 "/shared/promise/src/thx/promise/Promise.hx"
		return ((thx.promise.Future<thx.Either>) (thx.promise.Promises.par(((haxe.lang.Function) (new thx.promise.PromiseTuple2_join_442__Fun<T3, T2, T1>()) ), ((thx.promise.Future<thx.Either>) (p1) ), ((thx.promise.Future<thx.Either>) (p2) ))) );
	}
	
	
	public static <T1, T2, TOut> thx.promise.Future<thx.Either> mapTuplePromise(thx.promise.Future<thx.Either> promise, haxe.lang.Function success)
	{
		//line 445 "/shared/promise/src/thx/promise/Promise.hx"
		return ((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.flatMapEither(((thx.promise.Future<thx.Either>) (promise) ), ((haxe.lang.Function) (new thx.promise.PromiseTuple2_mapTuplePromise_445__Fun_0<TOut, T2, T1>(success)) ), ((haxe.lang.Function) (new thx.promise.PromiseTuple2_mapTuplePromise_445__Fun<TOut>()) ))) );
	}
	
	
	public static <T1, T2, TOut> thx.promise.Future<thx.Either> mapTuple(thx.promise.Future<thx.Either> promise, haxe.lang.Function success)
	{
		//line 450 "/shared/promise/src/thx/promise/Promise.hx"
		return ((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.map(((thx.promise.Future<thx.Either>) (promise) ), ((haxe.lang.Function) (new thx.promise.PromiseTuple2_mapTuple_450__Fun<TOut, T2, T1>(success)) ))) );
	}
	
	
	public static <T1, T2> thx.promise.Future<thx.Either> tuple(thx.promise.Future<thx.Either> promise, haxe.lang.Function success, haxe.lang.Function failure)
	{
		//line 455 "/shared/promise/src/thx/promise/Promise.hx"
		return ((thx.promise.Future<thx.Either>) (thx.promise._Promise.Promise_Impl_.either(((thx.promise.Future<thx.Either>) (promise) ), ((haxe.lang.Function) (new thx.promise.PromiseTuple2_tuple_456__Fun<T2, T1>(success)) ), ((haxe.lang.Function) (( (( null == failure )) ? (( (( thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current != null )) ? (thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current) : (thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current = ((thx.promise.PromiseTuple2_tuple_457__Fun) (new thx.promise.PromiseTuple2_tuple_457__Fun()) )) )) : (failure) )) ))) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 440 "/shared/promise/src/thx/promise/Promise.hx"
		return new thx.promise.PromiseTuple2(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 440 "/shared/promise/src/thx/promise/Promise.hx"
		return new thx.promise.PromiseTuple2();
	}
	
	
}


