// Generated by Haxe 3.3.0
package thx.promise;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class FutureTuple4 extends haxe.lang.HxObject
{
	public FutureTuple4(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public FutureTuple4()
	{
		//line 213 "/shared/promise/src/thx/promise/Future.hx"
		thx.promise.FutureTuple4.__hx_ctor_thx_promise_FutureTuple4(this);
	}
	
	
	public static void __hx_ctor_thx_promise_FutureTuple4(thx.promise.FutureTuple4 __temp_me119)
	{
	}
	
	
	public static <T1, T2, T3, T4, T5> thx.promise.Future<java.lang.Object> join(thx.promise.Future<java.lang.Object> p1, thx.promise.Future<T5> p2)
	{
		//line 215 "/shared/promise/src/thx/promise/Future.hx"
		return ((thx.promise.Future<java.lang.Object>) (thx.promise.Future.create(((haxe.lang.Function) (new thx.promise.FutureTuple4_join_215__Fun<T5, T4, T3, T2, T1>(p2, p1)) ))) );
	}
	
	
	public static <T1, T2, T3, T4, TOut> thx.promise.Future<TOut> mapTuple(thx.promise.Future<java.lang.Object> future, haxe.lang.Function callback)
	{
		//line 221 "/shared/promise/src/thx/promise/Future.hx"
		return ((thx.promise.Future<TOut>) (((thx.promise.Future) (future.map(((haxe.lang.Function) (new thx.promise.FutureTuple4_mapTuple_221__Fun<TOut, T4, T3, T2, T1>(callback)) ))) )) );
	}
	
	
	public static <T1, T2, T3, T4, TOut> thx.promise.Future<TOut> mapTupleAsync(thx.promise.Future<java.lang.Object> future, haxe.lang.Function callback)
	{
		//line 226 "/shared/promise/src/thx/promise/Future.hx"
		return ((thx.promise.Future<TOut>) (((thx.promise.Future) (future.mapAsync(((haxe.lang.Function) (new thx.promise.FutureTuple4_mapTupleAsync_226__Fun<TOut, T4, T3, T2, T1>(callback)) ))) )) );
	}
	
	
	public static <T1, T2, T3, T4, TOut> thx.promise.Future<TOut> mapTupleFuture(thx.promise.Future<java.lang.Object> future, haxe.lang.Function callback)
	{
		//line 229 "/shared/promise/src/thx/promise/Future.hx"
		return ((thx.promise.Future<TOut>) (((thx.promise.Future) (future.flatMap(((haxe.lang.Function) (new thx.promise.FutureTuple4_mapTupleFuture_229__Fun<TOut, T4, T3, T2, T1>(callback)) ))) )) );
	}
	
	
	public static <T1, T2, T3, T4> thx.promise.Future<java.lang.Object> tuple(thx.promise.Future<java.lang.Object> future, haxe.lang.Function callback)
	{
		//line 232 "/shared/promise/src/thx/promise/Future.hx"
		return future.then(new thx.promise.FutureTuple4_tuple_232__Fun<T4, T3, T2, T1>(callback));
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 213 "/shared/promise/src/thx/promise/Future.hx"
		return new thx.promise.FutureTuple4(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 213 "/shared/promise/src/thx/promise/Future.hx"
		return new thx.promise.FutureTuple4();
	}
	
	
}


