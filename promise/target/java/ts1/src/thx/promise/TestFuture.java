// Generated by Haxe 3.3.0
package thx.promise;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestFuture extends haxe.lang.HxObject
{
	public TestFuture(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestFuture(int i)
	{
		//line 11 "/shared/promise/test/thx/promise/TestFuture.hx"
		thx.promise.TestFuture.__hx_ctor_thx_promise_TestFuture(this, i);
	}
	
	
	public static void __hx_ctor_thx_promise_TestFuture(thx.promise.TestFuture __temp_me130, int i)
	{
		//line 12 "/shared/promise/test/thx/promise/TestFuture.hx"
		__temp_me130.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		return new thx.promise.TestFuture(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		return new thx.promise.TestFuture(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testThenBefore()
	{
		//line 16 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 16 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 16 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 16 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 17 "/shared/promise/test/thx/promise/TestFuture.hx"
			((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.value(((java.lang.Object) (1) ))) )) ).then(( (( thx.promise.TestFuture_testThenBefore_17__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testThenBefore_17__Fun.__hx_current) : (thx.promise.TestFuture_testThenBefore_17__Fun.__hx_current = ((thx.promise.TestFuture_testThenBefore_17__Fun) (new thx.promise.TestFuture_testThenBefore_17__Fun()) )) ));
		}
		
	}
	
	
	public void testMap()
	{
		//line 55 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 55 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 55 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 55 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 56 "/shared/promise/test/thx/promise/TestFuture.hx"
			((thx.promise.Future<java.lang.String>) (((thx.promise.Future) (((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.value(((java.lang.Object) (1) ))) )) ).map(((haxe.lang.Function) (( (( thx.promise.TestFuture_testMap_57__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testMap_57__Fun.__hx_current) : (thx.promise.TestFuture_testMap_57__Fun.__hx_current = ((thx.promise.TestFuture_testMap_57__Fun) (new thx.promise.TestFuture_testMap_57__Fun()) )) )) ))) )) ).then(( (( thx.promise.TestFuture_testMap_58__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testMap_58__Fun.__hx_current) : (thx.promise.TestFuture_testMap_58__Fun.__hx_current = ((thx.promise.TestFuture_testMap_58__Fun) (new thx.promise.TestFuture_testMap_58__Fun()) )) ));
		}
		
	}
	
	
	public void testMapAsync()
	{
		//line 62 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 62 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 62 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 62 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 63 "/shared/promise/test/thx/promise/TestFuture.hx"
			((thx.promise.Future<java.lang.String>) (((thx.promise.Future) (((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.value(((java.lang.Object) (1) ))) )) ).mapAsync(((haxe.lang.Function) (( (( thx.promise.TestFuture_testMapAsync_64__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testMapAsync_64__Fun.__hx_current) : (thx.promise.TestFuture_testMapAsync_64__Fun.__hx_current = ((thx.promise.TestFuture_testMapAsync_64__Fun) (new thx.promise.TestFuture_testMapAsync_64__Fun()) )) )) ))) )) ).then(( (( thx.promise.TestFuture_testMapAsync_65__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testMapAsync_65__Fun.__hx_current) : (thx.promise.TestFuture_testMapAsync_65__Fun.__hx_current = ((thx.promise.TestFuture_testMapAsync_65__Fun) (new thx.promise.TestFuture_testMapAsync_65__Fun()) )) ));
		}
		
	}
	
	
	public void testFlatten()
	{
		//line 69 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 69 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 69 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 69 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 70 "/shared/promise/test/thx/promise/TestFuture.hx"
			thx.promise.Future<thx.promise.Future<java.lang.Object>> future = ((thx.promise.Future<thx.promise.Future<java.lang.Object>>) (thx.promise.Future.value(((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.value(((java.lang.Object) (1) ))) )) ))) );
			//line 70 "/shared/promise/test/thx/promise/TestFuture.hx"
			((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.create(((haxe.lang.Function) (new thx.promise.TestFuture_testFlatten_70__Fun(future)) ))) )) ).then(( (( thx.promise.TestFuture_testFlatten_72__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testFlatten_72__Fun.__hx_current) : (thx.promise.TestFuture_testFlatten_72__Fun.__hx_current = ((thx.promise.TestFuture_testFlatten_72__Fun) (new thx.promise.TestFuture_testFlatten_72__Fun()) )) ));
		}
		
	}
	
	
	public void testFlatMap()
	{
		//line 76 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 76 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 76 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 76 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 77 "/shared/promise/test/thx/promise/TestFuture.hx"
			((thx.promise.Future<java.lang.String>) (((thx.promise.Future) (((thx.promise.Future<java.lang.Object>) (((thx.promise.Future) (thx.promise.Future.value(((java.lang.Object) (1) ))) )) ).flatMap(((haxe.lang.Function) (( (( thx.promise.TestFuture_testFlatMap_78__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testFlatMap_78__Fun.__hx_current) : (thx.promise.TestFuture_testFlatMap_78__Fun.__hx_current = ((thx.promise.TestFuture_testFlatMap_78__Fun) (new thx.promise.TestFuture_testFlatMap_78__Fun()) )) )) ))) )) ).then(( (( thx.promise.TestFuture_testFlatMap_79__Fun.__hx_current != null )) ? (thx.promise.TestFuture_testFlatMap_79__Fun.__hx_current) : (thx.promise.TestFuture_testFlatMap_79__Fun.__hx_current = ((thx.promise.TestFuture_testFlatMap_79__Fun) (new thx.promise.TestFuture_testFlatMap_79__Fun()) )) ));
		}
		
	}
	
	
	public void testTuple3()
	{
		//line 108 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g1 = 0;
		//line 108 "/shared/promise/test/thx/promise/TestFuture.hx"
		int _g = this.x;
		//line 108 "/shared/promise/test/thx/promise/TestFuture.hx"
		while (( _g1 < _g ))
		{
			//line 108 "/shared/promise/test/thx/promise/TestFuture.hx"
			 ++ _g1;
			//line 109 "/shared/promise/test/thx/promise/TestFuture.hx"
			haxe.lang.Function done = ((haxe.lang.Function) (utest.Assert.createAsync.__hx_invoke2_o(0.0, null, 0.0, null)) );
			//line 111 "/shared/promise/test/thx/promise/TestFuture.hx"
			java.lang.Object this1 = new haxe.lang.DynamicObject(new java.lang.String[]{"_1"}, new java.lang.Object[]{"a"}, new java.lang.String[]{"_0", "_2"}, new double[]{((double) (((double) (1) )) ), ((double) (0.2) )});
			//line 110 "/shared/promise/test/thx/promise/TestFuture.hx"
			thx.promise.FutureTuple3.tuple(((thx.promise.Future<java.lang.Object>) (thx.promise.Future.value(((java.lang.Object) (this1) ))) ), ((haxe.lang.Function) (new thx.promise.TestFuture_testTuple3_112__Fun(done)) ));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("x")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.x = ((int) (value) );
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return value;
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("x")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return value;
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			switch (field.hashCode())
			{
				case 1757244573:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testTuple3")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTuple3")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case 120:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("x")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return this.x;
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlatMap")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -274152914:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testThenBefore")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testThenBefore")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1171403502:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testFlatten")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlatten")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testMap")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMap")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case 865688882:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testMapAsync")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMapAsync")) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("x")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						return ((double) (this.x) );
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			switch (field.hashCode())
			{
				case 1757244573:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testTuple3")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testTuple3();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -274152914:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testThenBefore")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testThenBefore();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testFlatMap();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testMap")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testMap();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case -1171403502:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testFlatten")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testFlatten();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
				case 865688882:
				{
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					if (field.equals("testMapAsync")) 
					{
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						__temp_executeDef1 = false;
						//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
						this.testMapAsync();
					}
					
					//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
					break;
				}
				
				
			}
			
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		baseArr.push("x");
		//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
		{
			//line 9 "/shared/promise/test/thx/promise/TestFuture.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


