// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise : global::haxe.lang.HxObject {
		
		public TestPromise(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestPromise(int i) {
			global::thx.promise.TestPromise.__hx_ctor_thx_promise_TestPromise(this, i);
		}
		
		
		public static void __hx_ctor_thx_promise_TestPromise(global::thx.promise.TestPromise __temp_me150, int i) {
			__temp_me150.x = i;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.TestPromise(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.TestPromise(((int) (global::haxe.lang.Runtime.toInt(arr[0])) ));
		}
		
		
		public int x;
		
		public virtual void testResolveBefore() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.success<int>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testResolveBefore_19__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testRejectBefore() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error error = new global::thx.Error("Nooooo!", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRejectBefore", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (70) )}));
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (error) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testRejectBefore_73__Fun(error, done)) ));
				}
				
			}
		}
		
		
		public virtual void testMapSuccessWithValue() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.success<int>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, int>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0) (new global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0()) )) )) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun) (new global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testMapSuccessWithValue_84__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testMapSuccessWithFailure() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error err = new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessWithFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (93) )}));
					global::thx.promise._Promise.Promise_Impl_.failure<int>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, int>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<int>(((global::thx.Error) (err) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0) (new global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0()) )) )) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun) (new global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testMapSuccessWithFailure_97__Fun(err, done)) ));
				}
				
			}
		}
		
		
		public virtual void testAllSuccess() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.sequence<int>(((global::Array<object>) (new global::Array<object>(new object[]{global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) )), global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (2) ))})) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAllSuccess_109__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testAllFailure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error err = new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (118) )}));
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.sequence<int>(((global::Array<object>) (new global::Array<object>(new object[]{global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) )), global::thx.promise._Promise.Promise_Impl_.error<int>(((global::thx.Error) (err) ))})) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllFailure1_123__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllFailure1_123__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllFailure1_123__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllFailure1_123__Fun) (new global::thx.promise.TestPromise_testAllFailure1_123__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAllFailure1_126__Fun(err, done)) ));
				}
				
			}
		}
		
		
		public virtual void testAllFailure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.sequence<object>(((global::Array<object>) (new global::Array<object>(new object[]{this.res(null), this.res(null), this.rej(null)})) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllFailure2_136__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllFailure2_136__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllFailure2_136__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllFailure2_136__Fun) (new global::thx.promise.TestPromise_testAllFailure2_136__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAllFailure2_139__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testAfterAllSuccess() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.afterAll(new global::Array<object>(new object[]{global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) )), global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (2) )), global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (3) ))}))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllSuccess_149__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllSuccess_153__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testAfterAllFailure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.afterAll(new global::Array<object>(new object[]{global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) )), global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (2) )), global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error("rejected", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (162) )}))) ))}))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllFailure1_163__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllFailure1_167__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testAfterAllFailure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.afterAll(new global::Array<object>(new object[]{this.res(null), this.res(null), this.rej(null)}))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllFailure2_178__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAfterAllFailure2_182__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testJoinSuccess() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.par<int, int, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple2_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (2) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoinSuccess_193__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testJoinFailure() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error err = new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoinFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (203) )}));
					global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.par<int, object, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple2_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (1) ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoinFailure_206__Fun(err, done)) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testJoinFailure_210__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testJoinFailure_210__Fun.__hx_current) : (global::thx.promise.TestPromise_testJoinFailure_210__Fun.__hx_current = ((global::thx.promise.TestPromise_testJoinFailure_210__Fun) (new global::thx.promise.TestPromise_testJoinFailure_210__Fun()) )) )) ));
				}
				
			}
		}
		
		
		public virtual void testJoin3Success() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join3<object, object, object>(((global::thx.promise.Future<object>) (this.res("1")) ), ((global::thx.promise.Future<object>) (this.res("2")) ), ((global::thx.promise.Future<object>) (this.res("3")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin3Success_219__Fun(done)) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testJoin3Success_225__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testJoin3Success_225__Fun.__hx_current) : (global::thx.promise.TestPromise_testJoin3Success_225__Fun.__hx_current = ((global::thx.promise.TestPromise_testJoin3Success_225__Fun) (new global::thx.promise.TestPromise_testJoin3Success_225__Fun()) )) )) ));
			}
			
		}
		
		
		public virtual void testJoin3Failure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join3<object, object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("1") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("2") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error("3", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (233) )}))) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin3Failure1_234__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin3Failure1_238__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testJoin3Failure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join3<object, object, object>(((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.rej("3")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin3Failure2_248__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin3Failure2_252__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testJoin4Success() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join4<object, object, object, object>(((global::thx.promise.Future<object>) (this.res("1")) ), ((global::thx.promise.Future<object>) (this.res("2")) ), ((global::thx.promise.Future<object>) (this.res("3")) ), ((global::thx.promise.Future<object>) (this.res("4")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin4Success_262__Fun(done)) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testJoin4Success_269__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testJoin4Success_269__Fun.__hx_current) : (global::thx.promise.TestPromise_testJoin4Success_269__Fun.__hx_current = ((global::thx.promise.TestPromise_testJoin4Success_269__Fun) (new global::thx.promise.TestPromise_testJoin4Success_269__Fun()) )) )) ));
			}
			
		}
		
		
		public virtual void testJoin4Failure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join4<object, object, object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("1") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("2") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("3") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error("4", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (277) )}))) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin4Failure1_278__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin4Failure1_282__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testJoin4Failure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join4<object, object, object, object>(((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.rej("4")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin4Failure2_292__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin4Failure2_296__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testJoin5Success() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join5<object, object, object, object, object>(((global::thx.promise.Future<object>) (this.res("1")) ), ((global::thx.promise.Future<object>) (this.res("2")) ), ((global::thx.promise.Future<object>) (this.res("3")) ), ((global::thx.promise.Future<object>) (this.res("4")) ), ((global::thx.promise.Future<object>) (this.res("5")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin5Success_306__Fun(done)) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testJoin5Success_314__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testJoin5Success_314__Fun.__hx_current) : (global::thx.promise.TestPromise_testJoin5Success_314__Fun.__hx_current = ((global::thx.promise.TestPromise_testJoin5Success_314__Fun) (new global::thx.promise.TestPromise_testJoin5Success_314__Fun()) )) )) ));
			}
			
		}
		
		
		public virtual void testJoin5Failure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join5<object, object, object, object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("1") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("2") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("3") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("4") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error("5", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (322) )}))) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin5Failure1_323__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin5Failure1_327__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testJoin5Failure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join5<object, object, object, object, object>(((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.rej("5")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin5Failure2_337__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin5Failure2_341__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testJoin6Success() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join6<object, object, object, object, object, object>(((global::thx.promise.Future<object>) (this.res("1")) ), ((global::thx.promise.Future<object>) (this.res("2")) ), ((global::thx.promise.Future<object>) (this.res("3")) ), ((global::thx.promise.Future<object>) (this.res("4")) ), ((global::thx.promise.Future<object>) (this.res("5")) ), ((global::thx.promise.Future<object>) (this.res("6")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin6Success_351__Fun(done)) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testJoin6Success_360__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testJoin6Success_360__Fun.__hx_current) : (global::thx.promise.TestPromise_testJoin6Success_360__Fun.__hx_current = ((global::thx.promise.TestPromise_testJoin6Success_360__Fun) (new global::thx.promise.TestPromise_testJoin6Success_360__Fun()) )) )) ));
			}
			
		}
		
		
		public virtual void testJoin6Failure1() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join6<object, object, object, object, object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("1") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("2") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("3") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("4") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) ("5") ))) ), ((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error("6", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (368) )}))) ))) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin6Failure1_369__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin6Failure1_373__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testJoin6Failure2() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
				global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise.Promises.join6<object, object, object, object, object, object>(((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.res(null)) ), ((global::thx.promise.Future<object>) (this.rej("6")) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin6Failure2_383__Fun(done)) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testJoin6Failure2_387__Fun(done)) ));
			}
			
		}
		
		
		public virtual void testMapTupleSuccess() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.promise._Promise.Promise_Impl_.success<double>(((global::thx.promise.Future<object>) (global::thx.promise.PromiseTuple2.mapTuplePromise<int, int, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{21233, 21234}, new double[]{((double) (1) ), ((double) (2) )})) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun) (new global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testMapTupleSuccess_400__Fun(done)) ));
				}
				
			}
		}
		
		
		public virtual void testMapTupleFailure() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error err = new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (409) )}));
					global::thx.promise._Promise.Promise_Impl_.failure<double>(((global::thx.promise.Future<object>) (global::thx.promise.PromiseTuple2.mapTuplePromise<int, int, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapTupleFailure_411__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapTupleFailure_411__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapTupleFailure_411__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapTupleFailure_411__Fun) (new global::thx.promise.TestPromise_testMapTupleFailure_411__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testMapTupleFailure_414__Fun(err, done)) ));
				}
				
			}
		}
		
		
		public virtual void testAllMapToTupleFailure() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					global::thx.Error err = new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllMapToTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (423) )}));
					global::thx.promise._Promise.Promise_Impl_.failure<double>(((global::thx.promise.Future<object>) (global::thx.promise.PromiseTuple2.mapTuplePromise<int, int, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.sequence<object>(((global::Array<object>) (new global::Array<object>(new object[]{global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err) )), global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err) ))})) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun) (new global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun()) )) )) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun) (new global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun) (new global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testAllMapToTupleFailure_436__Fun(err, done)) ));
				}
				
			}
		}
		
		
		public virtual void testMapSuccessFailure() {
			int _g1 = 0;
			int _g = this.x;
			while (( _g1 < _g )) {
				 ++ _g1;
				global::thx.promise._Promise.Promise_Impl_.always<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.failure<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.nil) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun) (new global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun) (new global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun.__hx_current) : (global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun.__hx_current = ((global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun) (new global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun()) )) )) ))) ), ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) ));
			}
			
		}
		
		
		public virtual void testTuple3() {
			unchecked {
				int _g1 = 0;
				int _g = this.x;
				while (( _g1 < _g )) {
					 ++ _g1;
					global::haxe.lang.Function done = ((global::haxe.lang.Function) (global::utest.Assert.createAsync.__hx_invoke2_o(default(double), null, default(double), (default(global::haxe.lang.Null<int>)).toDynamic())) );
					new global::thx.Error("error", null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testTuple3", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (455) )}));
					global::thx.promise.PromiseTuple3.tuple<int, object, double>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{21234}, new object[]{"a"}, new int[]{21233, 21235}, new double[]{((double) (1) ), 0.2})) ))) ), ((global::haxe.lang.Function) (new global::thx.promise.TestPromise_testTuple3_458__Fun(done)) ), ((global::haxe.lang.Function) (null) ));
				}
				
			}
		}
		
		
		public virtual global::thx.promise.Future<object> res(string val) {
			if (string.Equals(val, null)) {
				val = "resolved";
			}
			
			return global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (val) ));
		}
		
		
		public virtual global::thx.promise.Future<object> rej(string msg) {
			unchecked {
				if (string.Equals(msg, null)) {
					msg = "rejected";
				}
				
				return global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (new global::thx.Error(msg, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"rej", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (471) )}))) ));
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5691735:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "rej", 5691735)) );
					}
					
					
					case 5691744:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "res", 5691744)) );
					}
					
					
					case 580268317:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testTuple3", 580268317)) );
					}
					
					
					case 70382545:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMapSuccessFailure", 70382545)) );
					}
					
					
					case 1774681610:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAllMapToTupleFailure", 1774681610)) );
					}
					
					
					case 1146964396:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMapTupleFailure", 1146964396)) );
					}
					
					
					case 1706098469:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMapTupleSuccess", 1706098469)) );
					}
					
					
					case 330427938:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin6Failure2", 330427938)) );
					}
					
					
					case 330427937:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin6Failure1", 330427937)) );
					}
					
					
					case 310236553:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin6Success", 310236553)) );
					}
					
					
					case 1086358817:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin5Failure2", 1086358817)) );
					}
					
					
					case 1086358816:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin5Failure1", 1086358816)) );
					}
					
					
					case 1498112874:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin5Success", 1498112874)) );
					}
					
					
					case 1842289696:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin4Failure2", 1842289696)) );
					}
					
					
					case 1842289695:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin4Failure1", 1842289695)) );
					}
					
					
					case 538505547:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin4Success", 538505547)) );
					}
					
					
					case 450736927:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin3Failure2", 450736927)) );
					}
					
					
					case 450736926:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin3Failure1", 450736926)) );
					}
					
					
					case 1726381868:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoin3Success", 1726381868)) );
					}
					
					
					case 237896270:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoinFailure", 237896270)) );
					}
					
					
					case 797030343:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testJoinSuccess", 797030343)) );
					}
					
					
					case 586081951:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAfterAllFailure2", 586081951)) );
					}
					
					
					case 586081950:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAfterAllFailure1", 586081950)) );
					}
					
					
					case 1813658540:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAfterAllSuccess", 1813658540)) );
					}
					
					
					case 607255479:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAllFailure2", 607255479)) );
					}
					
					
					case 607255478:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAllFailure1", 607255478)) );
					}
					
					
					case 552227220:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testAllSuccess", 552227220)) );
					}
					
					
					case 166322667:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMapSuccessWithFailure", 166322667)) );
					}
					
					
					case 40539858:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testMapSuccessWithValue", 40539858)) );
					}
					
					
					case 475411120:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testRejectBefore", 475411120)) );
					}
					
					
					case 776474841:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testResolveBefore", 776474841)) );
					}
					
					
					case 120:
					{
						return this.x;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						return ((double) (this.x) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 5691735:
					{
						return this.rej(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 5691744:
					{
						return this.res(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 580268317:
					{
						this.testTuple3();
						break;
					}
					
					
					case 70382545:
					{
						this.testMapSuccessFailure();
						break;
					}
					
					
					case 1774681610:
					{
						this.testAllMapToTupleFailure();
						break;
					}
					
					
					case 1146964396:
					{
						this.testMapTupleFailure();
						break;
					}
					
					
					case 1706098469:
					{
						this.testMapTupleSuccess();
						break;
					}
					
					
					case 330427938:
					{
						this.testJoin6Failure2();
						break;
					}
					
					
					case 330427937:
					{
						this.testJoin6Failure1();
						break;
					}
					
					
					case 310236553:
					{
						this.testJoin6Success();
						break;
					}
					
					
					case 1086358817:
					{
						this.testJoin5Failure2();
						break;
					}
					
					
					case 1086358816:
					{
						this.testJoin5Failure1();
						break;
					}
					
					
					case 1498112874:
					{
						this.testJoin5Success();
						break;
					}
					
					
					case 1842289696:
					{
						this.testJoin4Failure2();
						break;
					}
					
					
					case 1842289695:
					{
						this.testJoin4Failure1();
						break;
					}
					
					
					case 538505547:
					{
						this.testJoin4Success();
						break;
					}
					
					
					case 450736927:
					{
						this.testJoin3Failure2();
						break;
					}
					
					
					case 450736926:
					{
						this.testJoin3Failure1();
						break;
					}
					
					
					case 1726381868:
					{
						this.testJoin3Success();
						break;
					}
					
					
					case 237896270:
					{
						this.testJoinFailure();
						break;
					}
					
					
					case 797030343:
					{
						this.testJoinSuccess();
						break;
					}
					
					
					case 586081951:
					{
						this.testAfterAllFailure2();
						break;
					}
					
					
					case 586081950:
					{
						this.testAfterAllFailure1();
						break;
					}
					
					
					case 1813658540:
					{
						this.testAfterAllSuccess();
						break;
					}
					
					
					case 607255479:
					{
						this.testAllFailure2();
						break;
					}
					
					
					case 607255478:
					{
						this.testAllFailure1();
						break;
					}
					
					
					case 552227220:
					{
						this.testAllSuccess();
						break;
					}
					
					
					case 166322667:
					{
						this.testMapSuccessWithFailure();
						break;
					}
					
					
					case 40539858:
					{
						this.testMapSuccessWithValue();
						break;
					}
					
					
					case 475411120:
					{
						this.testRejectBefore();
						break;
					}
					
					
					case 776474841:
					{
						this.testResolveBefore();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("x");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testResolveBefore_19__Fun : global::haxe.lang.Function {
		
		public TestPromise_testResolveBefore_19__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::utest.Assert.@equals(1, v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testResolveBefore", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (20) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testRejectBefore_73__Fun : global::haxe.lang.Function {
		
		public TestPromise_testRejectBefore_73__Fun(global::thx.Error error, global::haxe.lang.Function done) : base(1, 0) {
			this.error = error;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.error, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testRejectBefore", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (74) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error error;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithValue_82__Fun_0 : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithValue_82__Fun_0() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun_0 __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				return global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (( v * 2 )) ));
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithValue_82__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithValue_82__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessWithValue_82__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<int>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithValue_84__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithValue_84__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int v1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::utest.Assert.@equals(2, v1, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessWithValue", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (85) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithFailure_94__Fun_0 : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithFailure_94__Fun_0() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun_0 __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				int v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::utest.Assert.fail("should never touch this", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessWithFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (95) )}));
				return global::thx.promise._Promise.Promise_Impl_.@value<int>(((int) (( v * 2 )) ));
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithFailure_94__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithFailure_94__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessWithFailure_94__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<int>(((global::thx.Error) (err1) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessWithFailure_97__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessWithFailure_97__Fun(global::thx.Error err, global::haxe.lang.Function done) : base(1, 0) {
			this.err = err;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.err, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessWithFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (98) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error err;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllSuccess_110__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllSuccess_110__Fun() : base(2, 1) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllSuccess_110__Fun __hx_current;
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			int v = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
			int acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return ((double) (( acc + v )) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllSuccess_109__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllSuccess_109__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Array<int> arr = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
				global::utest.Assert.@equals(3, ((int) (global::haxe.lang.Runtime.toInt(global::thx.Arrays.reduce<int, object>(((global::Array<int>) (arr) ), ((global::haxe.lang.Function) (( (( global::thx.promise.TestPromise_testAllSuccess_110__Fun.__hx_current != null )) ? (global::thx.promise.TestPromise_testAllSuccess_110__Fun.__hx_current) : (global::thx.promise.TestPromise_testAllSuccess_110__Fun.__hx_current = ((global::thx.promise.TestPromise_testAllSuccess_110__Fun) (new global::thx.promise.TestPromise_testAllSuccess_110__Fun()) )) )) ), ((object) (0) )))) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (110) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllFailure1_123__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllFailure1_123__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllFailure1_123__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Array<int> arr = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (__fn_dyn1) ))) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (124) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllFailure1_126__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllFailure1_126__Fun(global::thx.Error err, global::haxe.lang.Function done) : base(1, 0) {
			this.err = err;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.err, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (127) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error err;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllFailure2_136__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllFailure2_136__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllFailure2_136__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Array<object> arr = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (__fn_dyn1) ))) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllFailure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (137) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllFailure2_139__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllFailure2_139__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.pass(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllFailure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (140) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllSuccess_149__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllSuccess_149__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Nil n = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Nil) (((object) (__fn_float1) )) )) : (((global::thx.Nil) (__fn_dyn1) )) );
				global::utest.Assert.@equals(global::thx.Nil.nil, n, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (150) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllSuccess_153__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllSuccess_153__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (154) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllFailure1_163__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllFailure1_163__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Nil n = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Nil) (((object) (__fn_float1) )) )) : (((global::thx.Nil) (__fn_dyn1) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (164) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllFailure1_167__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllFailure1_167__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.pass(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllFailure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (168) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllFailure2_178__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllFailure2_178__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Nil n = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Nil) (((object) (__fn_float1) )) )) : (((global::thx.Nil) (__fn_dyn1) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllFailure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (179) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAfterAllFailure2_182__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAfterAllFailure2_182__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.pass(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAfterAllFailure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (183) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoinSuccess_193__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoinSuccess_193__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.@equals(1, ((int) (global::haxe.lang.Runtime.getField_f(t, "_0", 21233, true)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoinSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (194) )}));
				global::utest.Assert.@equals(2, ((int) (global::haxe.lang.Runtime.getField_f(t, "_1", 21234, true)) ), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoinSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (195) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoinFailure_206__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoinFailure_206__Fun(global::thx.Error err, global::haxe.lang.Function done) : base(1, 0) {
			this.err = err;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.err, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoinFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (207) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error err;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoinFailure_210__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoinFailure_210__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testJoinFailure_210__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoinFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (211) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Success_219__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Success_219__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.same("1", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (220) )}));
				global::utest.Assert.same("2", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_1", 21234, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (221) )}));
				global::utest.Assert.same("3", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_2", 21235, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (222) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Success_225__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Success_225__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testJoin3Success_225__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (226) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Failure1_234__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Failure1_234__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (235) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Failure1_238__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Failure1_238__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("3", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (239) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Failure2_248__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Failure2_248__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (249) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin3Failure2_252__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin3Failure2_252__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("3", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin3Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (253) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Success_262__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Success_262__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.same("1", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (263) )}));
				global::utest.Assert.same("2", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_1", 21234, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (264) )}));
				global::utest.Assert.same("3", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_2", 21235, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (265) )}));
				global::utest.Assert.same("4", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_3", 21236, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (266) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Success_269__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Success_269__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testJoin4Success_269__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (270) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Failure1_278__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Failure1_278__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (279) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Failure1_282__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Failure1_282__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("4", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (283) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Failure2_292__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Failure2_292__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (293) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin4Failure2_296__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin4Failure2_296__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("4", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin4Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (297) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Success_306__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Success_306__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.same("1", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (307) )}));
				global::utest.Assert.same("2", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_1", 21234, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (308) )}));
				global::utest.Assert.same("3", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_2", 21235, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (309) )}));
				global::utest.Assert.same("4", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_3", 21236, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (310) )}));
				global::utest.Assert.same("5", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_4", 21237, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (311) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Success_314__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Success_314__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testJoin5Success_314__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (315) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Failure1_323__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Failure1_323__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (324) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Failure1_327__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Failure1_327__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("5", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (328) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Failure2_337__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Failure2_337__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (338) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin5Failure2_341__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin5Failure2_341__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("5", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin5Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (342) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Success_351__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Success_351__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.same("1", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_0", 21233, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (352) )}));
				global::utest.Assert.same("2", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_1", 21234, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (353) )}));
				global::utest.Assert.same("3", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_2", 21235, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (354) )}));
				global::utest.Assert.same("4", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_3", 21236, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (355) )}));
				global::utest.Assert.same("5", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_4", 21237, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (356) )}));
				global::utest.Assert.same("6", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tuple, "_5", 21238, true)), default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (357) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Success_360__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Success_360__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testJoin6Success_360__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Success", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (361) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Failure1_369__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Failure1_369__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (370) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Failure1_373__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Failure1_373__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("6", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Failure1", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (374) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Failure2_383__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Failure2_383__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object tuple = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail(null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (384) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testJoin6Failure2_387__Fun : global::haxe.lang.Function {
		
		public TestPromise_testJoin6Failure2_387__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.same("6", err.message, default(global::haxe.lang.Null<bool>), null, default(global::haxe.lang.Null<double>), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testJoin6Failure2", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (388) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapTupleSuccess_397__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapTupleSuccess_397__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapTupleSuccess_397__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			int b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
			int a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return global::thx.promise._Promise.Promise_Impl_.@value<double>(((double) (( ((double) (a) ) / b )) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapTupleSuccess_400__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapTupleSuccess_400__Fun(global::haxe.lang.Function done) : base(1, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				double v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((double) (__fn_float1) )) : (((double) (global::haxe.lang.Runtime.toDouble(__fn_dyn1)) )) );
				global::utest.Assert.@equals(0.5, v, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapTupleSuccess", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (401) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapTupleFailure_411__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapTupleFailure_411__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapTupleFailure_411__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			int b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
			int a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return global::thx.promise._Promise.Promise_Impl_.@value<double>(((double) (( ((double) (a) ) / b )) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapTupleFailure_414__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapTupleFailure_414__Fun(global::thx.Error err, global::haxe.lang.Function done) : base(1, 0) {
			this.err = err;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.err, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (415) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error err;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllMapToTupleFailure_428__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllMapToTupleFailure_428__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllMapToTupleFailure_428__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Array v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array) (((object) (__fn_float1) )) )) : (((global::Array) (__fn_dyn1) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllMapToTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (429) )}));
				return global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{21233, 21234}, new double[]{((double) (1) ), ((double) (2) )})) ));
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllMapToTupleFailure_424__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllMapToTupleFailure_424__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllMapToTupleFailure_424__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err1) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllMapToTupleFailure_432__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllMapToTupleFailure_432__Fun() : base(2, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testAllMapToTupleFailure_432__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				int b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn2)) )) );
				int a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::utest.Assert.fail("should never happen", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllMapToTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (433) )}));
				return global::thx.promise._Promise.Promise_Impl_.@value<double>(((double) (( ((double) (a) ) / b )) ));
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testAllMapToTupleFailure_436__Fun : global::haxe.lang.Function {
		
		public TestPromise_testAllMapToTupleFailure_436__Fun(global::thx.Error err, global::haxe.lang.Function done) : base(1, 0) {
			this.err = err;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.@equals(this.err, e, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testAllMapToTupleFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (437) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::thx.Error err;
		
		public global::haxe.lang.Function done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessFailure_446__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessFailure_446__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessFailure_446__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Nil _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Nil) (((object) (__fn_float1) )) )) : (((global::thx.Nil) (__fn_dyn1) )) );
			throw global::haxe.lang.HaxeException.wrap("NOOO!");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessFailure_447__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessFailure_447__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessFailure_447__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object _1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				global::utest.Assert.fail("should never succeed", new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (447) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testMapSuccessFailure_448__Fun : global::haxe.lang.Function {
		
		public TestPromise_testMapSuccessFailure_448__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.TestPromise_testMapSuccessFailure_448__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::utest.Assert.stringContains("NOOO!", e.toString(), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testMapSuccessFailure", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (448) )}));
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class TestPromise_testTuple3_458__Fun : global::haxe.lang.Function {
		
		public TestPromise_testTuple3_458__Fun(global::haxe.lang.Function done) : base(3, 0) {
			this.done = done;
		}
		
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			unchecked {
				double c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (((double) (__fn_float3) )) : (((double) (global::haxe.lang.Runtime.toDouble(__fn_dyn3)) )) );
				string b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
				int a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::utest.Assert.@equals(1, a, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testTuple3", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (459) )}));
				global::utest.Assert.@equals("a", b, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testTuple3", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (460) )}));
				global::utest.Assert.@equals(0.2, c, null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testTuple3", "thx.promise.TestPromise", "TestPromise.hx"}, new int[]{1981972957}, new double[]{((double) (461) )}));
				this.done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public global::haxe.lang.Function done;
		
	}
}


