// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future<T> : global::haxe.lang.HxObject, global::thx.promise.Future {
		
		public Future(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Future() {
			global::thx.promise.Future<object>.__hx_ctor_thx_promise_Future<T>(((global::thx.promise.Future<T>) (this) ));
		}
		
		
		public static void __hx_ctor_thx_promise_Future<T_c>(global::thx.promise.Future<T_c> __temp_me135) {
			__temp_me135.handlers = new global::Array<object>(new object[]{});
			__temp_me135.state = global::haxe.ds.Option.None;
		}
		
		
		public static object __hx_cast<T_c_c>(global::thx.promise.Future me) {
			return ( (( me != null )) ? (me.thx_promise_Future_cast<T_c_c>()) : (null) );
		}
		
		
		public static global::thx.promise.Future<object> sequence<T1>(global::Array<object> arr) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.Future_sequence_12__Fun<T1>(arr)) ));
		}
		
		
		public static global::thx.promise.Future<object> afterAll(global::Array<object> arr) {
			return global::thx.promise.Future<object>.sequence<object>(((global::Array<object>) (arr) )).nil();
		}
		
		
		public static global::thx.promise.Future<object> all<T2>(global::Array<object> arr) {
			return global::thx.promise.Future<object>.sequence<T2>(((global::Array<object>) (arr) ));
		}
		
		
		public static global::thx.promise.Future<T3> create<T3>(global::haxe.lang.Function handler) {
			global::thx.promise.Future<T3> future = new global::thx.promise.Future<T3>();
			handler.__hx_invoke1_o(default(double), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(future, "setState", 306175759)) ));
			return future;
		}
		
		
		public static global::thx.promise.Future<T4> flatten<T4>(global::thx.promise.Future<object> future) {
			return global::thx.promise.Future<object>.create<T4>(((global::haxe.lang.Function) (new global::thx.promise.Future_flatten_55__Fun<T4>(future)) ));
		}
		
		
		public static global::thx.promise.Future<T5> @value<T5>(T5 v) {
			return global::thx.promise.Future<object>.create<T5>(((global::haxe.lang.Function) (new global::thx.promise.Future_value_60__Fun<T5>(v)) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.Future<object>(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.Future<object>();
		}
		
		
		public virtual object thx_promise_Future_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::thx.promise.Future<T_c> new_me = new global::thx.promise.Future<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public global::Array<object> handlers;
		
		public global::haxe.ds.Option state;
		
		public bool hasValue() {
			return global::thx.Options.toBool<T>(((global::haxe.ds.Option) (this.state) ));
		}
		
		
		public virtual global::thx.promise.Future<TOut> map<TOut>(global::haxe.lang.Function handler) {
			global::thx.promise.Future<T> _gthis = this;
			return global::thx.promise.Future<object>.create<TOut>(((global::haxe.lang.Function) (new global::thx.promise.Future_map_82__Fun<T, TOut>(handler, _gthis)) ));
		}
		
		
		public virtual global::thx.promise.Future<TOut> mapAsync<TOut>(global::haxe.lang.Function handler) {
			global::thx.promise.Future<T> _gthis = this;
			return global::thx.promise.Future<object>.create<TOut>(((global::haxe.lang.Function) (new global::thx.promise.Future_mapAsync_86__Fun<T, TOut>(handler, _gthis)) ));
		}
		
		
		public virtual global::thx.promise.Future<object> mapPromise<TOut>(global::haxe.lang.Function handler) {
			global::thx.promise.Future<T> _gthis = this;
			return global::thx.promise._Promise.Promise_Impl_.create<TOut>(((global::haxe.lang.Function) (new global::thx.promise.Future_mapPromise_91__Fun<T, TOut>(handler, _gthis)) ));
		}
		
		
		public virtual global::thx.promise.Future<object> nil() {
			return this.map<object>(((global::haxe.lang.Function) (new global::thx.promise.Future_nil_98__Fun<T>()) ));
		}
		
		
		public global::thx.promise.Future<TOut> mapFuture<TOut>(global::haxe.lang.Function handler) {
			return this.flatMap<TOut>(((global::haxe.lang.Function) (handler) ));
		}
		
		
		public virtual global::thx.promise.Future<TOut> flatMap<TOut>(global::haxe.lang.Function handler) {
			global::thx.promise.Future<T> _gthis = this;
			return global::thx.promise.Future<object>.create<TOut>(((global::haxe.lang.Function) (new global::thx.promise.Future_flatMap_105__Fun<T, TOut>(handler, _gthis)) ));
		}
		
		
		public virtual global::thx.promise.Future<T> then(global::haxe.lang.Function handler) {
			this.handlers.push(handler);
			this.update();
			return this;
		}
		
		
		public virtual string toString() {
			return "Future";
		}
		
		
		public virtual global::thx.promise.Future<T> setState(T newstate) {
			unchecked {
				{
					global::haxe.ds.Option _g = this.state;
					switch (_g.index) {
						case 0:
						{
							throw global::haxe.lang.HaxeException.wrap(new global::thx.Error(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("future was already \"", global::Std.@string(global::haxe.lang.Runtime.genericCast<T>(_g.@params[0]))), "\", can\'t apply the new state \""), global::Std.@string(newstate)), "\""), null, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"setState", "thx.promise.Future", "Future.hx"}, new int[]{1981972957}, new double[]{((double) (121) )})));
						}
						
						
						case 1:
						{
							this.state = global::haxe.ds.Option.Some(newstate);
							break;
						}
						
						
					}
					
				}
				
				this.update();
				return this;
			}
		}
		
		
		public virtual void update() {
			unchecked {
				global::haxe.ds.Option _g = this.state;
				switch (_g.index) {
					case 0:
					{
						T result = global::haxe.lang.Runtime.genericCast<T>(_g.@params[0]);
						{
							int index = -1;
							while ((  ++ index < this.handlers.length )) {
								((global::haxe.lang.Function) (this.handlers[index]) ).__hx_invoke1_o(default(double), result);
							}
							
							this.handlers = new global::Array<object>(new object[]{});
						}
						
						break;
					}
					
					
					case 1:
					{
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 67859985:
					{
						this.state = ((global::haxe.ds.Option) (@value) );
						return @value;
					}
					
					
					case 1428431209:
					{
						this.handlers = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 117802505:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "update", 117802505)) );
					}
					
					
					case 306175759:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setState", 306175759)) );
					}
					
					
					case 946786476:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 1291584221:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "then", 1291584221)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 1445852159:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mapFuture", 1445852159)) );
					}
					
					
					case 5493713:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "nil", 5493713)) );
					}
					
					
					case 410695263:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mapPromise", 410695263)) );
					}
					
					
					case 494956288:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mapAsync", 494956288)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 1041287607:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "hasValue", 1041287607)) );
					}
					
					
					case 67859985:
					{
						return this.state;
					}
					
					
					case 1428431209:
					{
						return this.handlers;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 117802505:
					{
						this.update();
						break;
					}
					
					
					case 306175759:
					{
						return this.setState(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
					}
					
					
					case 946786476:
					{
						return this.toString();
					}
					
					
					case 1291584221:
					{
						return this.then(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1445852159:
					{
						return this.mapFuture<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5493713:
					{
						return this.nil();
					}
					
					
					case 410695263:
					{
						return this.mapPromise<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 494956288:
					{
						return this.mapAsync<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1041287607:
					{
						return this.hasValue();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("state");
			baseArr.push("handlers");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_map_83__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Future_map_83__Fun(global::haxe.lang.Function handler, global::haxe.lang.Function callback) : base(1, 0) {
			this.handler = handler;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			this.callback.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<TOut>(this.handler.__hx_invoke1_o(default(double), v)));
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_map_82__Fun<T, TOut> : global::haxe.lang.Function {
		
		public Future_map_82__Fun(global::haxe.lang.Function handler, global::thx.promise.Future<T> _gthis) : base(1, 0) {
			this.handler = handler;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.then(new global::thx.promise.Future_map_83__Fun<TOut, T>(this.handler, callback));
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::thx.promise.Future<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_mapAsync_87__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Future_mapAsync_87__Fun(global::haxe.lang.Function handler, global::haxe.lang.Function callback) : base(1, 0) {
			this.handler = handler;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			this.handler.__hx_invoke2_o(default(double), result, default(double), this.callback);
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_mapAsync_86__Fun<T, TOut> : global::haxe.lang.Function {
		
		public Future_mapAsync_86__Fun(global::haxe.lang.Function handler, global::thx.promise.Future<T> _gthis) : base(1, 0) {
			this.handler = handler;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.then(new global::thx.promise.Future_mapAsync_87__Fun<TOut, T>(this.handler, callback));
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::thx.promise.Future<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_mapPromise_92__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Future_mapPromise_92__Fun(global::haxe.lang.Function resolve, global::haxe.lang.Function reject, global::haxe.lang.Function handler) : base(1, 0) {
			this.resolve = resolve;
			this.reject = reject;
			this.handler = handler;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::thx.promise._Promise.Promise_Impl_.failure<TOut>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.success<TOut>(((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.handler.__hx_invoke1_o(default(double), result)) ))) ), ((global::haxe.lang.Function) (this.resolve) ))) ), ((global::haxe.lang.Function) (this.reject) ));
			return null;
		}
		
		
		public global::haxe.lang.Function resolve;
		
		public global::haxe.lang.Function reject;
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_mapPromise_91__Fun<T, TOut> : global::haxe.lang.Function {
		
		public Future_mapPromise_91__Fun(global::haxe.lang.Function handler, global::thx.promise.Future<T> _gthis) : base(2, 0) {
			this.handler = handler;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.then(new global::thx.promise.Future_mapPromise_92__Fun<TOut, T>(resolve, reject, this.handler));
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::thx.promise.Future<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_nil_98__Fun<T> : global::haxe.lang.Function {
		
		public Future_nil_98__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.Nil.nil;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_flatMap_106__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Future_flatMap_106__Fun(global::haxe.lang.Function handler, global::haxe.lang.Function callback) : base(1, 0) {
			this.handler = handler;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.handler.__hx_invoke1_o(default(double), v)) ))) ).then(this.callback);
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_flatMap_105__Fun<T, TOut> : global::haxe.lang.Function {
		
		public Future_flatMap_105__Fun(global::haxe.lang.Function handler, global::thx.promise.Future<T> _gthis) : base(1, 0) {
			this.handler = handler;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.then(new global::thx.promise.Future_flatMap_106__Fun<TOut, T>(this.handler, callback));
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::thx.promise.Future<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_sequence_18__Fun<T1> : global::haxe.lang.Function {
		
		public Future_sequence_18__Fun(global::haxe.lang.Function[] poll, int index, global::Array<T1> acc) : base(1, 0) {
			this.poll = poll;
			this.index = index;
			this.acc = acc;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				T1 v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
				this.acc[this.index] = v;
				this.poll[0].__hx_invoke1_o(((double) (( this.index + 1 )) ), global::haxe.lang.Runtime.undefined);
				return null;
			}
		}
		
		
		public global::haxe.lang.Function[] poll;
		
		public int index;
		
		public global::Array<T1> acc;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_sequence_14__Fun<T1> : global::haxe.lang.Function {
		
		public Future_sequence_14__Fun(global::haxe.lang.Function[] poll, global::haxe.lang.Function callback, global::Array<object> arr, global::Array<T1> acc) : base(1, 0) {
			this.poll = poll;
			this.callback = callback;
			this.arr = arr;
			this.acc = acc;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int index = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			if (( index == this.arr.length )) {
				this.callback.__hx_invoke1_o(default(double), this.acc);
				return null;
			}
			
			((global::thx.promise.Future<T1>) (global::thx.promise.Future<object>.__hx_cast<T1>(((global::thx.promise.Future) (this.arr[index]) ))) ).then(new global::thx.promise.Future_sequence_18__Fun<T1>(this.poll, index, this.acc));
			return null;
		}
		
		
		public global::haxe.lang.Function[] poll;
		
		public global::haxe.lang.Function callback;
		
		public global::Array<object> arr;
		
		public global::Array<T1> acc;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_sequence_12__Fun<T1> : global::haxe.lang.Function {
		
		public Future_sequence_12__Fun(global::Array<object> arr) : base(1, 0) {
			this.arr = arr;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::Array<T1> acc = new global::Array<T1>(new T1[]{});
			global::haxe.lang.Function[] poll = new global::haxe.lang.Function[]{null};
			poll[0] = new global::thx.promise.Future_sequence_14__Fun<T1>(poll, callback, this.arr, acc);
			poll[0].__hx_invoke1_o(((double) (0) ), global::haxe.lang.Runtime.undefined);
			return null;
		}
		
		
		public global::Array<object> arr;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_flatten_56__Fun<T4> : global::haxe.lang.Function {
		
		public Future_flatten_56__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.promise.Future<T4> future1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.promise.Future<T4>) (global::thx.promise.Future<object>.__hx_cast<T4>(((global::thx.promise.Future) (((object) (__fn_float1) )) ))) )) : (((global::thx.promise.Future<T4>) (global::thx.promise.Future<object>.__hx_cast<T4>(((global::thx.promise.Future) (__fn_dyn1) ))) )) );
			future1.then(this.callback);
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_flatten_55__Fun<T4> : global::haxe.lang.Function {
		
		public Future_flatten_55__Fun(global::thx.promise.Future<object> future) : base(1, 0) {
			this.future = future;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this.future.then(new global::thx.promise.Future_flatten_56__Fun<T4>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<object> future;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Future_value_60__Fun<T5> : global::haxe.lang.Function {
		
		public Future_value_60__Fun(T5 v) : base(1, 0) {
			this.v = v;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			callback.__hx_invoke1_o(default(double), this.v);
			return null;
		}
		
		
		public T5 v;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	[global::haxe.lang.GenericInterface(typeof(global::thx.promise.Future<object>))]
	public interface Future : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object thx_promise_Future_cast<T_c>();
		
		bool hasValue();
		
		global::thx.promise.Future<object> nil();
		
		string toString();
		
		void update();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures : global::haxe.lang.HxObject {
		
		public Futures(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Futures() {
			global::thx.promise.Futures.__hx_ctor_thx_promise_Futures(this);
		}
		
		
		public static void __hx_ctor_thx_promise_Futures(global::thx.promise.Futures __temp_me136) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2>(global::thx.promise.Future<T1> p1, global::thx.promise.Future<T2> p2) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.Futures_join_144__Fun<T2, T1>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<T> log<T>(global::thx.promise.Future<T> future, string prefix) {
			if (string.Equals(prefix, null)) {
				prefix = "";
			}
			
			return future.then(new global::thx.promise.Futures_log_171__Fun<T>(prefix));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.Futures(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.Futures();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures_join_149__Fun<T2, T1> : global::haxe.lang.Function {
		
		public Futures_join_149__Fun(global::haxe.lang.Null<T2>[] v2, global::haxe.lang.Null<T1>[] v1, int[] counter, global::haxe.lang.Function callback) : base(0, 0) {
			this.v2 = v2;
			this.v1 = v1;
			this.counter = counter;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				if (( this.counter[0] < 2 )) {
					return null;
				}
				
				this.callback.__hx_invoke1_o(default(double), ((object) (new global::haxe.lang.DynamicObject(new int[]{21233, 21234}, new object[]{(this.v1[0]).toDynamic(), (this.v2[0]).toDynamic()}, new int[]{}, new double[]{})) ));
				return null;
			}
		}
		
		
		public global::haxe.lang.Null<T2>[] v2;
		
		public global::haxe.lang.Null<T1>[] v1;
		
		public int[] counter;
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures_join_155__Fun<T1> : global::haxe.lang.Function {
		
		public Futures_join_155__Fun(global::haxe.lang.Null<T1>[] v1, int[] counter, global::haxe.lang.Function complete) : base(1, 0) {
			this.v1 = v1;
			this.counter = counter;
			this.complete = complete;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T1 v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			this.counter[0]++;
			this.v1[0] = new global::haxe.lang.Null<T1>(v, true);
			this.complete.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Null<T1>[] v1;
		
		public int[] counter;
		
		public global::haxe.lang.Function complete;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures_join_161__Fun<T2> : global::haxe.lang.Function {
		
		public Futures_join_161__Fun(global::haxe.lang.Null<T2>[] v2, int[] counter, global::haxe.lang.Function complete) : base(1, 0) {
			this.v2 = v2;
			this.counter = counter;
			this.complete = complete;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T2 v3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn1)) );
			this.counter[0]++;
			this.v2[0] = new global::haxe.lang.Null<T2>(v3, true);
			this.complete.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Null<T2>[] v2;
		
		public int[] counter;
		
		public global::haxe.lang.Function complete;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures_join_144__Fun<T2, T1> : global::haxe.lang.Function {
		
		public Futures_join_144__Fun(global::thx.promise.Future<T2> p2, global::thx.promise.Future<T1> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			int[] counter = new int[]{0};
			global::haxe.lang.Null<T1>[] v1 = new global::haxe.lang.Null<T1>[]{default(global::haxe.lang.Null<T1>)};
			global::haxe.lang.Null<T2>[] v2 = new global::haxe.lang.Null<T2>[]{default(global::haxe.lang.Null<T2>)};
			global::haxe.lang.Function complete = new global::thx.promise.Futures_join_149__Fun<T2, T1>(v2, v1, counter, callback);
			this.p1.then(new global::thx.promise.Futures_join_155__Fun<T1>(v1, counter, complete));
			this.p2.then(new global::thx.promise.Futures_join_161__Fun<T2>(v2, counter, complete));
			return null;
		}
		
		
		public global::thx.promise.Future<T2> p2;
		
		public global::thx.promise.Future<T1> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Futures_log_171__Fun<T> : global::haxe.lang.Function {
		
		public Futures_log_171__Fun(string prefix) : base(1, 0) {
			this.prefix = prefix;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				T r = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
				global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.prefix), " VALUE: "), global::Std.@string(r)), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"log", "thx.promise.Futures", "Future.hx"}, new int[]{1981972957}, new double[]{((double) (171) )}));
				return null;
			}
		}
		
		
		public string prefix;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple6 : global::haxe.lang.HxObject {
		
		public FutureTuple6(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTuple6() {
			global::thx.promise.FutureTuple6.__hx_ctor_thx_promise_FutureTuple6(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureTuple6(global::thx.promise.FutureTuple6 __temp_me137) {
		}
		
		
		public static global::thx.promise.Future<TOut> mapTuple<T1, T2, T3, T4, T5, T6, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.map<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple6_mapTuple_177__Fun<TOut, T6, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleAsync<T1, T2, T3, T4, T5, T6, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple6_mapTupleAsync_182__Fun<TOut, T6, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleFuture<T1, T2, T3, T4, T5, T6, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple6_mapTupleFuture_185__Fun<TOut, T6, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4, T5, T6>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.then(new global::thx.promise.FutureTuple6_tuple_188__Fun<T6, T5, T4, T3, T2, T1>(callback));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureTuple6(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureTuple6();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple6_mapTuple_177__Fun<TOut, T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple6_mapTuple_177__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.callback.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))})));
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple6_mapTupleAsync_182__Fun<TOut, T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple6_mapTupleAsync_182__Fun(global::haxe.lang.Function callback) : base(2, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true)), cb}));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple6_mapTupleFuture_185__Fun<TOut, T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple6_mapTupleFuture_185__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.callback.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))}))) ))) );
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple6_tuple_188__Fun<T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple6_tuple_188__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))}));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5 : global::haxe.lang.HxObject {
		
		public FutureTuple5(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTuple5() {
			global::thx.promise.FutureTuple5.__hx_ctor_thx_promise_FutureTuple5(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureTuple5(global::thx.promise.FutureTuple5 __temp_me138) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4, T5, T6>(global::thx.promise.Future<object> p1, global::thx.promise.Future<T6> p2) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple5_join_193__Fun<T6, T5, T4, T3, T2, T1>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTuple<T1, T2, T3, T4, T5, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.map<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple5_mapTuple_199__Fun<TOut, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleAsync<T1, T2, T3, T4, T5, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple5_mapTupleAsync_204__Fun<TOut, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleFuture<T1, T2, T3, T4, T5, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple5_mapTupleFuture_207__Fun<TOut, T5, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4, T5>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.then(new global::thx.promise.FutureTuple5_tuple_210__Fun<T5, T4, T3, T2, T1>(callback));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureTuple5(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureTuple5();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_join_196__Fun<T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_join_196__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object this1 = global::haxe.lang.Runtime.getField(t, "_0", 21233, true);
			object __temp_stmt7 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_2", 21235, true));
				T4 __temp_odecl4 = global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_3", 21236, true));
				T5 __temp_odecl5 = global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_4", 21237, true));
				T6 __temp_odecl6 = global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true));
				__temp_stmt7 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236, 21237, 21238}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4, __temp_odecl5, __temp_odecl6}, new int[]{}, new double[]{});
			}
			
			this.callback.__hx_invoke1_o(default(double), ((object) (__temp_stmt7) ));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_join_193__Fun<T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_join_193__Fun(global::thx.promise.Future<T6> p2, global::thx.promise.Future<object> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.promise.Futures.@join<object, T6>(((global::thx.promise.Future<object>) (this.p1) ), ((global::thx.promise.Future<T6>) (this.p2) )).then(new global::thx.promise.FutureTuple5_join_196__Fun<T6, T5, T4, T3, T2, T1>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<T6> p2;
		
		public global::thx.promise.Future<object> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_mapTuple_199__Fun<TOut, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_mapTuple_199__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.callback.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true))));
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_mapTupleAsync_204__Fun<TOut, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_mapTupleAsync_204__Fun(global::haxe.lang.Function callback) : base(2, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), cb}));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_mapTupleFuture_207__Fun<TOut, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_mapTupleFuture_207__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.callback.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple5_tuple_210__Fun<T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple5_tuple_210__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4 : global::haxe.lang.HxObject {
		
		public FutureTuple4(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTuple4() {
			global::thx.promise.FutureTuple4.__hx_ctor_thx_promise_FutureTuple4(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureTuple4(global::thx.promise.FutureTuple4 __temp_me139) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4, T5>(global::thx.promise.Future<object> p1, global::thx.promise.Future<T5> p2) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple4_join_215__Fun<T5, T4, T3, T2, T1>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTuple<T1, T2, T3, T4, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.map<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple4_mapTuple_221__Fun<TOut, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleAsync<T1, T2, T3, T4, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple4_mapTupleAsync_226__Fun<TOut, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleFuture<T1, T2, T3, T4, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple4_mapTupleFuture_229__Fun<TOut, T4, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.then(new global::thx.promise.FutureTuple4_tuple_232__Fun<T4, T3, T2, T1>(callback));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureTuple4(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureTuple4();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_join_218__Fun<T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_join_218__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object this1 = global::haxe.lang.Runtime.getField(t, "_0", 21233, true);
			object __temp_stmt6 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_2", 21235, true));
				T4 __temp_odecl4 = global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_3", 21236, true));
				T5 __temp_odecl5 = global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true));
				__temp_stmt6 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236, 21237}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4, __temp_odecl5}, new int[]{}, new double[]{});
			}
			
			this.callback.__hx_invoke1_o(default(double), ((object) (__temp_stmt6) ));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_join_215__Fun<T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_join_215__Fun(global::thx.promise.Future<T5> p2, global::thx.promise.Future<object> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.promise.Futures.@join<object, T5>(((global::thx.promise.Future<object>) (this.p1) ), ((global::thx.promise.Future<T5>) (this.p2) )).then(new global::thx.promise.FutureTuple4_join_218__Fun<T5, T4, T3, T2, T1>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<T5> p2;
		
		public global::thx.promise.Future<object> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_mapTuple_221__Fun<TOut, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_mapTuple_221__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.callback.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true))));
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_mapTupleAsync_226__Fun<TOut, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_mapTupleAsync_226__Fun(global::haxe.lang.Function callback) : base(2, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), cb);
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_mapTupleFuture_229__Fun<TOut, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_mapTupleFuture_229__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.callback.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple4_tuple_232__Fun<T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple4_tuple_232__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3 : global::haxe.lang.HxObject {
		
		public FutureTuple3(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTuple3() {
			global::thx.promise.FutureTuple3.__hx_ctor_thx_promise_FutureTuple3(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureTuple3(global::thx.promise.FutureTuple3 __temp_me140) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4>(global::thx.promise.Future<object> p1, global::thx.promise.Future<T4> p2) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple3_join_237__Fun<T4, T3, T2, T1>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTuple<T1, T2, T3, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.map<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple3_mapTuple_243__Fun<TOut, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleAsync<T1, T2, T3, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple3_mapTupleAsync_248__Fun<TOut, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleFuture<T1, T2, T3, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple3_mapTupleFuture_251__Fun<TOut, T3, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.then(new global::thx.promise.FutureTuple3_tuple_254__Fun<T3, T2, T1>(callback));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureTuple3(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureTuple3();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_join_240__Fun<T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_join_240__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object this1 = global::haxe.lang.Runtime.getField(t, "_0", 21233, true);
			object __temp_stmt5 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_2", 21235, true));
				T4 __temp_odecl4 = global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true));
				__temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4}, new int[]{}, new double[]{});
			}
			
			this.callback.__hx_invoke1_o(default(double), ((object) (__temp_stmt5) ));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_join_237__Fun<T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_join_237__Fun(global::thx.promise.Future<T4> p2, global::thx.promise.Future<object> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.promise.Futures.@join<object, T4>(((global::thx.promise.Future<object>) (this.p1) ), ((global::thx.promise.Future<T4>) (this.p2) )).then(new global::thx.promise.FutureTuple3_join_240__Fun<T4, T3, T2, T1>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<T4> p2;
		
		public global::thx.promise.Future<object> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_mapTuple_243__Fun<TOut, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_mapTuple_243__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.callback.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true))));
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_mapTupleAsync_248__Fun<TOut, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_mapTupleAsync_248__Fun(global::haxe.lang.Function callback) : base(2, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), cb);
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_mapTupleFuture_251__Fun<TOut, T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_mapTupleFuture_251__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.callback.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple3_tuple_254__Fun<T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple3_tuple_254__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2 : global::haxe.lang.HxObject {
		
		public FutureTuple2(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTuple2() {
			global::thx.promise.FutureTuple2.__hx_ctor_thx_promise_FutureTuple2(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureTuple2(global::thx.promise.FutureTuple2 __temp_me141) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3>(global::thx.promise.Future<object> p1, global::thx.promise.Future<T3> p2) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple2_join_259__Fun<T3, T2, T1>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTuple<T1, T2, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.map<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple2_mapTuple_264__Fun<TOut, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleAsync<T1, T2, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple2_mapTupleAsync_267__Fun<TOut, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapTupleFuture<T1, T2, TOut>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise.FutureTuple2_mapTupleFuture_270__Fun<TOut, T2, T1>(callback)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2>(global::thx.promise.Future<object> future, global::haxe.lang.Function callback) {
			return future.then(new global::thx.promise.FutureTuple2_tuple_273__Fun<T2, T1>(callback));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureTuple2(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureTuple2();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_join_261__Fun<T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_join_261__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object this1 = global::haxe.lang.Runtime.getField(t, "_0", 21233, true);
			object __temp_stmt4 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (this1) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true));
				__temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3}, new int[]{}, new double[]{});
			}
			
			this.callback.__hx_invoke1_o(default(double), ((object) (__temp_stmt4) ));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_join_259__Fun<T3, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_join_259__Fun(global::thx.promise.Future<T3> p2, global::thx.promise.Future<object> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.promise.Futures.@join<object, T3>(((global::thx.promise.Future<object>) (this.p1) ), ((global::thx.promise.Future<T3>) (this.p2) )).then(new global::thx.promise.FutureTuple2_join_261__Fun<T3, T2, T1>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<T3> p2;
		
		public global::thx.promise.Future<object> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_mapTuple_264__Fun<TOut, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_mapTuple_264__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.callback.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true))));
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_mapTupleAsync_267__Fun<TOut, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_mapTupleAsync_267__Fun(global::haxe.lang.Function callback) : base(2, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), cb);
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_mapTupleFuture_270__Fun<TOut, T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_mapTupleFuture_270__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.callback.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureTuple2_tuple_273__Fun<T2, T1> : global::haxe.lang.Function {
		
		public FutureTuple2_tuple_273__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureNil : global::haxe.lang.HxObject {
		
		public FutureNil(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureNil() {
			global::thx.promise.FutureNil.__hx_ctor_thx_promise_FutureNil(this);
		}
		
		
		public static void __hx_ctor_thx_promise_FutureNil(global::thx.promise.FutureNil __temp_me142) {
		}
		
		
		public static global::thx.promise.Future<T2> @join<T2>(global::thx.promise.Future<object> p1, global::thx.promise.Future<T2> p2) {
			return global::thx.promise.Future<object>.create<T2>(((global::haxe.lang.Function) (new global::thx.promise.FutureNil_join_278__Fun<T2>(p2, p1)) ));
		}
		
		
		public static global::thx.promise.Future<object> nil(global::thx.promise.Future p) {
			return global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise.FutureNil_nil_283__Fun(p)) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.FutureNil(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.FutureNil();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureNil_join_280__Fun<T2> : global::haxe.lang.Function {
		
		public FutureNil_join_280__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureNil_join_278__Fun<T2> : global::haxe.lang.Function {
		
		public FutureNil_join_278__Fun(global::thx.promise.Future<T2> p2, global::thx.promise.Future<object> p1) : base(1, 0) {
			this.p2 = p2;
			this.p1 = p1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::thx.promise.Futures.@join<object, T2>(((global::thx.promise.Future<object>) (this.p1) ), ((global::thx.promise.Future<T2>) (this.p2) )).then(new global::thx.promise.FutureNil_join_280__Fun<T2>(callback));
			return null;
		}
		
		
		public global::thx.promise.Future<T2> p2;
		
		public global::thx.promise.Future<object> p1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureNil_nil_284__Fun : global::haxe.lang.Function {
		
		public FutureNil_nil_284__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.callback.__hx_invoke1_o(default(double), global::thx.Nil.nil);
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class FutureNil_nil_283__Fun : global::haxe.lang.Function {
		
		public FutureNil_nil_283__Fun(global::thx.promise.Future p) : base(1, 0) {
			this.p = p;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function callback = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::haxe.lang.Runtime.callField(this.p, "then", 1291584221, new global::Array<object>(new object[]{new global::thx.promise.FutureNil_nil_284__Fun(callback)}));
			return null;
		}
		
		
		public global::thx.promise.Future p;
		
	}
}


