// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public sealed class Promise_Impl_ {
		
		static Promise_Impl_() {
			global::thx.promise._Promise.Promise_Impl_.nil = global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (global::thx.Nil.nil) ));
		}
		
		
		public static global::thx.promise.Future<object> _new<T>(global::thx.promise.Future<object> future) {
			return ((global::thx.promise.Future<object>) (future) );
		}
		
		
		public static global::thx.promise.Future<object> fromFuture<T>(global::thx.promise.Future<T> future) {
			return ((global::thx.promise.Future<object>) (future.map<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__fromFuture_24__Fun<T>()) ))) );
		}
		
		
		public static global::thx.promise.Future<object> nil;
		
		public static global::thx.promise.Future<object> all<T>(global::Array<object> arr) {
			if (( arr.length == 0 )) {
				return global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (new global::Array<T>(new T[]{})) ));
			}
			else {
				return global::thx.promise._Promise.Promise_Impl_.create<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__all_32__Fun<T>(arr)) ));
			}
			
		}
		
		
		public static global::thx.promise.Future<object> afterAll(global::Array<object> arr) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (global::thx.promise._Promise.Promise_Impl_.sequence<object>(((global::Array<object>) (arr) ))) ), ((global::haxe.lang.Function) (( (( global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun.__hx_current != null )) ? (global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun.__hx_current) : (global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun.__hx_current = ((global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun) (new global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun()) )) )) ));
		}
		
		
		public static global::thx.promise.Future<object> sequence<T>(global::Array<object> arr) {
			global::thx.promise.Future<object> tmp = global::thx.promise._Promise.Promise_Impl_.@value<object>(((object) (new global::Array<T>(new T[]{})) ));
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (global::thx.Arrays.reduce<object, object>(((global::Array<object>) (arr) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__sequence_67__Fun<T>()) ), ((object) (tmp) ))) ))) );
		}
		
		
		public static global::thx.promise.Future<object> allSequence<T>(global::Array<object> arr) {
			return global::thx.promise._Promise.Promise_Impl_.sequence<T>(((global::Array<object>) (arr) ));
		}
		
		
		public static global::thx.promise.Future<object> create<T>(global::haxe.lang.Function callback) {
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__create_80__Fun<T>(callback)) ))) );
		}
		
		
		public static global::thx.promise.Future<object> createUnsafe<T>(global::haxe.lang.Function callback) {
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__createUnsafe_94__Fun<T>(callback)) ))) );
		}
		
		
		public static global::thx.promise.Future<object> createFulfill<T>(global::haxe.lang.Function callback) {
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__createFulfill_103__Fun<T>(callback)) ))) );
		}
		
		
		public static global::thx.promise.Future<object> fail<T>(string message, object pos) {
			return global::thx.promise._Promise.Promise_Impl_.error<T>(((global::thx.Error) (new global::thx.Error(message, null, pos)) ));
		}
		
		
		public static global::thx.promise.Future<object> error<T>(global::thx.Error err) {
			return global::thx.promise._Promise.Promise_Impl_.create<T>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__error_111__Fun<T>(err)) ));
		}
		
		
		public static global::thx.promise.Future<object> @value<T>(T v) {
			return global::thx.promise._Promise.Promise_Impl_.create<T>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__value_114__Fun<T>(v)) ));
		}
		
		
		public static global::thx.promise.Future<object> always<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.create<object>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__always_118__Fun<T>(this1, handler)) ))) );
		}
		
		
		public static global::thx.promise.Future<object> either<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.createUnsafe<T>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__either_131__Fun<T>(this1, success, failure)) ));
		}
		
		
		public static bool isFailure<T>(global::thx.promise.Future<object> this1) {
			unchecked {
				global::haxe.ds.Option _g = this1.state;
				switch (_g.index) {
					case 0:
					{
						if (( ((global::thx.Either) (_g.@params[0]) ).index == 1 )) {
							return false;
						}
						else {
							return true;
						}
						
					}
					
					
					case 1:
					{
						return false;
					}
					
					
				}
				
				return default(bool);
			}
		}
		
		
		public static bool isResolved<T>(global::thx.promise.Future<object> this1) {
			unchecked {
				global::haxe.ds.Option _g = this1.state;
				switch (_g.index) {
					case 0:
					{
						if (( ((global::thx.Either) (_g.@params[0]) ).index == 0 )) {
							return false;
						}
						else {
							return true;
						}
						
					}
					
					
					case 1:
					{
						return false;
					}
					
					
				}
				
				return default(bool);
			}
		}
		
		
		public static global::thx.promise.Future<object> failure<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__failure_166__Fun<T>()) ), ((global::haxe.lang.Function) (failure) ));
		}
		
		
		public static global::thx.promise.Future<object> mapAlways<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapAlways_169__Fun<TOut, T>(handler)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapAlwaysAsyncFuture<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return this1.mapAsync<TOut>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapAlwaysAsyncFuture_172__Fun<TOut, T>(handler)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapAlwaysFuture<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return this1.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapAlwaysFuture_175__Fun<TOut, T>(handler)) ));
		}
		
		
		public static global::thx.promise.Future<object> mapEither<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapEither_179__Fun<TOut, T>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapEither_180__Fun<TOut>(failure)) ));
		}
		
		
		public static global::thx.promise.Future<TOut> mapEitherFuture<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (global::thx.promise._Promise.Promise_Impl_.flatMapEitherFuture<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapEitherFuture_185__Fun<TOut, T>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapEitherFuture_186__Fun<TOut>(failure)) ))) ))) );
		}
		
		
		public static global::thx.promise.Future<TOut> flatMapEitherFuture<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return this1.flatMap<TOut>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__flatMapEitherFuture_190__Fun<TOut, T>(success, failure)) ));
		}
		
		
		public static global::thx.promise.Future<object> flatMapEither<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.createUnsafe<TOut>(((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__flatMapEither_197__Fun<T, TOut>(this1, success, failure)) ));
		}
		
		
		public static global::thx.promise.Future<T> mapFailure<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return ((global::thx.promise.Future<T>) (global::thx.promise.Future<object>.__hx_cast<T>(((global::thx.promise.Future) (global::thx.promise._Promise.Promise_Impl_.mapEitherFuture<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapFailure_209__Fun<T>()) ), ((global::haxe.lang.Function) (failure) ))) ))) );
		}
		
		
		public static global::thx.promise.Future<T> mapFailureFuture<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return ((global::thx.promise.Future<T>) (global::thx.promise.Future<object>.__hx_cast<T>(((global::thx.promise.Future) (global::thx.promise._Promise.Promise_Impl_.flatMapEitherFuture<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapFailureFuture_213__Fun<T>()) ), ((global::haxe.lang.Function) (failure) ))) ))) );
		}
		
		
		public static global::thx.promise.Future<object> mapFailurePromise<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.recover<T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (failure) ));
		}
		
		
		public static global::thx.promise.Future<object> recover<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__recover_220__Fun<T>()) ), ((global::haxe.lang.Function) (failure) ));
		}
		
		
		public static global::thx.promise.Future<T> recoverAsFuture<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function failure) {
			return ((global::thx.promise.Future<T>) (global::thx.promise.Future<object>.__hx_cast<T>(((global::thx.promise.Future) (global::thx.promise._Promise.Promise_Impl_.mapEitherFuture<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__recoverAsFuture_223__Fun<T>()) ), ((global::haxe.lang.Function) (failure) ))) ))) );
		}
		
		
		public static global::thx.promise.Future<object> map<U, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__map_226__Fun_0<U, T>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__map_226__Fun<U>()) ));
		}
		
		
		public static global::thx.promise.Future<object> ap<U, T>(global::thx.promise.Future<object> this1, global::thx.promise.Future<object> pf) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__ap_229__Fun_0<U, T>(pf)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__ap_229__Fun<U>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapSuccess<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (success) ));
		}
		
		
		public static global::thx.promise.Future<object> flatMap<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (success) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__flatMap_236__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> append<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__append_239__Fun_0<TOut, T>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__append_239__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> andThen<B, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function next) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__andThen_243__Fun_0<B, T>(next)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__andThen_243__Fun<B>()) ));
		}
		
		
		public static global::thx.promise.Future<object> foreachM<U, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function f) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__foreachM_253__Fun_0<U, T>(f)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__foreachM_253__Fun<T>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapSuccessPromise<TOut, T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (success) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__mapSuccessPromise_257__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapNull<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return global::thx.promise._Promise.Promise_Impl_.recoverNull<T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (handler) ));
		}
		
		
		public static global::thx.promise.Future<object> recoverNull<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__recoverNull_264__Fun_0<T>(handler)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__recoverNull_264__Fun<T>()) ));
		}
		
		
		public static global::thx.promise.Future<object> success<T>(global::thx.promise.Future<object> this1, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.either<T>(((global::thx.promise.Future<object>) (this1) ), ((global::haxe.lang.Function) (success) ), ((global::haxe.lang.Function) (( (( global::thx.promise._Promise.Promise_Impl__success_272__Fun.__hx_current != null )) ? (global::thx.promise._Promise.Promise_Impl__success_272__Fun.__hx_current) : (global::thx.promise._Promise.Promise_Impl__success_272__Fun.__hx_current = ((global::thx.promise._Promise.Promise_Impl__success_272__Fun) (new global::thx.promise._Promise.Promise_Impl__success_272__Fun()) )) )) ));
		}
		
		
		public static global::thx.promise.Future<object> throwFailure<T>(global::thx.promise.Future<object> this1) {
			return ((global::thx.promise.Future<object>) (this1.then(new global::thx.promise._Promise.Promise_Impl__throwFailure_275__Fun<T>())) );
		}
		
		
		public static string toString<T>(global::thx.promise.Future<object> this1) {
			return "Promise";
		}
		
		
		public static global::thx.promise.Future<object> toFuture<T>(global::thx.promise.Future<object> this1) {
			return this1;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__fromFuture_24__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__fromFuture_24__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return ((global::thx.Either) (global::thx.Either.Right(v)) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__all_42__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__all_42__Fun(global::Array<T> results, global::haxe.lang.Function resolve, int i, bool[] hasError, int[] counter, global::Array<object> arr) : base(1, 0) {
			this.results = results;
			this.resolve = resolve;
			this.i = i;
			this.hasError = hasError;
			this.counter = counter;
			this.arr = arr;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			if ( ! (this.hasError[0]) ) {
				this.results[this.i] = v;
				this.counter[0]++;
				if (( this.counter[0] == this.arr.length )) {
					this.resolve.__hx_invoke1_o(default(double), this.results);
				}
				
			}
			
			return null;
		}
		
		
		public global::Array<T> results;
		
		public global::haxe.lang.Function resolve;
		
		public int i;
		
		public bool[] hasError;
		
		public int[] counter;
		
		public global::Array<object> arr;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__all_50__Fun : global::haxe.lang.Function {
		
		public Promise_Impl__all_50__Fun(global::haxe.lang.Function reject, bool[] hasError) : base(1, 0) {
			this.reject = reject;
			this.hasError = hasError;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			if ( ! (this.hasError[0]) ) {
				this.hasError[0] = true;
				this.reject.__hx_invoke1_o(default(double), err);
			}
			
			return null;
		}
		
		
		public global::haxe.lang.Function reject;
		
		public bool[] hasError;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__all_32__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__all_32__Fun(global::Array<object> arr) : base(2, 0) {
			this.arr = arr;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::Array<T> results = new global::Array<T>(new T[]{});
			int[] counter = new int[]{0};
			bool[] hasError = new bool[]{false};
			{
				int _g1 = 0;
				int _g = this.arr.length;
				while (( _g1 < _g )) {
					int i = _g1++;
					global::thx.promise._Promise.Promise_Impl_.either<T>(((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.arr[i]) ))) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__all_42__Fun<T>(results, resolve, i, hasError, counter, this.arr)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__all_50__Fun(reject, hasError)) ));
				}
				
			}
			
			return null;
		}
		
		
		public global::Array<object> arr;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__afterAll_63__Fun : global::haxe.lang.Function {
		
		public Promise_Impl__afterAll_63__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise._Promise.Promise_Impl__afterAll_63__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array) (((object) (__fn_float1) )) )) : (((global::Array) (__fn_dyn1) )) );
			return global::thx.Nil.nil;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__sequence_68__Fun_0<T> : global::haxe.lang.Function {
		
		public Promise_Impl__sequence_68__Fun_0(global::Array<T> arr1) : base(1, 0) {
			this.arr1 = arr1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return this.arr1.concat(new global::Array<T>(new T[]{t}));
		}
		
		
		public global::Array<T> arr1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__sequence_68__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__sequence_68__Fun(global::thx.promise.Future<object> p) : base(1, 0) {
			this.p = p;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<T> arr1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (__fn_dyn1) ))) )) );
			return global::thx.promise._Promise.Promise_Impl_.map<object, T>(((global::thx.promise.Future<object>) (this.p) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__sequence_68__Fun_0<T>(arr1)) ));
		}
		
		
		public global::thx.promise.Future<object> p;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__sequence_67__Fun_0<T> : global::haxe.lang.Function {
		
		public Promise_Impl__sequence_67__Fun_0() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<object>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__sequence_67__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__sequence_67__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::thx.promise.Future<object> p = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (((object) (__fn_float2) )) ))) )) : (((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (__fn_dyn2) ))) )) );
			global::thx.promise.Future<object> acc = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (((object) (__fn_float1) )) ))) )) : (((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (__fn_dyn1) ))) )) );
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (acc) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__sequence_68__Fun<T>(p)) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__sequence_67__Fun_0<T>()) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__create_83__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__create_83__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			this.cb.__hx_invoke1_o(default(double), ((global::thx.Either) (global::thx.Either.Right(v)) ));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__create_84__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__create_84__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			this.cb.__hx_invoke1_o(default(double), ((global::thx.Either) (global::thx.Either.Left(e)) ));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__create_80__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__create_80__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
				try {
					this.callback.__hx_invoke2_o(default(double), new global::thx.promise._Promise.Promise_Impl__create_83__Fun<T>(cb), default(double), new global::thx.promise._Promise.Promise_Impl__create_84__Fun<T>(cb));
				}
				catch (global::System.Exception __temp_catchallException1){
					global::haxe.lang.Exceptions.exception = __temp_catchallException1;
					object __temp_catchall2 = __temp_catchallException1;
					if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
						__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
					}
					
					{
						object e1 = __temp_catchall2;
						cb.__hx_invoke1_o(default(double), ((global::thx.Either) (global::thx.Either.Left(global::thx.Error.fromDynamic(e1, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"create", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (87) )})))) ));
					}
					
				}
				
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__createUnsafe_96__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__createUnsafe_96__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			this.cb.__hx_invoke1_o(default(double), ((global::thx.Either) (global::thx.Either.Right(v)) ));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__createUnsafe_97__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__createUnsafe_97__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			this.cb.__hx_invoke1_o(default(double), ((global::thx.Either) (global::thx.Either.Left(e)) ));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__createUnsafe_94__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__createUnsafe_94__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this.callback.__hx_invoke2_o(default(double), new global::thx.promise._Promise.Promise_Impl__createUnsafe_96__Fun<T>(cb), default(double), new global::thx.promise._Promise.Promise_Impl__createUnsafe_97__Fun<T>(cb));
			return null;
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__createFulfill_103__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__createFulfill_103__Fun(global::haxe.lang.Function callback) : base(1, 0) {
			this.callback = callback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
				try {
					this.callback.__hx_invoke1_o(default(double), cb);
				}
				catch (global::System.Exception __temp_catchallException1){
					global::haxe.lang.Exceptions.exception = __temp_catchallException1;
					object __temp_catchall2 = __temp_catchallException1;
					if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
						__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
					}
					
					{
						object e = __temp_catchall2;
						cb.__hx_invoke1_o(default(double), global::thx.Either.Left(global::thx.Error.fromDynamic(e, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"createFulfill", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (104) )}))));
					}
					
				}
				
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function callback;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__error_111__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__error_111__Fun(global::thx.Error err) : base(2, 0) {
			this.err = err;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			reject.__hx_invoke1_o(default(double), this.err);
			return null;
		}
		
		
		public global::thx.Error err;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__value_114__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__value_114__Fun(T v) : base(2, 0) {
			this.v = v;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function _ = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			resolve.__hx_invoke1_o(default(double), this.v);
			return null;
		}
		
		
		public T v;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__always_119__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__always_119__Fun(global::haxe.lang.Function handler, global::haxe.lang.Function cb) : base(1, 0) {
			this.handler = handler;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Either v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
				try {
					this.handler.__hx_invoke0_o();
					this.cb.__hx_invoke1_o(default(double), v);
				}
				catch (global::System.Exception __temp_catchallException1){
					global::haxe.lang.Exceptions.exception = __temp_catchallException1;
					object __temp_catchall2 = __temp_catchallException1;
					if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
						__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
					}
					
					{
						object e = __temp_catchall2;
						this.cb.__hx_invoke1_o(default(double), global::thx.Either.Left(global::thx.Error.fromDynamic(e, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"always", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (124) )}))));
					}
					
				}
				
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function handler;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__always_118__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__always_118__Fun(global::thx.promise.Future<object> this1, global::haxe.lang.Function handler) : base(1, 0) {
			this.this1 = this1;
			this.handler = handler;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this.this1.then(new global::thx.promise._Promise.Promise_Impl__always_119__Fun<T>(this.handler, cb));
			return null;
		}
		
		
		public global::thx.promise.Future<object> this1;
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__either_132__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__either_132__Fun(global::haxe.lang.Function success, global::haxe.lang.Function resolve, global::haxe.lang.Function reject, global::haxe.lang.Function failure) : base(1, 0) {
			this.success = success;
			this.resolve = resolve;
			this.reject = reject;
			this.failure = failure;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Either r = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
				try {
					switch (r.index) {
						case 0:
						{
							global::thx.Error e = ((global::thx.Error) (((global::thx.Either) (r) ).@params[0]) );
							{
								this.failure.__hx_invoke1_o(default(double), e);
								this.reject.__hx_invoke1_o(default(double), e);
							}
							
							break;
						}
						
						
						case 1:
						{
							T v = global::haxe.lang.Runtime.genericCast<T>(((global::thx.Either) (r) ).@params[0]);
							{
								this.success.__hx_invoke1_o(default(double), v);
								this.resolve.__hx_invoke1_o(default(double), v);
							}
							
							break;
						}
						
						
					}
					
				}
				catch (global::System.Exception __temp_catchallException1){
					global::haxe.lang.Exceptions.exception = __temp_catchallException1;
					object __temp_catchall2 = __temp_catchallException1;
					if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
						__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
					}
					
					{
						object e1 = __temp_catchall2;
						this.reject.__hx_invoke1_o(default(double), global::thx.Error.fromDynamic(e1, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"either", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (143) )})));
					}
					
				}
				
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function success;
		
		public global::haxe.lang.Function resolve;
		
		public global::haxe.lang.Function reject;
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__either_131__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__either_131__Fun(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) : base(2, 0) {
			this.this1 = this1;
			this.success = success;
			this.failure = failure;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this.this1.then(new global::thx.promise._Promise.Promise_Impl__either_132__Fun<T>(this.success, resolve, reject, this.failure));
			return null;
		}
		
		
		public global::thx.promise.Future<object> this1;
		
		public global::haxe.lang.Function success;
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__failure_166__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__failure_166__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapAlways_169__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapAlways_169__Fun(global::haxe.lang.Function handler) : base(1, 0) {
			this.handler = handler;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.handler.__hx_invoke0_o());
		}
		
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapAlwaysAsyncFuture_172__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapAlwaysAsyncFuture_172__Fun(global::haxe.lang.Function handler) : base(2, 0) {
			this.handler = handler;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function cb = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::thx.Either _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
			this.handler.__hx_invoke1_o(default(double), cb);
			return null;
		}
		
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapAlwaysFuture_175__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapAlwaysFuture_175__Fun(global::haxe.lang.Function handler) : base(1, 0) {
			this.handler = handler;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Either _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.handler.__hx_invoke0_o()) ))) );
		}
		
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapEither_179__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapEither_179__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.promise._Promise.Promise_Impl_.@value<TOut>(global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke1_o(default(double), v)));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapEither_180__Fun<TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__mapEither_180__Fun(global::haxe.lang.Function failure) : base(1, 0) {
			this.failure = failure;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.@value<TOut>(global::haxe.lang.Runtime.genericCast<TOut>(this.failure.__hx_invoke1_o(default(double), e)));
		}
		
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapEitherFuture_185__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapEitherFuture_185__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.promise.Future<object>.@value<TOut>(global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke1_o(default(double), v)));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapEitherFuture_186__Fun<TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__mapEitherFuture_186__Fun(global::haxe.lang.Function failure) : base(1, 0) {
			this.failure = failure;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise.Future<object>.@value<TOut>(global::haxe.lang.Runtime.genericCast<TOut>(this.failure.__hx_invoke1_o(default(double), e)));
		}
		
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__flatMapEitherFuture_190__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__flatMapEitherFuture_190__Fun(global::haxe.lang.Function success, global::haxe.lang.Function failure) : base(1, 0) {
			this.success = success;
			this.failure = failure;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Either result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
				switch (result.index) {
					case 0:
					{
						global::thx.Error e = ((global::thx.Error) (((global::thx.Either) (result) ).@params[0]) );
						return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.failure.__hx_invoke1_o(default(double), e)) ))) );
					}
					
					
					case 1:
					{
						T v = global::haxe.lang.Runtime.genericCast<T>(((global::thx.Either) (result) ).@params[0]);
						return ((global::thx.promise.Future<TOut>) (global::thx.promise.Future<object>.__hx_cast<TOut>(((global::thx.promise.Future) (this.success.__hx_invoke1_o(default(double), v)) ))) );
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function success;
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__flatMapEither_198__Fun<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__flatMapEither_198__Fun(global::haxe.lang.Function success, global::haxe.lang.Function resolve, global::haxe.lang.Function reject, global::haxe.lang.Function failure) : base(1, 0) {
			this.success = success;
			this.resolve = resolve;
			this.reject = reject;
			this.failure = failure;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Either result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
				switch (result.index) {
					case 0:
					{
						global::thx.Error e = ((global::thx.Error) (((global::thx.Either) (result) ).@params[0]) );
						try {
							global::thx.promise._Promise.Promise_Impl_.either<TOut>(((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.failure.__hx_invoke1_o(default(double), e)) ))) ), ((global::haxe.lang.Function) (this.resolve) ), ((global::haxe.lang.Function) (this.reject) ));
						}
						catch (global::System.Exception __temp_catchallException1){
							global::haxe.lang.Exceptions.exception = __temp_catchallException1;
							object __temp_catchall2 = __temp_catchallException1;
							if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
								__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
							}
							
							{
								object e1 = __temp_catchall2;
								this.reject.__hx_invoke1_o(default(double), global::thx.Error.fromDynamic(e1, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"flatMapEither", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (201) )})));
							}
							
						}
						
						
						break;
					}
					
					
					case 1:
					{
						T v = global::haxe.lang.Runtime.genericCast<T>(((global::thx.Either) (result) ).@params[0]);
						try {
							global::thx.promise._Promise.Promise_Impl_.either<TOut>(((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke1_o(default(double), v)) ))) ), ((global::haxe.lang.Function) (this.resolve) ), ((global::haxe.lang.Function) (this.reject) ));
						}
						catch (global::System.Exception __temp_catchallException3){
							global::haxe.lang.Exceptions.exception = __temp_catchallException3;
							object __temp_catchall4 = __temp_catchallException3;
							if (( __temp_catchall4 is global::haxe.lang.HaxeException )) {
								__temp_catchall4 = ((global::haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
							}
							
							{
								object e2 = __temp_catchall4;
								this.reject.__hx_invoke1_o(default(double), global::thx.Error.fromDynamic(e2, new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"flatMapEither", "thx.promise._Promise.Promise_Impl_", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (200) )})));
							}
							
						}
						
						
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function success;
		
		public global::haxe.lang.Function resolve;
		
		public global::haxe.lang.Function reject;
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__flatMapEither_197__Fun<T, TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__flatMapEither_197__Fun(global::thx.promise.Future<object> this1, global::haxe.lang.Function success, global::haxe.lang.Function failure) : base(2, 0) {
			this.this1 = this1;
			this.success = success;
			this.failure = failure;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this.this1.then(new global::thx.promise._Promise.Promise_Impl__flatMapEither_198__Fun<TOut, T>(this.success, resolve, reject, this.failure));
			return null;
		}
		
		
		public global::thx.promise.Future<object> this1;
		
		public global::haxe.lang.Function success;
		
		public global::haxe.lang.Function failure;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapFailure_209__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapFailure_209__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return v;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapFailureFuture_213__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__mapFailureFuture_213__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.promise.Future<object>.@value<T>(global::haxe.lang.Runtime.genericCast<T>(v));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__recover_220__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__recover_220__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.promise._Promise.Promise_Impl_.@value<T>(global::haxe.lang.Runtime.genericCast<T>(v));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__recoverAsFuture_223__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__recoverAsFuture_223__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return v;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__map_226__Fun_0<U, T> : global::haxe.lang.Function {
		
		public Promise_Impl__map_226__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::thx.promise._Promise.Promise_Impl_.@value<U>(global::haxe.lang.Runtime.genericCast<U>(this.success.__hx_invoke1_o(default(double), v)));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__map_226__Fun<U> : global::haxe.lang.Function {
		
		public Promise_Impl__map_226__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<U>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__ap_229__Fun_2<T, U> : global::haxe.lang.Function {
		
		public Promise_Impl__ap_229__Fun_2(T t) : base(1, 0) {
			this.t = t;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (( (( __fn_dyn1 == null )) ? (null) : (((global::haxe.lang.Function) (__fn_dyn1) )) )) );
			return global::haxe.lang.Runtime.genericCast<U>(_.__hx_invoke1_o(default(double), this.t));
		}
		
		
		public T t;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__ap_229__Fun_1<T, U> : global::haxe.lang.Function {
		
		public Promise_Impl__ap_229__Fun_1(global::thx.promise.Future<object> _e) : base(1, 0) {
			this._e = _e;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function success = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.map<U, object>(((global::thx.promise.Future<object>) (this._e) ), ((global::haxe.lang.Function) (success) ));
		}
		
		
		public global::thx.promise.Future<object> _e;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__ap_229__Fun_0<U, T> : global::haxe.lang.Function {
		
		public Promise_Impl__ap_229__Fun_0(global::thx.promise.Future<object> pf) : base(1, 0) {
			this.pf = pf;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::thx.promise.Future<object> _e = this.pf;
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) ((new global::thx.promise._Promise.Promise_Impl__ap_229__Fun_1<T, U>(_e)).__hx_invoke1_o(default(double), new global::thx.promise._Promise.Promise_Impl__ap_229__Fun_2<T, U>(t))) ))) );
		}
		
		
		public global::thx.promise.Future<object> pf;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__ap_229__Fun<U> : global::haxe.lang.Function {
		
		public Promise_Impl__ap_229__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<U>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__flatMap_236__Fun<TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__flatMap_236__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__append_239__Fun_0<TOut, T> : global::haxe.lang.Function {
		
		public Promise_Impl__append_239__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke0_o()) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__append_239__Fun<TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__append_239__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__andThen_243__Fun_0<B, T> : global::haxe.lang.Function {
		
		public Promise_Impl__andThen_243__Fun_0(global::haxe.lang.Function next) : base(1, 0) {
			this.next = next;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.next.__hx_invoke0_o()) ))) );
		}
		
		
		public global::haxe.lang.Function next;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__andThen_243__Fun<B> : global::haxe.lang.Function {
		
		public Promise_Impl__andThen_243__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<B>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__foreachM_253__Fun_1<T, U> : global::haxe.lang.Function {
		
		public Promise_Impl__foreachM_253__Fun_1(T b) : base(1, 0) {
			this.b = b;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			U a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<U>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<U>(__fn_dyn1)) );
			return this.b;
		}
		
		
		public T b;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__foreachM_253__Fun_0<U, T> : global::haxe.lang.Function {
		
		public Promise_Impl__foreachM_253__Fun_0(global::haxe.lang.Function f) : base(1, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::thx.promise.Future<object> tmp = ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.f.__hx_invoke1_o(default(double), t)) ))) );
			T b = t;
			return global::thx.promise._Promise.Promise_Impl_.map<object, U>(((global::thx.promise.Future<object>) (tmp) ), ((global::haxe.lang.Function) (new global::thx.promise._Promise.Promise_Impl__foreachM_253__Fun_1<T, U>(b)) ));
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__foreachM_253__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__foreachM_253__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<T>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__mapSuccessPromise_257__Fun<TOut> : global::haxe.lang.Function {
		
		public Promise_Impl__mapSuccessPromise_257__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__recoverNull_264__Fun_0<T> : global::haxe.lang.Function {
		
		public Promise_Impl__recoverNull_264__Fun_0(global::haxe.lang.Function handler) : base(1, 0) {
			this.handler = handler;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Null<T> v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (new global::haxe.lang.Null<T>(global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) )), true)) : (global::haxe.lang.Null<object>.ofDynamic<T>(__fn_dyn1)) );
			if ( ! (v.hasValue) ) {
				return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.handler.__hx_invoke0_o()) ))) );
			}
			else {
				return global::thx.promise._Promise.Promise_Impl_.@value<T>((v).@value);
			}
			
		}
		
		
		public global::haxe.lang.Function handler;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__recoverNull_264__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__recoverNull_264__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<T>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__success_272__Fun : global::haxe.lang.Function {
		
		public Promise_Impl__success_272__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise._Promise.Promise_Impl__success_272__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise._Promise {
	public class Promise_Impl__throwFailure_275__Fun<T> : global::haxe.lang.Function {
		
		public Promise_Impl__throwFailure_275__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Either r = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Either) (((object) (__fn_float1) )) )) : (((global::thx.Either) (__fn_dyn1) )) );
			if (( r.index == 0 )) {
				global::thx.Error err = ((global::thx.Error) (((global::thx.Either) (r) ).@params[0]) );
				throw global::haxe.lang.HaxeException.wrap(err);
			}
			
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises : global::haxe.lang.HxObject {
		
		public Promises(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Promises() {
			global::thx.promise.Promises.__hx_ctor_thx_promise_Promises(this);
		}
		
		
		public static void __hx_ctor_thx_promise_Promises(global::thx.promise.Promises __temp_me143) {
		}
		
		
		public static global::thx.promise.Future<object> par<T1, T2, T3>(global::haxe.lang.Function f, global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise._Promise.Promise_Impl_.create<T3>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par_287__Fun<T2, T1, T3>(p2, p1, f)) ));
		}
		
		
		public static global::thx.promise.Future<object> par3<T1, T2, T3, T4>(global::haxe.lang.Function f, global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3) {
			global::haxe.lang.Function f1 = f;
			global::thx.promise.Future<object> tmp = global::thx.promise.Promises.par<T1, T2, object>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par3_322__Fun_0<T3, T4, T2, T1>(f1)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
			return global::thx.promise.Promises.par<object, T3, T4>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par3_322__Fun<T3, T4>()) ), ((global::thx.promise.Future<object>) (tmp) ), ((global::thx.promise.Future<object>) (p3) ));
		}
		
		
		public static global::thx.promise.Future<object> par4<T1, T2, T3, T4, T5>(global::haxe.lang.Function f, global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4) {
			global::haxe.lang.Function f1 = f;
			global::thx.promise.Future<object> tmp = global::thx.promise.Promises.par3<T1, T2, T3, object>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par4_325__Fun_0<T4, T5, T3, T2, T1>(f1)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ));
			return global::thx.promise.Promises.par<object, T4, T5>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par4_325__Fun<T4, T5>()) ), ((global::thx.promise.Future<object>) (tmp) ), ((global::thx.promise.Future<object>) (p4) ));
		}
		
		
		public static global::thx.promise.Future<object> par5<T1, T2, T3, T4, T5, T6>(global::haxe.lang.Function f, global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4, global::thx.promise.Future<object> p5) {
			global::haxe.lang.Function f1 = f;
			global::thx.promise.Future<object> tmp = global::thx.promise.Promises.par4<T1, T2, T3, T4, object>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par5_328__Fun_0<T5, T6, T4, T3, T2, T1>(f1)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ), ((global::thx.promise.Future<object>) (p4) ));
			return global::thx.promise.Promises.par<object, T5, T6>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par5_328__Fun<T5, T6>()) ), ((global::thx.promise.Future<object>) (tmp) ), ((global::thx.promise.Future<object>) (p5) ));
		}
		
		
		public static global::thx.promise.Future<object> par6<T1, T2, T3, T4, T5, T6, T7>(global::haxe.lang.Function f, global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4, global::thx.promise.Future<object> p5, global::thx.promise.Future<object> p6) {
			global::haxe.lang.Function f1 = f;
			global::thx.promise.Future<object> tmp = global::thx.promise.Promises.par5<T1, T2, T3, T4, T5, object>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par6_331__Fun_0<T6, T7, T5, T4, T3, T2, T1>(f1)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ), ((global::thx.promise.Future<object>) (p4) ), ((global::thx.promise.Future<object>) (p5) ));
			return global::thx.promise.Promises.par<object, T6, T7>(((global::haxe.lang.Function) (new global::thx.promise.Promises_par6_331__Fun<T6, T7>()) ), ((global::thx.promise.Future<object>) (tmp) ), ((global::thx.promise.Future<object>) (p6) ));
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<T1, T2, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple2_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> join2<T1, T2>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<T1, T2, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple2_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> join3<T1, T2, T3>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3) {
			return global::thx.promise.Promises.par3<T1, T2, T3, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple3_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ));
		}
		
		
		public static global::thx.promise.Future<object> join4<T1, T2, T3, T4>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4) {
			return global::thx.promise.Promises.par4<T1, T2, T3, T4, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple4_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ), ((global::thx.promise.Future<object>) (p4) ));
		}
		
		
		public static global::thx.promise.Future<object> join5<T1, T2, T3, T4, T5>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4, global::thx.promise.Future<object> p5) {
			return global::thx.promise.Promises.par5<T1, T2, T3, T4, T5, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple5_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ), ((global::thx.promise.Future<object>) (p4) ), ((global::thx.promise.Future<object>) (p5) ));
		}
		
		
		public static global::thx.promise.Future<object> join6<T1, T2, T3, T4, T5, T6>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p3, global::thx.promise.Future<object> p4, global::thx.promise.Future<object> p5, global::thx.promise.Future<object> p6) {
			return global::thx.promise.Promises.par6<T1, T2, T3, T4, T5, T6, object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::thx._Tuple.Tuple6_Impl_), "of", 24855)) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ), ((global::thx.promise.Future<object>) (p3) ), ((global::thx.promise.Future<object>) (p4) ), ((global::thx.promise.Future<object>) (p5) ), ((global::thx.promise.Future<object>) (p6) ));
		}
		
		
		public static global::thx.promise.Future<object> log<T>(global::thx.promise.Future<object> promise, string prefix) {
			if (string.Equals(prefix, null)) {
				prefix = "";
			}
			
			return global::thx.promise._Promise.Promise_Impl_.either<T>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.Promises_log_354__Fun<T>(prefix)) ), ((global::haxe.lang.Function) (new global::thx.promise.Promises_log_355__Fun(prefix)) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.Promises(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.Promises();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par_293__Fun<T2, T1, T3> : global::haxe.lang.Function {
		
		public Promises_par_293__Fun(global::haxe.lang.Null<T2>[] v2, global::haxe.lang.Null<T1>[] v1, global::haxe.lang.Function resolve, global::haxe.lang.Function f, int[] counter) : base(0, 0) {
			this.v2 = v2;
			this.v1 = v1;
			this.resolve = resolve;
			this.f = f;
			this.counter = counter;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				if (( this.counter[0] < 2 )) {
					return null;
				}
				
				this.resolve.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<T3>(this.f.__hx_invoke2_o(default(double), (this.v1[0]).toDynamic(), default(double), (this.v2[0]).toDynamic())));
				return null;
			}
		}
		
		
		public global::haxe.lang.Null<T2>[] v2;
		
		public global::haxe.lang.Null<T1>[] v1;
		
		public global::haxe.lang.Function resolve;
		
		public global::haxe.lang.Function f;
		
		public int[] counter;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par_299__Fun : global::haxe.lang.Function {
		
		public Promises_par_299__Fun(global::haxe.lang.Function reject, bool[] hasError) : base(1, 0) {
			this.reject = reject;
			this.hasError = hasError;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error error = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			if (this.hasError[0]) {
				return null;
			}
			
			this.hasError[0] = true;
			this.reject.__hx_invoke1_o(default(double), error);
			return null;
		}
		
		
		public global::haxe.lang.Function reject;
		
		public bool[] hasError;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par_305__Fun<T1> : global::haxe.lang.Function {
		
		public Promises_par_305__Fun(global::haxe.lang.Null<T1>[] v1, bool[] hasError, int[] counter, global::haxe.lang.Function complete) : base(1, 0) {
			this.v1 = v1;
			this.hasError = hasError;
			this.counter = counter;
			this.complete = complete;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T1 v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			if (this.hasError[0]) {
				return null;
			}
			
			this.counter[0]++;
			this.v1[0] = new global::haxe.lang.Null<T1>(v, true);
			this.complete.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Null<T1>[] v1;
		
		public bool[] hasError;
		
		public int[] counter;
		
		public global::haxe.lang.Function complete;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par_312__Fun<T2> : global::haxe.lang.Function {
		
		public Promises_par_312__Fun(global::haxe.lang.Null<T2>[] v2, bool[] hasError, int[] counter, global::haxe.lang.Function complete) : base(1, 0) {
			this.v2 = v2;
			this.hasError = hasError;
			this.counter = counter;
			this.complete = complete;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T2 v3 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn1)) );
			if (this.hasError[0]) {
				return null;
			}
			
			this.counter[0]++;
			this.v2[0] = new global::haxe.lang.Null<T2>(v3, true);
			this.complete.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Null<T2>[] v2;
		
		public bool[] hasError;
		
		public int[] counter;
		
		public global::haxe.lang.Function complete;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par_287__Fun<T2, T1, T3> : global::haxe.lang.Function {
		
		public Promises_par_287__Fun(global::thx.promise.Future<object> p2, global::thx.promise.Future<object> p1, global::haxe.lang.Function f) : base(2, 0) {
			this.p2 = p2;
			this.p1 = p1;
			this.f = f;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::haxe.lang.Function reject = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float2) )) )) : (((global::haxe.lang.Function) (__fn_dyn2) )) );
			global::haxe.lang.Function resolve = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			bool[] hasError = new bool[]{false};
			int[] counter = new int[]{0};
			global::haxe.lang.Null<T1>[] v1 = new global::haxe.lang.Null<T1>[]{default(global::haxe.lang.Null<T1>)};
			global::haxe.lang.Null<T2>[] v2 = new global::haxe.lang.Null<T2>[]{default(global::haxe.lang.Null<T2>)};
			global::haxe.lang.Function complete = new global::thx.promise.Promises_par_293__Fun<T2, T1, T3>(v2, v1, resolve, this.f, counter);
			global::haxe.lang.Function handleError = new global::thx.promise.Promises_par_299__Fun(reject, hasError);
			global::thx.promise._Promise.Promise_Impl_.either<T1>(((global::thx.promise.Future<object>) (this.p1) ), ((global::haxe.lang.Function) (new global::thx.promise.Promises_par_305__Fun<T1>(v1, hasError, counter, complete)) ), ((global::haxe.lang.Function) (handleError) ));
			global::thx.promise._Promise.Promise_Impl_.either<T2>(((global::thx.promise.Future<object>) (this.p2) ), ((global::haxe.lang.Function) (new global::thx.promise.Promises_par_312__Fun<T2>(v2, hasError, counter, complete)) ), ((global::haxe.lang.Function) (handleError) ));
			return null;
		}
		
		
		public global::thx.promise.Future<object> p2;
		
		public global::thx.promise.Future<object> p1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par3_322__Fun_1<T2, T1, T4, T3> : global::haxe.lang.Function {
		
		public Promises_par3_322__Fun_1(global::haxe.lang.Function f1, T2 b, T1 a) : base(1, 0) {
			this.f1 = f1;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T3 c = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<T4>(this.f1.__hx_invoke3_o(default(double), this.a, default(double), this.b, default(double), c));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public T2 b;
		
		public T1 a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par3_322__Fun_0<T3, T4, T2, T1> : global::haxe.lang.Function {
		
		public Promises_par3_322__Fun_0(global::haxe.lang.Function f1) : base(2, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T2 b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn2)) );
			T1 a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			return new global::thx.promise.Promises_par3_322__Fun_1<T2, T1, T4, T3>(this.f1, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par3_322__Fun<T3, T4> : global::haxe.lang.Function {
		
		public Promises_par3_322__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T3 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn2)) );
			global::haxe.lang.Function f2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<T4>(f2.__hx_invoke1_o(default(double), g));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par4_325__Fun_1<T3, T2, T1, T5, T4> : global::haxe.lang.Function {
		
		public Promises_par4_325__Fun_1(global::haxe.lang.Function f1, T3 c, T2 b, T1 a) : base(1, 0) {
			this.f1 = f1;
			this.c = c;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T4 d = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T4>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T4>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<T5>(this.f1.__hx_invoke4_o(default(double), this.a, default(double), this.b, default(double), this.c, default(double), d));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public T3 c;
		
		public T2 b;
		
		public T1 a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par4_325__Fun_0<T4, T5, T3, T2, T1> : global::haxe.lang.Function {
		
		public Promises_par4_325__Fun_0(global::haxe.lang.Function f1) : base(3, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke3_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3) {
			T3 c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float3) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn3)) );
			T2 b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn2)) );
			T1 a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			return new global::thx.promise.Promises_par4_325__Fun_1<T3, T2, T1, T5, T4>(this.f1, c, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par4_325__Fun<T4, T5> : global::haxe.lang.Function {
		
		public Promises_par4_325__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T4 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T4>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T4>(__fn_dyn2)) );
			global::haxe.lang.Function f2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<T5>(f2.__hx_invoke1_o(default(double), g));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par5_328__Fun_1<T4, T3, T2, T1, T6, T5> : global::haxe.lang.Function {
		
		public Promises_par5_328__Fun_1(global::haxe.lang.Function f1, T4 d, T3 c, T2 b, T1 a) : base(1, 0) {
			this.f1 = f1;
			this.d = d;
			this.c = c;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T5 e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T5>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T5>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<T6>(this.f1.__hx_invoke5_o(default(double), this.a, default(double), this.b, default(double), this.c, default(double), this.d, default(double), e));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public T4 d;
		
		public T3 c;
		
		public T2 b;
		
		public T1 a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par5_328__Fun_0<T5, T6, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public Promises_par5_328__Fun_0(global::haxe.lang.Function f1) : base(4, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke4_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3, double __fn_float4, object __fn_dyn4) {
			T4 d = ( (( __fn_dyn4 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T4>(((object) (__fn_float4) ))) : (global::haxe.lang.Runtime.genericCast<T4>(__fn_dyn4)) );
			T3 c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float3) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn3)) );
			T2 b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn2)) );
			T1 a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			return new global::thx.promise.Promises_par5_328__Fun_1<T4, T3, T2, T1, T6, T5>(this.f1, d, c, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par5_328__Fun<T5, T6> : global::haxe.lang.Function {
		
		public Promises_par5_328__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T5 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T5>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T5>(__fn_dyn2)) );
			global::haxe.lang.Function f2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<T6>(f2.__hx_invoke1_o(default(double), g));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par6_331__Fun_1<T5, T4, T3, T2, T1, T7, T6> : global::haxe.lang.Function {
		
		public Promises_par6_331__Fun_1(global::haxe.lang.Function f1, T5 e, T4 d, T3 c, T2 b, T1 a) : base(1, 0) {
			this.f1 = f1;
			this.e = e;
			this.d = d;
			this.c = c;
			this.b = b;
			this.a = a;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T6 f0 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T6>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T6>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<T7>(this.f1.__hx_invokeDynamic(new global::Array<object>(new object[]{this.a, this.b, this.c, this.d, this.e, f0})));
		}
		
		
		public global::haxe.lang.Function f1;
		
		public T5 e;
		
		public T4 d;
		
		public T3 c;
		
		public T2 b;
		
		public T1 a;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par6_331__Fun_0<T6, T7, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public Promises_par6_331__Fun_0(global::haxe.lang.Function f1) : base(5, 0) {
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke5_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2, double __fn_float3, object __fn_dyn3, double __fn_float4, object __fn_dyn4, double __fn_float5, object __fn_dyn5) {
			T5 e = ( (( __fn_dyn5 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T5>(((object) (__fn_float5) ))) : (global::haxe.lang.Runtime.genericCast<T5>(__fn_dyn5)) );
			T4 d = ( (( __fn_dyn4 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T4>(((object) (__fn_float4) ))) : (global::haxe.lang.Runtime.genericCast<T4>(__fn_dyn4)) );
			T3 c = ( (( __fn_dyn3 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float3) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn3)) );
			T2 b = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn2)) );
			T1 a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T1>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T1>(__fn_dyn1)) );
			return new global::thx.promise.Promises_par6_331__Fun_1<T5, T4, T3, T2, T1, T7, T6>(this.f1, e, d, c, b, a);
		}
		
		
		public global::haxe.lang.Function f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_par6_331__Fun<T6, T7> : global::haxe.lang.Function {
		
		public Promises_par6_331__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T6 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T6>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T6>(__fn_dyn2)) );
			global::haxe.lang.Function f2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<T7>(f2.__hx_invoke1_o(default(double), g));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_log_354__Fun<T> : global::haxe.lang.Function {
		
		public Promises_log_354__Fun(string prefix) : base(1, 0) {
			this.prefix = prefix;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				T r = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
				global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.prefix), " SUCCESS: "), global::Std.@string(r)), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"log", "thx.promise.Promises", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (354) )}));
				return null;
			}
		}
		
		
		public string prefix;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class Promises_log_355__Fun : global::haxe.lang.Function {
		
		public Promises_log_355__Fun(string prefix) : base(1, 0) {
			this.prefix = prefix;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::thx.Error e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
				global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.prefix), " ERROR: "), e.toString()), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"log", "thx.promise.Promises", "Promise.hx"}, new int[]{1981972957}, new double[]{((double) (355) )}));
				return null;
			}
		}
		
		
		public string prefix;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6 : global::haxe.lang.HxObject {
		
		public PromiseTuple6(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseTuple6() {
			global::thx.promise.PromiseTuple6.__hx_ctor_thx_promise_PromiseTuple6(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseTuple6(global::thx.promise.PromiseTuple6 __temp_me144) {
		}
		
		
		public static global::thx.promise.Future<object> mapTuplePromise<T1, T2, T3, T4, T5, T6, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple6_mapTuplePromise_361__Fun_0<TOut, T6, T5, T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple6_mapTuplePromise_361__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuple<T1, T2, T3, T4, T5, T6, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple6_mapTuple_366__Fun<TOut, T6, T5, T4, T3, T2, T1>(success)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4, T5, T6>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple6_tuple_372__Fun<T6, T5, T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (( (( null == failure )) ? (( (( global::thx.promise.PromiseTuple6_tuple_373__Fun.__hx_current != null )) ? (global::thx.promise.PromiseTuple6_tuple_373__Fun.__hx_current) : (global::thx.promise.PromiseTuple6_tuple_373__Fun.__hx_current = ((global::thx.promise.PromiseTuple6_tuple_373__Fun) (new global::thx.promise.PromiseTuple6_tuple_373__Fun()) )) )) : (failure) )) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseTuple6(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseTuple6();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6_mapTuplePromise_361__Fun_0<TOut, T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple6_mapTuplePromise_361__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))}))) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6_mapTuplePromise_361__Fun<TOut> : global::haxe.lang.Function {
		
		public PromiseTuple6_mapTuplePromise_361__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6_mapTuple_366__Fun<TOut, T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple6_mapTuple_366__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))})));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6_tuple_372__Fun<T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple6_tuple_372__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.success.__hx_invokeDynamic(new global::Array<object>(new object[]{global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)), global::haxe.lang.Runtime.genericCast<T6>(global::haxe.lang.Runtime.getField(t, "_5", 21238, true))}));
			return null;
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple6_tuple_373__Fun : global::haxe.lang.Function {
		
		public PromiseTuple6_tuple_373__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.PromiseTuple6_tuple_373__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5 : global::haxe.lang.HxObject {
		
		public PromiseTuple5(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseTuple5() {
			global::thx.promise.PromiseTuple5.__hx_ctor_thx_promise_PromiseTuple5(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseTuple5(global::thx.promise.PromiseTuple5 __temp_me145) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4, T5, T6>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<object, T6, object>(((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple5_join_379__Fun<T6, T5, T4, T3, T2, T1>()) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuplePromise<T1, T2, T3, T4, T5, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple5_mapTuplePromise_382__Fun_0<TOut, T5, T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple5_mapTuplePromise_382__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuple<T1, T2, T3, T4, T5, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple5_mapTuple_387__Fun<TOut, T5, T4, T3, T2, T1>(success)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4, T5>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple5_tuple_393__Fun<T5, T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (( (( null == failure )) ? (( (( global::thx.promise.PromiseTuple5_tuple_394__Fun.__hx_current != null )) ? (global::thx.promise.PromiseTuple5_tuple_394__Fun.__hx_current) : (global::thx.promise.PromiseTuple5_tuple_394__Fun.__hx_current = ((global::thx.promise.PromiseTuple5_tuple_394__Fun) (new global::thx.promise.PromiseTuple5_tuple_394__Fun()) )) )) : (failure) )) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseTuple5(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseTuple5();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_join_379__Fun<T6, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple5_join_379__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T6 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T6>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T6>(__fn_dyn2)) );
			object f = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object __temp_stmt6 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (f) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (f) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (f) ), "_2", 21235, true));
				T4 __temp_odecl4 = global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(((object) (f) ), "_3", 21236, true));
				T5 __temp_odecl5 = global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(((object) (f) ), "_4", 21237, true));
				__temp_stmt6 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236, 21237, 21238}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4, __temp_odecl5, g}, new int[]{}, new double[]{});
			}
			
			return ((object) (__temp_stmt6) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_mapTuplePromise_382__Fun_0<TOut, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple5_mapTuplePromise_382__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_mapTuplePromise_382__Fun<TOut> : global::haxe.lang.Function {
		
		public PromiseTuple5_mapTuplePromise_382__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_mapTuple_387__Fun<TOut, T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple5_mapTuple_387__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true))));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_tuple_393__Fun<T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple5_tuple_393__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.success.__hx_invoke5_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)), default(double), global::haxe.lang.Runtime.genericCast<T5>(global::haxe.lang.Runtime.getField(t, "_4", 21237, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple5_tuple_394__Fun : global::haxe.lang.Function {
		
		public PromiseTuple5_tuple_394__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.PromiseTuple5_tuple_394__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4 : global::haxe.lang.HxObject {
		
		public PromiseTuple4(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseTuple4() {
			global::thx.promise.PromiseTuple4.__hx_ctor_thx_promise_PromiseTuple4(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseTuple4(global::thx.promise.PromiseTuple4 __temp_me146) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4, T5>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<object, T5, object>(((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple4_join_400__Fun<T5, T4, T3, T2, T1>()) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuplePromise<T1, T2, T3, T4, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple4_mapTuplePromise_403__Fun_0<TOut, T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple4_mapTuplePromise_403__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuple<T1, T2, T3, T4, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple4_mapTuple_408__Fun<TOut, T4, T3, T2, T1>(success)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3, T4>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple4_tuple_414__Fun<T4, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (( (( null == failure )) ? (( (( global::thx.promise.PromiseTuple4_tuple_415__Fun.__hx_current != null )) ? (global::thx.promise.PromiseTuple4_tuple_415__Fun.__hx_current) : (global::thx.promise.PromiseTuple4_tuple_415__Fun.__hx_current = ((global::thx.promise.PromiseTuple4_tuple_415__Fun) (new global::thx.promise.PromiseTuple4_tuple_415__Fun()) )) )) : (failure) )) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseTuple4(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseTuple4();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_join_400__Fun<T5, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple4_join_400__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T5 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T5>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T5>(__fn_dyn2)) );
			object f = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object __temp_stmt5 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (f) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (f) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (f) ), "_2", 21235, true));
				T4 __temp_odecl4 = global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(((object) (f) ), "_3", 21236, true));
				__temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236, 21237}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, __temp_odecl4, g}, new int[]{}, new double[]{});
			}
			
			return ((object) (__temp_stmt5) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_mapTuplePromise_403__Fun_0<TOut, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple4_mapTuplePromise_403__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_mapTuplePromise_403__Fun<TOut> : global::haxe.lang.Function {
		
		public PromiseTuple4_mapTuplePromise_403__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_mapTuple_408__Fun<TOut, T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple4_mapTuple_408__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true))));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_tuple_414__Fun<T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple4_tuple_414__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.success.__hx_invoke4_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)), default(double), global::haxe.lang.Runtime.genericCast<T4>(global::haxe.lang.Runtime.getField(t, "_3", 21236, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple4_tuple_415__Fun : global::haxe.lang.Function {
		
		public PromiseTuple4_tuple_415__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.PromiseTuple4_tuple_415__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3 : global::haxe.lang.HxObject {
		
		public PromiseTuple3(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseTuple3() {
			global::thx.promise.PromiseTuple3.__hx_ctor_thx_promise_PromiseTuple3(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseTuple3(global::thx.promise.PromiseTuple3 __temp_me147) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3, T4>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<object, T4, object>(((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple3_join_421__Fun<T4, T3, T2, T1>()) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuplePromise<T1, T2, T3, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple3_mapTuplePromise_424__Fun_0<TOut, T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple3_mapTuplePromise_424__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuple<T1, T2, T3, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple3_mapTuple_429__Fun<TOut, T3, T2, T1>(success)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2, T3>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple3_tuple_435__Fun<T3, T2, T1>(success)) ), ((global::haxe.lang.Function) (( (( null == failure )) ? (( (( global::thx.promise.PromiseTuple3_tuple_436__Fun.__hx_current != null )) ? (global::thx.promise.PromiseTuple3_tuple_436__Fun.__hx_current) : (global::thx.promise.PromiseTuple3_tuple_436__Fun.__hx_current = ((global::thx.promise.PromiseTuple3_tuple_436__Fun) (new global::thx.promise.PromiseTuple3_tuple_436__Fun()) )) )) : (failure) )) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseTuple3(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseTuple3();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_join_421__Fun<T4, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple3_join_421__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T4 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T4>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T4>(__fn_dyn2)) );
			object f = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object __temp_stmt4 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (f) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (f) ), "_1", 21234, true));
				T3 __temp_odecl3 = global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(((object) (f) ), "_2", 21235, true));
				__temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235, 21236}, new object[]{__temp_odecl1, __temp_odecl2, __temp_odecl3, g}, new int[]{}, new double[]{});
			}
			
			return ((object) (__temp_stmt4) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_mapTuplePromise_424__Fun_0<TOut, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple3_mapTuplePromise_424__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_mapTuplePromise_424__Fun<TOut> : global::haxe.lang.Function {
		
		public PromiseTuple3_mapTuplePromise_424__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_mapTuple_429__Fun<TOut, T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple3_mapTuple_429__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true))));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_tuple_435__Fun<T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple3_tuple_435__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.success.__hx_invoke3_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)), default(double), global::haxe.lang.Runtime.genericCast<T3>(global::haxe.lang.Runtime.getField(t, "_2", 21235, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple3_tuple_436__Fun : global::haxe.lang.Function {
		
		public PromiseTuple3_tuple_436__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.PromiseTuple3_tuple_436__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2 : global::haxe.lang.HxObject {
		
		public PromiseTuple2(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseTuple2() {
			global::thx.promise.PromiseTuple2.__hx_ctor_thx_promise_PromiseTuple2(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseTuple2(global::thx.promise.PromiseTuple2 __temp_me148) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T1, T2, T3>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<object, T3, object>(((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple2_join_442__Fun<T3, T2, T1>()) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuplePromise<T1, T2, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.flatMapEither<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple2_mapTuplePromise_445__Fun_0<TOut, T2, T1>(success)) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple2_mapTuplePromise_445__Fun<TOut>()) ));
		}
		
		
		public static global::thx.promise.Future<object> mapTuple<T1, T2, TOut>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple2_mapTuple_450__Fun<TOut, T2, T1>(success)) ));
		}
		
		
		public static global::thx.promise.Future<object> tuple<T1, T2>(global::thx.promise.Future<object> promise, global::haxe.lang.Function success, global::haxe.lang.Function failure) {
			return global::thx.promise._Promise.Promise_Impl_.either<object>(((global::thx.promise.Future<object>) (promise) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseTuple2_tuple_456__Fun<T2, T1>(success)) ), ((global::haxe.lang.Function) (( (( null == failure )) ? (( (( global::thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current != null )) ? (global::thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current) : (global::thx.promise.PromiseTuple2_tuple_457__Fun.__hx_current = ((global::thx.promise.PromiseTuple2_tuple_457__Fun) (new global::thx.promise.PromiseTuple2_tuple_457__Fun()) )) )) : (failure) )) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseTuple2(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseTuple2();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_join_442__Fun<T3, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple2_join_442__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T3 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T3>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T3>(__fn_dyn2)) );
			object f = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			object __temp_stmt3 = null;
			{
				T1 __temp_odecl1 = global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(((object) (f) ), "_0", 21233, true));
				T2 __temp_odecl2 = global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(((object) (f) ), "_1", 21234, true));
				__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{21233, 21234, 21235}, new object[]{__temp_odecl1, __temp_odecl2, g}, new int[]{}, new double[]{});
			}
			
			return ((object) (__temp_stmt3) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_mapTuplePromise_445__Fun_0<TOut, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple2_mapTuplePromise_445__Fun_0(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return ((global::thx.promise.Future<object>) (global::thx.promise.Future<object>.__hx_cast<object>(((global::thx.promise.Future) (this.success.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)))) ))) );
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_mapTuplePromise_445__Fun<TOut> : global::haxe.lang.Function {
		
		public PromiseTuple2_mapTuplePromise_445__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error err = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return global::thx.promise._Promise.Promise_Impl_.error<TOut>(((global::thx.Error) (err) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_mapTuple_450__Fun<TOut, T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple2_mapTuple_450__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.genericCast<TOut>(this.success.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true))));
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_tuple_456__Fun<T2, T1> : global::haxe.lang.Function {
		
		public PromiseTuple2_tuple_456__Fun(global::haxe.lang.Function success) : base(1, 0) {
			this.success = success;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.success.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.genericCast<T1>(global::haxe.lang.Runtime.getField(t, "_0", 21233, true)), default(double), global::haxe.lang.Runtime.genericCast<T2>(global::haxe.lang.Runtime.getField(t, "_1", 21234, true)));
			return null;
		}
		
		
		public global::haxe.lang.Function success;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseTuple2_tuple_457__Fun : global::haxe.lang.Function {
		
		public PromiseTuple2_tuple_457__Fun() : base(1, 0) {
		}
		
		
		public static global::thx.promise.PromiseTuple2_tuple_457__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::thx.Error _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Error) (((object) (__fn_float1) )) )) : (((global::thx.Error) (__fn_dyn1) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseNil : global::haxe.lang.HxObject {
		
		public PromiseNil(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public PromiseNil() {
			global::thx.promise.PromiseNil.__hx_ctor_thx_promise_PromiseNil(this);
		}
		
		
		public static void __hx_ctor_thx_promise_PromiseNil(global::thx.promise.PromiseNil __temp_me149) {
		}
		
		
		public static global::thx.promise.Future<object> @join<T2>(global::thx.promise.Future<object> p1, global::thx.promise.Future<object> p2) {
			return global::thx.promise.Promises.par<object, T2, T2>(((global::haxe.lang.Function) (new global::thx.promise.PromiseNil_join_463__Fun<T2>()) ), ((global::thx.promise.Future<object>) (p1) ), ((global::thx.promise.Future<object>) (p2) ));
		}
		
		
		public static global::thx.promise.Future<object> nil<A>(global::thx.promise.Future<object> p) {
			return global::thx.promise._Promise.Promise_Impl_.map<object, A>(((global::thx.promise.Future<object>) (p) ), ((global::haxe.lang.Function) (new global::thx.promise.PromiseNil_nil_466__Fun<A>()) ));
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.promise.PromiseNil(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.promise.PromiseNil();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseNil_join_463__Fun<T2> : global::haxe.lang.Function {
		
		public PromiseNil_join_463__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			T2 g = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T2>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<T2>(__fn_dyn2)) );
			global::thx.Nil _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::thx.Nil) (((object) (__fn_float1) )) )) : (((global::thx.Nil) (__fn_dyn1) )) );
			return g;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.promise {
	public class PromiseNil_nil_466__Fun<A> : global::haxe.lang.Function {
		
		public PromiseNil_nil_466__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return global::thx.Nil.nil;
		}
		
		
	}
}


