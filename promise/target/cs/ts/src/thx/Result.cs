// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx._Result {
	public sealed class Result_Impl_ {
		
		public static global::thx.Either success<TSuccess, TFailure>(TSuccess @value) {
			return global::thx.Either.Right(@value);
		}
		
		
		public static global::thx.Either failure<TSuccess, TFailure>(TFailure error) {
			return global::thx.Either.Left(error);
		}
		
		
		
		
		
		
		public static global::haxe.ds.Option optionValue<TSuccess, TFailure>(global::thx.Either this1) {
			unchecked {
				if (( this1.index == 1 )) {
					return global::haxe.ds.Option.Some(global::haxe.lang.Runtime.genericCast<TSuccess>(this1.@params[0]));
				}
				else {
					return global::haxe.ds.Option.None;
				}
				
			}
		}
		
		
		public static global::haxe.ds.Option optionError<TSuccess, TFailure>(global::thx.Either this1) {
			if (( this1.index == 0 )) {
				return global::haxe.ds.Option.Some(global::haxe.lang.Runtime.genericCast<TFailure>(this1.@params[0]));
			}
			else {
				return global::haxe.ds.Option.None;
			}
			
		}
		
		
		public static global::haxe.lang.Null<TSuccess> @value<TSuccess, TFailure>(global::thx.Either this1) {
			unchecked {
				if (( this1.index == 1 )) {
					return new global::haxe.lang.Null<TSuccess>(global::haxe.lang.Runtime.genericCast<TSuccess>(this1.@params[0]), true);
				}
				else {
					return default(global::haxe.lang.Null<TSuccess>);
				}
				
			}
		}
		
		
		public static global::haxe.lang.Null<TFailure> error<TSuccess, TFailure>(global::thx.Either this1) {
			if (( this1.index == 0 )) {
				return new global::haxe.lang.Null<TFailure>(global::haxe.lang.Runtime.genericCast<TFailure>(this1.@params[0]), true);
			}
			else {
				return default(global::haxe.lang.Null<TFailure>);
			}
			
		}
		
		
		public static bool get_isSuccess<TSuccess, TFailure>(global::thx.Either this1) {
			unchecked {
				if (( this1.index == 1 )) {
					return true;
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public static bool get_isFailure<TSuccess, TFailure>(global::thx.Either this1) {
			if (( this1.index == 0 )) {
				return true;
			}
			else {
				return false;
			}
			
		}
		
		
	}
}


