<?php

// Generated by Haxe 3.3.0
class thx_promise_Promises {
	public function __construct(){}
	static function par($f, $p1, $p2) {
		return thx_promise__Promise_Promise_Impl_::create(array(new _hx_lambda(array(&$f, &$p1, &$p2), "thx_promise_Promises_0"), 'execute'));
	}
	static function par3($f, $p1, $p2, $p3) {
		$f1 = $f;
		$tmp = array(new _hx_lambda(array(&$f1), "thx_promise_Promises_1"), 'execute');
		$tmp1 = thx_promise_Promises::par($tmp, $p1, $p2);
		return thx_promise_Promises::par(array(new _hx_lambda(array(), "thx_promise_Promises_2"), 'execute'), $tmp1, $p3);
	}
	static function par4($f, $p1, $p2, $p3, $p4) {
		$f1 = $f;
		$tmp = array(new _hx_lambda(array(&$f1), "thx_promise_Promises_3"), 'execute');
		$tmp1 = thx_promise_Promises::par3($tmp, $p1, $p2, $p3);
		return thx_promise_Promises::par(array(new _hx_lambda(array(), "thx_promise_Promises_4"), 'execute'), $tmp1, $p4);
	}
	static function par5($f, $p1, $p2, $p3, $p4, $p5) {
		$f1 = $f;
		$tmp = array(new _hx_lambda(array(&$f1), "thx_promise_Promises_5"), 'execute');
		$tmp1 = thx_promise_Promises::par4($tmp, $p1, $p2, $p3, $p4);
		return thx_promise_Promises::par(array(new _hx_lambda(array(), "thx_promise_Promises_6"), 'execute'), $tmp1, $p5);
	}
	static function par6($f, $p1, $p2, $p3, $p4, $p5, $p6) {
		$f1 = $f;
		$tmp = array(new _hx_lambda(array(&$f1), "thx_promise_Promises_7"), 'execute');
		$tmp1 = thx_promise_Promises::par5($tmp, $p1, $p2, $p3, $p4, $p5);
		return thx_promise_Promises::par(array(new _hx_lambda(array(), "thx_promise_Promises_8"), 'execute'), $tmp1, $p6);
	}
	static function join($p1, $p2) {
		return thx_promise_Promises::par((isset(thx__Tuple_Tuple2_Impl_::$of) ? thx__Tuple_Tuple2_Impl_::$of: array("thx__Tuple_Tuple2_Impl_", "of")), $p1, $p2);
	}
	static function join2($p1, $p2) {
		return thx_promise_Promises::par((isset(thx__Tuple_Tuple2_Impl_::$of) ? thx__Tuple_Tuple2_Impl_::$of: array("thx__Tuple_Tuple2_Impl_", "of")), $p1, $p2);
	}
	static function join3($p1, $p2, $p3) {
		return thx_promise_Promises::par3((isset(thx__Tuple_Tuple3_Impl_::$of) ? thx__Tuple_Tuple3_Impl_::$of: array("thx__Tuple_Tuple3_Impl_", "of")), $p1, $p2, $p3);
	}
	static function join4($p1, $p2, $p3, $p4) {
		return thx_promise_Promises::par4((isset(thx__Tuple_Tuple4_Impl_::$of) ? thx__Tuple_Tuple4_Impl_::$of: array("thx__Tuple_Tuple4_Impl_", "of")), $p1, $p2, $p3, $p4);
	}
	static function join5($p1, $p2, $p3, $p4, $p5) {
		return thx_promise_Promises::par5((isset(thx__Tuple_Tuple5_Impl_::$of) ? thx__Tuple_Tuple5_Impl_::$of: array("thx__Tuple_Tuple5_Impl_", "of")), $p1, $p2, $p3, $p4, $p5);
	}
	static function join6($p1, $p2, $p3, $p4, $p5, $p6) {
		return thx_promise_Promises::par6((isset(thx__Tuple_Tuple6_Impl_::$of) ? thx__Tuple_Tuple6_Impl_::$of: array("thx__Tuple_Tuple6_Impl_", "of")), $p1, $p2, $p3, $p4, $p5, $p6);
	}
	static function log($promise, $prefix = null) {
		if($prefix === null) {
			$prefix = "";
		}
		return thx_promise__Promise_Promise_Impl_::either($promise, array(new _hx_lambda(array(&$prefix), "thx_promise_Promises_9"), 'execute'), array(new _hx_lambda(array(&$prefix), "thx_promise_Promises_10"), 'execute'));
	}
	function __toString() { return 'thx.promise.Promises'; }
}
function thx_promise_Promises_0(&$f, &$p1, &$p2, $resolve, $reject) {
	{
		$hasError = false;
		$counter = 0;
		$v1 = null;
		$v2 = null;
		$complete = array(new _hx_lambda(array(&$counter, &$f, &$resolve, &$v1, &$v2), "thx_promise_Promises_11"), 'execute');
		$handleError = array(new _hx_lambda(array(&$hasError, &$reject), "thx_promise_Promises_12"), 'execute');
		thx_promise__Promise_Promise_Impl_::either($p1, array(new _hx_lambda(array(&$complete, &$counter, &$hasError, &$v1), "thx_promise_Promises_13"), 'execute'), $handleError);
		thx_promise__Promise_Promise_Impl_::either($p2, array(new _hx_lambda(array(&$complete, &$counter, &$hasError, &$v2), "thx_promise_Promises_14"), 'execute'), $handleError);
	}
}
function thx_promise_Promises_1(&$f1, $a, $b) {
	{
		return array(new _hx_lambda(array(&$a, &$b, &$f1), "thx_promise_Promises_15"), 'execute');
	}
}
function thx_promise_Promises_2($f2, $g) {
	{
		return call_user_func_array($f2, array($g));
	}
}
function thx_promise_Promises_3(&$f1, $a, $b, $c) {
	{
		return array(new _hx_lambda(array(&$a, &$b, &$c, &$f1), "thx_promise_Promises_16"), 'execute');
	}
}
function thx_promise_Promises_4($f2, $g) {
	{
		return call_user_func_array($f2, array($g));
	}
}
function thx_promise_Promises_5(&$f1, $a, $b, $c, $d) {
	{
		return array(new _hx_lambda(array(&$a, &$b, &$c, &$d, &$f1), "thx_promise_Promises_17"), 'execute');
	}
}
function thx_promise_Promises_6($f2, $g) {
	{
		return call_user_func_array($f2, array($g));
	}
}
function thx_promise_Promises_7(&$f1, $a, $b, $c, $d, $e) {
	{
		return array(new _hx_lambda(array(&$a, &$b, &$c, &$d, &$e, &$f1), "thx_promise_Promises_18"), 'execute');
	}
}
function thx_promise_Promises_8($f2, $g) {
	{
		return call_user_func_array($f2, array($g));
	}
}
function thx_promise_Promises_9(&$prefix, $r) {
	{
		$tmp = "" . _hx_string_or_null($prefix) . " SUCCESS: ";
		$tmp1 = Std::string($r);
		haxe_Log::trace(_hx_string_or_null($tmp) . _hx_string_or_null($tmp1), _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 354, "className" => "thx.promise.Promises", "methodName" => "log")));
	}
}
function thx_promise_Promises_10(&$prefix, $e) {
	{
		$tmp2 = "" . _hx_string_or_null($prefix) . " ERROR: ";
		$tmp3 = $e->toString();
		haxe_Log::trace(_hx_string_or_null($tmp2) . _hx_string_or_null($tmp3), _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 355, "className" => "thx.promise.Promises", "methodName" => "log")));
	}
}
function thx_promise_Promises_11(&$counter, &$f, &$resolve, &$v1, &$v2) {
	{
		if($counter < 2) {
			return;
		}
		$tmp = call_user_func_array($f, array($v1, $v2));
		call_user_func_array($resolve, array($tmp));
	}
}
function thx_promise_Promises_12(&$hasError, &$reject, $error) {
	{
		if($hasError) {
			return;
		}
		$hasError = true;
		call_user_func_array($reject, array($error));
	}
}
function thx_promise_Promises_13(&$complete, &$counter, &$hasError, &$v1, $v) {
	{
		if($hasError) {
			return;
		}
		++$counter;
		$v1 = $v;
		call_user_func($complete);
	}
}
function thx_promise_Promises_14(&$complete, &$counter, &$hasError, &$v2, $v3) {
	{
		if($hasError) {
			return;
		}
		++$counter;
		$v2 = $v3;
		call_user_func($complete);
	}
}
function thx_promise_Promises_15(&$a, &$b, &$f1, $c) {
	{
		return call_user_func_array($f1, array($a, $b, $c));
	}
}
function thx_promise_Promises_16(&$a, &$b, &$c, &$f1, $d) {
	{
		return call_user_func_array($f1, array($a, $b, $c, $d));
	}
}
function thx_promise_Promises_17(&$a, &$b, &$c, &$d, &$f1, $e) {
	{
		return call_user_func_array($f1, array($a, $b, $c, $d, $e));
	}
}
function thx_promise_Promises_18(&$a, &$b, &$c, &$d, &$e, &$f1, $f0) {
	{
		return call_user_func_array($f1, array($a, $b, $c, $d, $e, $f0));
	}
}
